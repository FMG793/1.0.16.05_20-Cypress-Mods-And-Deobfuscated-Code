--- net/minecraft/src/RenderList.java
+++ net/minecraft/src/RenderList.java
@@ -50,8 +50,8 @@
 				GL11.glCallLists(this.buffer);
 				GL11.glPopMatrix();
 			}
-
 		}
+
 	}
 
 	public void reset() {
--- /dev/null
+++ net/minecraft/src/BlockMobSpawnerOld.java
@@ -1,0 +1,25 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockMobSpawnerOld extends BlockContainerOld {
+	protected BlockMobSpawnerOld(int var1, int var2) {
+		super(var1, var2, Material.rock);
+	}
+
+	protected TileEntity getBlockEntity() {
+		return new TileEntityMobSpawner();
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return 0;
+	}
+
+	public int quantityDropped(Random var1) {
+		return 0;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+}
--- net/minecraft/src/ItemBlock.java
+++ net/minecraft/src/ItemBlock.java
@@ -5,8 +5,8 @@
 
 	public ItemBlock(int var1) {
 		super(var1);
-		this.blockID = var1 + 256;
-		this.setIconIndex(Block.blocksList[var1 + 256].getBlockTextureFromSide(2));
+		this.blockID = var1 + Short.MAX_VALUE;
+		this.setIconIndex(Block.blocksList[var1 + Short.MAX_VALUE].getBlockTextureFromSide(2));
 	}
 
 	public boolean onItemUse(ItemStack var1, EntityPlayer var2, World var3, int var4, int var5, int var6, int var7) {
@@ -46,7 +46,9 @@
 				if(var3.setBlockWithNotify(var4, var5, var6, this.blockID)) {
 					Block.blocksList[this.blockID].onBlockPlaced(var3, var4, var5, var6, var7);
 					var3.playSoundEffect((double)((float)var4 + 0.5F), (double)((float)var5 + 0.5F), (double)((float)var6 + 0.5F), var8.stepSound.getStepSound(), (var8.stepSound.getVolume() + 1.0F) / 2.0F, var8.stepSound.getPitch() * 0.8F);
-					--var1.stackSize;
+					if(!InputHandler.field_9759_4OT0vPMcJ68s5EU822c0Y9Asw74Su111s3rRCw8OSGMsYM8lx153p73RBtj3) {
+						--var1.stackSize;
+					}
 				}
 			}
 
--- net/minecraft/src/GuiIngameMenu.java
+++ net/minecraft/src/GuiIngameMenu.java
@@ -7,13 +7,14 @@
 	public void initGui() {
 		this.updateCounter2 = 0;
 		this.controlList.clear();
-		this.controlList.add(new GuiButton(1, this.width / 2 - 100, this.height / 4 + 48, "Save and quit to title"));
+		this.controlList.add(new GuiButton(1, this.width / 16, this.height / 4 + 48, "Save and quit to title"));
 		if(this.mc.isMultiplayerWorld()) {
 			((GuiButton)this.controlList.get(0)).displayString = "Disconnect";
 		}
 
-		this.controlList.add(new GuiButton(4, this.width / 2 - 100, this.height / 4 + 24, "Back to game"));
-		this.controlList.add(new GuiButton(0, this.width / 2 - 100, this.height / 4 + 96, "Options..."));
+		this.controlList.add(new GuiButton(4, this.width / 16, this.height / 4 + 24, "Back to game"));
+		this.controlList.add(new GuiButton(0, this.width / 16, this.height / 4 + 96, "Options..."));
+		this.controlList.add(new GuiButton(2, this.width / 16, this.height / 4 + 72, "Mods"));
 	}
 
 	protected void actionPerformed(GuiButton var1) {
@@ -30,6 +31,10 @@
 			this.mc.displayGuiScreen(new GuiMainMenu());
 		}
 
+		if(var1.id == 2) {
+			this.mc.displayGuiScreen(new GuiExtensions(this));
+		}
+
 		if(var1.id == 4) {
 			this.mc.displayGuiScreen((GuiScreen)null);
 			this.mc.setIngameFocus();
@@ -45,14 +50,26 @@
 	public void drawScreen(int var1, int var2, float var3) {
 		this.drawDefaultBackground();
 		boolean var4 = !this.mc.theWorld.saveWorld(this.updateCounter2++);
+		int var6;
 		if(var4 || this.updateCounter < 20) {
 			float var5 = ((float)(this.updateCounter % 10) + var3) / 10.0F;
 			var5 = MathHelper.sin(var5 * (float)Math.PI * 2.0F) * 0.2F + 0.8F;
-			int var6 = (int)(255.0F * var5);
-			this.drawString(this.fontRenderer, "Saving level..", 8, this.height - 16, var6 << 16 | var6 << 8 | var6);
-		}
-
-		this.drawCenteredString(this.fontRenderer, "Game menu", this.width / 2, 40, 16777215);
+			var6 = (int)(255.0F * var5);
+			Gui.drawString(this.fontRenderer, "Saving level..", 8, this.height - 16, var6 << 16 | var6 << 8 | var6);
+		}
+
+		drawString(this.fontRenderer, "Game menu", this.width / 16, 46, 16777215);
+		int var10 = Math.max(this.width / 16 + 210, this.width / 6 * 4);
+		var6 = this.height / 4 + 20;
+		Gui.drawString(this.fontRenderer, "Players nearby", var10, var6, 16777215);
+
+		for(int var7 = 0; var7 != this.mc.theWorld.playerEntities.size(); ++var7) {
+			var6 += 12;
+			EntityPlayer var8 = (EntityPlayer)this.mc.theWorld.playerEntities.get(var7);
+			String var9 = var8.username;
+			Gui.drawString(this.fontRenderer, var9, var10, var6, var8 == this.mc.thePlayer ? -1610547456 : (var8 instanceof EntityOtherPlayerMPUnknownClass ? -1601054209 : -1593835521));
+		}
+
 		super.drawScreen(var1, var2, var3);
 	}
 }
--- net/minecraft/src/ThreadConnectToServer.java
+++ net/minecraft/src/ThreadConnectToServer.java
@@ -24,7 +24,13 @@
 				return;
 			}
 
-			GuiConnecting.getNetClientHandler(this.connectingGui).addToSendQueue(new Packet2Handshake(this.mc.session.username));
+			String var1 = this.mc.session.username;
+			if(GuiMultiplayer.playerMode != 0) {
+				var1 = (char)GuiMultiplayer.playerMode + "" + var1;
+				ExtLogger.i("connecting as " + var1);
+			}
+
+			GuiConnecting.getNetClientHandler(this.connectingGui).addToSendQueue(new Packet2Handshake(var1));
 		} catch (UnknownHostException var2) {
 			if(GuiConnecting.isCancelled(this.connectingGui)) {
 				return;
--- net/minecraft/src/EntityReddustFX.java
+++ net/minecraft/src/EntityReddustFX.java
@@ -12,8 +12,8 @@
 		this.motionX *= (double)0.1F;
 		this.motionY *= (double)0.1F;
 		this.motionZ *= (double)0.1F;
-		this.particleRed = (float)(Math.random() * (double)0.3F) + 0.7F;
-		this.particleGreen = this.particleBlue = (float)(Math.random() * (double)0.1F);
+		this.particleGreen = (float)(Math.random() * (double)0.3F) + 0.7F;
+		this.particleRed = this.particleBlue = (float)(Math.random() * (double)0.1F);
 		this.particleScale *= 12.0F / 16.0F;
 		this.particleScale *= var8;
 		this.reddustParticleScale = this.particleScale;
--- /dev/null
+++ net/minecraft/src/InventoryEssenceTransformer.java
@@ -1,0 +1,66 @@
+package net.minecraft.src;
+
+public class InventoryEssenceTransformer implements IInventory {
+	public ItemStack[] stackList;
+	private int gridSize;
+	private EssenceTransformerInventoryCB craftingInventory;
+
+	public InventoryEssenceTransformer(EssenceTransformerInventoryCB var1, int var2, int var3) {
+		this.gridSize = var2 * var3;
+		this.stackList = new ItemStack[this.gridSize];
+		this.craftingInventory = var1;
+	}
+
+	public InventoryEssenceTransformer(EssenceTransformerInventoryCB var1, ItemStack[] var2) {
+		this.gridSize = var2.length;
+		this.stackList = var2;
+		this.craftingInventory = var1;
+	}
+
+	public int getSizeInventory() {
+		return this.gridSize;
+	}
+
+	public ItemStack getStackInSlot(int var1) {
+		return this.stackList[var1];
+	}
+
+	public String getInvName() {
+		return "Crafting";
+	}
+
+	public ItemStack decrStackSize(int var1, int var2) {
+		if(this.stackList[var1] != null) {
+			ItemStack var3;
+			if(this.stackList[var1].stackSize <= var2) {
+				var3 = this.stackList[var1];
+				this.stackList[var1] = null;
+				this.craftingInventory.a(this);
+				return var3;
+			} else {
+				var3 = this.stackList[var1].splitStack(var2);
+				if(this.stackList[var1].stackSize == 0) {
+					this.stackList[var1] = null;
+				}
+
+				this.craftingInventory.a(this);
+				return var3;
+			}
+		} else {
+			return null;
+		}
+	}
+
+	public void setInventorySlotContents(int var1, ItemStack var2) {
+		this.stackList[var1] = var2;
+		this.craftingInventory.a(this);
+	}
+
+	public int getInventoryStackLimit() {
+		return 1000;
+	}
+
+	public void onInventoryChanged() {
+		this.craftingInventory.a(this);
+	}
+}
--- /dev/null
+++ net/minecraft/src/ScreenDebugMenu.java
@@ -1,0 +1,101 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+
+public class ScreenDebugMenu extends GuiScreen {
+	private int selection = 0;
+	public static boolean dbg_conf_spawnShadowPlayers = true;
+	public static boolean dbg_conf_enableCheats = false;
+	public static boolean dbg_conf_forceFracWorld = false;
+	public static boolean dbg_conf_nebulaEvt = false;
+	public static boolean dbg_conf_showDebugInfo = false;
+	public static boolean dbg_conf_hideUI = false;
+	public static boolean dbg_conf_fly = false;
+	public static boolean dbg_disable_worldgen = false;
+	public static boolean conf_r4_preview_mode = false;
+	public static boolean field_7956_48H3fYB8k2jE5s5HC81S9Sm600nFD73Lb4N90Pl1F0LSIx70mF1gldgvzgRz = false;
+	public static boolean field_7962_6A22Bnr2u4VLzq02xYfo1fv000h7Yi0jssFs2v9mAXoYWf21povU11i9755K = false;
+	public static boolean field_7960_2AJG81m1pl0O5bhn2XiQ37CD76Uoi3M5l8gTKvm6mx16vAu3Ik5oCR8W6P15 = false;
+	public static boolean field_7955_2x00ovR61G2n6Zj5nN9jd9FAdV8H3Cz32KtPOCpcvM363cbIQ5o5vSMN7x7B = false;
+	public static boolean field_7964_8G80Kimsj2t150ZuEHxk97V3fSV455qzurOOVWgX8oTDDCEH9YV34z9vRAoC = false;
+
+	public ScreenDebugMenu(Minecraft var1) {
+		this.mc = var1;
+	}
+
+	private void toggleDebugOption(int var1) {
+		switch(var1) {
+		case 0:
+			dbg_conf_spawnShadowPlayers = !dbg_conf_spawnShadowPlayers;
+			break;
+		case 1:
+			dbg_conf_enableCheats = !dbg_conf_enableCheats;
+			break;
+		case 2:
+			dbg_conf_forceFracWorld = !dbg_conf_forceFracWorld;
+			break;
+		case 3:
+			dbg_conf_nebulaEvt = !dbg_conf_nebulaEvt;
+			break;
+		case 4:
+			dbg_conf_showDebugInfo = !dbg_conf_showDebugInfo;
+			break;
+		case 5:
+			dbg_conf_hideUI = !dbg_conf_hideUI;
+			break;
+		case 6:
+			EntitySquib var2 = new EntitySquib(this.mc.theWorld);
+			var2.setPosition(this.mc.thePlayer.posX, this.mc.thePlayer.posY, this.mc.thePlayer.posZ);
+			this.mc.theWorld.spawnEntityInWorld(var2);
+			break;
+		case 7:
+			dbg_conf_fly = !dbg_conf_fly;
+			break;
+		case 8:
+			dbg_disable_worldgen = !dbg_disable_worldgen;
+		}
+
+	}
+
+	protected void keyTyped(char var1, int var2) {
+		switch(var2) {
+		case 57:
+		case 203:
+		case 205:
+			this.toggleDebugOption(this.selection);
+			break;
+		case 200:
+			--this.selection;
+			if(this.selection < 0) {
+				this.selection += 9;
+			}
+			break;
+		case 208:
+			++this.selection;
+			this.selection %= 9;
+		}
+
+		super.keyTyped(var1, var2);
+	}
+
+	public boolean doesGuiPauseGame() {
+		return false;
+	}
+
+	public void drawScreen(int var1, int var2, float var3) {
+		drawRect(0, 0, this.width, this.height, -16777216);
+		this.drawCenteredString(this.fontRenderer, "Debug menu", this.width / 2, 15, 16777215);
+		int var4 = this.width / 6;
+		drawString(this.fontRenderer, "Allow recruiter connections: " + dbg_conf_spawnShadowPlayers, var4, 40, 16777215);
+		drawString(this.fontRenderer, "Enable cheats: " + dbg_conf_enableCheats, var4, 50, 16777215);
+		drawString(this.fontRenderer, "Force fractured world: " + dbg_conf_forceFracWorld, var4, 60, 16777215);
+		drawString(this.fontRenderer, "Force nebula event: " + dbg_conf_nebulaEvt, var4, 70, 16777215);
+		drawString(this.fontRenderer, "Show debug information: " + dbg_conf_showDebugInfo, var4, 80, 16777215);
+		drawString(this.fontRenderer, "Hide UI: " + dbg_conf_hideUI, var4, 90, 16777215);
+		drawString(this.fontRenderer, "commit sus", var4, 100, 16777215);
+		drawString(this.fontRenderer, "Enable flying: " + dbg_conf_fly, var4, 110, 16777215);
+		drawString(this.fontRenderer, "Disable world generation: " + dbg_disable_worldgen, var4, 120, 16777215);
+		drawString(this.fontRenderer, ">", var4 - 10, 40 + this.selection * 10, 16777215);
+		super.drawScreen(var1, var2, var3);
+	}
+}
--- /dev/null
+++ net/minecraft/src/EnumHouseSmall.java
@@ -1,0 +1,25 @@
+package net.minecraft.src;
+
+enum EnumHouseSmall {
+	NORMAL,
+	WINDOW,
+	DOOR;
+
+    private static final /* synthetic */ EnumHouseSmall[] field_11440_5DU1q74wG2K77T0ZlI5W44FAm2Aqv24mz96pa1X88RzMmFVm14Nd108r12n7;
+
+	public static EnumHouseSmall[] func_11435_4tXyU6RR6cO5Zi9fhjc1I7QG04yEjq6wDM4jfxZmi73mP7096R32YLzn7IGX() {
+		return (EnumHouseSmall[])field_11440_5DU1q74wG2K77T0ZlI5W44FAm2Aqv24mz96pa1X88RzMmFVm14Nd108r12n7.clone();
+	}
+
+	public static EnumHouseSmall func_11436_3bJVQ5UBqfon6Z5wNWq1ljNFCUy7Nd7D5ry055OWEwBqFQL3zv4n846H20r2(String var0) {
+		return (EnumHouseSmall)Enum.valueOf(EnumHouseSmall.class, var0);
+	}
+
+	private static EnumHouseSmall[] func_11434_3rJo3AK4ECqk7FlHfgl5vc5v87WG6Az39tfJ21SGO8a04eMpmI46iJ91MZm6() {
+		return new EnumHouseSmall[]{NORMAL, WINDOW, DOOR};
+	}
+	
+    static {
+        field_11440_5DU1q74wG2K77T0ZlI5W44FAm2Aqv24mz96pa1X88RzMmFVm14Nd108r12n7 = EnumHouseSmall.func_11434_3rJo3AK4ECqk7FlHfgl5vc5v87WG6Az39tfJ21SGO8a04eMpmI46iJ91MZm6();
+    }
+}
--- /dev/null
+++ net/minecraft/src/BaseModUnknownClass.java
@@ -1,0 +1,46 @@
+package net.minecraft.src;
+
+import java.util.List;
+import java.util.Map;
+
+public class BaseModUnknownClass extends BaseMod {
+	public void AddRecipes(CraftingManager var1) {
+		super.AddRecipes(var1);
+	}
+
+	public void RegisterBlocks(List<Block> var1) {
+		super.RegisterBlocks(var1);
+	}
+
+	public void AddRenderer(Map<Class<? extends Entity>, Render> var1) {
+		super.AddRenderer(var1);
+	}
+
+	public void AddEntityID() {
+		super.AddEntityID();
+	}
+
+	public int AddSmelting(int var1) {
+		return super.AddSmelting(var1);
+	}
+
+	public int AddFuel(int var1) {
+		return super.AddFuel(var1);
+	}
+
+	public int func_9844_54pM8s64ZMnaU952nGEh82Q57WO2N6jhc3lwdq8i55LCTqh9Z6CBI7mTN1xJ(int var1) {
+		return super.func_9844_54pM8s64ZMnaU952nGEh82Q57WO2N6jhc3lwdq8i55LCTqh9Z6CBI7mTN1xJ(var1);
+	}
+
+	public int func_9849_7m6m13dn8LrG10h8c2Og50FZ5BadQ06sFis8fvT5TqNZ2cpOxQ56X340JqVC(int var1) {
+		return super.func_9849_7m6m13dn8LrG10h8c2Og50FZ5BadQ06sFis8fvT5TqNZ2cpOxQ56X340JqVC(var1);
+	}
+
+	public String Version() {
+		return "16.05_20#";
+	}
+
+	public void func_9851_9VTXo56vuK02QP3b768P1531Ie7r9zZnEp8PN8XCM31YP2br8w7rWVX045H2() {
+		super.func_9851_9VTXo56vuK02QP3b768P1531Ie7r9zZnEp8PN8XCM31YP2br8w7rWVX045H2();
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandMcCreatmenu.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandMcCreatmenu extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8602_5HqcTkuO1Dw98c4Mpu57rA62TSi4xb9akM1529J5uYmjM1ifC5eKi3rEQs08;
+    
+    CommandMcCreatmenu(final CommandManager abb) {
+        this.field_8602_5HqcTkuO1Dw98c4Mpu57rA62TSi4xb9akM1529J5uYmjM1ifC5eKi3rEQs08 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.func_9723_0s53bwug7AIh7wok927NkfC491OTVIE9w7Ze8dTW9h9VOaC74c60EkiUo90l();
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/EnumCoordinatesUnknownClass.java
@@ -1,0 +1,25 @@
+package net.minecraft.src;
+
+class EnumCoordinatesUnknownClass {
+    static final /* synthetic */ int[] field_12026_7De72qnj4wxRWW58t53xgRd7T4ZV39k51LMGzN4yLo4a8zdVQ9nGL7BQZcvs;
+
+    static {
+        field_12026_7De72qnj4wxRWW58t53xgRd7T4ZV39k51LMGzN4yLo4a8zdVQ9nGL7BQZcvs = new int[Direction.func_11027_56m65k9Ou637f37XQ47WkX21C47228QlJJpaFt35G2542pYC3e5bn29f7FA0().length];
+        try {
+            EnumCoordinatesUnknownClass.field_12026_7De72qnj4wxRWW58t53xgRd7T4ZV39k51LMGzN4yLo4a8zdVQ9nGL7BQZcvs[Direction.XM.ordinal()] = 1;
+        }
+        catch (final NoSuchFieldError noSuchFieldError) {}
+        try {
+            EnumCoordinatesUnknownClass.field_12026_7De72qnj4wxRWW58t53xgRd7T4ZV39k51LMGzN4yLo4a8zdVQ9nGL7BQZcvs[Direction.XP.ordinal()] = 2;
+        }
+        catch (final NoSuchFieldError noSuchFieldError2) {}
+        try {
+            EnumCoordinatesUnknownClass.field_12026_7De72qnj4wxRWW58t53xgRd7T4ZV39k51LMGzN4yLo4a8zdVQ9nGL7BQZcvs[Direction.ZM.ordinal()] = 3;
+        }
+        catch (final NoSuchFieldError noSuchFieldError3) {}
+        try {
+            EnumCoordinatesUnknownClass.field_12026_7De72qnj4wxRWW58t53xgRd7T4ZV39k51LMGzN4yLo4a8zdVQ9nGL7BQZcvs[Direction.ZP.ordinal()] = 4;
+        }
+        catch (final NoSuchFieldError noSuchFieldError4) {}
+    }
+}
--- /dev/null
+++ net/minecraft/src/VisualsNostalgy.java
@@ -1,0 +1,38 @@
+package net.minecraft.src;
+
+class VisualsNostalgy extends Visuals {
+    final /* synthetic */ VisualsManager field_10078_6d45507JcQf3ZR28F891juZ3ImdB4YrmQhQguy8P96k67zO3920j5w5Km8a9;
+    
+    VisualsNostalgy(final VisualsManager la) {
+        this.field_10078_6d45507JcQf3ZR28F891juZ3ImdB4YrmQhQguy8P96k67zO3920j5w5Km8a9 = la;
+    }
+    
+    @Override
+    public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+        return "/unl/9abf38f1-4796-4dc9-a73e-f005bb873ef7.xAL";
+    }
+    
+    @Override
+    public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(final Object... arr) {
+        if (arr[0] instanceof WorldZMSpawnWorld2 && arr[1] instanceof EntityOtherPlayerMPUnknownClass2) {
+            this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+            return true;
+        }
+        return false;
+    }
+    
+    @Override
+    public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+        return "unlock--nostalgy";
+    }
+    
+    @Override
+    public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+        return "Nostalgy";
+    }
+    
+    @Override
+    public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+        return "Shoot the Intruder in [ZM]Metsan Talo";
+    }
+}
--- /dev/null
+++ net/minecraft/src/Packet8RespondSkinRequest.java
@@ -1,0 +1,99 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+import java.io.ByteArrayInputStream;
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.File;
+import java.io.IOException;
+import java.util.zip.CRC32;
+import javax.imageio.ImageIO;
+
+public class Packet8RespondSkinRequest extends Packet {
+	public String pname;
+	public byte[] data;
+	public int rqChunk;
+	public boolean packetInvalid;
+
+	public Packet8RespondSkinRequest() {
+		this.rqChunk = -1;
+		this.packetInvalid = false;
+	}
+
+	public Packet8RespondSkinRequest(String var1, byte[] var2, int var3) {
+		this(var1, var2);
+		this.rqChunk = var3;
+	}
+
+	public Packet8RespondSkinRequest(String var1, byte[] var2) {
+		this.rqChunk = -1;
+		this.packetInvalid = false;
+		this.pname = var1;
+		this.data = var2;
+	}
+
+	public void readPacketData(DataInputStream var1) throws IOException {
+		int var2 = var1.readInt();
+		if(var2 > 0) {
+			this.pname = var1.readUTF();
+			int var3 = var1.readInt();
+			this.data = new byte[1024];
+			int var4 = var1.readInt();
+
+			try {
+				Ext1605Utils.readNBytesJ9(var1, this.data, 0, 1024);
+			} catch (IOException var12) {
+				this.packetInvalid = true;
+				return;
+			}
+
+			CRC32 var5 = new CRC32();
+			var5.update(this.data, 0, 1024);
+			if((int)var5.getValue() != var4) {
+				this.packetInvalid = true;
+				return;
+			}
+
+			NetSplitImageDataHandler var6 = NetSplitImageDataHandler.getHandler(this.pname, var2);
+			var6.ReceiveChunk(this.data, var3);
+			if(var6.IsComplete()) {
+				try {
+					ByteArrayInputStream var7 = new ByteArrayInputStream(var6.imageData);
+					BufferedImage var8 = ImageIO.read(var7);
+					ImageHolder var9 = new ImageHolder();
+					var9.image = var8;
+					var9.initialize();
+					if(SkinManager.conf_cacheSkins) {
+						String var10 = System.getProperty(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9794_1Mq8T0QNr27egvw7Ii5njC2U34iHqD9xm0XHd85K26sr2HmLXKQgJ5Uz42hp)) + "/.minecraft/skincache/";
+						if(System.getProperty("os.name").contains("indows")) {
+							var10 = "C:/skincache/";
+						}
+
+						var10 = var10 + this.pname + ".png";
+						ImageIO.write(var8, "png", new File(var10));
+					}
+
+					SkinManager.addSkin(this.pname, var9);
+				} catch (Exception var11) {
+					ExtLogger.w("Error loading skin for " + this.pname);
+					var11.printStackTrace();
+				}
+			}
+		}
+
+	}
+
+	public void writePacket(DataOutputStream var1) throws IOException {
+	}
+
+	public void processPacket(NetHandler var1) {
+		if(this.packetInvalid && var1 instanceof NetClientHandler) {
+			((NetClientHandler)var1).addToSendQueue(new Packet7SendSkinRequest(this.pname));
+		}
+
+	}
+
+	public int getPacketSize() {
+		return this.data == null ? 4 : 4 + this.pname.length() + this.data.length;
+	}
+}
--- net/minecraft/src/GuiSlider.java
+++ net/minecraft/src/GuiSlider.java
@@ -38,6 +38,7 @@
 			this.drawTexturedModalRect(this.xPosition + (int)(this.sliderValue * (float)(this.width - 8)), this.yPosition, 0, 66, 4, 20);
 			this.drawTexturedModalRect(this.xPosition + (int)(this.sliderValue * (float)(this.width - 8)) + 4, this.yPosition, 196, 66, 4, 20);
 		}
+
 	}
 
 	public boolean mousePressed(Minecraft var1, int var2, int var3) {
--- /dev/null
+++ net/minecraft/src/ThreadRecruitmentClient.java
@@ -1,0 +1,46 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.net.Socket;
+import java.util.ArrayList;
+import java.util.List;
+
+public class ThreadRecruitmentClient extends Thread {
+	private Socket clientSocket;
+	private DataOutputStream out;
+	private DataInputStream in;
+	public String ip;
+	public int port;
+	public boolean run = true;
+	public List<RPacket> sendQueue = new ArrayList();
+
+	public ThreadRecruitmentClient(String var1, int var2) {
+		this.ip = var1;
+		this.port = var2;
+	}
+
+	public void run() {
+		try {
+			this.clientSocket = new Socket(this.ip, this.port);
+			this.out = new DataOutputStream(this.clientSocket.getOutputStream());
+			this.in = new DataInputStream(this.clientSocket.getInputStream());
+
+			while(this.run) {
+				while(this.sendQueue.size() == 0) {
+				}
+
+				ThreadRecruitmentServer.SendPacket(this.out, new RPacketA0Ping());
+			}
+
+			this.out.close();
+			this.in.close();
+			this.clientSocket.close();
+			ExtLogger.i("client thread finished");
+		} catch (IOException var2) {
+			var2.printStackTrace();
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockDoorUnknownClass2.java
@@ -1,0 +1,14 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockDoorUnknownClass2 extends BlockDoor {
+	public BlockDoorUnknownClass2(int var1, int var2) {
+		super(var1, Material.iron);
+		this.blockIndexInTexture = var2;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return (var1 & 8) != 0 ? 0 : ExtItems.field_11340_7X9VRlMe6NuD9dLwd8nmi4X3IOqglMoWR84do3Evv5zW12VM3A5tXipdrnRF.shiftedIndex;
+	}
+}
--- net/minecraft/src/TextureCompassFX.java
+++ net/minecraft/src/TextureCompassFX.java
@@ -19,7 +19,7 @@
 		this.tileImage = 1;
 
 		try {
-			BufferedImage var2 = ImageIO.read(Minecraft.class.getResource("/gui/items.png"));
+			BufferedImage var2 = ImageIO.read(Ext1605Utils.func_12146_9P3TY758VM8951Z7q70WD5qYdKqLdB22jUqQNi8u6rFBU4uZnFfpCw0XU82v("/gui/items.png"));
 			int var3 = this.iconIndex % 16 * 16;
 			int var4 = this.iconIndex / 16 * 16;
 			var2.getRGB(var3, var4, 16, 16, this.compassIconImageData, 0, 16);
--- net/minecraft/src/TerrainTextureManager.java
+++ net/minecraft/src/TerrainTextureManager.java
@@ -4,6 +4,7 @@
 import java.io.IOException;
 import java.util.Arrays;
 import javax.imageio.ImageIO;
+import net.minecraft.client.Minecraft;
 
 public class TerrainTextureManager {
 	private float[] texCols = new float[768];
@@ -16,16 +17,16 @@
 
 	public TerrainTextureManager() {
 		try {
-			BufferedImage var1 = ImageIO.read(TerrainTextureManager.class.getResource("/terrain.png"));
+			BufferedImage var1 = ImageIO.read(Ext1605Utils.func_12146_9P3TY758VM8951Z7q70WD5qYdKqLdB22jUqQNi8u6rFBU4uZnFfpCw0XU82v(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L));
 			int[] var2 = new int[65536];
 			var1.getRGB(0, 0, 256, 256, var2, 0, 256);
 
-			for(int var3 = 0; var3 < 256; ++var3) {
+			for(int var3 = 0; var3 < 512; ++var3) {
 				int var4 = 0;
 				int var5 = 0;
 				int var6 = 0;
 				int var7 = var3 % 16 * 16;
-				int var8 = var3 / 16 * 16;
+				int var8 = var3 / 16 * 32;
 				int var9 = 0;
 
 				for(int var10 = 0; var10 < 16; ++var10) {
@@ -65,10 +66,7 @@
 
 	public void render(IsoImageBuffer var1) {
 		World var2 = var1.level;
-		if(var2 == null) {
-			var1.noContent = true;
-			var1.rendered = true;
-		} else {
+		if(var2 != null && var2.chunkProvider.chunkExists(var1.x, var1.y)) {
 			int var3 = var1.x * 16;
 			int var4 = var1.y * 16;
 			int var5 = var3 + 16;
@@ -131,7 +129,7 @@
 									int var18;
 									int var19;
 									float var20;
-									float var22;
+									float var21;
 									if(var15 >= 0 && var15 < 160) {
 										var18 = var12 + var15 * 32;
 										var19 = this.textures[var16.blockID * 3 + 0];
@@ -142,10 +140,10 @@
 										}
 
 										if(var12 < 31) {
-											var22 = var20 * 0.9F;
+											var21 = var20 * 0.9F;
 											if(this.zBuf[var18 + 1] <= var14) {
 												this.zBuf[var18 + 1] = var14;
-												this.pixels[var18 + 1] = -16777216 | (int)(this.texCols[var19 * 3 + 0] * var22) << 16 | (int)(this.texCols[var19 * 3 + 1] * var22) << 8 | (int)(this.texCols[var19 * 3 + 2] * var22);
+												this.pixels[var18 + 1] = -16777216 | (int)(this.texCols[var19 * 3 + 0] * var21) << 16 | (int)(this.texCols[var19 * 3 + 1] * var21) << 8 | (int)(this.texCols[var19 * 3 + 2] * var21);
 											}
 										}
 									}
@@ -154,8 +152,8 @@
 										var18 = var12 + (var15 + 1) * 32;
 										var19 = this.textures[var16.blockID * 3 + 1];
 										var20 = var2.getBrightness(var9 - 1, var14, var8) * 0.8F + 0.2F;
-										int var21 = this.textures[var16.blockID * 3 + 2];
-										var22 = var2.getBrightness(var9, var14, var8 + 1) * 0.8F + 0.2F;
+										int var22 = this.textures[var16.blockID * 3 + 2];
+										var21 = var2.getBrightness(var9, var14, var8 + 1) * 0.8F + 0.2F;
 										float var23;
 										if(var12 >= 0) {
 											var23 = var20 * var17 * 0.6F;
@@ -166,10 +164,10 @@
 										}
 
 										if(var12 < 31) {
-											var23 = var22 * 0.9F * var17 * 0.4F;
+											var23 = var21 * 0.9F * var17 * 0.4F;
 											if(this.zBuf[var18 + 1] <= var14 - 1) {
 												this.zBuf[var18 + 1] = var14 - 1;
-												this.pixels[var18 + 1] = -16777216 | (int)(this.texCols[var21 * 3 + 0] * var23) << 16 | (int)(this.texCols[var21 * 3 + 1] * var23) << 8 | (int)(this.texCols[var21 * 3 + 2] * var23);
+												this.pixels[var18 + 1] = -16777216 | (int)(this.texCols[var22 * 3 + 0] * var23) << 16 | (int)(this.texCols[var22 * 3 + 1] * var23) << 8 | (int)(this.texCols[var22 * 3 + 2] * var23);
 											}
 										}
 									}
@@ -187,7 +185,11 @@
 				var1.image.setRGB(0, 0, 32, 160, this.pixels, 0, 32);
 				var1.rendered = true;
 			}
+		} else {
+			var1.noContent = true;
+			var1.rendered = true;
 		}
+
 	}
 
 	private void postProcess() {
--- /dev/null
+++ net/minecraft/src/CommandMap.java
@@ -1,0 +1,22 @@
+package net.minecraft.src;
+
+class CommandMap extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8564_3nU2mtMiw7HfHf3DIyGwSian4L6I2Qi77Ll3Gf8CRzx43JB9bzi08X6ehWu1;
+    
+    CommandMap(final CommandManager abb) {
+        this.field_8564_3nU2mtMiw7HfHf3DIyGwSian4L6I2Qi77Ll3Gf8CRzx43JB9bzi08X6ehWu1 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.displayGuiScreen(null);
+        InputHandler.mc.playerController = new PlayerControllerSP(InputHandler.mc);
+        InputHandler.mc.startWorld((String)arr[0]);
+        InputHandler.mc.displayGuiScreen(null);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- net/minecraft/src/RenderBoat.java
+++ net/minecraft/src/RenderBoat.java
@@ -24,7 +24,7 @@
 			GL11.glRotatef(MathHelper.sin(var10) * var10 * var11 / 10.0F * (float)var1.forwardDirection, 1.0F, 0.0F, 0.0F);
 		}
 
-		this.loadTexture("/terrain.png");
+		this.loadTexture(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9796_62Ccm2XAR6JqSDTgV762x61j971DNgsIrMhaXZxPs0fQnBC7ymR2l1v1V22X));
 		float var12 = 12.0F / 16.0F;
 		GL11.glScalef(var12, var12, var12);
 		GL11.glScalef(1.0F / var12, 1.0F / var12, 1.0F / var12);
--- /dev/null
+++ net/minecraft/src/CommandMcRedl.java
@@ -1,0 +1,23 @@
+package net.minecraft.src;
+
+class CommandMcRedl extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8597_3bxFt87TC8K6X974DX95EaIky5552vQKqI2e0BwcjTVrhU8LvEu1MnQG6I71;
+    
+    CommandMcRedl(final CommandManager abb) {
+        this.field_8597_3bxFt87TC8K6X974DX95EaIky5552vQKqI2e0BwcjTVrhU8LvEu1MnQG6I71 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        try {
+            ThreadDownloadResources.finished = false;
+            (InputHandler.mc.downloadResourcesThread = new ThreadDownloadResources(InputHandler.mc.mcDataDir, InputHandler.mc)).start();
+        }
+        catch (final Exception ex) {}
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/VisualsConfiguration.java
@@ -1,0 +1,61 @@
+package net.minecraft.src;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import net.minecraft.client.Minecraft;
+
+public class VisualsConfiguration {
+	public boolean field_12194_99q16b50kyIAY3WydyIly32wBpFBLxi4p3yRL4x1J0O0Z0CR3wEHi9t1G3x9 = true;
+	public boolean field_12193_0yRCEAwFDV9mBOu59M849721TnV6ElT7DXzAWHz5Qor4Anx7W5pTGD808ZYq = false;
+	public boolean field_12191_1Q9p51ztMeH5L0oO28iX56xn49Eh9t0ZhEW6Gtn003jXgry844hmYr9985XV = false;
+	public int field_12192_9E67d5X2srrjQ8fe493f7ub1P59cMh50f2G1a453y7P5UP6YgaLpUO1EN9yR = 8961023;
+	public int field_12195_4252ptxk91utqUzwxJFw0j8CTrWMs6A4327D4QmrdAsD6mV695v861Puc7f3 = 0;
+
+	public static VisualsConfiguration func_12190_4qG6SCyQHhAB3Z4dLMG6530SnOk4ZY0WE2d12Vzgf77VgolUcGMS3afod9NS(InputStream var0) {
+		VisualsConfiguration var1 = new VisualsConfiguration();
+		BufferedReader var2 = new BufferedReader(new InputStreamReader(var0));
+
+		try {
+			for(String var3 = var2.readLine(); var3 != null; var3 = var2.readLine()) {
+				if(var3.startsWith("+ext1605.update-fx-textures=")) {
+					var1.field_12194_99q16b50kyIAY3WydyIly32wBpFBLxi4p3yRL4x1J0O0Z0CR3wEHi9t1G3x9 = var3.substring(var3.indexOf(61) + 1).equals("1");
+				} else if(var3.startsWith("+ext1605.no-biomes=")) {
+					var1.field_12193_0yRCEAwFDV9mBOu59M849721TnV6ElT7DXzAWHz5Qor4Anx7W5pTGD808ZYq = var3.substring(var3.indexOf(61) + 1).equals("1");
+				} else if(var3.startsWith("+ext1605.bilinear=")) {
+					var1.field_12191_1Q9p51ztMeH5L0oO28iX56xn49Eh9t0ZhEW6Gtn003jXgry844hmYr9985XV = var3.substring(var3.indexOf(61) + 1).equals("1");
+				} else if(var3.startsWith("+ext1605.color-sky-day=#")) {
+					try {
+						var1.field_12192_9E67d5X2srrjQ8fe493f7ub1P59cMh50f2G1a453y7P5UP6YgaLpUO1EN9yR = Integer.parseInt(var3.substring(var3.indexOf(61) + 2), 16);
+					} catch (NumberFormatException var6) {
+						ExtLogger.w("[TexPack] \'+ext1605.color-sky-day\' invalid color argument (not #RRGGBB)");
+					}
+				} else if(var3.startsWith("+ext1605.color-sky-night=#")) {
+					try {
+						var1.field_12195_4252ptxk91utqUzwxJFw0j8CTrWMs6A4327D4QmrdAsD6mV695v861Puc7f3 = Integer.parseInt(var3.substring(var3.indexOf(61) + 2), 16);
+					} catch (NumberFormatException var5) {
+						ExtLogger.w("[TexPack] \'+ext1605.color-sky-night\' invalid color argument (not #RRGGBB)");
+					}
+				}
+			}
+
+			var2.close();
+		} catch (IOException var7) {
+			var7.printStackTrace();
+		}
+
+		return var1;
+	}
+
+	public void func_12189_4e16037zP017Ybyhw4klyCwOs24S8Nh9OzRYIDt7732Nr83dqO5Otm7FIbRq(Minecraft var1) {
+		Minecraft.field_7307_8AX67fsnsj54328J9e6FiY9333555Xj726t2182u3TBB948QMZsZX2iz02iv = this.field_12194_99q16b50kyIAY3WydyIly32wBpFBLxi4p3yRL4x1J0O0Z0CR3wEHi9t1G3x9;
+		ScreenDebugMenu.field_7964_8G80Kimsj2t150ZuEHxk97V3fSV455qzurOOVWgX8oTDDCEH9YV34z9vRAoC = this.field_12193_0yRCEAwFDV9mBOu59M849721TnV6ElT7DXzAWHz5Qor4Anx7W5pTGD808ZYq;
+		ScreenDebugMenu.field_7956_48H3fYB8k2jE5s5HC81S9Sm600nFD73Lb4N90Pl1F0LSIx70mF1gldgvzgRz = this.field_12191_1Q9p51ztMeH5L0oO28iX56xn49Eh9t0ZhEW6Gtn003jXgry844hmYr9985XV;
+		if(var1.theWorld != null) {
+			var1.theWorld.skyColor = (long)this.field_12192_9E67d5X2srrjQ8fe493f7ub1P59cMh50f2G1a453y7P5UP6YgaLpUO1EN9yR;
+			var1.theWorld.field_7500_6aGUO2jbVGtoxoGHcgMRUkCmunA4cxQ7hz8a29V2I7fc5UVeqFCM92Z8HJnU = (long)this.field_12195_4252ptxk91utqUzwxJFw0j8CTrWMs6A4327D4QmrdAsD6mV695v861Puc7f3;
+		}
+
+	}
+}
--- net/minecraft/src/NBTTagList.java
+++ net/minecraft/src/NBTTagList.java
@@ -7,7 +7,7 @@
 import java.util.List;
 
 public class NBTTagList extends NBTBase {
-	private List tagList = new ArrayList();
+	private List<NBTBase> tagList = new ArrayList();
 	private byte tagType;
 
 	void writeTagContents(DataOutput var1) throws IOException {
--- /dev/null
+++ net/minecraft/src/Launcher.java
@@ -1,0 +1,72 @@
+package net.minecraft.src;
+
+import java.awt.Color;
+import java.awt.Component;
+import java.awt.Dimension;
+import java.awt.FlowLayout;
+import java.awt.Font;
+import java.io.IOException;
+import javax.imageio.ImageIO;
+import javax.swing.Box;
+import javax.swing.BoxLayout;
+import javax.swing.ImageIcon;
+import javax.swing.JButton;
+import javax.swing.JFrame;
+import javax.swing.JLabel;
+import javax.swing.JPanel;
+import javax.swing.JTextField;
+
+public class Launcher {
+	public static void func_9592_8mrizGWQ0Mh6Pp4tb49FU0IZkwN1499r0Sqo62o9pWcK97N2T9z24ygg2kGb(JPanel var0, Component[] var1) {
+		JPanel var2 = new JPanel(new FlowLayout(0));
+		var2.setBackground(new Color(30, 30, 30));
+		Component[] var3 = var1;
+		int var4 = var1.length;
+
+		for(int var5 = 0; var5 < var4; ++var5) {
+			Component var6 = var3[var5];
+			var2.add(var6);
+		}
+
+		var0.add(var2);
+	}
+
+	public static void main(String[] var0) {
+		JFrame var1 = new JFrame("\u00e2\u2014\u20201.0.16.05");
+		var1.setSize(330, 210);
+		JPanel var2 = new JPanel();
+		var2.setLayout(new BoxLayout(var2, 1));
+		var2.setAlignmentX(0.0F);
+		var2.setMaximumSize(var2.getPreferredSize());
+		var2.setBackground(new Color(30, 30, 30));
+		var1.add(var2);
+
+		try {
+			JLabel var3 = new JLabel(new ImageIcon(ImageIO.read(Ext1605Utils.func_12146_9P3TY758VM8951Z7q70WD5qYdKqLdB22jUqQNi8u6rFBU4uZnFfpCw0XU82v("/dirt.png")).getScaledInstance(50, 50, 2)));
+			var3.setText("Launcher");
+			var3.setForeground(Color.WHITE);
+			var3.setFont(new Font("Arial", 0, 30));
+			func_9592_8mrizGWQ0Mh6Pp4tb49FU0IZkwN1499r0Sqo62o9pWcK97N2T9z24ygg2kGb(var2, new Component[]{var3});
+		} catch (IOException var9) {
+			var9.printStackTrace();
+		}
+
+		Box var10 = Box.createHorizontalBox();
+		var10.setSize(new Dimension(300, 3));
+		var2.add(var10);
+		JTextField var4 = new JTextField();
+		var4.setPreferredSize(new Dimension(200, 20));
+		JLabel var5 = new JLabel("Player name");
+		var5.setForeground(Color.WHITE);
+		func_9592_8mrizGWQ0Mh6Pp4tb49FU0IZkwN1499r0Sqo62o9pWcK97N2T9z24ygg2kGb(var2, new Component[]{var5, var4});
+		JTextField var6 = new JTextField();
+		var6.setPreferredSize(new Dimension(200, 20));
+		JLabel var7 = new JLabel("Launch options");
+		var7.setForeground(Color.WHITE);
+		func_9592_8mrizGWQ0Mh6Pp4tb49FU0IZkwN1499r0Sqo62o9pWcK97N2T9z24ygg2kGb(var2, new Component[]{var7, var6});
+		JButton var8 = new JButton();
+		var8.setText("Start");
+		var2.add(var8);
+		var1.setVisible(true);
+	}
+}
--- net/minecraft/src/BlockOre.java
+++ net/minecraft/src/BlockOre.java
@@ -8,7 +8,7 @@
 	}
 
 	public int idDropped(int var1, Random var2) {
-		return this.blockID == Block.oreCoal.blockID ? Item.coal.shiftedIndex : (this.blockID == Block.oreDiamond.blockID ? Item.diamond.shiftedIndex : this.blockID);
+		return this.blockID == Block.oreCoal.blockID ? Item.coal.shiftedIndex : (this.blockID == Block.oreDiamond.blockID ? Item.diamond.shiftedIndex : (this.blockID == ExtBlocks.LowOreCoal.blockID ? Item.coal.shiftedIndex : (this.blockID == ExtBlocks.LowOreDiamond.blockID ? Item.diamond.shiftedIndex : (this.blockID == ExtBlocks.LaceAgateOre.blockID ? ExtItems.LaceAgate.shiftedIndex : (this.blockID == ExtBlocks.ClinohumiteOre.blockID ? ExtItems.Clinohumite.shiftedIndex : (this.blockID == ExtBlocks.MalachiteOre.blockID ? ExtItems.Malachite.shiftedIndex : (this.blockID == ExtBlocks.PyriteOre.blockID ? ExtItems.Pyrite.shiftedIndex : this.blockID)))))));
 	}
 
 	public int quantityDropped(Random var1) {
--- /dev/null
+++ net/minecraft/src/BlockMyconDoor.java
@@ -1,0 +1,14 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockMyconDoor extends BlockDoor {
+	public BlockMyconDoor(int var1, int var2) {
+		super(var1, Material.wood);
+		this.blockIndexInTexture = var2;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return (var1 & 8) != 0 ? 0 : ExtItems.MyconDoor.shiftedIndex;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockLeavesOld.java
@@ -1,0 +1,116 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockLeavesOld extends BlockLeavesBaseOld {
+	private int leafTexIndex;
+	private int decayCounter = 0;
+
+	protected BlockLeavesOld(int var1, int var2) {
+		super(var1, var2, Material.leaves, false);
+		this.leafTexIndex = var2;
+		this.setTickOnLoad(true);
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		this.decayCounter = 0;
+		this.updateCurrentLeaves(var1, var2, var3, var4);
+		super.onNeighborBlockChange(var1, var2, var3, var4, var5);
+	}
+
+	public void updateConnectedLeaves(World var1, int var2, int var3, int var4, int var5) {
+		if(var1.getBlockId(var2, var3, var4) == this.blockID) {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			if(var6 != 0 && var6 == var5 - 1) {
+				this.updateCurrentLeaves(var1, var2, var3, var4);
+			}
+		}
+	}
+
+	public void updateCurrentLeaves(World var1, int var2, int var3, int var4) {
+		if(this.decayCounter++ < 100) {
+			int var5 = var1.getBlockMaterial(var2, var3 - 1, var4).isSolid() ? 16 : 0;
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			if(var6 == 0) {
+				var6 = 1;
+				var1.setBlockMetadataWithNotify(var2, var3, var4, 1);
+			}
+
+			var5 = this.getConnectionStrength(var1, var2, var3 - 1, var4, var5);
+			var5 = this.getConnectionStrength(var1, var2, var3, var4 - 1, var5);
+			var5 = this.getConnectionStrength(var1, var2, var3, var4 + 1, var5);
+			var5 = this.getConnectionStrength(var1, var2 - 1, var3, var4, var5);
+			var5 = this.getConnectionStrength(var1, var2 + 1, var3, var4, var5);
+			int var7 = var5 - 1;
+			if(var7 < 10) {
+				var7 = 1;
+			}
+
+			if(var7 != var6) {
+				var1.setBlockMetadataWithNotify(var2, var3, var4, var7);
+				this.updateConnectedLeaves(var1, var2, var3 - 1, var4, var6);
+				this.updateConnectedLeaves(var1, var2, var3 + 1, var4, var6);
+				this.updateConnectedLeaves(var1, var2, var3, var4 - 1, var6);
+				this.updateConnectedLeaves(var1, var2, var3, var4 + 1, var6);
+				this.updateConnectedLeaves(var1, var2 - 1, var3, var4, var6);
+				this.updateConnectedLeaves(var1, var2 + 1, var3, var4, var6);
+			}
+
+		}
+	}
+
+	private int getConnectionStrength(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockId(var2, var3, var4);
+		if(var6 == BlockOld.wood.blockID) {
+			return 16;
+		} else {
+			if(var6 == this.blockID) {
+				int var7 = var1.getBlockMetadata(var2, var3, var4);
+				if(var7 != 0 && var7 > var5) {
+					return var7;
+				}
+			}
+
+			return var5;
+		}
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		if(var6 == 0) {
+			this.decayCounter = 0;
+			this.updateCurrentLeaves(var1, var2, var3, var4);
+		} else if(var6 == 1) {
+			this.removeLeaves(var1, var2, var3, var4);
+		} else if(var5.nextInt(10) == 0) {
+			this.updateCurrentLeaves(var1, var2, var3, var4);
+		}
+
+	}
+
+	private void removeLeaves(World var1, int var2, int var3, int var4) {
+		this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+		var1.setBlockWithNotify(var2, var3, var4, 0);
+	}
+
+	public int quantityDropped(Random var1) {
+		return var1.nextInt(20) == 0 ? 1 : 0;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return BlockOld.sapling.blockID;
+	}
+
+	public boolean isOpaqueCube() {
+		return !this.graphicsLevel;
+	}
+
+	public void setGraphicsLevel(boolean var1) {
+		this.graphicsLevel = var1;
+		this.blockIndexInTexture = this.leafTexIndex + (var1 ? 0 : 1);
+	}
+
+	public void onEntityWalking(World var1, int var2, int var3, int var4, Entity var5) {
+		super.onEntityWalking(var1, var2, var3, var4, var5);
+	}
+}
--- net/minecraft/src/GuiInventory.java
+++ net/minecraft/src/GuiInventory.java
@@ -38,7 +38,7 @@
 	}
 
 	protected void drawGuiContainerForegroundLayer() {
-		this.fontRenderer.drawString("Crafting", 86, 16, 4210752);
+		this.fontRenderer.drawString("Crafting", 86, 16, 16777215);
 	}
 
 	public void drawScreen(int var1, int var2, float var3) {
--- /dev/null
+++ net/minecraft/src/BlockReedOld.java
@@ -1,0 +1,73 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockReedOld extends BlockOld {
+	protected BlockReedOld(int var1, int var2) {
+		super(var1, Material.plants);
+		this.blockIndexInTexture = var2;
+		float var3 = 6.0F / 16.0F;
+		this.setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, 1.0F, 0.5F + var3);
+		this.setTickOnLoad(true);
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(var1.getBlockId(var2, var3 + 1, var4) == 0) {
+			int var6;
+			for(var6 = 1; var1.getBlockId(var2, var3 - var6, var4) == this.blockID; ++var6) {
+			}
+
+			if(var6 < 3) {
+				int var7 = var1.getBlockMetadata(var2, var3, var4);
+				if(var7 == 15) {
+					var1.setBlockWithNotify(var2, var3 + 1, var4, this.blockID);
+					var1.setBlockMetadataWithNotify(var2, var3, var4, 0);
+				} else {
+					var1.setBlockMetadataWithNotify(var2, var3, var4, var7 + 1);
+				}
+			}
+		}
+
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockId(var2, var3 - 1, var4);
+		return var5 == this.blockID ? true : (var5 != BlockOld.grass.blockID && var5 != BlockOld.dirt.blockID ? false : (var1.getBlockMaterial(var2 - 1, var3 - 1, var4) == Material.water ? true : (var1.getBlockMaterial(var2 + 1, var3 - 1, var4) == Material.water ? true : (var1.getBlockMaterial(var2, var3 - 1, var4 - 1) == Material.water ? true : var1.getBlockMaterial(var2, var3 - 1, var4 + 1) == Material.water))));
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		this.checkBlockCoordValid(var1, var2, var3, var4);
+	}
+
+	protected final void checkBlockCoordValid(World var1, int var2, int var3, int var4) {
+		if(!this.canBlockStay(var1, var2, var3, var4)) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		}
+
+	}
+
+	public boolean canBlockStay(World var1, int var2, int var3, int var4) {
+		return this.canPlaceBlockAt(var1, var2, var3, var4);
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return Item.reed.shiftedIndex;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 1;
+	}
+}
--- net/minecraft/src/WorldGenDungeons.java
+++ net/minecraft/src/WorldGenDungeons.java
@@ -16,11 +16,7 @@
 			for(var11 = var4 - 1; var11 <= var4 + var6 + 1; ++var11) {
 				for(var12 = var5 - var8 - 1; var12 <= var5 + var8 + 1; ++var12) {
 					Material var13 = var1.getBlockMaterial(var10, var11, var12);
-					if(var11 == var4 - 1 && !var13.isSolid()) {
-						return false;
-					}
-
-					if(var11 == var4 + var6 + 1 && !var13.isSolid()) {
+					if((var11 == var4 - 1 || var11 == var4 + var6 + 1) && !var13.isSolid()) {
 						return false;
 					}
 
@@ -50,45 +46,45 @@
 				}
 			}
 
-			label110:
+			label104:
 			for(var10 = 0; var10 < 2; ++var10) {
 				for(var11 = 0; var11 < 3; ++var11) {
 					var12 = var3 + var2.nextInt(var7 * 2 + 1) - var7;
-					int var14 = var5 + var2.nextInt(var8 * 2 + 1) - var8;
-					if(var1.getBlockId(var12, var4, var14) == 0) {
-						int var15 = 0;
-						if(var1.getBlockMaterial(var12 - 1, var4, var14).isSolid()) {
-							++var15;
-						}
-
-						if(var1.getBlockMaterial(var12 + 1, var4, var14).isSolid()) {
-							++var15;
-						}
-
-						if(var1.getBlockMaterial(var12, var4, var14 - 1).isSolid()) {
-							++var15;
-						}
-
-						if(var1.getBlockMaterial(var12, var4, var14 + 1).isSolid()) {
-							++var15;
-						}
-
-						if(var15 == 1) {
-							var1.setBlockWithNotify(var12, var4, var14, Block.chest.blockID);
-							TileEntityChest var16 = (TileEntityChest)var1.getBlockTileEntity(var12, var4, var14);
-							int var17 = 0;
+					int var18 = var5 + var2.nextInt(var8 * 2 + 1) - var8;
+					if(var1.getBlockId(var12, var4, var18) == 0) {
+						int var14 = 0;
+						if(var1.getBlockMaterial(var12 - 1, var4, var18).isSolid()) {
+							++var14;
+						}
+
+						if(var1.getBlockMaterial(var12 + 1, var4, var18).isSolid()) {
+							++var14;
+						}
+
+						if(var1.getBlockMaterial(var12, var4, var18 - 1).isSolid()) {
+							++var14;
+						}
+
+						if(var1.getBlockMaterial(var12, var4, var18 + 1).isSolid()) {
+							++var14;
+						}
+
+						if(var14 == 1) {
+							var1.setBlockWithNotify(var12, var4, var18, Block.chest.blockID);
+							TileEntityChest var15 = (TileEntityChest)var1.getBlockTileEntity(var12, var4, var18);
+							int var16 = 0;
 
 							while(true) {
-								if(var17 >= 8) {
-									continue label110;
-								}
-
-								ItemStack var18 = this.pickCheckLootItem(var2);
-								if(var18 != null) {
-									var16.setInventorySlotContents(var2.nextInt(var16.getSizeInventory()), var18);
-								}
-
-								++var17;
+								if(var16 >= 8) {
+									continue label104;
+								}
+
+								ItemStack var17 = this.pickCheckLootItem(var2);
+								if(var17 != null) {
+									var15.setInventorySlotContents(var2.nextInt(var15.getSizeInventory()), var17);
+								}
+
+								++var16;
 							}
 						}
 					}
--- /dev/null
+++ net/minecraft/src/BlockWifiBlock.java
@@ -1,0 +1,29 @@
+package net.minecraft.src;
+
+public class BlockWifiBlock extends Block {
+	public BlockWifiBlock(int var1) {
+		super(var1, Material.wood);
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		var5.func_9014_8m5ZIeFsLDmTSL7vg0gU2Gb8dJg6fdSuixcwsqYKcnVLS6AUHVRG1qS6my5L();
+		return true;
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return this.getBlockTextureFromSideAndMetadata(var1, 0);
+	}
+
+	public int getBlockTextureFromSideAndMetadata(int var1, int var2) {
+		switch(var1) {
+		case 0:
+			return 265;
+		case 1:
+			return 281;
+		case 2:
+			return 280;
+		default:
+			return 279;
+		}
+	}
+}
--- net/minecraft/src/GLAllocation.java
+++ net/minecraft/src/GLAllocation.java
@@ -9,8 +9,8 @@
 import org.lwjgl.opengl.GL11;
 
 public class GLAllocation {
-	private static List displayLists = new ArrayList();
-	private static List textureNames = new ArrayList();
+	private static List<Integer> displayLists = new ArrayList();
+	private static List<Integer> textureNames = new ArrayList();
 
 	public static synchronized int generateDisplayLists(int var0) {
 		int var1 = GL11.glGenLists(var0);
--- net/minecraft/src/GuiMainMenu.java
+++ net/minecraft/src/GuiMainMenu.java
@@ -1,11 +1,17 @@
 package net.minecraft.src;
 
 import java.io.BufferedReader;
+import java.io.File;
+import java.io.IOException;
 import java.io.InputStreamReader;
+import java.nio.charset.Charset;
+import java.nio.file.Files;
+import java.nio.file.Paths;
 import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Date;
 import java.util.Random;
+import net.minecraft.client.Minecraft;
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.util.glu.GLU;
 
@@ -13,13 +19,13 @@
 	private static final Random rand = new Random();
 	String[] logoBlockLayers = new String[]{" *   * * *   * *** *** *** *** *** ***", " ** ** * **  * *   *   * * * * *    * ", " * * * * * * * **  *   **  *** **   * ", " *   * * *  ** *   *   * * * * *    * ", " *   * * *   * *** *** * * * * *    * "};
 	private LogoEffectRandomizer[][] logoEffects;
-	private float updateCounter = 0.0F;
 	private String splashString = "missingno";
+	private String qlaunchWorldName = "";
 
 	public GuiMainMenu() {
 		try {
 			ArrayList var1 = new ArrayList();
-			BufferedReader var2 = new BufferedReader(new InputStreamReader(GuiMainMenu.class.getResourceAsStream("/title/splashes.txt")));
+			BufferedReader var2 = new BufferedReader(new InputStreamReader(Ext1605Utils.func_12150_5v4Cs6sI06e6Hjpg3rSI82gG008x14C2jag2OM7ADaW5U8a3DYSrf570CJm6("/title/splashes.txt")));
 			String var3 = "";
 
 			while(true) {
@@ -40,7 +46,6 @@
 	}
 
 	public void updateScreen() {
-		++this.updateCounter;
 		if(this.logoEffects != null) {
 			for(int var1 = 0; var1 < this.logoEffects.length; ++var1) {
 				for(int var2 = 0; var2 < this.logoEffects[var1].length; ++var2) {
@@ -51,30 +56,68 @@
 
 	}
 
+	private void LoadQLaunch() {
+		try {
+			this.qlaunchWorldName = (String)Files.readAllLines(Paths.get("./qfile", new String[0]), Charset.forName("utf8")).get(0);
+			File var1 = new File(Minecraft.getMinecraftDir(), "saves/" + this.qlaunchWorldName);
+			if(!var1.exists() || !var1.isDirectory()) {
+				throw new IOException();
+			}
+
+			((GuiButton)this.controlList.get(1)).enabled = true;
+			((GuiButton)this.controlList.get(1)).displayString = "Quickload : " + this.qlaunchWorldName;
+			((GuiButton)this.controlList.get(1)).width = 80 + this.qlaunchWorldName.length() * 4;
+		} catch (IOException var2) {
+			((GuiButton)this.controlList.get(1)).enabled = false;
+		}
+
+	}
+
 	protected void keyTyped(char var1, int var2) {
 	}
 
 	public void initGui() {
 		Calendar var1 = Calendar.getInstance();
 		var1.setTime(new Date());
-		if(var1.get(2) + 1 == 11 && var1.get(5) == 9) {
-			this.splashString = "Happy birthday, ez!";
-		} else if(var1.get(2) + 1 == 6 && var1.get(5) == 1) {
-			this.splashString = "Happy birthday, Notch!";
-		} else if(var1.get(2) + 1 == 12 && var1.get(5) == 24) {
-			this.splashString = "Merry X-mas!";
-		} else if(var1.get(2) + 1 == 1 && var1.get(5) == 1) {
-			this.splashString = "Happy new year!";
+		int var2 = var1.get(2);
+		if(var2 == 5 && var1.get(5) == 5) {
+			this.splashString = "Happy birthday, 8064262!";
+		} else if(var2 == 5 && var1.get(5) == 6) {
+			this.splashString = "Happy birthday, my beloved...";
+		} else if(var2 == 7 && var1.get(5) == 15) {
+			String[] var3 = new String[]{"\"Screw you, cat!\"", "\"We\'re like a secret organization!\"", "Interval Days", "Interval Daze"};
+			this.splashString = var3[rand.nextInt(var3.length)];
+		} else if(var2 == 7 && var1.get(5) == 31) {
+			this.splashString = "39!";
+		} else if(var2 == 2 && var1.get(5) == 3) {
+			this.splashString = "Drummin\' along since 2000!";
+		} else if((var2 != 8 || var1.get(5) != 18) && (var2 != 5 || var1.get(5) != 24)) {
+			if(var1.get(10) == 7 && var1.get(12) == 27) {
+				if(rand.nextBoolean()) {
+					this.splashString = "How?";
+				} else {
+					this.splashString = "When you see it...";
+				}
+			}
+		} else {
+			this.splashString = "Also try ShovelForge!";
 		}
 
 		this.controlList.clear();
-		this.controlList.add(new GuiButton(1, this.width / 2 - 100, this.height / 4 + 48, "Singleplayer"));
-		this.controlList.add(new GuiButton(2, this.width / 2 - 100, this.height / 4 + 72, "Multiplayer"));
-		this.controlList.add(new GuiButton(3, this.width / 2 - 100, this.height / 4 + 96, "Play tutorial level"));
-		this.controlList.add(new GuiButton(0, this.width / 2 - 100, this.height / 4 + 120 + 12, "Options..."));
-		((GuiButton)this.controlList.get(2)).enabled = false;
-		if(this.mc.session == null) {
+		this.controlList.add(new ButtonSel(1, this.width / 8, this.height / 4 + 48, 120, 20, "Play", true));
+		this.controlList.add(new ButtonSel(4, this.width / 8 + 200 - 60, this.height / 4 + 48, 60, 20, "Quickload", true));
+		this.controlList.add(new ButtonSel(0, this.width / 8, this.height / 4 + 96 + 12, 100, 20, "Options", true));
+		this.controlList.add(new ButtonSel(5, this.width / 8, this.height / 4 + 120 + 12, 80, 20, "Exit", true));
+		this.controlList.add(new ButtonSel(6, this.width / 8, this.height / 4 + 84, 70, 20, "Visuals", true));
+		this.controlList.add(new ButtonSel(7, this.width / 8 + 75, this.height / 4 + 84, 70, 20, "Extensions", true));
+		this.controlList.add(new ButtonSel(8, this.width / 8 + 90, this.height / 4 + 120 + 12, 80, 20, "Credits", true));
+		this.LoadQLaunch();
+		if(CertUtils.loadedPublicKey == null) {
 			((GuiButton)this.controlList.get(1)).enabled = false;
+		}
+
+		if(SoundManager.sndSystem != null && !SoundManager.sndSystem.playing("BgMusic")) {
+			InputHandler.mc.sndManager.func_12031_514dv3mYU7t95lOh23lLhBI10XBv07D8y61Goe1u7G926JNt2Y1WIoiHj5tm("mainmenu", true);
 		}
 
 	}
@@ -85,17 +128,57 @@
 		}
 
 		if(var1.id == 1) {
-			this.mc.displayGuiScreen(new GuiSelectWorld(this));
+			this.mc.displayGuiScreen(new GuiPlayGame(this));
 		}
 
 		if(var1.id == 2) {
-			this.mc.displayGuiScreen(new GuiMultiplayer(this));
+			if(InputHandler.IsKeyDown(54)) {
+				this.mc.displayGuiScreen(new GuiAltMultiplayer(this));
+			} else {
+				this.mc.displayGuiScreen(new GuiMultiplayer(this));
+			}
+		}
+
+		if(var1.id == 3) {
+			if(ThreadDownloadResources.finished) {
+				this.mc.displayGuiScreen((GuiScreen)(InputHandler.IsKeyDown(54) ? new GuiZM(this) : new GuiFreerunWorlds(this)));
+			} else {
+				this.mc.displayGuiScreen(new GuiConnectFailed("", "Downloading resources. Try again later."));
+			}
+		}
+
+		if(var1.id == 4 && this.qlaunchWorldName != "") {
+			File var2 = new File(Minecraft.getMinecraftDir(), "saves/" + this.qlaunchWorldName);
+			if(var2.exists() && var2.isDirectory()) {
+				this.mc.playerController = new PlayerControllerSP(this.mc);
+				this.mc.startWorld(this.qlaunchWorldName);
+				this.mc.displayGuiScreen((GuiScreen)null);
+			}
+		}
+
+		if(var1.id == 5) {
+			this.mc.shutdownMinecraftApplet();
+			System.exit(39);
+		}
+
+		if(var1.id == 6) {
+			this.mc.displayGuiScreen(new GuiVisuals(this));
+		}
+
+		if(var1.id == 7) {
+			this.mc.displayGuiScreen(new GuiExtensions(this));
+		}
+
+		if(var1.id == 8) {
+			this.mc.displayGuiScreen(new GuiCredits(this));
 		}
 
 	}
 
 	public void drawScreen(int var1, int var2, float var3) {
 		this.drawDefaultBackground();
+		Gui.drawGradientRect(0, this.height / 4 + 40, this.width, this.height, -536870912, -2146697188);
+		Gui.drawGradientRect(0, 0, this.width, this.height / 4 + 40, 447997183, 11789567);
 		Tessellator var4 = Tessellator.instance;
 		this.drawLogo(var3);
 		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/logo.png"));
@@ -109,27 +192,28 @@
 		GL11.glScalef(var5, var5, var5);
 		this.drawCenteredString(this.fontRenderer, this.splashString, 0, -8, 16776960);
 		GL11.glPopMatrix();
-		String var6 = "Copyright Mojang Specifications. Do not distribute.";
-		this.drawString(this.fontRenderer, var6, this.width - this.fontRenderer.getStringWidth(var6) - 2, this.height - 10, 16777215);
+		Gui.drawString(this.fontRenderer, "Logged in as " + this.mc.session.username, this.width / 8, this.height / 4 + 30, 1627389951);
+		String var6 = "Copyright Mojang. Distribution strictly prohibited.";
+		Gui.drawString(this.fontRenderer, var6, this.width - this.fontRenderer.getStringWidth(var6) - 2, this.height - 10, 16777215);
 		long var7 = Runtime.getRuntime().maxMemory();
 		long var9 = Runtime.getRuntime().totalMemory();
 		long var11 = Runtime.getRuntime().freeMemory();
 		long var13 = var7 - var11;
 		var6 = "Free memory: " + var13 * 100L / var7 + "% of " + var7 / 1024L / 1024L + "MB";
-		this.drawString(this.fontRenderer, var6, this.width - this.fontRenderer.getStringWidth(var6) - 2, 2, 8421504);
+		Gui.drawString(this.fontRenderer, var6, this.width - this.fontRenderer.getStringWidth(var6) - 2, 2, 8421504);
 		var6 = "Allocated memory: " + var9 * 100L / var7 + "% (" + var9 / 1024L / 1024L + "MB)";
-		this.drawString(this.fontRenderer, var6, this.width - this.fontRenderer.getStringWidth(var6) - 2, 12, 8421504);
+		Gui.drawString(this.fontRenderer, var6, this.width - this.fontRenderer.getStringWidth(var6) - 2, 12, 8421504);
 		super.drawScreen(var1, var2, var3);
 	}
 
 	private void drawLogo(float var1) {
-		int var3;
+		int var2;
 		if(this.logoEffects == null) {
 			this.logoEffects = new LogoEffectRandomizer[this.logoBlockLayers[0].length()][this.logoBlockLayers.length];
 
-			for(int var2 = 0; var2 < this.logoEffects.length; ++var2) {
-				for(var3 = 0; var3 < this.logoEffects[var2].length; ++var3) {
-					this.logoEffects[var2][var3] = new LogoEffectRandomizer(this, var2, var3);
+			for(int var3 = 0; var3 < this.logoEffects.length; ++var3) {
+				for(var2 = 0; var2 < this.logoEffects[var3].length; ++var2) {
+					this.logoEffects[var3][var2] = new LogoEffectRandomizer(this, var3, var2);
 				}
 			}
 		}
@@ -138,9 +222,9 @@
 		GL11.glPushMatrix();
 		GL11.glLoadIdentity();
 		ScaledResolution var14 = new ScaledResolution(this.mc.displayWidth, this.mc.displayHeight);
-		var3 = 120 * var14.scaleFactor;
-		GLU.gluPerspective(70.0F, (float)this.mc.displayWidth / (float)var3, 0.05F, 100.0F);
-		GL11.glViewport(0, this.mc.displayHeight - var3, this.mc.displayWidth, var3);
+		var2 = 120 * var14.scaleFactor;
+		GLU.gluPerspective(70.0F, (float)this.mc.displayWidth / (float)var2, 0.05F, 100.0F);
+		GL11.glViewport(0, this.mc.displayHeight - var2, this.mc.displayWidth, var2);
 		GL11.glMatrixMode(GL11.GL_MODELVIEW);
 		GL11.glPushMatrix();
 		GL11.glLoadIdentity();
@@ -173,7 +257,7 @@
 			GL11.glRotatef(15.0F, 1.0F, 0.0F, 0.0F);
 			GL11.glScalef(0.89F, 1.0F, 0.4F);
 			GL11.glTranslatef((float)(-this.logoBlockLayers[0].length()) * 0.5F, (float)(-this.logoBlockLayers.length) * 0.5F, 0.0F);
-			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/terrain.png"));
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9796_62Ccm2XAR6JqSDTgV762x61j971DNgsIrMhaXZxPs0fQnBC7ymR2l1v1V22X)));
 			if(var4 == 0) {
 				GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/title/black.png"));
 			}
@@ -199,7 +283,7 @@
 						GL11.glTranslatef((float)var7, (float)var6, var10);
 						GL11.glScalef(var11, var11, var11);
 						GL11.glRotatef(var13, 0.0F, 1.0F, 0.0F);
-						var5.renderBlockAsItem(Block.stone, var12);
+						var5.func_10674_47uFsco7k3MB69GCB74UB9R3EkROVQhfTX6e4vfh9tGQb5JpV1NpUJJZFMS4(Block.stone, var12, true);
 						GL11.glPopMatrix();
 					}
 				}
--- /dev/null
+++ net/minecraft/src/BlockLogOld.java
@@ -1,0 +1,22 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockLogOld extends BlockOld {
+	protected BlockLogOld(int var1) {
+		super(var1, Material.wood);
+		this.blockIndexInTexture = 20;
+	}
+
+	public int quantityDropped(Random var1) {
+		return 1;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return BlockOld.wood.blockID;
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 == 1 ? 21 : (var1 == 0 ? 21 : 20);
+	}
+}
--- net/minecraft/src/ChunkCache.java
+++ net/minecraft/src/ChunkCache.java
@@ -30,7 +30,12 @@
 		} else {
 			int var4 = (var1 >> 4) - this.chunkX;
 			int var5 = (var3 >> 4) - this.chunkZ;
-			return this.chunkArray[var4][var5].getBlockID(var1 & 15, var2, var3 & 15);
+
+			try {
+				return this.chunkArray[var4][var5].getBlockID(var1 & 15, var2, var3 & 15);
+			} catch (ArrayIndexOutOfBoundsException var7) {
+				return 0;
+			}
 		}
 	}
 
@@ -40,59 +45,76 @@
 		return this.chunkArray[var4][var5].getChunkBlockTileEntity(var1 & 15, var2, var3 & 15);
 	}
 
+	public float getRenderSideBrightness(int var1, int var2, int var3) {
+		return ScreenDebugMenu.field_7960_2AJG81m1pl0O5bhn2XiQ37CD76Uoi3M5l8gTKvm6mx16vAu3Ik5oCR8W6P15 ? 1.0F : World.lightBrightnessTable[this.getLightValue(var1, var2, var3, true)];
+	}
+
 	public float getBrightness(int var1, int var2, int var3) {
 		return World.lightBrightnessTable[this.getLightValue(var1, var2, var3)];
 	}
 
 	public int getLightValue(int var1, int var2, int var3) {
-		return this.getLightValueExt(var1, var2, var3, true);
+		return this.getLightValue(var1, var2, var3, false);
+	}
+
+	public int getLightValue(int var1, int var2, int var3, boolean var4) {
+		return this.getLightValueExt(var1, var2, var3, true, var4);
 	}
 
 	public int getLightValueExt(int var1, int var2, int var3, boolean var4) {
+		return this.getLightValueExt(var1, var2, var3, var4, false);
+	}
+
+	public int getLightValueExt(int var1, int var2, int var3, boolean var4, boolean var5) {
+		int var6 = this.worldObj.skylightSubtracted;
+		if(var5 && InputHandler.mc.options.renderDistance == 5) {
+			var6 = Math.max(12, var6);
+		}
+
 		if(var1 >= -32000000 && var3 >= -32000000 && var1 < 32000000 && var3 <= 32000000) {
-			int var5;
-			int var6;
+			int var7;
+			int var8;
 			if(var4) {
-				var5 = this.getBlockId(var1, var2, var3);
-				if(var5 == Block.stairSingle.blockID || var5 == Block.tilledField.blockID) {
-					var6 = this.getLightValueExt(var1, var2 + 1, var3, false);
-					int var7 = this.getLightValueExt(var1 + 1, var2, var3, false);
-					int var8 = this.getLightValueExt(var1 - 1, var2, var3, false);
-					int var9 = this.getLightValueExt(var1, var2, var3 + 1, false);
-					int var10 = this.getLightValueExt(var1, var2, var3 - 1, false);
-					if(var7 > var6) {
-						var6 = var7;
-					}
-
-					if(var8 > var6) {
-						var6 = var8;
-					}
-
-					if(var9 > var6) {
-						var6 = var9;
-					}
-
-					if(var10 > var6) {
-						var6 = var10;
-					}
-
-					return var6;
+				var7 = this.getBlockId(var1, var2, var3);
+				if(var7 == ExtBlocks.woodSingle.blockID || var7 == Block.stairSingle.blockID || var7 == Block.tilledField.blockID) {
+					var8 = this.getLightValueExt(var1, var2 + 1, var3, false);
+					int var9 = this.getLightValueExt(var1 + 1, var2, var3, false);
+					int var10 = this.getLightValueExt(var1 - 1, var2, var3, false);
+					int var11 = this.getLightValueExt(var1, var2, var3 + 1, false);
+					int var12 = this.getLightValueExt(var1, var2, var3 - 1, false);
+					if(var9 > var8) {
+						var8 = var9;
+					}
+
+					if(var10 > var8) {
+						var8 = var10;
+					}
+
+					if(var11 > var8) {
+						var8 = var11;
+					}
+
+					if(var12 > var8) {
+						var8 = var12;
+					}
+
+					return var8;
 				}
 			}
 
 			if(var2 < 0) {
 				return 0;
 			} else if(var2 >= 128) {
-				var5 = 15 - this.worldObj.skylightSubtracted;
-				if(var5 < 0) {
-					var5 = 0;
+				var7 = 15 - var6;
+				if(var7 < 0) {
+					var7 = 0;
 				}
 
-				return var5;
+				return var7;
 			} else {
-				var5 = (var1 >> 4) - this.chunkX;
-				var6 = (var3 >> 4) - this.chunkZ;
-				return this.chunkArray[var5][var6].getBlockLightValue(var1 & 15, var2, var3 & 15, this.worldObj.skylightSubtracted);
+				var7 = (var1 >> 4) - this.chunkX;
+				var8 = (var3 >> 4) - this.chunkZ;
+				return this.chunkArray[var7][var8].getBlockLightValue(var1 & 15, var2, var3 & 15, var6);
 			}
 		} else {
 			return 15;
@@ -119,5 +141,9 @@
 	public boolean isBlockNormalCube(int var1, int var2, int var3) {
 		Block var4 = Block.blocksList[this.getBlockId(var1, var2, var3)];
 		return var4 == null ? false : var4.isOpaqueCube();
+	}
+
+	public BiomeInterface func_7342_9805301CWs03An9555qIw883P54dcq9802DkM5DuquNweM1NH26RH6oP02mr() {
+		return this.worldObj.func_7342_9805301CWs03An9555qIw883P54dcq9802DkM5DuquNweM1NH26RH6oP02mr();
 	}
 }
--- /dev/null
+++ net/minecraft/src/CommandPlaydemofile.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandPlaydemofile extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8596_0vWfx2d44llkb35hsi6oLwaqD9pBB3XH40yUA9e947Y2p4Y4sEZ0IuNlJcUN;
+    
+    CommandPlaydemofile(final CommandManager abb) {
+        this.field_8596_0vWfx2d44llkb35hsi6oLwaqD9pBB3XH40yUA9e947Y2p4Y4sEZ0IuNlJcUN = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.func_12205_6ZOj2zwwjPk9f604twAF89u12c3MGns9EqJD4l3jZR2R6cy50aEWBthikzOk((String)arr[0]);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- net/minecraft/src/GuiConnectFailed.java
+++ net/minecraft/src/GuiConnectFailed.java
@@ -29,8 +29,19 @@
 
 	public void drawScreen(int var1, int var2, float var3) {
 		this.drawDefaultBackground();
+		Gui.drawGradientRect(0, this.height / 4 * 3, this.width, this.height, -2147153098, -2146364641);
 		this.drawCenteredString(this.fontRenderer, this.message, this.width / 2, this.height / 2 - 50, 16777215);
-		this.drawCenteredString(this.fontRenderer, this.description, this.width / 2, this.height / 2 - 10, 16777215);
+		String[] var4 = this.description.split("\n");
+		int var5 = 0;
+		String[] var6 = var4;
+		int var7 = var4.length;
+
+		for(int var8 = 0; var8 < var7; ++var8) {
+			String var9 = var6[var8];
+			this.drawCenteredString(this.fontRenderer, var9, this.width / 2, this.height / 2 - 10 + var5 * 12, 16777215);
+			++var5;
+		}
+
 		super.drawScreen(var1, var2, var3);
 	}
 }
--- /dev/null
+++ net/minecraft/src/TriggerMode.java
@@ -1,0 +1,47 @@
+package net.minecraft.src;
+
+public enum TriggerMode {
+	Normal(0),
+	GameCube(1),
+	VerySoft(2),
+	Soft(3),
+	Hard(4),
+	VeryHard(5),
+	Hardest(6),
+	Rigid(7),
+	VibrateTrigger(8),
+	Choppy(9),
+	Medium(10),
+	VibrateTriggerPulse(11),
+	CustomTriggerValue(12),
+	Resistance(13),
+	Bow(14),
+	Galloping(15),
+	SemiAutomaticGun(16),
+	AutomaticGun(17),
+	Machine(18);
+
+	int index;
+
+    private static final /* synthetic */ TriggerMode[] field_10940_9l3Fnp8j2b2t9xOGujP13uy1O73auXblEI3NL9td7X2Lj1Oxg9m4iS1t6L8I;
+
+	public static TriggerMode[] func_10921_169uPCrkjFqi18gPuN956w5V4C7FWjZXw6O5bZJSt1EN91O8V07S5oS87814() {
+		return (TriggerMode[])field_10940_9l3Fnp8j2b2t9xOGujP13uy1O73auXblEI3NL9td7X2Lj1Oxg9m4iS1t6L8I.clone();
+	}
+
+	public static TriggerMode func_10919_0szvUh08fUrn8T1htP41R9lH1CTIp30Zd0mQ3OYqku5dQnRD2v068oMA4OOn(String var0) {
+		return (TriggerMode)Enum.valueOf(TriggerMode.class, var0);
+	}
+
+	private TriggerMode(int var3) {
+		this.index = var3;
+	}
+
+	private static TriggerMode[] func_10920_0E73t3d7GM820v7ag4sciB27902muSu2EKj9jl92n6e0FW328bROiT28h2Cz() {
+		return new TriggerMode[]{Normal, GameCube, VerySoft, Soft, Hard, VeryHard, Hardest, Rigid, VibrateTrigger, Choppy, Medium, VibrateTriggerPulse, CustomTriggerValue, Resistance, Bow, Galloping, SemiAutomaticGun, AutomaticGun, Machine};
+	}
+
+    static {
+        field_10940_9l3Fnp8j2b2t9xOGujP13uy1O73auXblEI3NL9td7X2Lj1Oxg9m4iS1t6L8I = TriggerMode.func_10920_0E73t3d7GM820v7ag4sciB27902muSu2EKj9jl92n6e0FW328bROiT28h2Cz();
+    }
+}
--- /dev/null
+++ net/minecraft/src/ButtonItemCheat.java
@@ -1,0 +1,47 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+import org.lwjgl.opengl.GL11;
+
+public class ButtonItemCheat extends GuiButton {
+	public int bID;
+	public GuiScreen caller;
+
+	public ButtonItemCheat(int var1, int var2, int var3, String var4, int var5, GuiScreen var6) {
+		super(var1, var2, var3, 25, 20, var4);
+		this.bID = var5;
+		this.caller = var6;
+	}
+
+	public void drawButton(Minecraft var1, int var2, int var3) {
+		if(this.visible) {
+			int var5 = this.xPosition;
+			int var6 = this.yPosition;
+			FontRenderer var7 = var1.fontRenderer;
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var1.renderEngine.getTexture("/gui/GUICREA.png"));
+			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+			byte var8 = 1;
+			boolean var4 = var2 >= this.xPosition && var3 >= this.yPosition && var2 < this.xPosition + this.width && var3 < this.yPosition + this.height;
+			if(!this.enabled) {
+				var8 = 0;
+			} else if(var4) {
+				var8 = 2;
+			}
+
+			this.drawTexturedModalRect(var5, var6, 0, 46 + var8 * 20, this.width / 2, this.height);
+			this.drawTexturedModalRect(var5 + this.width / 2, var6, 200 - this.width / 2, 46 + var8 * 20, this.width / 2, this.height);
+			if(!this.enabled) {
+				this.drawCenteredString(var7, this.displayString, var5 + this.width / 2, var6 + (this.height - 8) / 2, -6250336);
+			} else if(var4) {
+				this.drawCenteredString(var7, this.displayString, var5 + this.width / 2, var6 + (this.height - 8) / 2, 16777120);
+			} else {
+				this.drawCenteredString(var7, this.displayString, var5 + this.width / 2, var6 + (this.height - 8) / 2, 14737632);
+			}
+
+		}
+	}
+
+	public boolean func_7873_6nn76xn75jkNpKB9Sh129Q32vm9N0lG68zRy7yDWq13FtymI5qk8UIhvhIPd() {
+		return false;
+	}
+}
--- net/minecraft/src/RenderManager.java
+++ net/minecraft/src/RenderManager.java
@@ -6,7 +6,7 @@
 import org.lwjgl.opengl.GL11;
 
 public class RenderManager {
-	private Map entityRenderMap = new HashMap();
+	private Map<Class<? extends Entity>, Render> entityRenderMap = new HashMap();
 	public static RenderManager instance = new RenderManager();
 	private FontRenderer fontRenderer;
 	public static double renderPosX;
@@ -38,13 +38,23 @@
 		this.entityRenderMap.put(EntityLiving.class, new RenderLiving(new ModelBiped(), 0.5F));
 		this.entityRenderMap.put(Entity.class, new RenderEntity());
 		this.entityRenderMap.put(EntityPainting.class, new RenderPainting());
-		this.entityRenderMap.put(EntityArrow.class, new RenderArrow());
+		this.entityRenderMap.put(EntityArrow.class, new RenderArrow(false));
+		this.entityRenderMap.put(EntityEssenceProjectile.class, new RenderArrow(true));
 		this.entityRenderMap.put(EntitySnowball.class, new RenderSnowball());
 		this.entityRenderMap.put(EntityItem.class, new RenderItem());
 		this.entityRenderMap.put(EntityTNTPrimed.class, new RenderTNTPrimed());
 		this.entityRenderMap.put(EntityFallingSand.class, new RenderFallingSand());
 		this.entityRenderMap.put(EntityMinecart.class, new RenderMinecart());
 		this.entityRenderMap.put(EntityBoat.class, new RenderBoat());
+		this.entityRenderMap.put(EntityShadowPlayer.class, new RenderPlayer());
+		this.entityRenderMap.put(EntityGiantBoss.class, new RenderGiantBoss(new ModelZombie(), 0.5F, 6.0F));
+		this.entityRenderMap.put(EntityAmoung.class, new RenderLiving(new ModelAmoung(), 0.5F));
+		this.entityRenderMap.put(EntityObserver.class, new RenderLiving(new ModelBlockBenchImport(observer.createBodyLayer()), 0.5F));
+		this.entityRenderMap.put(EntityCatbomb.class, new RenderLiving(new ModelBlockBenchImport(ModelCatBomb.createBodyLayer()), 0.5F));
+		this.entityRenderMap.put(EntitySquib.class, new RenderLiving(new ModelSquip(), 0.5F));
+		this.entityRenderMap.put(EntityPongormatron.class, new RenderLiving(new ModelBlockBenchImport(pongokilldeathshitmachine.createBodyLayer(), 128, 128), 0.5F));
+		this.entityRenderMap.put(EntitySpear.class, new RenderArrow(false));
+		ModLoader.AddAllRenderers(this.entityRenderMap);
 		Iterator var1 = this.entityRenderMap.values().iterator();
 
 		while(var1.hasNext()) {
@@ -79,6 +89,10 @@
 		this.viewerPosX = var4.lastTickPosX + (var4.posX - var4.lastTickPosX) * (double)var6;
 		this.viewerPosY = var4.lastTickPosY + (var4.posY - var4.lastTickPosY) * (double)var6;
 		this.viewerPosZ = var4.lastTickPosZ + (var4.posZ - var4.lastTickPosZ) * (double)var6;
+		if(!ModLoader.texturesOverridden) {
+			ModLoader.RegisterAllTextureOverrides(var2);
+		}
+
 	}
 
 	public void renderEntity(Entity var1, float var2) {
--- /dev/null
+++ net/minecraft/src/HubFragment1.java
@@ -1,0 +1,16 @@
+package net.minecraft.src;
+
+public class HubFragment1 extends HubWorldUnknownClass2 {
+	public HubFragment1(HubWorld var1, int var2, int var3, int var4) {
+		super(var1, var2, var3, var4);
+	}
+
+	public void func_9822_96pkMbVA643Z1Y78zU1zOHbm0WbR47PCGp9q1ZyTK64G0pr0ViUREK2TCos1() {
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 0, 5, 16, 0, 10, ExtBlocks.dimensionFloorBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 4, 5, 16, 4, 10, ExtBlocks.dimensionFloorBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 1, 5, 16, 3, 10, ExtBlocks.dimensionWallBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 1, 6, 16, 3, 9, 0);
+		this.func_9823_0ir18WW2Er00vPEwk4ysWYEf3jBf0oDxYSVBcO27LQ7O9UiZXGtduk6tgrab(3, 3, 1, (short)Block.torch.blockID);
+		this.func_9823_0ir18WW2Er00vPEwk4ysWYEf3jBf0oDxYSVBcO27LQ7O9UiZXGtduk6tgrab(1, 3, 3, (short)Block.torch.blockID);
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandMason.java
@@ -1,0 +1,24 @@
+package net.minecraft.src;
+
+class CommandMason extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8569_1n3lPY3k9uS32LFtTbHJ7s8NjTN6034sKm8FXCVEbr9d1a50MvX0Sqlt0s2p;
+    
+    CommandMason(final CommandManager abb) {
+        this.field_8569_1n3lPY3k9uS32LFtTbHJ7s8NjTN6034sKm8FXCVEbr9d1a50MvX0Sqlt0s2p = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        throw new RuntimeException("Unable to find numeric definition.");
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+    
+    @Override
+    public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+        return false;
+    }
+}
--- net/minecraft/src/CanvasIsomPreview.java
+++ net/minecraft/src/CanvasIsomPreview.java
@@ -25,8 +25,8 @@
 	private boolean displayHelpText = true;
 	private World level;
 	private File dataFolder = this.getWorkingDirectory();
-	private boolean running = true;
-	private List zonesToRender = Collections.synchronizedList(new LinkedList());
+	public boolean running = true;
+	private List<IsoImageBuffer> zonesToRender = Collections.synchronizedList(new LinkedList());
 	private IsoImageBuffer[][] zoneMap = new IsoImageBuffer[64][64];
 	private int translateX;
 	private int translateY;
@@ -35,14 +35,14 @@
 
 	public File getWorkingDirectory() {
 		if(this.dataFolder == null) {
-			this.dataFolder = this.getWorkingDirectory("minecraft");
+			this.dataFolder = this.getWorkingDirectory(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9792_1YNrQ38ivM5fhyTo9PH5S33r6S87fqg85pTp0c4YlXfUniwhAwgeD8hZT3Cd));
 		}
 
 		return this.dataFolder;
 	}
 
 	public File getWorkingDirectory(String var1) {
-		String var2 = System.getProperty("user.home", ".");
+		String var2 = System.getProperty(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9794_1Mq8T0QNr27egvw7Ii5njC2U34iHqD9xm0XHd85K26sr2HmLXKQgJ5Uz42hp), ".");
 		File var3;
 		switch(OSMapIsom.osValues[getPlatform().ordinal()]) {
 		case 1:
@@ -197,6 +197,7 @@
 			this.render((Graphics2D)var1.getDrawGraphics());
 			var1.show();
 		}
+
 	}
 
 	public void render(Graphics2D var1) {
--- /dev/null
+++ net/minecraft/src/CommandPerfclass.java
@@ -1,0 +1,26 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+
+class CommandPerfclass extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8582_784J0u23Raeq18XvA5SN8FN2ZH0JK83Uc8ZiupIVRZeO2Bm4RzP1D1Xgwf6W;
+    
+    CommandPerfclass(final CommandManager abb) {
+        this.field_8582_784J0u23Raeq18XvA5SN8FN2ZH0JK83Uc8ZiupIVRZeO2Bm4RzP1D1Xgwf6W = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        Minecraft.field_7277_2ap75bw7uWpJs9xa2VRa8p40l51ptv8B02tkt5OcOFM8BeYBB08G54gDjTCY = (int)arr[0];
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return Minecraft.field_7277_2ap75bw7uWpJs9xa2VRa8p40l51ptv8B02tkt5OcOFM8BeYBB08G54gDjTCY + "";
+    }
+    
+    @Override
+    public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+        return false;
+    }
+}
--- net/minecraft/src/MinecraftImpl.java
+++ net/minecraft/src/MinecraftImpl.java
@@ -12,6 +12,7 @@
 	public MinecraftImpl(Component var1, Canvas var2, MinecraftApplet var3, int var4, int var5, boolean var6, Frame var7) {
 		super(var1, var2, var3, var4, var5, var6);
 		this.mcFrame = var7;
+		field_7317_5Dn33cKLDp4ugCwpD8dAC0Qb0gK4WT4AEqJf0YUJc3Hq6EO32BfTsK678CKb = this;
 	}
 
 	public void displayUnexpectedThrowable(UnexpectedThrowable var1) {
--- /dev/null
+++ net/minecraft/src/HubWorldUnknownClass5.java
@@ -1,0 +1,25 @@
+package net.minecraft.src;
+
+public class HubWorldUnknownClass5 {
+	public static final int field_11020_45qw06H7q9aJJI31b7S7OZjhuZ553U7ENP8LDwK4Qn7xiCna5b80uqHgvQ32 = 0;
+	public static final int field_11023_5KxDyM7k4kcJRHEr96bsde80Dt6Hljh4j493A4tbRq5wa6J526beNv172R7h = 1;
+	public static final int field_11019_7428IZS3In0X71oA2783VCAlqVYJD98NPy4PD49DSJ6yfqVid72U4r24LUHh = 2;
+	public static final int field_11021_5qHbm20m5EuZ3025vcTG9wtv0N0kZWK856ApB6t7Xn969sKS66AF0I7c9kXh = 3;
+	public static final int field_11017_28CqyV8MkTL0NILicW3qE3gbG0Xl22h98dvz97F8GxQZ02T1PmB6ztls3c66 = 4;
+	public static final int field_11018_7XhY8ZJrEp0Tbei4VNVX9pJgNEQ7HXW3ujmIA7c8gn63L3uVv6jWBw5dh6SY = 5;
+	public static final int field_11016_41w45cYhbqtpafiK4b46ZlTz11r2AfKxTyv2eqQt458Bal704TQEn0P0hf1W = 16;
+	public static final int field_11022_2Mh05t4gdOuYF815vtJ09QetxMkBBz7C3t1E9647whM7Bo0k9Vx8tfe2p29j = 127;
+
+	public static int func_11015_4dD10Vjg8EXQlPqLn1740KeipDH3q81QpEc7eJ1kIDKnDkDuh78Z6nVgtW23(int var0) {
+		switch(var0) {
+		case 0:
+		case 1:
+			return var0 + 2;
+		case 2:
+		case 3:
+			return var0 - 2;
+		default:
+			return -1;
+		}
+	}
+}
--- net/minecraft/src/RenderPlayer.java
+++ net/minecraft/src/RenderPlayer.java
@@ -6,7 +6,8 @@
 	private ModelBiped modelBipedMain = (ModelBiped)this.mainModel;
 	private ModelBiped modelArmorChestplate = new ModelBiped(1.0F);
 	private ModelBiped modelArmor = new ModelBiped(0.5F);
-	private static final String[] armorFilenamePrefix = new String[]{"cloth", "chain", "iron", "diamond", "gold"};
+	private static final String[] armorFilenamePrefix = new String[]{"cloth", "chain", "iron", "diamond", "gold", "obsidian", "fashion", "stylish"};
+	public ImageHolder SPPlayerTexture = null;
 
 	public RenderPlayer() {
 		super(new ModelBiped(0.0F), 0.5F);
@@ -35,59 +36,84 @@
 		return false;
 	}
 
+	public float getLimbSwing(EntityLiving var1, float var2) {
+		float var3 = super.getLimbSwing(var1, var2);
+		if(var1.isInsideOfMaterial(Material.water)) {
+			var3 /= 4.0F;
+		}
+
+		return var3;
+	}
+
+	public float getLimbAnimMaxMovement(EntityLiving var1, float var2) {
+		float var3 = super.getLimbAnimMaxMovement(var1, var2);
+		if(var1.isInsideOfMaterial(Material.water)) {
+			var3 /= 3.0F;
+		}
+
+		return var3;
+	}
+
 	public void renderPlayer(EntityPlayer var1, double var2, double var4, double var6, float var8, float var9) {
 		ItemStack var10 = var1.inventory.getCurrentItem();
 		this.modelArmorChestplate.heldItemRight = this.modelArmor.heldItemRight = this.modelBipedMain.heldItemRight = var10 != null;
 		this.modelArmorChestplate.isSneak = this.modelArmor.isSneak = this.modelBipedMain.isSneak = var1.isSneaking();
-		super.doRenderLiving(var1, var2, var4 - (double)var1.yOffset, var6, var8, var9);
+		if(!var1.username.startsWith("\u0001")) {
+			super.doRenderLiving(var1, var2, var4 - (double)var1.yOffset, var6, var8, var9);
+		}
+
 		this.modelArmorChestplate.isSneak = this.modelArmor.isSneak = this.modelBipedMain.isSneak = false;
 		this.modelArmorChestplate.heldItemRight = this.modelArmor.heldItemRight = this.modelBipedMain.heldItemRight = false;
-		FontRenderer var11 = this.getFontRendererFromRenderManager();
-		float var12 = 1.6F;
-		float var13 = (float)(1.0D / 60.0D) * var12;
-		GL11.glPushMatrix();
-		GL11.glTranslatef((float)var2 + 0.0F, (float)var4 + 2.3F, (float)var6);
-		GL11.glNormal3f(0.0F, 1.0F, 0.0F);
-		GL11.glRotatef(-this.renderManager.playerViewY, 0.0F, 1.0F, 0.0F);
-		GL11.glRotatef(this.renderManager.playerViewX, 1.0F, 0.0F, 0.0F);
-		float var14 = var1.getDistanceToEntity(this.renderManager.player);
-		var13 = (float)((double)var13 * (Math.sqrt((double)var14) / 2.0D));
-		GL11.glScalef(-var13, -var13, var13);
-		String var15 = var1.username;
-		GL11.glDisable(GL11.GL_LIGHTING);
-		GL11.glDepthMask(false);
-		GL11.glDisable(GL11.GL_DEPTH_TEST);
-		GL11.glEnable(GL11.GL_BLEND);
-		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-		Tessellator var16 = Tessellator.instance;
-		GL11.glDisable(GL11.GL_TEXTURE_2D);
-		var16.startDrawingQuads();
-		int var17 = var11.getStringWidth(var15) / 2;
-		var16.setColorRGBA_F(0.0F, 0.0F, 0.0F, 0.25F);
-		var16.addVertex((double)(-var17 - 1), -1.0D, 0.0D);
-		var16.addVertex((double)(-var17 - 1), 8.0D, 0.0D);
-		var16.addVertex((double)(var17 + 1), 8.0D, 0.0D);
-		var16.addVertex((double)(var17 + 1), -1.0D, 0.0D);
-		var16.draw();
-		GL11.glEnable(GL11.GL_TEXTURE_2D);
-		var11.drawString(var15, -var11.getStringWidth(var15) / 2, 0, 553648127);
-		GL11.glEnable(GL11.GL_DEPTH_TEST);
-		GL11.glDepthMask(true);
-		var11.drawString(var15, -var11.getStringWidth(var15) / 2, 0, -1);
-		GL11.glEnable(GL11.GL_LIGHTING);
-		GL11.glDisable(GL11.GL_BLEND);
-		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		GL11.glPopMatrix();
+		this.modelBipedMain.inWater = this.modelArmor.inWater = this.modelArmorChestplate.inWater = var1.isInsideOfMaterial(Material.water) || var1.lastInWater;
+		if(!var1.username.startsWith("\u0002")) {
+			FontRenderer var11 = this.getFontRendererFromRenderManager();
+			float var12 = 1.6F;
+			float var13 = (float)(1.0D / 60.0D) * var12;
+			GL11.glPushMatrix();
+			GL11.glTranslatef((float)var2 + 0.0F, (float)var4 + 2.3F, (float)var6);
+			GL11.glNormal3f(0.0F, 1.0F, 0.0F);
+			GL11.glRotatef(-this.renderManager.playerViewY, 0.0F, 1.0F, 0.0F);
+			GL11.glRotatef(this.renderManager.playerViewX, 1.0F, 0.0F, 0.0F);
+			float var14 = var1.getDistanceToEntity(this.renderManager.player);
+			var13 = (float)((double)var13 * (Math.sqrt((double)var14) / 2.0D));
+			GL11.glScalef(-var13, -var13, var13);
+			String var15 = var1.username;
+			GL11.glDisable(GL11.GL_LIGHTING);
+			GL11.glDepthMask(false);
+			GL11.glDisable(GL11.GL_DEPTH_TEST);
+			GL11.glEnable(GL11.GL_BLEND);
+			GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
+			Tessellator var16 = Tessellator.instance;
+			GL11.glDisable(GL11.GL_TEXTURE_2D);
+			var16.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			int var17 = var11.getStringWidth(var15) / 2;
+			var16.setColorRGBA_F(0.0F, 0.0F, 0.0F, 0.25F);
+			var16.addVertex((double)(-var17 - 1), -1.0D, 0.0D);
+			var16.addVertex((double)(-var17 - 1), 8.0D, 0.0D);
+			var16.addVertex((double)(var17 + 1), 8.0D, 0.0D);
+			var16.addVertex((double)(var17 + 1), -1.0D, 0.0D);
+			var16.draw();
+			GL11.glEnable(GL11.GL_TEXTURE_2D);
+			var11.drawString(var15, -var11.getStringWidth(var15) / 2, 0, 553648127);
+			GL11.glEnable(GL11.GL_DEPTH_TEST);
+			GL11.glDepthMask(true);
+			var11.drawString(var15, -var11.getStringWidth(var15) / 2, 0, -1);
+			GL11.glEnable(GL11.GL_LIGHTING);
+			GL11.glDisable(GL11.GL_BLEND);
+			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+			GL11.glPopMatrix();
+		}
+
 	}
 
 	protected void renderSpecials(EntityPlayer var1, float var2) {
 		ItemStack var3 = var1.inventory.getCurrentItem();
 		if(var3 != null) {
 			GL11.glPushMatrix();
-			this.modelBipedMain.bipedRightArm.renderWithRotation(1.0F / 16.0F);
-			GL11.glTranslatef(-(1.0F / 16.0F), 7.0F / 16.0F, 1.0F / 16.0F);
+			this.modelBipedMain.bipedRightArm.renderWithRotation(1.0F / 16.0F, true);
+			GL11.glTranslatef(this.modelBipedMain.field_9257_0KUtgLX9srVUt26M4Sr4d7tQWC7591F5ufdCW0N24HOCJRBfNMJmqGBkyn5V ? 0.0F : -(1.0F / 16.0F), 7.0F / 16.0F, 1.0F / 16.0F);
 			float var4;
-			if(var3.itemID < 256 && RenderBlocks.renderItemIn3d(Block.blocksList[var3.itemID].getRenderType())) {
+			if(var3.itemID < Short.MAX_VALUE && RenderBlocks.renderItemIn3d(Block.blocksList[var3.itemID].getRenderType())) {
 				var4 = 0.5F;
 				GL11.glTranslatef(0.0F, 3.0F / 16.0F, -(5.0F / 16.0F));
 				var4 *= 12.0F / 16.0F;
@@ -121,9 +147,14 @@
 	}
 
 	public void drawFirstPersonHand() {
+		if(this.SPPlayerTexture != null) {
+			this.modelBipedMain.setSlimModel(this.SPPlayerTexture.slimTypePlayer);
+		}
+
 		this.modelBipedMain.swingProgress = 0.0F;
 		this.modelBipedMain.setRotationAngles(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F / 16.0F);
 		this.modelBipedMain.bipedRightArm.render(1.0F / 16.0F);
+		this.modelBipedMain.bipedRightArmS.render(1.0F / 16.0F);
 	}
 
 	protected void preRenderCallback(EntityLiving var1, float var2) {
@@ -138,11 +169,36 @@
 		this.renderSpecials((EntityPlayer)var1, var2);
 	}
 
+	public void ApplyRotations(EntityLiving var1) {
+		if(!(var1 instanceof EntityShadowPlayer)) {
+			EntityPlayer var2 = (EntityPlayer)var1;
+			if(var2.isInsideOfMaterial(Material.water)) {
+				GL11.glRotatef(90.0F, -1.0F, 0.0F, 0.0F);
+				float var3 = 1.0F - Math.abs(var1.rotationPitch) / 90.0F;
+				float var4 = var1.rotationPitch / 90.0F;
+				var3 *= var3 * var3;
+				GL11.glTranslatef(0.0F, -1.7F * var3, 0.5F + var4);
+				if(!var1.onGround) {
+					GL11.glRotatef(var1.rotationPitch, -1.0F, 0.0F, 0.0F);
+				}
+			}
+		}
+
+	}
+
 	public void doRenderLiving(EntityLiving var1, double var2, double var4, double var6, float var8, float var9) {
+		if(((EntityPlayer)var1).playerSkin != null) {
+			this.modelBipedMain.setSlimModel(((EntityPlayer)var1).playerSkin.slimTypePlayer);
+		}
+
 		this.renderPlayer((EntityPlayer)var1, var2, var4, var6, var8, var9);
 	}
 
 	public void doRender(Entity var1, double var2, double var4, double var6, float var8, float var9) {
+		if(((EntityPlayer)var1).playerSkin != null) {
+			this.modelBipedMain.setSlimModel(((EntityPlayer)var1).playerSkin.slimTypePlayer);
+		}
+
 		this.renderPlayer((EntityPlayer)var1, var2, var4, var6, var8, var9);
 	}
 }
--- /dev/null
+++ net/minecraft/src/CommandBind.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandBind extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8581_9gqzkEhAB2dcAf6gdH7u41bV9ONu62H3aRMr5QQg529C9R6Tuob6Q15QUILw;
+    
+    CommandBind(final CommandManager abb) {
+        this.field_8581_9gqzkEhAB2dcAf6gdH7u41bV9ONu62H3aRMr5QQg529C9R6Tuob6Q15QUILw = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        this.field_8581_9gqzkEhAB2dcAf6gdH7u41bV9ONu62H3aRMr5QQg529C9R6Tuob6Q15QUILw.field_12072_57Pslv03tR1GVO6rfR7Myg6SJ9Dfi77KWF699D8Zy703Dh2cM61HfFA0VmYd.put((int)arr[0], (String) arr[1]);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- net/minecraft/src/EntityCreeper.java
+++ net/minecraft/src/EntityCreeper.java
@@ -77,4 +77,8 @@
 	protected int getDropItemId() {
 		return Item.gunpowder.shiftedIndex;
 	}
+
+	public int getEssenceDroppedOnKill() {
+		return 10 + this.rand.nextInt(8);
+	}
 }
--- net/minecraft/src/EntityMob.java
+++ net/minecraft/src/EntityMob.java
@@ -19,7 +19,7 @@
 
 	public void onUpdate() {
 		super.onUpdate();
-		if(this.worldObj.difficultySetting == 0) {
+		if(this.worldObj.difficultySetting == 0 && !(this.worldObj instanceof ZMWorld)) {
 			this.setEntityDead();
 		}
 
@@ -76,5 +76,18 @@
 			int var4 = this.worldObj.getBlockLightValue(var1, var2, var3);
 			return var4 <= this.rand.nextInt(8) && super.getCanSpawnHere();
 		}
+	}
+
+	public void onDeath(Entity var1) {
+		super.onDeath(var1);
+		int var2 = this.getEssenceDroppedOnKill();
+		if(var2 > 0) {
+			this.dropItem(ExtItems.essence.shiftedIndex, var2);
+		}
+
+	}
+
+	public int getEssenceDroppedOnKill() {
+		return 1;
 	}
 }
--- net/minecraft/src/BlockFlower.java
+++ net/minecraft/src/BlockFlower.java
@@ -3,7 +3,7 @@
 import java.util.Random;
 
 public class BlockFlower extends Block {
-	protected BlockFlower(int var1, int var2) {
+	public BlockFlower(int var1, int var2) {
 		super(var1, Material.plants);
 		this.blockIndexInTexture = var2;
 		this.setTickOnLoad(true);
--- /dev/null
+++ net/minecraft/src/WorldGenHouseBigUnknownClass.java
@@ -1,0 +1,15 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class WorldGenHouseBigUnknownClass implements IHouseBig {
+	public WorldGenHouseBigUnknownClass(Random var1) {
+	}
+
+	public float func_9883_913vTZx6no47397W6wG95Q5uB254nJBZ27osnW242XcA9M93Alb1ry5oPyVe() {
+		return 0.01F;
+	}
+
+	public void func_9884_61qP7q8deV5ospnX8sW5XUMxMcV5ssOU68863452kQ9H403L5ScR3DEa98qO(World var1, int var2, int var3, WorldGenHouseBigInterior var4) {
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandRRemodel.java
@@ -1,0 +1,23 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+
+class CommandRRemodel extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8558_6U4DvXsmr3RKtkV6zbR3uGQ2vxFuGXnd73HBHIz0187Mr6XB5dAYU8SLgC3r;
+    
+    CommandRRemodel(final CommandManager abb) {
+        this.field_8558_6U4DvXsmr3RKtkV6zbR3uGQ2vxFuGXnd73HBHIz0187Mr6XB5dAYU8SLgC3r = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.renderEngine.refreshTextures();
+        Minecraft.field_7326_55yB6jYtSi94r555184CYoXDQ1YhyBnoS1lJaCCAbdj3rDu1RNzU8Gp4C3g5 = true;
+        InputHandler.mc.field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo.func_11380_9r1511Jp0jE144f4MQc4NK82XBZn9UtKQ9T0m3371572UnC4jS4YM9eJUhB9();
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- net/minecraft/src/WorldGenTrees.java
+++ net/minecraft/src/WorldGenTrees.java
@@ -1,68 +1,92 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
+import java.util.Iterator;
 import java.util.Random;
+import net.minecraft.client.Minecraft;
 
 public class WorldGenTrees extends WorldGenerator {
-	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
-		int var6 = var2.nextInt(3) + 4;
-		boolean var7 = true;
-		if(var4 >= 1 && var4 + var6 + 1 <= 128) {
-			int var8;
-			int var10;
+	private Boolean generateEpicTrees = null;
+
+	public WorldGenTrees generateHighwoodTrees(boolean var1) {
+		this.generateEpicTrees = Boolean.valueOf(var1);
+		return this;
+	}
+
+	private boolean generateNormalTree(World var1, Random var2, int var3, int var4, int var5) {
+		int var6 = Block.wood.blockID;
+		int var7 = Block.leaves.blockID;
+		if(!Minecraft.field_7272_4vZ36FKx2I9PxzXyWH4290I55Q6yd6FI668q2Ylv62ISy2u1yh710qJ4Q0Yo && var2.nextInt(100) <= 5) {
+			var6 = ExtBlocks.FireSkyWood.blockID;
+			var7 = ExtBlocks.FireSkyLeaves.blockID;
+		}
+
+		int var8 = var2.nextInt(4) + 4;
+		int var9 = var2.nextInt(100);
+		if(!Minecraft.field_7272_4vZ36FKx2I9PxzXyWH4290I55Q6yd6FI668q2Ylv62ISy2u1yh710qJ4Q0Yo && var9 >= 6 && var9 <= 14) {
+			var6 = ExtBlocks.TeaWood.blockID;
+			var7 = ExtBlocks.TeaBush.blockID;
+			var8 = var2.nextInt(1) + 1;
+		}
+
+		boolean var10 = true;
+		if(var4 >= 1 && var4 + var8 + 1 <= 128) {
 			int var11;
 			int var12;
-			for(var8 = var4; var8 <= var4 + 1 + var6; ++var8) {
-				byte var9 = 1;
-				if(var8 == var4) {
-					var9 = 0;
-				}
-
-				if(var8 >= var4 + 1 + var6 - 2) {
-					var9 = 2;
-				}
-
-				for(var10 = var3 - var9; var10 <= var3 + var9 && var7; ++var10) {
-					for(var11 = var5 - var9; var11 <= var5 + var9 && var7; ++var11) {
-						if(var8 >= 0 && var8 < 128) {
-							var12 = var1.getBlockId(var10, var8, var11);
-							if(var12 != 0 && var12 != Block.leaves.blockID) {
-								var7 = false;
+			int var13;
+			int var14;
+			for(var11 = var4; var11 <= var4 + 1 + var8; ++var11) {
+				byte var15 = 1;
+				if(var11 == var4) {
+					var15 = 0;
+				}
+
+				if(var11 >= var4 + 1 + var8 - 2) {
+					var15 = 2;
+				}
+
+				for(var12 = var3 - var15; var12 <= var3 + var15 && var10; ++var12) {
+					for(var13 = var5 - var15; var13 <= var5 + var15 && var10; ++var13) {
+						if(var11 >= 0 && var11 < 128) {
+							var14 = var1.getBlockId(var12, var11, var13);
+							if(var14 != 0 && var14 != var7) {
+								var10 = false;
 							}
 						} else {
-							var7 = false;
+							var10 = false;
 						}
 					}
 				}
 			}
 
-			if(!var7) {
+			if(!var10) {
 				return false;
 			} else {
-				var8 = var1.getBlockId(var3, var4 - 1, var5);
-				if((var8 == Block.grass.blockID || var8 == Block.dirt.blockID) && var4 < 128 - var6 - 1) {
+				var11 = var1.getBlockId(var3, var4 - 1, var5);
+				if((var11 == Block.grass.blockID || var11 == Block.dirt.blockID) && var4 < 128 - var8 - 1) {
 					var1.setBlock(var3, var4 - 1, var5, Block.dirt.blockID);
 
-					int var16;
-					for(var16 = var4 - 3 + var6; var16 <= var4 + var6; ++var16) {
-						var10 = var16 - (var4 + var6);
-						var11 = 1 - var10 / 2;
-
-						for(var12 = var3 - var11; var12 <= var3 + var11; ++var12) {
-							int var13 = var12 - var3;
-
-							for(int var14 = var5 - var11; var14 <= var5 + var11; ++var14) {
-								int var15 = var14 - var5;
-								if((Math.abs(var13) != var11 || Math.abs(var15) != var11 || var2.nextInt(2) != 0 && var10 != 0) && !Block.opaqueCubeLookup[var1.getBlockId(var12, var16, var14)]) {
-									var1.setBlock(var12, var16, var14, Block.leaves.blockID);
+					int var19;
+					for(var19 = var4 - 3 + var8; var19 <= var4 + var8; ++var19) {
+						var12 = var19 - (var4 + var8);
+						var13 = 1 - var12 / 2;
+
+						for(var14 = var3 - var13; var14 <= var3 + var13; ++var14) {
+							int var16 = var14 - var3;
+
+							for(int var17 = var5 - var13; var17 <= var5 + var13; ++var17) {
+								int var18 = var17 - var5;
+								if((Math.abs(var16) != var13 || Math.abs(var18) != var13 || var2.nextInt(2) != 0 && var12 != 0) && !Block.opaqueCubeLookup[var1.getBlockId(var14, var19, var17)]) {
+									var1.setBlock(var14, var19, var17, var7);
 								}
 							}
 						}
 					}
 
-					for(var16 = 0; var16 < var6; ++var16) {
-						var10 = var1.getBlockId(var3, var4 + var16, var5);
-						if(var10 == 0 || var10 == Block.leaves.blockID) {
-							var1.setBlock(var3, var4 + var16, var5, Block.wood.blockID);
+					for(var19 = 0; var19 < var8; ++var19) {
+						var12 = var1.getBlockId(var3, var4 + var19, var5);
+						if(var12 == 0 || var12 == var7) {
+							var1.setBlock(var3, var4 + var19, var5, var6);
 						}
 					}
 
@@ -74,5 +98,134 @@
 		} else {
 			return false;
 		}
+	}
+
+	private void generateDeEpicTreeFoliage(World var1, Random var2, int var3, int var4, int var5) {
+		int var6 = ExtBlocks.AncientWood.blockID;
+		int var7 = ExtBlocks.AncientLeaves.blockID;
+		float var8 = 0.0F;
+		float var9 = var2.nextFloat() * (float)Math.PI * 2.0F;
+		int var10 = var2.nextInt(8) + 7;
+		float var11 = (float)var4;
+
+		float var13;
+		for(int var12 = 0; var12 < var10; ++var12) {
+			var9 = (float)((double)var9 + ((double)var2.nextFloat() - 0.5D) * 0.1D);
+			++var8;
+			var13 = var8 / (float)var10;
+			var3 = (int)((float)var3 + MathHelper.cos(var9) * (1.0F - var13));
+			var11 += var13;
+			var5 = (int)((float)var5 + MathHelper.sin(var9) * (1.0F - var13));
+			var4 = Math.round(var11);
+			var1.setBlock(var3, var4, var5, var6);
+		}
+
+		var4 += var2.nextInt(2) + 1;
+		int var15 = var2.nextInt(2) + 2;
+
+		for(int var16 = 0; var16 < var15; ++var16) {
+			var1.setBlock(var3, var4, var5, var7);
+
+			for(float var17 = 0.0F; (double)var17 < Math.PI * 2.0D; var17 = (float)((double)var17 + Math.PI * 0.2D)) {
+				int var18 = var2.nextInt(var16 + 2) + var16 + 2;
+				float var19 = (float)var3;
+				var13 = (float)var5;
+
+				for(int var14 = 0; var14 < var18; ++var14) {
+					var13 += MathHelper.sin(var17);
+					var19 += MathHelper.cos(var17);
+					if(!var1.getBlockMaterial(Math.round(var19), var4 - var16, Math.round(var13)).getIsSolid()) {
+						var1.setBlock(Math.round(var19), var4 - var16, Math.round(var13), var7);
+					}
+				}
+			}
+		}
+
+	}
+
+	private void generateDeEpicRoots(World var1, Random var2, int var3, int var4, int var5) {
+		int var6 = ExtBlocks.AncientRoots.blockID;
+		int var7 = var2.nextInt(3);
+
+		for(int var8 = 0; var8 < var7; ++var8) {
+			int var9 = var2.nextInt(4) + 2;
+			int var10 = var3;
+			int var11 = var4;
+			int var12 = var5;
+
+			for(int var13 = 0; var13 < var9; ++var13) {
+				var10 += var2.nextInt(3) - 1;
+				--var11;
+				var12 += var2.nextInt(3) - 1;
+				if(var1.getBlockId(var10, var11, var12) != Block.bedrock.blockID) {
+					var1.setBlock(var10, var11, var12, var6);
+				}
+			}
+		}
+
+	}
+
+	private boolean generateDeEpicTree(World var1, Random var2, int var3, int var4, int var5) {
+		int var6 = ExtBlocks.AncientWood.blockID;
+		int var7 = ExtBlocks.AncientLeaves.blockID;
+		if(var1.getBlockId(var3, var4 - 1, var5) != Block.grass.blockID && var1.getBlockId(var3, var4 - 1, var5) != Block.dirt.blockID) {
+			return true;
+		} else {
+			Random var8 = new Random(var2.nextLong() + (long)var3 + (long)var4 + (long)var5 + var1.randomSeed);
+			ArrayList var9 = new ArrayList();
+			int var10 = 7 + var8.nextInt(10);
+			var9.add(Vec3D.createVector((double)var3, (double)(var4 + var10), (double)var5));
+
+			label71:
+			for(int var11 = 0; var9.size() > 0; ++var11) {
+				Iterator var12 = (new ArrayList(var9)).iterator();
+
+				while(true) {
+					while(true) {
+						if(!var12.hasNext()) {
+							continue label71;
+						}
+
+						Vec3D var13 = (Vec3D)var12.next();
+						int var14 = (int)Math.round(var13.xCoord);
+						int var15 = (int)Math.round(var13.yCoord);
+						int var16 = (int)Math.round(var13.zCoord);
+						if((!var1.getBlockMaterial(var14, var15, var16).getIsSolid() || var1.getBlockId(var14, var15, var16) != var7) && var15 >= 0 && (var8.nextInt(3) != 0 || var9.size() <= 3)) {
+							var1.setBlock(var14, var15, var16, var6);
+							int var17 = 0;
+
+							while(var8.nextInt(var9.size() / 30 + 2) <= 1 && var9.size() <= 10000) {
+								++var17;
+								if(var17 >= 4) {
+									break;
+								}
+
+								Vec3D var18 = var13.addVector((double)(var8.nextInt(3) - 1), -1.0D, (double)(var8.nextInt(3) - 1));
+								var9.add(var18);
+							}
+
+							if(var11 > 2 && var8.nextInt(Math.max(40, 78 - var11)) == 3) {
+								this.generateDeEpicTreeFoliage(var1, var2, var14, var15, var16);
+							}
+
+							var9.remove(var13);
+							var9.add(var13.addVector(0.0D, -1.0D, 0.0D));
+						} else {
+							var9.remove(var13);
+							if(var1.getBlockId(var14, var15, var16) == Block.dirt.blockID || var1.getBlockId(var14, var15, var16) == Block.grass.blockID) {
+								this.generateDeEpicRoots(var1, var8, var14, var15, var16);
+							}
+						}
+					}
+				}
+			}
+
+			return true;
+		}
+	}
+
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		Random var6 = new Random(var2.nextLong() + (long)var3 + (long)var4 + (long)var5 + var1.randomSeed);
+		return Minecraft.field_7272_4vZ36FKx2I9PxzXyWH4290I55Q6yd6FI668q2Ylv62ISy2u1yh710qJ4Q0Yo || this.generateEpicTrees == null || var6.nextInt(150) != 0 && !this.generateEpicTrees.booleanValue() ? this.generateNormalTree(var1, var2, var3, var4, var5) : this.generateDeEpicTree(var1, var2, var3, var4, var5);
 	}
 }
--- /dev/null
+++ net/minecraft/src/ItemTheOneTrueBook.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+public class ItemTheOneTrueBook extends Item {
+	private int field_9430_0n7196x8m1y97nNMMbMa9sx0c2q2aknEmhr0udy0BRp7AUb0eN1sq72Npp42 = 805;
+
+	public ItemTheOneTrueBook(int var1) {
+		super(var1);
+		this.maxStackSize = 1;
+	}
+
+	public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+		var2.playSoundAtEntity(var3, "ext.notif", 1.0F, 1.0F / (rand.nextFloat() * 0.4F + 0.8F));
+		GuiInGameUnknownClass2 var4 = (GuiInGameUnknownClass2)InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.field_11177_7Zksb7i503i87T27QXh6g1K1pS0mrm03cH6J60Ws3B3hciqhuD9PIOw861xp.peek();
+		if(var4 == null || var4.field_8627_0ZmECs21Yya5NZUsnBNbB5tPFhkwONMzlzVXHX4jsV5aynDc020B97BLqocx != this.field_9430_0n7196x8m1y97nNMMbMa9sx0c2q2aknEmhr0udy0BRp7AUb0eN1sq72Npp42) {
+			InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11171_604vK63ksNcNlyaekc36K9YTmY8326K6noo7h77989I2TsYQ61KM5M25Nii9("The One True Book \nIn the end, this world was for you, and when you shall turn away\nIt will remember. Its past. Your present.\nAnd both will rest, knowing that they will inspire each other\n carrying pieces further forth.\nSo that all shall be well, and all matter of thing shall be well, in the end.\nAgainst all odds, just you wait. ", 20000, this.field_9430_0n7196x8m1y97nNMMbMa9sx0c2q2aknEmhr0udy0BRp7AUb0eN1sq72Npp42);
+		}
+
+		return var1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/VisualsLettering.java
@@ -1,0 +1,38 @@
+package net.minecraft.src;
+
+class VisualsLettering extends Visuals {
+    final /* synthetic */ VisualsManager field_10083_40f1ED9uMxNlE9cpLK62yg10BVCX13juZ6RaN653A5ev5Ct01573O1pb276z;
+    
+    VisualsLettering(final VisualsManager la) {
+        this.field_10083_40f1ED9uMxNlE9cpLK62yg10BVCX13juZ6RaN653A5ev5Ct01573O1pb276z = la;
+    }
+    
+    @Override
+    public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+        return "/unl/375305cc-f415-435b-baec-26a60ccf5eac.xAL";
+    }
+    
+    @Override
+    public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(final Object... arr) {
+        if (arr[0] instanceof WorldZMSpawnWorld1 && (int)arr[1] == 6) {
+            this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+            return true;
+        }
+        return false;
+    }
+    
+    @Override
+    public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+        return "unlock--lettering";
+    }
+    
+    @Override
+    public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+        return "Lettering";
+    }
+    
+    @Override
+    public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+        return "Complete the Easter Egg on [ZM]Ruinen der Untoten";
+    }
+}
--- /dev/null
+++ net/minecraft/src/CommandMcWinterlevel.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandMcWinterlevel extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8592_477TiBuIqF1lcN9xIj9UGYaDT7v0o1qA2ABOc5SK4HYwL25sjHfTd813nwS1;
+    
+    CommandMcWinterlevel(final CommandManager abb) {
+        this.field_8592_477TiBuIqF1lcN9xIj9UGYaDT7v0o1qA2ABOc5SK4HYwL25sjHfTd813nwS1 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.theWorld.snowCovered = ((int)arr[0] == 1);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return InputHandler.mc.theWorld.snowCovered ? "1" : "0";
+    }
+}
--- net/minecraft/src/ItemDoor.java
+++ net/minecraft/src/ItemDoor.java
@@ -2,9 +2,16 @@
 
 public class ItemDoor extends Item {
 	private Material material;
+	private BlockDoor target;
+
+	public ItemDoor(int var1, Material var2, BlockDoor var3) {
+		this(var1, var2);
+		this.target = var3;
+	}
 
 	public ItemDoor(int var1, Material var2) {
 		super(var1);
+		this.target = null;
 		this.material = var2;
 		this.maxDamage = 64;
 		this.maxStackSize = 1;
@@ -15,14 +22,16 @@
 			return false;
 		} else {
 			++var5;
-			Block var8;
-			if(this.material == Material.wood) {
-				var8 = Block.doorWood;
-			} else {
-				var8 = Block.doorSteel;
+			Object var8 = this.target;
+			if(var8 == null) {
+				if(this.material == Material.wood) {
+					var8 = Block.doorWood;
+				} else {
+					var8 = Block.doorSteel;
+				}
 			}
 
-			if(!var8.canPlaceBlockAt(var3, var4, var5, var6)) {
+			if(!((Block)var8).canPlaceBlockAt(var3, var4, var5, var6)) {
 				return false;
 			} else {
 				int var9 = MathHelper.floor_double((double)((var2.rotationYaw + 180.0F) * 4.0F / 360.0F) - 0.5D) & 3;
@@ -46,8 +55,8 @@
 
 				int var12 = (var3.isBlockNormalCube(var4 - var10, var5, var6 - var11) ? 1 : 0) + (var3.isBlockNormalCube(var4 - var10, var5 + 1, var6 - var11) ? 1 : 0);
 				int var13 = (var3.isBlockNormalCube(var4 + var10, var5, var6 + var11) ? 1 : 0) + (var3.isBlockNormalCube(var4 + var10, var5 + 1, var6 + var11) ? 1 : 0);
-				boolean var14 = var3.getBlockId(var4 - var10, var5, var6 - var11) == var8.blockID || var3.getBlockId(var4 - var10, var5 + 1, var6 - var11) == var8.blockID;
-				boolean var15 = var3.getBlockId(var4 + var10, var5, var6 + var11) == var8.blockID || var3.getBlockId(var4 + var10, var5 + 1, var6 + var11) == var8.blockID;
+				boolean var14 = var3.getBlockId(var4 - var10, var5, var6 - var11) == ((Block)var8).blockID || var3.getBlockId(var4 - var10, var5 + 1, var6 - var11) == ((Block)var8).blockID;
+				boolean var15 = var3.getBlockId(var4 + var10, var5, var6 + var11) == ((Block)var8).blockID || var3.getBlockId(var4 + var10, var5 + 1, var6 + var11) == ((Block)var8).blockID;
 				boolean var16 = false;
 				if(var14 && !var15) {
 					var16 = true;
@@ -60,9 +69,9 @@
 					var9 += 4;
 				}
 
-				var3.setBlockWithNotify(var4, var5, var6, var8.blockID);
+				var3.setBlockWithNotify(var4, var5, var6, ((Block)var8).blockID);
 				var3.setBlockMetadataWithNotify(var4, var5, var6, var9);
-				var3.setBlockWithNotify(var4, var5 + 1, var6, var8.blockID);
+				var3.setBlockWithNotify(var4, var5 + 1, var6, ((Block)var8).blockID);
 				var3.setBlockMetadataWithNotify(var4, var5 + 1, var6, var9 + 8);
 				--var1.stackSize;
 				return true;
--- net/minecraft/src/RenderMinecart.java
+++ net/minecraft/src/RenderMinecart.java
@@ -54,7 +54,7 @@
 		}
 
 		if(var1.minecartType != 0) {
-			this.loadTexture("/terrain.png");
+			this.loadTexture(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9796_62Ccm2XAR6JqSDTgV762x61j971DNgsIrMhaXZxPs0fQnBC7ymR2l1v1V22X));
 			float var25 = 12.0F / 16.0F;
 			GL11.glScalef(var25, var25, var25);
 			GL11.glTranslatef(0.0F, 5.0F / 16.0F, 0.0F);
--- /dev/null
+++ net/minecraft/src/GenOnWater.java
@@ -1,0 +1,26 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class GenOnWater extends WorldGenerator {
+	private int a;
+
+	public GenOnWater(int var1) {
+		this.a = var1;
+	}
+
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		for(int var6 = 0; var6 < 64; ++var6) {
+			int var7 = var5 + var2.nextInt(8) - var2.nextInt(8);
+			int var8 = var4 + var2.nextInt(4) - var2.nextInt(4);
+			int var9 = var3 + var2.nextInt(8) - var2.nextInt(8);
+			int var10 = var1.getBlockId(var9, var8 - 1, var7);
+			boolean var11 = var10 == 9 || var10 == 79;
+			if(var1.getBlockId(var9, var8, var7) == 0 && var11) {
+				var1.setBlock(var9, var8, var7, this.a);
+			}
+		}
+
+		return true;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BiomeUnknownClass3.java
@@ -1,0 +1,32 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BiomeUnknownClass3 implements BiomeInterface {
+	private final NoiseGeneratorOctaves[] field_10192_2VoR9snJDCkHbGRi5LT2To3wWU3R7xk8Oe4T0w92ra69S51HZ0RXUsE7098O;
+	private final NoiseGeneratorOctaves[] field_10193_4hx74qcm6424qX4DgsPbi180SpoqO3zJ95I5N9sgysDE2s6N1m674oTeTHM2;
+	private final Random field_10191_4f75GwDL0VFE8Vc129gmDF7ihJY56448qA8rP8quzgMHYB6Ke6amqqxgP54C;
+
+	public BiomeUnknownClass3(Random var1) {
+		this.field_10192_2VoR9snJDCkHbGRi5LT2To3wWU3R7xk8Oe4T0w92ra69S51HZ0RXUsE7098O = new NoiseGeneratorOctaves[]{new NoiseGeneratorOctaves(var1, 4), new NoiseGeneratorOctaves(var1, 4), new NoiseGeneratorOctaves(var1, 4)};
+		this.field_10193_4hx74qcm6424qX4DgsPbi180SpoqO3zJ95I5N9sgysDE2s6N1m674oTeTHM2 = new NoiseGeneratorOctaves[]{new NoiseGeneratorOctaves(var1, 4), new NoiseGeneratorOctaves(var1, 4), new NoiseGeneratorOctaves(var1, 4)};
+		this.field_10191_4f75GwDL0VFE8Vc129gmDF7ihJY56448qA8rP8quzgMHYB6Ke6amqqxgP54C = var1;
+	}
+
+	public BiomeUnknownClass3 func_10190_9hA9hGtqVhzjB1mqm8q4p5FR00Mv2wW72R61Kce04yYaa19rm57UsiH9mAq0() {
+		WorldGenMyconUnknownClass.func_9979_9JNUbhbk292KcCQ94Cqr7mT8uN1dJGymij9j6488Z69GSfe4353u9Nj2PWn2(this.field_10191_4f75GwDL0VFE8Vc129gmDF7ihJY56448qA8rP8quzgMHYB6Ke6amqqxgP54C);
+		return this;
+	}
+
+	public double func_10184_39mJVmq3bl4dbH51995p9tocRB43bFXruO32GkxVTy54fzIxdy5dt9OeTC2A(int var1, int var2, EnumWorldGenerator var3) {
+		return this.field_10192_2VoR9snJDCkHbGRi5LT2To3wWU3R7xk8Oe4T0w92ra69S51HZ0RXUsE7098O[var3.ordinal()].generateNoiseOctaves((double)var1 / 32.0D, (double)var2 / 32.0D);
+	}
+
+	public double func_10186_4hoZRS129yUan88AHp1ksCfja1h93mYKfFda82Qtd8pqKm7G4bgpnYsijiMu(int var1, int var2, EnumWorldGenerator var3) {
+		return this.field_10193_4hx74qcm6424qX4DgsPbi180SpoqO3zJ95I5N9sgysDE2s6N1m674oTeTHM2[var3.ordinal()].generateNoiseOctaves((double)var1 / 32.0D, (double)var2 / 32.0D);
+	}
+
+	public WorldGenMyconUnknownClass func_10185_7j1lR4019pucW00n7wn38afjBd62vEMB6B6SVB9068f4kyPzw4E6wI65ufr8(int var1, int var2, EnumWorldGenerator var3) {
+		return WorldGenMyconUnknownClass.func_9978_2dCM22Pc7rV0IQo46JM3ja84x9AHCGNPeSCDVFoTi3969B8hv2sM7nr6o61r(this.func_10184_39mJVmq3bl4dbH51995p9tocRB43bFXruO32GkxVTy54fzIxdy5dt9OeTC2A(var1, var2, var3), this.func_10186_4hoZRS129yUan88AHp1ksCfja1h93mYKfFda82Qtd8pqKm7G4bgpnYsijiMu(var1, var2, var3), var3);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockStairsOld.java
@@ -1,0 +1,251 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.Random;
+
+public class BlockStairsOld extends BlockOld {
+	private BlockOld modelBlock;
+
+	protected BlockStairsOld(int var1, BlockOld var2) {
+		super(var1, var2.blockIndexInTexture, var2.material);
+		this.modelBlock = var2;
+		this.setHardness(var2.hardness);
+		this.setResistance(var2.resistance / 3.0F);
+		this.setStepSound(var2.stepSound);
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 10;
+	}
+
+	public boolean shouldSideBeRendered(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		return super.shouldSideBeRendered(var1, var2, var3, var4, var5);
+	}
+
+	public void getCollidingBoundingBoxes(World var1, int var2, int var3, int var4, AxisAlignedBB var5, ArrayList var6) {
+		int var7 = var1.getBlockMetadata(var2, var3, var4);
+		if(var7 == 0) {
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 0.5F, 0.5F, 1.0F);
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
+			this.setBlockBounds(0.5F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
+		} else if(var7 == 1) {
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 0.5F, 1.0F, 1.0F);
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
+			this.setBlockBounds(0.5F, 0.0F, 0.0F, 1.0F, 0.5F, 1.0F);
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
+		} else if(var7 == 2) {
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.5F, 0.5F);
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
+			this.setBlockBounds(0.0F, 0.0F, 0.5F, 1.0F, 1.0F, 1.0F);
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
+		} else if(var7 == 3) {
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 0.5F);
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
+			this.setBlockBounds(0.0F, 0.0F, 0.5F, 1.0F, 0.5F, 1.0F);
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
+		}
+
+		this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		if(!var1.multiplayerWorld) {
+			if(var1.getBlockMaterial(var2, var3 + 1, var4).isSolid()) {
+				var1.setBlockWithNotify(var2, var3, var4, this.modelBlock.blockID);
+			} else {
+				this.updateState(var1, var2, var3, var4);
+				this.updateState(var1, var2 + 1, var3 - 1, var4);
+				this.updateState(var1, var2 - 1, var3 - 1, var4);
+				this.updateState(var1, var2, var3 - 1, var4 - 1);
+				this.updateState(var1, var2, var3 - 1, var4 + 1);
+				this.updateState(var1, var2 + 1, var3 + 1, var4);
+				this.updateState(var1, var2 - 1, var3 + 1, var4);
+				this.updateState(var1, var2, var3 + 1, var4 - 1);
+				this.updateState(var1, var2, var3 + 1, var4 + 1);
+			}
+
+			this.modelBlock.onNeighborBlockChange(var1, var2, var3, var4, var5);
+		}
+	}
+
+	private void updateState(World var1, int var2, int var3, int var4) {
+		if(this.isBlockStair(var1, var2, var3, var4)) {
+			byte var5 = -1;
+			if(this.isBlockStair(var1, var2 + 1, var3 + 1, var4)) {
+				var5 = 0;
+			}
+
+			if(this.isBlockStair(var1, var2 - 1, var3 + 1, var4)) {
+				var5 = 1;
+			}
+
+			if(this.isBlockStair(var1, var2, var3 + 1, var4 + 1)) {
+				var5 = 2;
+			}
+
+			if(this.isBlockStair(var1, var2, var3 + 1, var4 - 1)) {
+				var5 = 3;
+			}
+
+			if(var5 < 0) {
+				if(this.isBlockSolid(var1, var2 + 1, var3, var4) && !this.isBlockSolid(var1, var2 - 1, var3, var4)) {
+					var5 = 0;
+				}
+
+				if(this.isBlockSolid(var1, var2 - 1, var3, var4) && !this.isBlockSolid(var1, var2 + 1, var3, var4)) {
+					var5 = 1;
+				}
+
+				if(this.isBlockSolid(var1, var2, var3, var4 + 1) && !this.isBlockSolid(var1, var2, var3, var4 - 1)) {
+					var5 = 2;
+				}
+
+				if(this.isBlockSolid(var1, var2, var3, var4 - 1) && !this.isBlockSolid(var1, var2, var3, var4 + 1)) {
+					var5 = 3;
+				}
+			}
+
+			if(var5 < 0) {
+				if(this.isBlockStair(var1, var2 - 1, var3 - 1, var4)) {
+					var5 = 0;
+				}
+
+				if(this.isBlockStair(var1, var2 + 1, var3 - 1, var4)) {
+					var5 = 1;
+				}
+
+				if(this.isBlockStair(var1, var2, var3 - 1, var4 - 1)) {
+					var5 = 2;
+				}
+
+				if(this.isBlockStair(var1, var2, var3 - 1, var4 + 1)) {
+					var5 = 3;
+				}
+			}
+
+			if(var5 >= 0) {
+				var1.setBlockMetadataWithNotify(var2, var3, var4, var5);
+			}
+
+		}
+	}
+
+	private boolean isBlockSolid(World var1, int var2, int var3, int var4) {
+		return var1.getBlockMaterial(var2, var3, var4).isSolid();
+	}
+
+	private boolean isBlockStair(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockId(var2, var3, var4);
+		return var5 == 0 ? false : BlockOld.blocksList[var5].getRenderType() == 10;
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+		this.modelBlock.randomDisplayTick(var1, var2, var3, var4, var5);
+	}
+
+	public void onBlockClicked(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		this.modelBlock.onBlockClicked(var1, var2, var3, var4, var5);
+	}
+
+	public void onBlockDestroyedByPlayer(World var1, int var2, int var3, int var4, int var5) {
+		this.modelBlock.onBlockDestroyedByPlayer(var1, var2, var3, var4, var5);
+	}
+
+	public float getBlockBrightness(IBlockAccess var1, int var2, int var3, int var4) {
+		return this.modelBlock.getBlockBrightness(var1, var2, var3, var4);
+	}
+
+	public float getExplosionResistance(Entity var1) {
+		return this.modelBlock.getExplosionResistance(var1);
+	}
+
+	public int getRenderBlockPass() {
+		return this.modelBlock.getRenderBlockPass();
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return this.modelBlock.idDropped(var1, var2);
+	}
+
+	public int quantityDropped(Random var1) {
+		return this.modelBlock.quantityDropped(var1);
+	}
+
+	public int getBlockTextureFromSideAndMetadata(int var1, int var2) {
+		return this.modelBlock.getBlockTextureFromSideAndMetadata(var1, var2);
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return this.modelBlock.getBlockTextureFromSide(var1);
+	}
+
+	public int getBlockTexture(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		return this.modelBlock.getBlockTexture(var1, var2, var3, var4, var5);
+	}
+
+	public int tickRate() {
+		return this.modelBlock.tickRate();
+	}
+
+	public AxisAlignedBB getSelectedBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return this.modelBlock.getSelectedBoundingBoxFromPool(var1, var2, var3, var4);
+	}
+
+	public void velocityToAddToEntity(World var1, int var2, int var3, int var4, Entity var5, Vec3D var6) {
+		this.modelBlock.velocityToAddToEntity(var1, var2, var3, var4, var5, var6);
+	}
+
+	public boolean isCollidable() {
+		return this.modelBlock.isCollidable();
+	}
+
+	public boolean canCollideCheck(int var1, boolean var2) {
+		return this.modelBlock.canCollideCheck(var1, var2);
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return this.modelBlock.canPlaceBlockAt(var1, var2, var3, var4);
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		this.onNeighborBlockChange(var1, var2, var3, var4, 0);
+		this.modelBlock.onBlockAdded(var1, var2, var3, var4);
+	}
+
+	public void onBlockRemoval(World var1, int var2, int var3, int var4) {
+		this.modelBlock.onBlockRemoval(var1, var2, var3, var4);
+	}
+
+	public void dropBlockAsItemWithChance(World var1, int var2, int var3, int var4, int var5, float var6) {
+		this.modelBlock.dropBlockAsItemWithChance(var1, var2, var3, var4, var5, var6);
+	}
+
+	public void dropBlockAsItem(World var1, int var2, int var3, int var4, int var5) {
+		this.modelBlock.dropBlockAsItem(var1, var2, var3, var4, var5);
+	}
+
+	public void onEntityWalking(World var1, int var2, int var3, int var4, Entity var5) {
+		this.modelBlock.onEntityWalking(var1, var2, var3, var4, var5);
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		this.modelBlock.updateTick(var1, var2, var3, var4, var5);
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		return this.modelBlock.blockActivated(var1, var2, var3, var4, var5);
+	}
+
+	public void onBlockDestroyedByExplosion(World var1, int var2, int var3, int var4) {
+		this.modelBlock.onBlockDestroyedByExplosion(var1, var2, var3, var4);
+	}
+}
--- net/minecraft/src/GuiDownloadTerrain.java
+++ net/minecraft/src/GuiDownloadTerrain.java
@@ -31,7 +31,7 @@
 	}
 
 	public void drawScreen(int var1, int var2, float var3) {
-		this.drawBackground(0);
+		this.drawBackground(0.0F);
 		this.drawCenteredString(this.fontRenderer, "Downloading terrain", this.width / 2, this.height / 2 - 50, 16777215);
 		super.drawScreen(var1, var2, var3);
 	}
--- net/minecraft/src/TileEntitySignRenderer.java
+++ net/minecraft/src/TileEntitySignRenderer.java
@@ -9,29 +9,29 @@
 		Block var9 = var1.getBlockType();
 		GL11.glPushMatrix();
 		float var10 = 2.0F / 3.0F;
-		float var12;
+		float var11;
 		if(var9 == Block.signStanding) {
 			GL11.glTranslatef((float)var2 + 0.5F, (float)var4 + 12.0F / 16.0F * var10, (float)var6 + 0.5F);
-			float var11 = (float)(var1.getBlockMetadata() * 360) / 16.0F;
-			GL11.glRotatef(-var11, 0.0F, 1.0F, 0.0F);
+			float var12 = (float)(var1.getBlockMetadata() * 360) / 16.0F;
+			GL11.glRotatef(-var12, 0.0F, 1.0F, 0.0F);
 			this.modelSign.signStick.showModel = true;
 		} else {
 			int var16 = var1.getBlockMetadata();
-			var12 = 0.0F;
+			var11 = 0.0F;
 			if(var16 == 2) {
-				var12 = 180.0F;
+				var11 = 180.0F;
 			}
 
 			if(var16 == 4) {
-				var12 = 90.0F;
+				var11 = 90.0F;
 			}
 
 			if(var16 == 5) {
-				var12 = -90.0F;
+				var11 = -90.0F;
 			}
 
 			GL11.glTranslatef((float)var2 + 0.5F, (float)var4 + 12.0F / 16.0F * var10, (float)var6 + 0.5F);
-			GL11.glRotatef(-var12, 0.0F, 1.0F, 0.0F);
+			GL11.glRotatef(-var11, 0.0F, 1.0F, 0.0F);
 			GL11.glTranslatef(0.0F, -(5.0F / 16.0F), -(7.0F / 16.0F));
 			this.modelSign.signStick.showModel = false;
 		}
@@ -42,10 +42,10 @@
 		this.modelSign.renderSign();
 		GL11.glPopMatrix();
 		FontRenderer var17 = this.getFontRenderer();
-		var12 = (float)(1.0D / 60.0D) * var10;
+		var11 = (float)(1.0D / 60.0D) * var10;
 		GL11.glTranslatef(0.0F, 0.5F * var10, 0.07F * var10);
-		GL11.glScalef(var12, -var12, var12);
-		GL11.glNormal3f(0.0F, 0.0F, -1.0F * var12);
+		GL11.glScalef(var11, -var11, var11);
+		GL11.glNormal3f(0.0F, 0.0F, -1.0F * var11);
 		GL11.glDepthMask(false);
 		byte var13 = 0;
 
--- net/minecraft/src/RenderCreeper.java
+++ net/minecraft/src/RenderCreeper.java
@@ -8,41 +8,41 @@
 	}
 
 	protected void updateCreeperScale(EntityCreeper var1, float var2) {
-		float var4 = var1.getCreeperFlashTime(var2);
-		float var5 = 1.0F + MathHelper.sin(var4 * 100.0F) * var4 * 0.01F;
-		if(var4 < 0.0F) {
-			var4 = 0.0F;
-		}
-
-		if(var4 > 1.0F) {
-			var4 = 1.0F;
-		}
-
-		var4 *= var4;
-		var4 *= var4;
-		float var6 = (1.0F + var4 * 0.4F) * var5;
-		float var7 = (1.0F + var4 * 0.1F) / var5;
-		GL11.glScalef(var6, var7, var6);
+		float var3 = var1.getCreeperFlashTime(var2);
+		float var4 = 1.0F + MathHelper.sin(var3 * 100.0F) * var3 * 0.01F;
+		if(var3 < 0.0F) {
+			var3 = 0.0F;
+		}
+
+		if(var3 > 1.0F) {
+			var3 = 1.0F;
+		}
+
+		var3 *= var3;
+		var3 *= var3;
+		float var5 = (1.0F + var3 * 0.4F) * var4;
+		float var6 = (1.0F + var3 * 0.1F) / var4;
+		GL11.glScalef(var5, var6, var5);
 	}
 
 	protected int updateCreeperColorMultiplier(EntityCreeper var1, float var2, float var3) {
-		float var5 = var1.getCreeperFlashTime(var3);
-		if((int)(var5 * 10.0F) % 2 == 0) {
+		float var4 = var1.getCreeperFlashTime(var3);
+		if((int)(var4 * 10.0F) % 2 == 0) {
 			return 0;
 		} else {
-			int var6 = (int)(var5 * 0.2F * 255.0F);
-			if(var6 < 0) {
-				var6 = 0;
-			}
-
-			if(var6 > 255) {
-				var6 = 255;
-			}
-
+			int var5 = (int)(var4 * 0.2F * 255.0F);
+			if(var5 < 0) {
+				var5 = 0;
+			}
+
+			if(var5 > 255) {
+				var5 = 255;
+			}
+
+			short var6 = 255;
 			short var7 = 255;
 			short var8 = 255;
-			short var9 = 255;
-			return var6 << 24 | var7 << 16 | var8 << 8 | var9;
+			return var5 << 24 | var6 << 16 | var7 << 8 | var8;
 		}
 	}
 
--- net/minecraft/src/TileEntityFurnace.java
+++ net/minecraft/src/TileEntityFurnace.java
@@ -42,6 +42,10 @@
 
 	}
 
+	public void onInventoryChanged() {
+		super.onInventoryChanged();
+	}
+
 	public String getInvName() {
 		return "Chest";
 	}
@@ -168,12 +172,13 @@
 			if(this.furnaceItemStacks[0].stackSize <= 0) {
 				this.furnaceItemStacks[0] = null;
 			}
-
 		}
+
 	}
 
 	private int getCookedItem(int var1) {
-		return var1 == Block.oreIron.blockID ? Item.ingotIron.shiftedIndex : (var1 == Block.oreGold.blockID ? Item.ingotGold.shiftedIndex : (var1 == Block.oreDiamond.blockID ? Item.diamond.shiftedIndex : (var1 == Block.sand.blockID ? Block.glass.blockID : (var1 == Item.porkRaw.shiftedIndex ? Item.porkCooked.shiftedIndex : (var1 == Block.cobblestone.blockID ? Block.stone.blockID : (var1 == Item.clay.shiftedIndex ? Item.brick.shiftedIndex : -1))))));
+		int var2 = ExtCraftingRecipes.GetSmeltingRecipe(var1);
+		return var2 != -1 ? var2 : (var1 == Block.oreIron.blockID ? Item.ingotIron.shiftedIndex : (var1 == Block.oreGold.blockID ? Item.ingotGold.shiftedIndex : (var1 == Block.oreDiamond.blockID ? Item.diamond.shiftedIndex : (var1 == Block.sand.blockID ? Block.glass.blockID : (var1 == Item.porkRaw.shiftedIndex ? Item.porkCooked.shiftedIndex : (var1 == Block.cobblestone.blockID ? Block.stone.blockID : (var1 == Item.clay.shiftedIndex ? Item.brick.shiftedIndex : ModLoader.AddAllSmelting(var1))))))));
 	}
 
 	private int getItemBurnTime(ItemStack var1) {
@@ -181,7 +186,7 @@
 			return 0;
 		} else {
 			int var2 = var1.getItem().shiftedIndex;
-			return var2 < 256 && Block.blocksList[var2].material == Material.wood ? 300 : (var2 == Item.stick.shiftedIndex ? 100 : (var2 == Item.coal.shiftedIndex ? 1600 : (var2 == Item.bucketLava.shiftedIndex ? 20000 : 0)));
+			return var2 < Short.MAX_VALUE && Block.blocksList[var2].material == Material.wood ? 300 : (var2 == Item.stick.shiftedIndex ? 100 : (var2 == Item.coal.shiftedIndex ? 1600 : (var2 == Item.bucketLava.shiftedIndex ? 20000 : (var2 == ExtItems.essence.shiftedIndex ? 50 : (var2 == ExtBlocks.EssenceBlock.blockID ? 450 : ModLoader.AddAllFuel(var2))))));
 		}
 	}
 }
--- /dev/null
+++ net/minecraft/src/EntityEssenceProjectileUnknownClass.java
@@ -1,0 +1,16 @@
+package net.minecraft.src;
+
+public class EntityEssenceProjectileUnknownClass extends EntityEssenceProjectile {
+	public EntityEssenceProjectileUnknownClass(World var1, EntityLiving var2) {
+		super(var1, var2);
+	}
+
+	public void func_8873_6eY5d2OYeYZHd8IDe8f17E868eUf523yUKL1wb6yC0uPG7astDKYTonP19ir(double var1, double var3, double var5) {
+		(new Explosion()).func_11007_4ZrtJ8eBO5K7ZvbM8Gw126oo9J029QsI1l4qUTABn1j8Wtu9S1EVeBVuFfIl(this.worldObj, this, var1, var3, var5, 3.0F, false, 18);
+	}
+
+	public void func_8874_6Ebe0odbY2EUO3qmpxe10pDrkZf8fG40cvC3Vs9w81CDBi21RFeLS4xtOLXH(Entity var1) {
+		this.worldObj.playSoundAtEntity(this.shootingEntity, "ext.hitmarker", 1.0F, 1.0F / (this.rand.nextFloat() * 0.4F + 0.8F));
+		this.func_8873_6eY5d2OYeYZHd8IDe8f17E868eUf523yUKL1wb6yC0uPG7astDKYTonP19ir(var1.posX, var1.posY, var1.posZ);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockFluidOld.java
@@ -1,0 +1,275 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public abstract class BlockFluidOld extends BlockOld {
+	protected int fluidType = 1;
+
+	protected BlockFluidOld(int var1, Material var2) {
+		super(var1, (var2 == Material.lava ? 14 : 12) * 16 + 13, var2);
+		float var3 = 0.0F;
+		float var4 = 0.0F;
+		if(var2 == Material.lava) {
+			this.fluidType = 2;
+		}
+
+		this.setBlockBounds(0.0F + var4, 0.0F + var3, 0.0F + var4, 1.0F + var4, 1.0F + var3, 1.0F + var4);
+		this.setTickOnLoad(true);
+	}
+
+	public static float getFluidHeightPercent(int var0) {
+		if(var0 >= 8) {
+			var0 = 0;
+		}
+
+		float var1 = (float)(var0 + 1) / 9.0F;
+		return var1;
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 != 0 && var1 != 1 ? this.blockIndexInTexture + 1 : this.blockIndexInTexture;
+	}
+
+	protected int getFlowDecay(World var1, int var2, int var3, int var4) {
+		return var1.getBlockMaterial(var2, var3, var4) != this.material ? -1 : var1.getBlockMetadata(var2, var3, var4);
+	}
+
+	protected int getEffectiveFlowDecay(IBlockAccess var1, int var2, int var3, int var4) {
+		if(var1.getBlockMaterial(var2, var3, var4) != this.material) {
+			return -1;
+		} else {
+			int var5 = var1.getBlockMetadata(var2, var3, var4);
+			if(var5 >= 8) {
+				var5 = 0;
+			}
+
+			return var5;
+		}
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean canCollideCheck(int var1, boolean var2) {
+		return var2 && var1 == 0;
+	}
+
+	public boolean shouldSideBeRendered(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		Material var6 = var1.getBlockMaterial(var2, var3, var4);
+		return var6 == this.material ? false : (var6 == Material.ice ? false : (var5 == 1 ? true : super.shouldSideBeRendered(var1, var2, var3, var4, var5)));
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public int getRenderType() {
+		return 4;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return 0;
+	}
+
+	public int quantityDropped(Random var1) {
+		return 0;
+	}
+
+	private Vec3D getFlowVector(IBlockAccess var1, int var2, int var3, int var4) {
+		Vec3D var5 = Vec3D.createVector(0.0D, 0.0D, 0.0D);
+		int var6 = this.getEffectiveFlowDecay(var1, var2, var3, var4);
+
+		for(int var7 = 0; var7 < 4; ++var7) {
+			int var8 = var2;
+			int var10 = var4;
+			if(var7 == 0) {
+				var8 = var2 - 1;
+			}
+
+			if(var7 == 1) {
+				var10 = var4 - 1;
+			}
+
+			if(var7 == 2) {
+				++var8;
+			}
+
+			if(var7 == 3) {
+				++var10;
+			}
+
+			int var11 = this.getEffectiveFlowDecay(var1, var8, var3, var10);
+			int var12;
+			if(var11 < 0) {
+				if(!var1.getBlockMaterial(var8, var3, var10).getIsSolid()) {
+					var11 = this.getEffectiveFlowDecay(var1, var8, var3 - 1, var10);
+					if(var11 >= 0) {
+						var12 = var11 - (var6 - 8);
+						var5 = var5.addVector((double)((var8 - var2) * var12), (double)((var3 - var3) * var12), (double)((var10 - var4) * var12));
+					}
+				}
+			} else if(var11 >= 0) {
+				var12 = var11 - var6;
+				var5 = var5.addVector((double)((var8 - var2) * var12), (double)((var3 - var3) * var12), (double)((var10 - var4) * var12));
+			}
+		}
+
+		if(var1.getBlockMetadata(var2, var3, var4) >= 8) {
+			boolean var13 = false;
+			if(var13 || this.shouldSideBeRendered(var1, var2, var3, var4 - 1, 2)) {
+				var13 = true;
+			}
+
+			if(var13 || this.shouldSideBeRendered(var1, var2, var3, var4 + 1, 3)) {
+				var13 = true;
+			}
+
+			if(var13 || this.shouldSideBeRendered(var1, var2 - 1, var3, var4, 4)) {
+				var13 = true;
+			}
+
+			if(var13 || this.shouldSideBeRendered(var1, var2 + 1, var3, var4, 5)) {
+				var13 = true;
+			}
+
+			if(var13 || this.shouldSideBeRendered(var1, var2, var3 + 1, var4 - 1, 2)) {
+				var13 = true;
+			}
+
+			if(var13 || this.shouldSideBeRendered(var1, var2, var3 + 1, var4 + 1, 3)) {
+				var13 = true;
+			}
+
+			if(var13 || this.shouldSideBeRendered(var1, var2 - 1, var3 + 1, var4, 4)) {
+				var13 = true;
+			}
+
+			if(var13 || this.shouldSideBeRendered(var1, var2 + 1, var3 + 1, var4, 5)) {
+				var13 = true;
+			}
+
+			if(var13) {
+				var5 = var5.normalize().addVector(0.0D, -6.0D, 0.0D);
+			}
+		}
+
+		var5 = var5.normalize();
+		return var5;
+	}
+
+	public void velocityToAddToEntity(World var1, int var2, int var3, int var4, Entity var5, Vec3D var6) {
+		Vec3D var7 = this.getFlowVector(var1, var2, var3, var4);
+		var6.xCoord += var7.xCoord;
+		var6.yCoord += var7.yCoord;
+		var6.zCoord += var7.zCoord;
+	}
+
+	public int tickRate() {
+		return this.material == Material.water ? 5 : (this.material == Material.lava ? 30 : 0);
+	}
+
+	public float getBlockBrightness(IBlockAccess var1, int var2, int var3, int var4) {
+		float var5 = var1.getBrightness(var2, var3, var4);
+		float var6 = var1.getBrightness(var2, var3 + 1, var4);
+		return var5 > var6 ? var5 : var6;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		super.updateTick(var1, var2, var3, var4, var5);
+	}
+
+	public int getRenderBlockPass() {
+		return this.material == Material.water ? 1 : 0;
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(this.material == Material.water && var5.nextInt(64) == 0) {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			if(var6 > 0 && var6 < 8) {
+				var1.playSoundEffect((double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F), "liquid.water", var5.nextFloat() * 0.25F + 12.0F / 16.0F, var5.nextFloat() * 1.0F + 0.5F);
+			}
+		}
+
+		if(this.material == Material.lava && var1.getBlockMaterial(var2, var3 + 1, var4) == Material.air && !var1.isBlockNormalCube(var2, var3 + 1, var4) && var5.nextInt(100) == 0) {
+			double var12 = (double)((float)var2 + var5.nextFloat());
+			double var8 = (double)var3 + this.maxY;
+			double var10 = (double)((float)var4 + var5.nextFloat());
+			var1.spawnParticle("lava", var12, var8, var10, 0.0D, 0.0D, 0.0D);
+		}
+
+	}
+
+	public static double getFlowDirection(IBlockAccess var0, int var1, int var2, int var3, Material var4) {
+		Vec3D var5 = null;
+		if(var4 == Material.water) {
+			var5 = ((BlockFluidOld)BlockOld.waterMoving).getFlowVector(var0, var1, var2, var3);
+		}
+
+		if(var4 == Material.lava) {
+			var5 = ((BlockFluidOld)BlockOld.lavaMoving).getFlowVector(var0, var1, var2, var3);
+		}
+
+		return var5.xCoord == 0.0D && var5.zCoord == 0.0D ? -1000.0D : Math.atan2(var5.zCoord, var5.xCoord) - Math.PI * 0.5D;
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		this.checkForHarden(var1, var2, var3, var4);
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		this.checkForHarden(var1, var2, var3, var4);
+	}
+
+	private void checkForHarden(World var1, int var2, int var3, int var4) {
+		if(var1.getBlockId(var2, var3, var4) == this.blockID) {
+			if(this.material == Material.lava) {
+				boolean var5 = false;
+				if(var5 || var1.getBlockMaterial(var2, var3, var4 - 1) == Material.water) {
+					var5 = true;
+				}
+
+				if(var5 || var1.getBlockMaterial(var2, var3, var4 + 1) == Material.water) {
+					var5 = true;
+				}
+
+				if(var5 || var1.getBlockMaterial(var2 - 1, var3, var4) == Material.water) {
+					var5 = true;
+				}
+
+				if(var5 || var1.getBlockMaterial(var2 + 1, var3, var4) == Material.water) {
+					var5 = true;
+				}
+
+				if(var5 || var1.getBlockMaterial(var2, var3 + 1, var4) == Material.water) {
+					var5 = true;
+				}
+
+				if(var5) {
+					int var6 = var1.getBlockMetadata(var2, var3, var4);
+					if(var6 == 0) {
+						var1.setBlockWithNotify(var2, var3, var4, BlockOld.obsidian.blockID);
+					} else if(var6 <= 4) {
+						var1.setBlockWithNotify(var2, var3, var4, BlockOld.cobblestone.blockID);
+					}
+
+					this.triggerLavaMixEffects(var1, var2, var3, var4);
+				}
+			}
+
+		}
+	}
+
+	protected void triggerLavaMixEffects(World var1, int var2, int var3, int var4) {
+		var1.playSoundEffect((double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F), "random.fizz", 0.5F, 2.6F + (var1.rand.nextFloat() - var1.rand.nextFloat()) * 0.8F);
+
+		for(int var5 = 0; var5 < 8; ++var5) {
+			var1.spawnParticle("largesmoke", (double)var2 + Math.random(), (double)var3 + 1.2D, (double)var4 + Math.random(), 0.0D, 0.0D, 0.0D);
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/XYZv.java
@@ -1,0 +1,98 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+
+public class XYZv {
+	public long x;
+	public long y;
+	public long z;
+	public Direction v;
+
+	public XYZv(long var1, long var3, long var5, Direction var7) {
+		this.x = var1;
+		this.y = var3;
+		this.z = var5;
+		this.v = var7;
+	}
+
+	public XYZv(long var1, long var3, long var5) {
+		this.x = var1;
+		this.y = var3;
+		this.z = var5;
+		this.v = Direction.XM;
+	}
+
+	public String toString() {
+		return "(" + this.x + ", " + this.y + ", " + this.z + ")";
+	}
+
+	public boolean func_11871_4RIxa4425GeFc7bSJ4pOTa6PYnO0fKP5EOCLB0Ntkt78v4xuQKdo35x8q1y5(XYZv var1) {
+		return this.x == var1.x && this.y == var1.y && this.z == var1.z;
+	}
+
+	public XYZv add(long var1, long var3, long var5) {
+		return new XYZv(this.x + var1, this.y + var3, this.z + var5, this.v);
+	}
+
+	public XYZv dir(Direction var1) {
+		return new XYZv(this.x, this.y, this.z, var1);
+	}
+
+	public XYZv rotateAroundXP(Direction var1) {
+		switch(EnumCoordinatesUnknownClass.field_12026_7De72qnj4wxRWW58t53xgRd7T4ZV39k51LMGzN4yLo4a8zdVQ9nGL7BQZcvs[var1.ordinal()]) {
+		case 1:
+			return new XYZv(-this.x, this.y, -this.z, this.v);
+		case 2:
+			return new XYZv(this.x, this.y, this.z, this.v);
+		case 3:
+			return new XYZv(-this.z, this.y, -this.x, this.v);
+		case 4:
+			return new XYZv(this.z, this.y, this.x, this.v);
+		default:
+			return null;
+		}
+	}
+
+	public XYZv add(XYZv var1) {
+		XYZv var2 = new XYZv(this.x, this.y, this.z, this.v);
+		var2.x += var1.x;
+		var2.y += var1.y;
+		var2.z += var1.z;
+		return var2;
+	}
+
+	public static XYZv func_11874_7D7Ldwzfjq7N2h00fkA2p56PZg3G8WUWHZij3DQ7icA7D4681et2A8u9NXkk(NBTTagCompound var0, String var1) {
+		return new XYZv(var0.getLong(var1 + "_x"), var0.getLong(var1 + "_y"), var0.getLong(var1 + "_z"));
+	}
+
+	public void func_11870_8PE2rM1Pz0ANK7KSirgdpIuY0x9S23IpHh64xjXM385ympB75xykX9x0C0cz(NBTTagCompound var1, String var2) {
+		var1.setLong(var2 + "_x", this.x);
+		var1.setLong(var2 + "_y", this.y);
+		var1.setLong(var2 + "_z", this.z);
+	}
+
+	public static XYZv func_11868_10m3QwAtDzN7qIk6oQ7jXh79E780beVWC0FbVnUy640lcC9Qn0J7uJdvVfnw(DataInputStream var0) {
+		try {
+			return new XYZv((long)var0.readInt(), (long)var0.readInt(), (long)var0.readInt());
+		} catch (IOException var2) {
+			return null;
+		}
+	}
+
+	public void func_11869_0FvI7BF1p73olqIovpr2IU9dj1cOi7qQZc81JoYhgeQibNmHY0OuSkDYeuv8(DataOutputStream var1) {
+		try {
+			var1.writeInt((int)this.x);
+			var1.writeInt((int)this.y);
+			var1.writeInt((int)this.z);
+		} catch (IOException var3) {
+			var3.printStackTrace();
+		}
+
+	}
+
+	public HandlerSetCheckpointUnknownClass2 func_11872_2Vm0piSCo4ykAfHelABiK5FXJ9tUuqjpMwL9NT18g5H4bYKrtlp0Sc734m9O() {
+		return new HandlerSetCheckpointUnknownClass2((double)this.x, (double)this.y, (double)this.z);
+	}
+}
--- net/minecraft/src/EntitySorter.java
+++ net/minecraft/src/EntitySorter.java
@@ -2,7 +2,7 @@
 
 import java.util.Comparator;
 
-public class EntitySorter implements Comparator {
+public class EntitySorter implements Comparator<WorldRenderer> {
 	private Entity comparedEntity;
 
 	public EntitySorter(Entity var1) {
@@ -13,7 +13,7 @@
 		return var1.distanceToEntitySquared(this.comparedEntity) < var2.distanceToEntitySquared(this.comparedEntity) ? -1 : 1;
 	}
 
-	public int compare(Object var1, Object var2) {
-		return this.sortByDistanceToEntity((WorldRenderer)var1, (WorldRenderer)var2);
+	public int compare(WorldRenderer var1, WorldRenderer var2) {
+		return this.sortByDistanceToEntity(var1, var2);
 	}
 }
--- /dev/null
+++ net/minecraft/src/GuiFrail.java
@@ -1,0 +1,48 @@
+package net.minecraft.src;
+
+import org.lwjgl.opengl.GL11;
+
+public class GuiFrail extends GuiScreen {
+	public void initGui() {
+		this.controlList.clear();
+		this.controlList.add(new GuiButton(1, this.width / 2 - 100, this.height / 4 + 72, "Respawn"));
+		this.controlList.add(new GuiButton(2, this.width / 2 - 100, this.height / 4 + 96, "Title menu"));
+		if(this.mc.session == null) {
+			((GuiButton)this.controlList.get(1)).enabled = false;
+		}
+
+	}
+
+	protected void keyTyped(char var1, int var2) {
+	}
+
+	protected void actionPerformed(GuiButton var1) {
+		if(var1.id == 0) {
+		}
+
+		if(var1.id == 1) {
+			this.mc.respawn();
+			this.mc.displayGuiScreen((GuiScreen)null);
+		}
+
+		if(var1.id == 2) {
+			this.mc.changeWorld1((World)null);
+			this.mc.displayGuiScreen(new GuiMainMenu());
+		}
+
+	}
+
+	public void drawScreen(int var1, int var2, float var3) {
+		drawGradientRect(0, 0, this.width, this.height, 1615855616, -1602211792);
+		GL11.glPushMatrix();
+		GL11.glScalef(2.0F, 2.0F, 2.0F);
+		this.drawCenteredString(this.fontRenderer, this.mc.options.difficulty == 4 ? "Shattered" : "Game over!", this.width / 2 / 2, 30, 16777215);
+		GL11.glPopMatrix();
+		this.drawCenteredString(this.fontRenderer, "Milestone: " + this.mc.theWorld.GetMilestone(), this.width / 2, 100, 16777215);
+		super.drawScreen(var1, var2, var3);
+	}
+
+	public boolean doesGuiPauseGame() {
+		return false;
+	}
+}
--- /dev/null
+++ net/minecraft/src/ThreadHubServerPing.java
@@ -1,0 +1,89 @@
+package net.minecraft.src;
+
+import java.io.IOException;
+import java.net.DatagramPacket;
+import java.net.DatagramSocket;
+import java.net.InetAddress;
+import java.util.concurrent.atomic.AtomicInteger;
+import java.util.logging.Level;
+import java.util.logging.LogManager;
+import java.util.logging.Logger;
+
+public class ThreadHubServerPing extends Thread {
+	private static final AtomicInteger atomicInteger = new AtomicInteger(0);
+	private static final Logger logger = LogManager.getLogManager().getLogger(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9790_4Mn44antCz29B6GKYv6d2ZW6jUZp3xLB1XTEKn5O2h7Xzs27I617Goaxn8XY));
+	private final String motd;
+	private final DatagramSocket socket;
+	private boolean isStopping = true;
+	private final String address;
+	private static final String __OBFID = "CL_00001137";
+
+	public ThreadHubServerPing(String var1, String var2) throws IOException {
+		super("LanServerPinger #" + atomicInteger.incrementAndGet());
+		this.motd = var1;
+		this.address = var2;
+		this.setDaemon(true);
+		this.socket = new DatagramSocket();
+	}
+
+	public void run() {
+		String var1 = getPingResponse(this.motd, this.address);
+		byte[] var2 = var1.getBytes();
+
+		while(!this.isInterrupted() && this.isStopping) {
+			try {
+				InetAddress var3 = InetAddress.getByName("224.0.2.60");
+				DatagramPacket var4 = new DatagramPacket(var2, var2.length, var3, 4445);
+				this.socket.send(var4);
+			} catch (IOException var6) {
+				logger.log(Level.WARNING, "LanServerPinger: " + var6.getMessage());
+				break;
+			}
+
+			try {
+				sleep(1500L);
+			} catch (InterruptedException var5) {
+			}
+		}
+
+	}
+
+	public void interrupt() {
+		super.interrupt();
+		this.isStopping = false;
+	}
+
+	public static String getPingResponse(String var0, String var1) {
+		return "[MOTD]" + var0 + "[/MOTD][AD]" + var1 + "[/AD]";
+	}
+
+	public static String getMotdFromPingResponse(String var0) {
+		int var1 = var0.indexOf("[MOTD]");
+		if(var1 < 0) {
+			return "missing no";
+		} else {
+			int var2 = var0.indexOf("[/MOTD]", var1 + "[MOTD]".length());
+			return var2 < var1 ? "missing no" : var0.substring(var1 + "[MOTD]".length(), var2);
+		}
+	}
+
+	public static String getAdFromPingResponse(String var0) {
+		int var1 = var0.indexOf("[/MOTD]");
+		if(var1 < 0) {
+			return null;
+		} else {
+			int var2 = var0.indexOf("[/MOTD]", var1 + "[/MOTD]".length());
+			if(var2 >= 0) {
+				return null;
+			} else {
+				int var3 = var0.indexOf("[AD]", var1 + "[/MOTD]".length());
+				if(var3 < 0) {
+					return null;
+				} else {
+					int var4 = var0.indexOf("[/AD]", var3 + "[AD]".length());
+					return var4 < var3 ? null : var0.substring(var3 + "[AD]".length(), var4);
+				}
+			}
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockWeaponGiver.java
@@ -1,0 +1,23 @@
+package net.minecraft.src;
+
+import org.lwjgl.input.Keyboard;
+
+public class BlockWeaponGiver extends BlockMultiSided implements BlockUnknownInterface {
+	public BlockWeaponGiver(int var1, int var2, int var3, Material var4) {
+		super(var1, var3, var2, var3, var4);
+	}
+
+	public void func_8286_2f84KM1xKjK9eBj4915qo36L405Hm9W3JZ41244r918IGv3BpYiut0G1VBGw(EntityPlayerZombieModeClient var1, XYZv var2) {
+		var1.worldIn.func_7550_1TEi6UNf3SwyaU3NIC3s8C7gZNGcTG9vFQGy5qOc4gI9AwjR87h7g68M37B3(var2, this.func_8288_98t8S89tFW42rGL9ALNhVV7sJ5qB3j8Z10bg69FoU68e30R380Rp4L4Dn5kC());
+		var1.field_9097_867sEKNEsa45Xq4Etlk5s449h7UUOWVcX6nYd2PGjFy373Y2PXcol521PBg2 = null;
+	}
+
+	public String func_8287_3t2cX22yD5J55Zh6G33szTT1PY525wnemKTHp3jQ2r2jhLod41nugOV5rhqI(EntityPlayerZombieModeClient var1, XYZv var2) {
+		String var3 = Keyboard.getKeyName(InputHandler.mc.options.keyBindInventory.keyCode);
+		return "[" + var3 + "] Interact";
+	}
+
+	public int func_8288_98t8S89tFW42rGL9ALNhVV7sJ5qB3j8Z10bg69FoU68e30R380Rp4L4Dn5kC() {
+		return 3939;
+	}
+}
--- /dev/null
+++ net/minecraft/src/WorldGenHouseSmallUnknownClass3.java
@@ -1,0 +1,46 @@
+package net.minecraft.src;
+
+public class WorldGenHouseSmallUnknownClass3 extends WorldGenHouseSmallUnknownClass4 {
+	private final WorldGenHouseSmallUnknownClass2 field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q;
+
+	public WorldGenHouseSmallUnknownClass3(WorldGenHouseSmallUnknownClass2 var1) {
+		this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q = var1;
+	}
+
+	public WorldGenHouseSmallUnknownClass2 func_11469_1XD49rMZ7tPLtP0CWc3LgGLFv6JSjO4Q2B8uBaPHCRWAe6cbTx3935ua6FcY() {
+		return new WorldGenHouseSmallUnknownClass2(1, 1);
+	}
+
+	public WorldGenHouseSmallUnknownClass2 func_11466_770WwnPt75L6J8UguFyXX1ITRtqTVRYMUSrCy1V0cX98wO01Qc5EpwKsvcM9() {
+		return this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q;
+	}
+
+	public boolean func_11468_5FEqwXoAtY7AI1e7tv5jsIS2I33Pxp03S2iKy3TijST5d36Zh4iU6YGR536H(World var1, int var2, int var3) {
+		int var4;
+		if(WorldGenHouseSmallUnknownClass.func_10592_030X7YBFIyq838PzbbohW0DU604Ufm6fU5P2pk1l46RcvZNy7l32uebe2559(var2, var3, this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM + 1, this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 + 1)) {
+			for(var4 = 128; var4 > 0; --var4) {
+				var1.setBlock(this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM + 1, var4, this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 + 1, Block.cloth.blockID);
+			}
+		}
+
+		if(WorldGenHouseSmallUnknownClass.func_10592_030X7YBFIyq838PzbbohW0DU604Ufm6fU5P2pk1l46RcvZNy7l32uebe2559(var2, var3, this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM + 14, this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 + 1)) {
+			for(var4 = 128; var4 > 0; --var4) {
+				var1.setBlock(this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM + 14, var4, this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 + 1, Block.cloth.blockID);
+			}
+		}
+
+		if(WorldGenHouseSmallUnknownClass.func_10592_030X7YBFIyq838PzbbohW0DU604Ufm6fU5P2pk1l46RcvZNy7l32uebe2559(var2, var3, this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM + 1, this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 + 14)) {
+			for(var4 = 128; var4 > 0; --var4) {
+				var1.setBlock(this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM + 1, var4, this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 + 14, Block.cloth.blockID);
+			}
+		}
+
+		if(WorldGenHouseSmallUnknownClass.func_10592_030X7YBFIyq838PzbbohW0DU604Ufm6fU5P2pk1l46RcvZNy7l32uebe2559(var2, var3, this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM + 14, this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 + 14)) {
+			for(var4 = 128; var4 > 0; --var4) {
+				var1.setBlock(this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM + 14, var4, this.field_11471_029ouVl5B9FoHlU8292hDwB0F27a6gh7I2wEB31Em7V39XOOlWc83Vuym85Q.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 + 14, Block.cloth.blockID);
+			}
+		}
+
+		return false;
+	}
+}
--- net/minecraft/src/EntityFlameFX.java
+++ net/minecraft/src/EntityFlameFX.java
@@ -8,9 +8,6 @@
 		this.motionX = this.motionX * (double)0.01F + var8;
 		this.motionY = this.motionY * (double)0.01F + var10;
 		this.motionZ = this.motionZ * (double)0.01F + var12;
-		double var10000 = var2 + (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.05F);
-		var10000 = var4 + (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.05F);
-		var10000 = var6 + (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.05F);
 		this.flameScale = this.particleScale;
 		this.particleRed = this.particleGreen = this.particleBlue = 1.0F;
 		this.particleMaxAge = (int)(8.0D / (Math.random() * 0.8D + 0.2D)) + 4;
--- /dev/null
+++ net/minecraft/src/CommandRNobiome.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandRNobiome extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8561_5jSl3966t7JZK076Y83a6UgGYuNIqO20N3BKq7JfZ6mqr1s0a4l2Q31vQd87;
+    
+    CommandRNobiome(final CommandManager abb) {
+        this.field_8561_5jSl3966t7JZK076Y83a6UgGYuNIqO20N3BKq7JfZ6mqr1s0a4l2Q31vQd87 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        ScreenDebugMenu.field_7964_8G80Kimsj2t150ZuEHxk97V3fSV455qzurOOVWgX8oTDDCEH9YV34z9vRAoC = ((int)arr[0] == 1);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return ScreenDebugMenu.field_7964_8G80Kimsj2t150ZuEHxk97V3fSV455qzurOOVWgX8oTDDCEH9YV34z9vRAoC ? "1" : "0";
+    }
+}
--- /dev/null
+++ net/minecraft/src/Ext1605Utils.java
@@ -1,0 +1,238 @@
+package net.minecraft.src;
+
+import java.io.ByteArrayInputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.nio.charset.StandardCharsets;
+import java.util.Arrays;
+import java.util.List;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipFile;
+import net.minecraft.client.Minecraft;
+
+public class Ext1605Utils {
+	public static List<String> skinUrls = Arrays.asList(new String[]{"file://C:/skincache/", "https://raw.githubusercontent.com/exalpha-dev/exalpha-dev.github.io/main/skincache/"});
+
+	public static float func_12145_369AWaIx763AmDMElKtaxw1v8736Hd9436zT4kb46Iz21Y2Nw4rxl2u27Hjk(float var0) {
+		return (var0 - 1.0F) * (var0 - 1.0F) * (var0 - 1.0F) + 1.0F;
+	}
+
+	@Deprecated
+	public static float[] BlendColor(float var0, float var1, float var2, float var3) {
+		float var4 = 0.58431375F;
+		float var5 = 0.0F;
+		float var6 = 1.0F;
+		float[] var7 = new float[]{var0 * var4 + (1.0F - var0) * var1, var0 * var5 + (1.0F - var0) * var2, var0 * var6 + (1.0F - var0) * var3};
+		return var7;
+	}
+
+	public static float[] BlendColorA(float var0, float var1, float var2, float var3, float var4, float var5, float var6) {
+		float[] var7 = new float[]{var0 * var1 + (1.0F - var0) * var4, var0 * var2 + (1.0F - var0) * var5, var0 * var3 + (1.0F - var0) * var6};
+		return var7;
+	}
+
+	public static boolean NotFullBlock(int var0) {
+		return var0 == 0 || var0 == Block.cactus.blockID || var0 == Block.mushroomBrown.blockID || var0 == Block.mushroomRed.blockID || var0 == Block.snow.blockID || var0 == Block.plantRed.blockID || var0 == Block.plantYellow.blockID || var0 == Block.lavaMoving.blockID || var0 == Block.waterMoving.blockID || var0 == Block.leaves.blockID;
+	}
+
+	public static double AngleDistance(double var0, double var2) {
+		double var4 = Math.abs(var2 - var0) % 360.0D;
+		double var6 = var4 > 180.0D ? 360.0D - var4 : var4;
+		return var6;
+	}
+
+	public static boolean RayCastBlock(World var0, int var1, double var2, double var4, double var6, double var8, double var10, double var12) {
+		double var14 = Math.sqrt(Math.pow(var8 - var2, 2.0D) + Math.pow(var10 - var4, 2.0D) + Math.pow(var12 - var6, 2.0D));
+		if(var14 > (double)var1) {
+			return false;
+		} else {
+			double var16 = var8 - var2;
+			double var18 = var10 - var4;
+			double var20 = var12 - var6;
+			double var22 = Math.sqrt(var16 * var16 + var18 * var18 + var20 * var20);
+			double var24 = 0.1D;
+
+			for(double var26 = 0.0D; var26 < var22; var26 += var24) {
+				double var28 = var2 + var26 * var16 / var22;
+				double var30 = var4 + var26 * var18 / var22;
+				double var32 = var6 + var26 * var20 / var22;
+				if(var0.getBlockId((int)var28, (int)var30, (int)var32) != 0) {
+					return true;
+				}
+			}
+
+			return false;
+		}
+	}
+
+	public static int readNBytesJ9(InputStream var0, byte[] var1, int var2, int var3) throws IOException {
+		int var4;
+		int var5;
+		for(var4 = 0; var4 < var3; var4 += var5) {
+			var5 = var0.read(var1, var2 + var4, var3 - var4);
+			if(var5 < 0) {
+				break;
+			}
+		}
+
+		return var4;
+	}
+
+	public static void fillBlock(World var0, XYZv var1, XYZv var2, int var3) {
+		fillBlock(var0, var1, var2, var3, -1);
+	}
+
+	public static void fillBlock(World var0, XYZv var1, XYZv var2, int var3, int var4) {
+		if(var0.multiplayerWorld) {
+			((PlayerControllerMP)InputHandler.mc.playerController).netClientHandler.addToSendQueue(new Packet211(var1, var2, var3));
+		} else {
+			long var5 = var1.x > var2.x ? var2.x : var1.x;
+			long var7 = var1.x > var2.x ? var1.x : var2.x;
+			long var9 = var1.y > var2.y ? var2.y : var1.y;
+			long var11 = var1.y > var2.y ? var1.y : var2.y;
+			long var13 = var1.z > var2.z ? var2.z : var1.z;
+			long var15 = var1.z > var2.z ? var1.z : var2.z;
+
+			for(long var17 = var5; var17 <= var7; ++var17) {
+				for(long var19 = var9; var19 <= var11; ++var19) {
+					for(long var21 = var13; var21 <= var15; ++var21) {
+						if(var4 == -1 || (var17 + var21 % 2L) % 2L != 0L && var21 % 2L != 0L) {
+							setBlock(var0, var17, var19, var21, var3);
+						} else {
+							setBlock(var0, var17, var19, var21, var4);
+						}
+					}
+				}
+			}
+		}
+
+	}
+
+	public static void setBlock(World var0, long var1, long var3, long var5, int var7) {
+		var0.setBlockWithNotify((int)var1, (int)var3, (int)var5, var7);
+		if(var0.multiplayerWorld && InputHandler.mc != null && InputHandler.mc.playerController instanceof PlayerControllerMP) {
+			((PlayerControllerMP)InputHandler.mc.playerController).netClientHandler.addToSendQueue(new Packet15Place(var7, (int)var1, (int)var3, (int)var5, 10));
+		}
+
+	}
+
+	public static boolean RTForBlocks(World var0, XYZv var1, Direction var2, int var3) {
+		XYZv var4 = var1;
+
+		for(int var5 = 0; var5 != var3; ++var5) {
+			var4 = var4.add((new XYZv(1L, 0L, 0L)).rotateAroundXP(var2));
+			if(var0.getBlockId((int)var4.x, (int)var4.y, (int)var4.z) != 0) {
+				return false;
+			}
+		}
+
+		return true;
+	}
+
+	public static void FindOutWhatTheFuckIsMakingThisNotWork() {
+		(new Exception()).printStackTrace();
+	}
+
+	public static int func_12140_8Oq1I57w9nMV4xcg8IUTb31D6Wumtz10kJJWyh9ORMW4uP8Zr0oyd0bFHQ1k(int var0, int var1, int var2) {
+		return var0 << 11 | var2 << 7 | var1;
+	}
+
+	public static URL func_12146_9P3TY758VM8951Z7q70WD5qYdKqLdB22jUqQNi8u6rFBU4uZnFfpCw0XU82v(String var0) {
+		if(Minecraft.field_7296_40G9X9sEbrNVWk1I68RpGi9486QjvBn75u9xmmmZ189amc26uqiJAf80zUYu) {
+			try {
+				return new URL("file:///" + Minecraft.field_7269_8WQ9B51cG08Xzvtv4872kc1791FFx6EUAi7dtOrdc533169lB1oGze3Sm1ZJ + "/" + var0);
+			} catch (MalformedURLException var2) {
+				ExtLogger.i(var2.getMessage());
+				System.exit(-1);
+				return null;
+			}
+		} else {
+			return Ext1605Utils.class.getResource(var0);
+		}
+	}
+
+	public static InputStream func_12150_5v4Cs6sI06e6Hjpg3rSI82gG008x14C2jag2OM7ADaW5U8a3DYSrf570CJm6(String var0) {
+		if(Minecraft.field_7296_40G9X9sEbrNVWk1I68RpGi9486QjvBn75u9xmmmZ189amc26uqiJAf80zUYu) {
+			try {
+				return new FileInputStream(new File(Minecraft.field_7269_8WQ9B51cG08Xzvtv4872kc1791FFx6EUAi7dtOrdc533169lB1oGze3Sm1ZJ + "/" + var0));
+			} catch (FileNotFoundException var7) {
+				try {
+					if(var0.startsWith("/")) {
+						var0 = var0.substring(1);
+					}
+
+					ZipFile var2 = new ZipFile(new File(System.getProperty("user.dir") + "/../lib/client/minecraft.jar"));
+					ZipEntry var3 = var2.getEntry(var0);
+					InputStream var4 = var2.getInputStream(var3);
+					byte[] var5 = new byte[(int)var3.getSize()];
+					readNBytesJ9(var4, var5, 0, (int)var3.getSize());
+					var2.close();
+					return new ByteArrayInputStream(var5);
+				} catch (Exception var6) {
+					var6.printStackTrace();
+					System.exit(-1);
+					return null;
+				}
+			}
+		} else {
+			return Ext1605Utils.class.getResourceAsStream(var0);
+		}
+	}
+
+	public static int func_12147_2H957G8ip82G6rxfiUf3zblru0uP648DzY022SjD3PqVRZ2F11lS24e967i5(int var0, int var1, int var2) {
+		return var0 > var2 ? var2 : (var0 < var1 ? var1 : var0);
+	}
+
+	public static String func_12148_5D2s54927n4DKgyG72xyN0I2571Gf1lofyGtm297rlY5SYBWi0Gc4NBMKoQD(byte[] var0) {
+		StringBuilder var1 = new StringBuilder(2 * var0.length);
+
+		for(int var2 = 0; var2 < var0.length; ++var2) {
+			String var3 = Integer.toHexString(255 & var0[var2]);
+			if(var3.length() == 1) {
+				var1.append('0');
+			}
+
+			var1.append(var3);
+		}
+
+		return var1.toString();
+	}
+
+	public static int func_12155_8Hz7yQrbpttYl62r56lFe782dI9GJEm7d3W4768d4S2Iay7QH2DbzVf66DGe(int var0, int var1) {
+		return (int)Math.floor((double)((float)var0 / (float)var1));
+	}
+
+	public static String func_12144_454W4NdU03XRu31l9i7WvVfHjt72MsOpNaeZo649Z98rQP9Gm38926v5OA6W(String var0) {
+		Class var1 = Refl.func_9786_8Ehd0r9aAHEF32cGHok0smD4vA0B3N9Qx96zs8VmDa6dhPs1YF2JWfDn7x46("java.security.MessageDigest");
+		Object var2 = Refl.invoke(var1, "getInstance", new Class[]{String.class}, "SHA-256");
+		Object var3 = Refl.invoke(var2, "digest", new Class[]{byte[].class}, var0.getBytes(StandardCharsets.UTF_8));
+		return (String)Refl.invoke(Ext1605Utils.class, "bytesToHex", new Class[]{byte[].class}, var3);
+	}
+
+	public static void func_12137_4B14YTlTqWTNVpM2G9851Dyfx9DbvQPLa5I81ItD974L7kJ315Qu8EP49Cg9(World var0, XYZv var1, XYZv var2, int var3, int var4) {
+		if(!var0.multiplayerWorld) {
+			long var5 = var1.x > var2.x ? var2.x : var1.x;
+			long var7 = var1.x > var2.x ? var1.x : var2.x;
+			long var9 = var1.y > var2.y ? var2.y : var1.y;
+			long var11 = var1.y > var2.y ? var1.y : var2.y;
+			long var13 = var1.z > var2.z ? var2.z : var1.z;
+			long var15 = var1.z > var2.z ? var1.z : var2.z;
+
+			for(long var17 = var5; var17 <= var7; ++var17) {
+				for(long var19 = var9; var19 <= var11; ++var19) {
+					for(long var21 = var13; var21 <= var15; ++var21) {
+						if(var0.getBlockId((int)var17, (int)var19, (int)var21) == var3) {
+							setBlock(var0, var17, var19, var21, var4);
+						}
+					}
+				}
+			}
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockEssenceCloner.java
@@ -1,0 +1,12 @@
+package net.minecraft.src;
+
+public class BlockEssenceCloner extends BlockMultiSided {
+	public BlockEssenceCloner(int var1, int var2, int var3, int var4) {
+		super(var1, var2, var3, var4);
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		var5.displayEssenceClonerGUI();
+		return true;
+	}
+}
--- net/minecraft/src/TextureWaterFX.java
+++ net/minecraft/src/TextureWaterFX.java
@@ -13,73 +13,76 @@
 
 	public void onTick() {
 		++this.tickCounter;
-
-		int var1;
-		int var2;
-		float var3;
-		int var5;
-		int var6;
-		for(var1 = 0; var1 < 16; ++var1) {
-			for(var2 = 0; var2 < 16; ++var2) {
-				var3 = 0.0F;
-
-				for(int var4 = var1 - 1; var4 <= var1 + 1; ++var4) {
-					var5 = var4 & 15;
-					var6 = var2 & 15;
-					var3 += this.red[var5 + var6 * 16];
-				}
-
-				this.green[var1 + var2 * 16] = var3 / 3.3F + this.blue[var1 + var2 * 16] * 0.8F;
-			}
-		}
-
-		for(var1 = 0; var1 < 16; ++var1) {
-			for(var2 = 0; var2 < 16; ++var2) {
-				this.blue[var1 + var2 * 16] += this.alpha[var1 + var2 * 16] * 0.05F;
-				if(this.blue[var1 + var2 * 16] < 0.0F) {
-					this.blue[var1 + var2 * 16] = 0.0F;
-				}
-
-				this.alpha[var1 + var2 * 16] -= 0.1F;
-				if(Math.random() < 0.05D) {
-					this.alpha[var1 + var2 * 16] = 0.5F;
-				}
-			}
-		}
-
-		float[] var12 = this.green;
-		this.green = this.red;
-		this.red = var12;
-
-		for(var2 = 0; var2 < 256; ++var2) {
-			var3 = this.red[var2];
-			if(var3 > 1.0F) {
-				var3 = 1.0F;
-			}
-
-			if(var3 < 0.0F) {
-				var3 = 0.0F;
-			}
-
-			float var13 = var3 * var3;
-			var5 = (int)(32.0F + var13 * 32.0F);
-			var6 = (int)(50.0F + var13 * 64.0F);
-			int var7 = 255;
-			int var8 = (int)(146.0F + var13 * 50.0F);
-			if(this.anaglyphEnabled) {
-				int var9 = (var5 * 30 + var6 * 59 + var7 * 11) / 100;
-				int var10 = (var5 * 30 + var6 * 70) / 100;
-				int var11 = (var5 * 30 + var7 * 70) / 100;
-				var5 = var9;
-				var6 = var10;
-				var7 = var11;
-			}
-
-			this.imageData[var2 * 4 + 0] = (byte)var5;
-			this.imageData[var2 * 4 + 1] = (byte)var6;
-			this.imageData[var2 * 4 + 2] = (byte)var7;
-			this.imageData[var2 * 4 + 3] = (byte)var8;
-		}
-
+		if(InputHandler.mc.options.fancyGraphics != 2 || this.field_10713_88024hG6da4f4kcVfOqR8cTJ36RtCs13wB6V30Rs17vqAj14F4Cqz3neFg20) {
+			this.field_10713_88024hG6da4f4kcVfOqR8cTJ36RtCs13wB6V30Rs17vqAj14F4Cqz3neFg20 = false;
+
+			int var1;
+			int var2;
+			float var3;
+			int var4;
+			int var5;
+			for(var1 = 0; var1 < 16; ++var1) {
+				for(var2 = 0; var2 < 16; ++var2) {
+					var3 = 0.0F;
+
+					for(int var6 = var1 - 1; var6 <= var1 + 1; ++var6) {
+						var4 = var6 & 15;
+						var5 = var2 & 15;
+						var3 += this.red[var4 + var5 * 16];
+					}
+
+					this.green[var1 + var2 * 16] = var3 / 3.3F + this.blue[var1 + var2 * 16] * 0.8F;
+				}
+			}
+
+			for(var1 = 0; var1 < 16; ++var1) {
+				for(var2 = 0; var2 < 16; ++var2) {
+					this.blue[var1 + var2 * 16] += this.alpha[var1 + var2 * 16] * 0.05F;
+					if(this.blue[var1 + var2 * 16] < 0.0F) {
+						this.blue[var1 + var2 * 16] = 0.0F;
+					}
+
+					this.alpha[var1 + var2 * 16] -= 0.1F;
+					if(Math.random() < 0.05D) {
+						this.alpha[var1 + var2 * 16] = 0.5F;
+					}
+				}
+			}
+
+			float[] var13 = this.green;
+			this.green = this.red;
+			this.red = var13;
+
+			for(var2 = 0; var2 < 256; ++var2) {
+				var3 = this.red[var2];
+				if(var3 > 1.0F) {
+					var3 = 1.0F;
+				}
+
+				if(var3 < 0.0F) {
+					var3 = 0.0F;
+				}
+
+				float var7 = var3 * var3;
+				var4 = (int)(32.0F + var7 * 32.0F);
+				var5 = (int)(50.0F + var7 * 64.0F);
+				int var8 = 255;
+				int var9 = (int)(146.0F + var7 * 50.0F);
+				if(this.anaglyphEnabled) {
+					int var10 = (var4 * 30 + var5 * 59 + var8 * 11) / 100;
+					int var11 = (var4 * 30 + var5 * 70) / 100;
+					int var12 = (var4 * 30 + var8 * 70) / 100;
+					var4 = var10;
+					var5 = var11;
+					var8 = var12;
+				}
+
+				this.imageData[var2 * 4 + 0] = (byte)var4;
+				this.imageData[var2 * 4 + 1] = (byte)var5;
+				this.imageData[var2 * 4 + 2] = (byte)var8;
+				this.imageData[var2 * 4 + 3] = (byte)var9;
+			}
+
+		}
 	}
 }
--- net/minecraft/src/NoiseGeneratorPerlin.java
+++ net/minecraft/src/NoiseGeneratorPerlin.java
@@ -88,68 +88,62 @@
 		int var19 = 0;
 		double var20 = 1.0D / var17;
 		int var22 = -1;
-		boolean var23 = false;
-		boolean var24 = false;
-		boolean var25 = false;
-		boolean var26 = false;
-		boolean var27 = false;
-		boolean var28 = false;
+		double var23 = 0.0D;
+		double var25 = 0.0D;
+		double var27 = 0.0D;
 		double var29 = 0.0D;
-		double var31 = 0.0D;
-		double var33 = 0.0D;
-		double var35 = 0.0D;
 
-		for(int var37 = 0; var37 < var8; ++var37) {
-			double var38 = (var2 + (double)var37) * var11 + this.xCoord;
-			int var40 = (int)var38;
-			if(var38 < (double)var40) {
-				--var40;
+		for(int var31 = 0; var31 < var8; ++var31) {
+			double var32 = (var2 + (double)var31) * var11 + this.xCoord;
+			int var34 = (int)var32;
+			if(var32 < (double)var34) {
+				--var34;
 			}
 
-			int var41 = var40 & 255;
-			var38 -= (double)var40;
-			double var42 = var38 * var38 * var38 * (var38 * (var38 * 6.0D - 15.0D) + 10.0D);
+			int var35 = var34 & 255;
+			var32 -= (double)var34;
+			double var36 = var32 * var32 * var32 * (var32 * (var32 * 6.0D - 15.0D) + 10.0D);
 
-			for(int var44 = 0; var44 < var10; ++var44) {
-				double var45 = (var6 + (double)var44) * var15 + this.zCoord;
-				int var47 = (int)var45;
-				if(var45 < (double)var47) {
-					--var47;
+			for(int var38 = 0; var38 < var10; ++var38) {
+				double var39 = (var6 + (double)var38) * var15 + this.zCoord;
+				int var41 = (int)var39;
+				if(var39 < (double)var41) {
+					--var41;
 				}
 
-				int var48 = var47 & 255;
-				var45 -= (double)var47;
-				double var49 = var45 * var45 * var45 * (var45 * (var45 * 6.0D - 15.0D) + 10.0D);
-
-				for(int var51 = 0; var51 < var9; ++var51) {
-					double var52 = (var4 + (double)var51) * var13 + this.yCoord;
-					int var54 = (int)var52;
-					if(var52 < (double)var54) {
-						--var54;
-					}
-
-					int var55 = var54 & 255;
-					var52 -= (double)var54;
-					double var56 = var52 * var52 * var52 * (var52 * (var52 * 6.0D - 15.0D) + 10.0D);
-					if(var51 == 0 || var55 != var22) {
-						var22 = var55;
-						int var64 = this.permutations[var41] + var55;
-						int var65 = this.permutations[var64] + var48;
-						int var66 = this.permutations[var64 + 1] + var48;
-						int var67 = this.permutations[var41 + 1] + var55;
-						int var68 = this.permutations[var67] + var48;
-						int var69 = this.permutations[var67 + 1] + var48;
-						var29 = this.lerp(var42, this.grad(this.permutations[var65], var38, var52, var45), this.grad(this.permutations[var68], var38 - 1.0D, var52, var45));
-						var31 = this.lerp(var42, this.grad(this.permutations[var66], var38, var52 - 1.0D, var45), this.grad(this.permutations[var69], var38 - 1.0D, var52 - 1.0D, var45));
-						var33 = this.lerp(var42, this.grad(this.permutations[var65 + 1], var38, var52, var45 - 1.0D), this.grad(this.permutations[var68 + 1], var38 - 1.0D, var52, var45 - 1.0D));
-						var35 = this.lerp(var42, this.grad(this.permutations[var66 + 1], var38, var52 - 1.0D, var45 - 1.0D), this.grad(this.permutations[var69 + 1], var38 - 1.0D, var52 - 1.0D, var45 - 1.0D));
-					}
-
-					double var58 = this.lerp(var56, var29, var31);
-					double var60 = this.lerp(var56, var33, var35);
-					double var62 = this.lerp(var49, var58, var60);
-					int var10001 = var19++;
-					var1[var10001] += var62 * var20;
+				int var42 = var41 & 255;
+				var39 -= (double)var41;
+				double var43 = var39 * var39 * var39 * (var39 * (var39 * 6.0D - 15.0D) + 10.0D);
+
+				for(int var45 = 0; var45 < var9; ++var45) {
+					double var46 = (var4 + (double)var45) * var13 + this.yCoord;
+					int var48 = (int)var46;
+					if(var46 < (double)var48) {
+						--var48;
+					}
+
+					int var49 = var48 & 255;
+					var46 -= (double)var48;
+					double var50 = var46 * var46 * var46 * (var46 * (var46 * 6.0D - 15.0D) + 10.0D);
+					if(var45 == 0 || var49 != var22) {
+						var22 = var49;
+						int var52 = this.permutations[var35] + var49;
+						int var53 = this.permutations[var52] + var42;
+						int var54 = this.permutations[var52 + 1] + var42;
+						int var55 = this.permutations[var35 + 1] + var49;
+						int var56 = this.permutations[var55] + var42;
+						int var57 = this.permutations[var55 + 1] + var42;
+						var23 = this.lerp(var36, this.grad(this.permutations[var53], var32, var46, var39), this.grad(this.permutations[var56], var32 - 1.0D, var46, var39));
+						var25 = this.lerp(var36, this.grad(this.permutations[var54], var32, var46 - 1.0D, var39), this.grad(this.permutations[var57], var32 - 1.0D, var46 - 1.0D, var39));
+						var27 = this.lerp(var36, this.grad(this.permutations[var53 + 1], var32, var46, var39 - 1.0D), this.grad(this.permutations[var56 + 1], var32 - 1.0D, var46, var39 - 1.0D));
+						var29 = this.lerp(var36, this.grad(this.permutations[var54 + 1], var32, var46 - 1.0D, var39 - 1.0D), this.grad(this.permutations[var57 + 1], var32 - 1.0D, var46 - 1.0D, var39 - 1.0D));
+					}
+
+					double var59 = this.lerp(var50, var23, var25);
+					double var60 = this.lerp(var50, var27, var29);
+					double var61 = this.lerp(var43, var59, var60);
+					int var58 = var19++;
+					var1[var58] += var61 * var20;
 				}
 			}
 		}
--- /dev/null
+++ net/minecraft/src/WorldZMSpawnWorld2.java
@@ -1,0 +1,59 @@
+package net.minecraft.src;
+
+import java.io.File;
+
+public class WorldZMSpawnWorld2 extends ZMWorld {
+	public boolean field_7573_3HV2pvdyT9Mr2z59d5I8SjaivjrWuWY7TPxPew016Qh6p3milfO55I4Yw9SI = false;
+	public boolean field_7572_2aaOvpTJ4Ls74iNCvaIj3HI4Je3MBj6D9amOilg0kYcJVOtzsixv4NR45714 = true;
+	HandlerPlayDemoUnknownClass field_7570_9AiOZAI78F1DY9Q6w51tMq1SqO0k2opIEcs5Gd44645gv8a5vSr32vLe1NCp = new HandlerPlayDemoUnknownClass((EntityPlayer)null);
+	HandlerPlayDemo field_7571_9lQc72mdV1Pr68IOsrNoT7xX4OC7hksD8DT5A5u5F2EVcG4MgFvxrEasSh0u;
+
+	public XYZv func_7546_09CNVM2pJHfEd8I53GaO82x396qpVix0JSZqlf73zO9Itp6Z0ZM1dFPcr9r6() {
+		return new XYZv(-102L, 73L, -56L);
+	}
+
+	public int func_7551_4HbhCuZ31Qm43141r8d6708jOZ2n3Mc1cYV1vxpZhc5eG8ZMbuvK0a7piUU0() {
+		return 21000;
+	}
+
+	public void func_7549_44O8yX39q3gNk27615OXRQ532BD73gQDG1C0XB575HgYp5YVG7N00ux31ql9(EntityPlayer var1) {
+		if((int)var1.posX == -98 && (int)var1.posY == 76) {
+			int var2 = (int)var1.posZ;
+			if(var2 <= -66 && var2 >= -68 && !this.field_7573_3HV2pvdyT9Mr2z59d5I8SjaivjrWuWY7TPxPew016Qh6p3milfO55I4Yw9SI) {
+				if(this.rand.nextInt(100) <= 5 || this.field_7572_2aaOvpTJ4Ls74iNCvaIj3HI4Je3MBj6D9amOilg0kYcJVOtzsixv4NR45714) {
+					this.spawnEntityInWorld(new EntityOtherPlayerMPUnknownClass2(this, this.field_7571_9lQc72mdV1Pr68IOsrNoT7xX4OC7hksD8DT5A5u5F2EVcG4MgFvxrEasSh0u));
+					this.field_7572_2aaOvpTJ4Ls74iNCvaIj3HI4Je3MBj6D9amOilg0kYcJVOtzsixv4NR45714 = false;
+				}
+
+				this.field_7573_3HV2pvdyT9Mr2z59d5I8SjaivjrWuWY7TPxPew016Qh6p3milfO55I4Yw9SI = true;
+			}
+		} else {
+			this.field_7573_3HV2pvdyT9Mr2z59d5I8SjaivjrWuWY7TPxPew016Qh6p3milfO55I4Yw9SI = false;
+		}
+
+	}
+
+	public WorldZMSpawnWorld2(File var1, String var2) {
+		super(var1, var2);
+		this.enemySpawnLocations.add(new WorldZMSpawn(new NamedLoc(-105, 71, -66, "b1_left"), new XYZv(0L, -1L, 0L)));
+		this.enemySpawnLocations.add(new WorldZMSpawn(new NamedLoc(-103, 71, -70, "b1_center"), new XYZv(0L, -1L, 0L)));
+		this.enemySpawnLocations.add(new WorldZMSpawn(new NamedLoc(-101, 71, -64, "b1_right"), new XYZv(0L, -1L, 0L)));
+		this.func_7544_6zl5Arnowm866sQ3ny372TOkUNmzVF1HF27ODrSt9jyfg491UBi1U4DDt2Yq(new XYZv(-107L, 70L, -74L), new XYZv(-107L, 73L, -74L));
+		this.func_7544_6zl5Arnowm866sQ3ny372TOkUNmzVF1HF27ODrSt9jyfg491UBi1U4DDt2Yq(new XYZv(-101L, 75L, -66L), new XYZv(-106L, 76L, -66L));
+		Ext1605Utils.setBlock(this, -99L, 75L, -66L, ExtBlocks.CrudePillar.blockID);
+		Ext1605Utils.setBlock(this, -99L, 76L, -66L, ExtBlocks.CrudePillar.blockID);
+		Ext1605Utils.setBlock(this, -101L, 78L, -61L, ExtBlocks.WeaponGiverGrayGun.blockID);
+		this.field_7571_9lQc72mdV1Pr68IOsrNoT7xX4OC7hksD8DT5A5u5F2EVcG4MgFvxrEasSh0u = HandlerPlayDemo.func_11428_9k6E1ErM8m8Ekl2tnCyj5PljXv5fpIe33XB87jRlW98HF72SweTYv0JQvjaQ((new File(var1, var2 + "/zd1.b")).getPath());
+		this.field_7571_9lQc72mdV1Pr68IOsrNoT7xX4OC7hksD8DT5A5u5F2EVcG4MgFvxrEasSh0u.field_11430_0OdUr2nD4R8uO36Sd51QoP94Lm2202x55uFJQVi7Sy5OO23j6PTNlph9id4f = "\u0002three";
+	}
+
+	public void func_7550_1TEi6UNf3SwyaU3NIC3s8C7gZNGcTG9vFQGy5qOc4gI9AwjR87h7g68M37B3(XYZv var1, int var2) {
+		if(var1.x == -101L && var1.y == 78L && var1.z == -61L) {
+			Ext1605Utils.setBlock(this, -99L, 75L, -66L, 0);
+			Ext1605Utils.setBlock(this, -99L, 76L, -66L, 0);
+			Ext1605Utils.setBlock(this, -101L, 78L, -61L, 0);
+			this.playSoundEffect(-99.0D, 75.0D, -66.0D, "random.glass", 1.0F, 0.0F);
+		}
+
+	}
+}
--- net/minecraft/src/NBTBase.java
+++ net/minecraft/src/NBTBase.java
@@ -40,6 +40,7 @@
 			var1.writeUTF(var0.getKey());
 			var0.writeTagContents(var1);
 		}
+
 	}
 
 	public static NBTBase createTagOfType(byte var0) {
--- /dev/null
+++ net/minecraft/src/Decoder.java
@@ -1,0 +1,200 @@
+package net.minecraft.src;
+
+import java.io.InputStream;
+import java.nio.ByteBuffer;
+import java.nio.charset.StandardCharsets;
+import java.util.Arrays;
+import java.util.Objects;
+
+public class Decoder {
+	private final boolean isURL;
+	private final boolean isMIME;
+	private static final int[] fromBase64 = new int[256];
+	private static final int[] fromBase64URL;
+	static final Decoder RFC4648;
+	static final Decoder RFC4648_URLSAFE;
+	static final Decoder RFC2045;
+
+	private Decoder(boolean var1, boolean var2) {
+		this.isURL = var1;
+		this.isMIME = var2;
+	}
+
+	public byte[] decode(byte[] var1) {
+		byte[] var2 = new byte[this.outLength(var1, 0, var1.length)];
+		int var3 = this.decode0(var1, 0, var1.length, var2);
+		if(var3 != var2.length) {
+			var2 = Arrays.copyOf(var2, var3);
+		}
+
+		return var2;
+	}
+
+	public byte[] decode(String var1) {
+		return this.decode(var1.getBytes(StandardCharsets.ISO_8859_1));
+	}
+
+	public int decode(byte[] var1, byte[] var2) {
+		int var3 = this.outLength(var1, 0, var1.length);
+		if(var2.length < var3) {
+			throw new IllegalArgumentException("Output byte array is too small for decoding all input bytes");
+		} else {
+			return this.decode0(var1, 0, var1.length, var2);
+		}
+	}
+
+	public ByteBuffer decode(ByteBuffer var1) {
+		int var2 = var1.position();
+
+		try {
+			byte[] var3;
+			int var4;
+			int var5;
+			if(var1.hasArray()) {
+				var3 = var1.array();
+				var4 = var1.arrayOffset() + var1.position();
+				var5 = var1.arrayOffset() + var1.limit();
+				var1.position(var1.limit());
+			} else {
+				var3 = new byte[var1.remaining()];
+				var1.get(var3);
+				var4 = 0;
+				var5 = var3.length;
+			}
+
+			byte[] var6 = new byte[this.outLength(var3, var4, var5)];
+			return ByteBuffer.wrap(var6, 0, this.decode0(var3, var4, var5, var6));
+		} catch (IllegalArgumentException var7) {
+			var1.position(var2);
+			throw var7;
+		}
+	}
+
+	public InputStream wrap(InputStream var1) {
+		Objects.requireNonNull(var1);
+		return new DecInputStream(var1, this.isURL ? fromBase64URL : fromBase64, this.isMIME);
+	}
+
+	private int outLength(byte[] var1, int var2, int var3) {
+		int[] var4 = this.isURL ? fromBase64URL : fromBase64;
+		int var5 = 0;
+		int var6 = var3 - var2;
+		if(var6 == 0) {
+			return 0;
+		} else if(var6 < 2) {
+			if(this.isMIME && var4[0] == -1) {
+				return 0;
+			} else {
+				throw new IllegalArgumentException("Input byte[] should at least have 2 bytes for base64 bytes");
+			}
+		} else {
+			if(this.isMIME) {
+				int var7 = 0;
+
+				while(var2 < var3) {
+					int var8 = var1[var2++] & 255;
+					if(var8 == 61) {
+						var6 -= var3 - var2 + 1;
+						break;
+					}
+
+					var8 = var4[var8];
+					if(var8 == -1) {
+						++var7;
+					}
+				}
+
+				var6 -= var7;
+			} else if(var1[var3 - 1] == 61) {
+				++var5;
+				if(var1[var3 - 2] == 61) {
+					++var5;
+				}
+			}
+
+			if(var5 == 0 && (var6 & 3) != 0) {
+				var5 = 4 - (var6 & 3);
+			}
+
+			return 3 * ((var6 + 3) / 4) - var5;
+		}
+	}
+
+	private int decode0(byte[] var1, int var2, int var3, byte[] var4) {
+		int[] var5 = this.isURL ? fromBase64URL : fromBase64;
+		int var6 = 0;
+		int var7 = 0;
+		int var8 = 18;
+
+		while(true) {
+			if(var2 < var3) {
+				int var9 = var1[var2++] & 255;
+				var9 = var5[var9];
+				if(var9 >= 0) {
+					var7 |= var9 << var8;
+					var8 -= 6;
+					if(var8 < 0) {
+						var4[var6++] = (byte)(var7 >> 16);
+						var4[var6++] = (byte)(var7 >> 8);
+						var4[var6++] = (byte)var7;
+						var8 = 18;
+						var7 = 0;
+					}
+					continue;
+				}
+
+				if(var9 != -2) {
+					if(!this.isMIME) {
+						throw new IllegalArgumentException("Illegal base64 character " + Integer.toString(var1[var2 - 1], 16));
+					}
+					continue;
+				}
+
+				if(var8 == 6 && (var2 == var3 || var1[var2++] != 61) || var8 == 18) {
+					throw new IllegalArgumentException("Input byte array has wrong 4-byte ending unit");
+				}
+			}
+
+			if(var8 == 6) {
+				var4[var6++] = (byte)(var7 >> 16);
+			} else if(var8 == 0) {
+				var4[var6++] = (byte)(var7 >> 16);
+				var4[var6++] = (byte)(var7 >> 8);
+			} else if(var8 == 12) {
+				throw new IllegalArgumentException("Last unit does not have enough valid bits");
+			}
+
+			do {
+				if(var2 >= var3) {
+					return var6;
+				}
+			} while(this.isMIME && var5[var1[var2++] & 255] < 0);
+
+			throw new IllegalArgumentException("Input byte array has incorrect ending byte at " + var2);
+		}
+	}
+
+	static int[] fromBase64() {
+		return fromBase64;
+	}
+
+	static {
+		Arrays.fill(fromBase64, -1);
+
+		int var0;
+		for(var0 = 0; var0 < Encoder.toBase64().length; fromBase64[Encoder.toBase64()[var0]] = var0++) {
+		}
+
+		fromBase64[61] = -2;
+		fromBase64URL = new int[256];
+		Arrays.fill(fromBase64URL, -1);
+
+		for(var0 = 0; var0 < Encoder.toBase64URL().length; fromBase64URL[Encoder.toBase64URL()[var0]] = var0++) {
+		}
+
+		fromBase64URL[61] = -2;
+		RFC4648 = new Decoder(false, false);
+		RFC4648_URLSAFE = new Decoder(true, false);
+		RFC2045 = new Decoder(false, true);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockWeaponUpgrader.java
@@ -1,0 +1,47 @@
+package net.minecraft.src;
+
+import org.lwjgl.input.Keyboard;
+
+public class BlockWeaponUpgrader extends BlockMultiSided implements BlockUnknownInterface {
+	public BlockWeaponUpgrader(int var1, int var2, int var3, Material var4) {
+		super(var1, var3, var2, var3, var4);
+	}
+
+	public int func_8294_2xDly765WG6MKk6eRIZSx0p4q8jxqxy8x8s0Y5AtF6O6Dig4IJSn039l2965(int var1) {
+		return var1 == Item.swordWood.shiftedIndex ? Item.swordStone.shiftedIndex : (var1 == Item.swordStone.shiftedIndex ? Item.swordSteel.shiftedIndex : (var1 == Item.swordSteel.shiftedIndex ? Item.swordDiamond.shiftedIndex : (var1 == Item.swordGold.shiftedIndex ? Item.swordStone.shiftedIndex : (var1 == Item.swordDiamond.shiftedIndex ? ExtItems.obsidianSword.shiftedIndex : (var1 == ExtItems.essenceGun.shiftedIndex ? ExtItems.GrayGun.shiftedIndex : 0)))));
+	}
+
+	public int func_8293_4Q6kYn4VTyMC3J1VNnN096yJlPTMmC6s8L0Xy53z6p1Xcsq4913kkNJq9zC5(int var1) {
+		return var1 == Item.swordWood.shiftedIndex ? 500 : (var1 == Item.swordStone.shiftedIndex ? 1000 : (var1 == Item.swordSteel.shiftedIndex ? 5000 : (var1 == Item.swordGold.shiftedIndex ? 750 : (var1 == Item.swordDiamond.shiftedIndex ? 15000 : (var1 == ExtItems.essenceGun.shiftedIndex ? 16000 : 0)))));
+	}
+
+	public boolean func_8295_2xrz6zec7v26fXq7fvdKf3DGOU98s7qkgmrq57fwoOnEmUVdiyb9pGf6trCk(int var1) {
+		return var1 == Item.swordWood.shiftedIndex || var1 == Item.swordStone.shiftedIndex || var1 == Item.swordSteel.shiftedIndex || var1 == Item.swordGold.shiftedIndex || var1 == Item.swordDiamond.shiftedIndex || var1 == ExtItems.essenceGun.shiftedIndex;
+	}
+
+	public void func_8286_2f84KM1xKjK9eBj4915qo36L405Hm9W3JZ41244r918IGv3BpYiut0G1VBGw(EntityPlayerZombieModeClient var1, XYZv var2) {
+		ItemStack var3 = var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.getCurrentItem();
+		if(var3 != null && this.func_8295_2xrz6zec7v26fXq7fvdKf3DGOU98s7qkgmrq57fwoOnEmUVdiyb9pGf6trCk(var3.itemID)) {
+			int var4 = this.func_8293_4Q6kYn4VTyMC3J1VNnN096yJlPTMmC6s8L0Xy53z6p1Xcsq4913kkNJq9zC5(var3.itemID);
+			if(var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.func_8686_3fQ4Zvl6ZGZtMHz8BDhx9ci7pQP8EhDqu7Ri4ywsZ3854I2e4ev3W4B3R3iy() >= (long)var4) {
+				var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.func_8688_6DmcXOP1jZRKDasP2440t8904Ry66MRC3K00nwd8iGDlPgYii5d1f50QVICF((long)(-var4));
+				ItemStack var5 = new ItemStack(this.func_8294_2xDly765WG6MKk6eRIZSx0p4q8jxqxy8x8s0Y5AtF6O6Dig4IJSn039l2965(var3.itemID));
+				var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.setInventorySlotContents(var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.currentItem, var5);
+				InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10946_7AR6ItAen3fx05Vncef3s63538b5wb97oi4kfrKpN1xXa92ennAR19lcPgfJ.func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(new Object[]{var1, Integer.valueOf(var5.itemID)});
+			} else {
+				InputHandler.mc.ingameGUI.addChatMessage("Not enough points!");
+			}
+		}
+
+	}
+
+	public String func_8287_3t2cX22yD5J55Zh6G33szTT1PY525wnemKTHp3jQ2r2jhLod41nugOV5rhqI(EntityPlayerZombieModeClient var1, XYZv var2) {
+		String var3 = Keyboard.getKeyName(InputHandler.mc.options.keyBindInventory.keyCode);
+		ItemStack var4 = var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.getCurrentItem();
+		return var4 != null && this.func_8295_2xrz6zec7v26fXq7fvdKf3DGOU98s7qkgmrq57fwoOnEmUVdiyb9pGf6trCk(var4.itemID) ? "[" + var3 + "] Upgrade [" + this.func_8293_4Q6kYn4VTyMC3J1VNnN096yJlPTMmC6s8L0Xy53z6p1Xcsq4913kkNJq9zC5(var4.itemID) + " points]" : "Cannot upgrade this.";
+	}
+
+	public int func_8288_98t8S89tFW42rGL9ALNhVV7sJ5qB3j8Z10bg69FoU68e30R380Rp4L4Dn5kC() {
+		return 10;
+	}
+}
--- /dev/null
+++ net/minecraft/src/LocalAuthManager.java
@@ -1,0 +1,4 @@
+package net.minecraft.src;
+
+public class LocalAuthManager {
+}
--- /dev/null
+++ net/minecraft/src/PoseStack.java
@@ -1,0 +1,4 @@
+package net.minecraft.src;
+
+public class PoseStack {
+}
--- /dev/null
+++ net/minecraft/src/FreerunWorld.java
@@ -1,0 +1,22 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.util.List;
+
+public class FreerunWorld extends World {
+	public FreerunWorld(File var1, String var2) {
+		super(var1, var2);
+	}
+
+	public NamedLoc[] getCheckpoints() {
+		return null;
+	}
+
+	public List<HandlerSetCheckpointUnknownClass> func_7517_8oADBp42n4G2Ly6U1WLv70n6VyS2bkokzo8dF7ayUqDb1A6ofY86pUJA8mf8() {
+		return null;
+	}
+
+	public int getResetY(long var1, long var3) {
+		return 0;
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandUnknownClass.java
@@ -1,0 +1,15 @@
+package net.minecraft.src;
+
+public abstract class CommandUnknownClass {
+	public abstract void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1);
+
+	public abstract String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe();
+
+	public String func_8544_2LNc52bM7wODVhzdwN06iupD9ns193TaV9MqyoiLIdr4ljpUGb9jcb39cJB6() {
+		return "--";
+	}
+
+	public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+		return true;
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandMcCreat.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandMcCreat extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8578_3iM1F8ZFbdp9M4tIU2Ry2Pqk6CSU5Pka63mw88Fwqa8tqj46Il6lDM7k5dnl;
+    
+    CommandMcCreat(final CommandManager abb) {
+        this.field_8578_3iM1F8ZFbdp9M4tIU2Ry2Pqk6CSU5Pka63mw88Fwqa8tqj46Il6lDM7k5dnl = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.field_9759_4OT0vPMcJ68s5EU822c0Y9Asw74Su111s3rRCw8OSGMsYM8lx153p73RBtj3 = ((int)arr[0] == 1);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "" + InputHandler.field_9759_4OT0vPMcJ68s5EU822c0Y9Asw74Su111s3rRCw8OSGMsYM8lx153p73RBtj3;
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockWireframeBlock.java
@@ -1,0 +1,13 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockWireframeBlock extends BlockBreakable {
+	public BlockWireframeBlock(int var1, int var2, Material var3, boolean var4) {
+		super(var1, var2, var3, var4);
+	}
+
+	public int quantityDropped(Random var1) {
+		return 1;
+	}
+}
--- net/minecraft/src/EntityBoat.java
+++ net/minecraft/src/EntityBoat.java
@@ -128,11 +128,12 @@
 		double var8 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
 		double var10;
 		double var12;
+		int var14;
 		if(var8 > 0.15D) {
 			var10 = Math.cos((double)this.rotationYaw * Math.PI / 180.0D);
 			var12 = Math.sin((double)this.rotationYaw * Math.PI / 180.0D);
 
-			for(int var14 = 0; (double)var14 < 1.0D + var8 * 60.0D; ++var14) {
+			for(var14 = 0; (double)var14 < 1.0D + var8 * 60.0D; ++var14) {
 				double var15 = (double)(this.rand.nextFloat() * 2.0F - 1.0F);
 				double var17 = (double)(this.rand.nextInt(2) * 2 - 1) * 0.7D;
 				double var19;
@@ -152,12 +153,11 @@
 		if(this.isCollidedHorizontally && var8 > 0.15D) {
 			this.setEntityDead();
 
-			int var24;
-			for(var24 = 0; var24 < 3; ++var24) {
+			for(var14 = 0; var14 < 3; ++var14) {
 				this.entityDropItem(Block.planks.blockID, 1, 0.0F);
 			}
 
-			for(var24 = 0; var24 < 2; ++var24) {
+			for(var14 = 0; var14 < 2; ++var14) {
 				this.entityDropItem(Item.stick.shiftedIndex, 1, 0.0F);
 			}
 		} else {
@@ -169,9 +169,9 @@
 		this.rotationPitch = 0.0F;
 		var10 = (double)this.rotationYaw;
 		var12 = this.prevPosX - this.posX;
-		double var25 = this.prevPosZ - this.posZ;
-		if(var12 * var12 + var25 * var25 > 0.001D) {
-			var10 = (double)((float)(Math.atan2(var25, var12) * 180.0D / Math.PI));
+		double var24 = this.prevPosZ - this.posZ;
+		if(var12 * var12 + var24 * var24 > 0.001D) {
+			var10 = (double)((float)(Math.atan2(var24, var12) * 180.0D / Math.PI));
 		}
 
 		double var16;
@@ -194,8 +194,8 @@
 		this.setRotation(this.rotationYaw, this.rotationPitch);
 		List var18 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox.expand((double)0.2F, 0.0D, (double)0.2F));
 		if(var18 != null && var18.size() > 0) {
-			for(int var26 = 0; var26 < var18.size(); ++var26) {
-				Entity var20 = (Entity)var18.get(var26);
+			for(int var25 = 0; var25 < var18.size(); ++var25) {
+				Entity var20 = (Entity)var18.get(var25);
 				if(var20 != this.riddenByEntity && var20.canBePushed() && var20 instanceof EntityBoat) {
 					var20.applyEntityCollision(this);
 				}
--- net/minecraft/src/ChunkProviderGenerate.java
+++ net/minecraft/src/ChunkProviderGenerate.java
@@ -1,8 +1,12 @@
 package net.minecraft.src;
 
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
 import java.util.Random;
+import net.minecraft.client.Minecraft;
 
 public class ChunkProviderGenerate implements IChunkProvider {
+	public final WorldGenHouseBigInterior field_10359_2j6n1yw1R0AeJ7fX8dV7VsS6Llz1NtrigD0q3v7qKM2xRAdg03wtgiSs2FlQ;
 	private Random rand;
 	private NoiseGeneratorOctaves noiseGen1;
 	private NoiseGeneratorOctaves noiseGen2;
@@ -12,6 +16,8 @@
 	public NoiseGeneratorOctaves noiseGen6;
 	public NoiseGeneratorOctaves noiseGen7;
 	public NoiseGeneratorOctaves mobSpawnerNoise;
+	public NoiseGeneratorPerlin field_10358_5bm8pc76m6Uz3gW3M278IMc36j2gmdu6zRqAwyN5FUbCK0s79j3AqES65RO5;
+	public NoiseGeneratorOctaves field_10346_6m7y5BBc690f5k1wN62h1M5Q6MQ39ORFjeaEFLyPLBjJjSJBuGTvT3D2rW0F;
 	private World worldObj;
 	private double[] noiseArray;
 	private double[] sandNoise = new double[256];
@@ -24,6 +30,8 @@
 	double[] noise6;
 	double[] noise7;
 	int[][] unused = new int[32][32];
+	private int time_hr = 0;
+	private long lastUpdate = 0L;
 
 	public ChunkProviderGenerate(World var1, long var2) {
 		this.worldObj = var1;
@@ -35,7 +43,9 @@
 		this.noiseGen5 = new NoiseGeneratorOctaves(this.rand, 4);
 		this.noiseGen6 = new NoiseGeneratorOctaves(this.rand, 10);
 		this.noiseGen7 = new NoiseGeneratorOctaves(this.rand, 16);
-		this.mobSpawnerNoise = new NoiseGeneratorOctaves(this.rand, 8);
+		this.mobSpawnerNoise = new NoiseGeneratorOctaves(this.rand, 5);
+		this.field_10346_6m7y5BBc690f5k1wN62h1M5Q6MQ39ORFjeaEFLyPLBjJjSJBuGTvT3D2rW0F = new NoiseGeneratorOctaves(this.rand, 8);
+		this.field_10359_2j6n1yw1R0AeJ7fX8dV7VsS6Llz1NtrigD0q3v7qKM2xRAdg03wtgiSs2FlQ = new WorldGenHouseBigInterior(this.rand);
 	}
 
 	public void generateTerrain(int var1, int var2, byte[] var3) {
@@ -81,6 +91,18 @@
 									} else {
 										var51 = Block.waterStill.blockID;
 									}
+
+									if(this.worldObj.snowCovered && var11 * 8 + var30 >= var5 - 1) {
+										var51 = Block.snow.blockID;
+									} else {
+										var51 = Block.sand.blockID;
+									}
+
+									if(this.worldObj.sandCovered && var11 * 8 + var30 >= var5 - 1) {
+										var51 = Block.sand.blockID;
+									} else {
+										var51 = Block.waterStill.blockID;
+									}
 								}
 
 								if(var46 > 0.0D) {
@@ -108,67 +130,91 @@
 	}
 
 	public void replaceSurfaceBlocks(int var1, int var2, byte[] var3) {
-		byte var4 = 64;
-		double var5 = 1.0D / 32.0D;
-		this.sandNoise = this.noiseGen4.generateNoiseOctaves(this.sandNoise, (double)(var1 * 16), (double)(var2 * 16), 0.0D, 16, 16, 1, var5, var5, 1.0D);
-		this.gravelNoise = this.noiseGen4.generateNoiseOctaves(this.gravelNoise, (double)(var2 * 16), 109.0134D, (double)(var1 * 16), 16, 1, 16, var5, 1.0D, var5);
-		this.stoneNoise = this.noiseGen5.generateNoiseOctaves(this.stoneNoise, (double)(var1 * 16), (double)(var2 * 16), 0.0D, 16, 16, 1, var5 * 2.0D, var5 * 2.0D, var5 * 2.0D);
-
-		for(int var7 = 0; var7 < 16; ++var7) {
-			for(int var8 = 0; var8 < 16; ++var8) {
-				boolean var9 = this.sandNoise[var7 + var8 * 16] + this.rand.nextDouble() * 0.2D > 0.0D;
-				boolean var10 = this.gravelNoise[var7 + var8 * 16] + this.rand.nextDouble() * 0.2D > 3.0D;
-				int var11 = (int)(this.stoneNoise[var7 + var8 * 16] / 3.0D + 3.0D + this.rand.nextDouble() * 0.25D);
-				int var12 = -1;
-				byte var13 = (byte)Block.grass.blockID;
-				byte var14 = (byte)Block.dirt.blockID;
-
-				for(int var15 = 127; var15 >= 0; --var15) {
-					int var16 = (var7 * 16 + var8) * 128 + var15;
-					if(var15 <= 0 + this.rand.nextInt(6) - 1) {
-						var3[var16] = (byte)Block.bedrock.blockID;
+		byte var4 = (byte)Block.sand.blockID;
+		byte var5 = (byte)Block.sand.blockID;
+		byte var6 = 64;
+		double var7 = 1.0D / 32.0D;
+		this.sandNoise = this.noiseGen4.generateNoiseOctaves(this.sandNoise, (double)(var1 * 16), (double)(var2 * 16), 0.0D, 16, 16, 1, var7, var7, 1.0D);
+		this.gravelNoise = this.noiseGen4.generateNoiseOctaves(this.gravelNoise, (double)(var2 * 16), 109.0134D, (double)(var1 * 16), 16, 1, 16, var7, 1.0D, var7);
+		this.stoneNoise = this.noiseGen5.generateNoiseOctaves(this.stoneNoise, (double)(var1 * 16), (double)(var2 * 16), 0.0D, 16, 16, 1, var7 * 2.0D, var7 * 2.0D, var7 * 2.0D);
+
+		for(int var9 = 0; var9 < 16; ++var9) {
+			for(int var10 = 0; var10 < 16; ++var10) {
+				boolean var11 = this.sandNoise[var9 + var10 * 16] + this.rand.nextDouble() * 0.2D > 0.0D;
+				boolean var12 = this.gravelNoise[var9 + var10 * 16] + this.rand.nextDouble() * 0.2D > 3.0D;
+				int var13 = (int)(this.stoneNoise[var9 + var10 * 16] / 3.0D + 3.0D + this.rand.nextDouble() * 0.25D);
+				int var14 = -1;
+				byte var15;
+				byte var16;
+				if(this.worldObj.sandCovered) {
+					var15 = var4;
+					var16 = var5;
+				} else {
+					var15 = (byte)Block.grass.blockID;
+					var16 = (byte)Block.dirt.blockID;
+				}
+
+				for(int var17 = 127; var17 >= 0; --var17) {
+					int var18 = (var9 * 16 + var10) * 128 + var17;
+					if(var17 >= 95 + this.rand.nextInt(6) - 1 && var3[var18] != 0) {
+						var3[var18] = (byte)Block.blockSnow.blockID;
+
+						for(int var19 = (int)(this.mobSpawnerNoise.generateNoiseOctaves((double)var1 * 13.2D, (double)var2 * 13.2D) / 2.0D); var19 > 0; --var19) {
+							if(var19 + var17 < 128 && var18 + var19 < var3.length && var3[var18 + var19] == 0) {
+								var3[var19 + var18] = (byte)Block.ice.blockID;
+							}
+						}
+					}
+
+					if(var17 <= this.rand.nextInt(6) - 1) {
+						var3[var18] = (byte)Block.bedrock.blockID;
 					} else {
-						byte var17 = var3[var16];
-						if(var17 == 0) {
-							var12 = -1;
-						} else if(var17 == Block.stone.blockID) {
-							if(var12 == -1) {
-								if(var11 <= 0) {
-									var13 = 0;
-									var14 = (byte)Block.stone.blockID;
-								} else if(var15 >= var4 - 4 && var15 <= var4 + 1) {
-									var13 = (byte)Block.grass.blockID;
-									var14 = (byte)Block.dirt.blockID;
-									if(var10) {
-										var13 = 0;
-									}
-
-									if(var10) {
-										var14 = (byte)Block.gravel.blockID;
-									}
-
-									if(var9) {
-										var13 = (byte)Block.sand.blockID;
-									}
-
-									if(var9) {
-										var14 = (byte)Block.sand.blockID;
-									}
-								}
-
-								if(var15 < var4 && var13 == 0) {
-									var13 = (byte)Block.waterStill.blockID;
-								}
-
-								var12 = var11;
-								if(var15 >= var4 - 1) {
-									var3[var16] = var13;
+						byte var20 = var3[var18];
+						if(var20 == 0) {
+							var14 = -1;
+						} else if(var20 == Block.stone.blockID) {
+							if(var14 == -1) {
+								if(var13 <= 0) {
+									var15 = 0;
+									var16 = (byte)Block.stone.blockID;
+								} else if(var17 >= var6 - 4 && var17 <= var6 + 1) {
+									var15 = (byte)Block.grass.blockID;
+									var16 = (byte)Block.dirt.blockID;
+									if(this.worldObj.sandCovered) {
+										var15 = var4;
+										var16 = var5;
+									}
+
+									if(var12) {
+										var15 = 0;
+									}
+
+									if(var12) {
+										var16 = (byte)Block.gravel.blockID;
+									}
+
+									if(var11) {
+										var15 = (byte)Block.sand.blockID;
+									}
+
+									if(var11) {
+										var16 = (byte)Block.sand.blockID;
+									}
+								}
+
+								if(var17 < var6 && var15 == 0) {
+									var15 = (byte)Block.waterStill.blockID;
+								}
+
+								var14 = var13;
+								if(var17 >= var6 - 1) {
+									var3[var18] = var15;
 								} else {
-									var3[var16] = var14;
+									var3[var18] = var16;
 								}
-							} else if(var12 > 0) {
-								--var12;
-								var3[var16] = var14;
+							} else if(var14 > 0) {
+								--var14;
+								var3[var18] = var16;
 							}
 						}
 					}
@@ -179,14 +225,26 @@
 	}
 
 	public Chunk provideChunk(int var1, int var2) {
+		if(Math.abs(System.currentTimeMillis() - this.lastUpdate) > 5000L) {
+			SimpleDateFormat var3 = new SimpleDateFormat("HH");
+			this.time_hr = Integer.parseInt(var3.format(Calendar.getInstance().getTime()));
+			this.lastUpdate = System.currentTimeMillis();
+		}
+
+		boolean var6 = ScreenDebugMenu.dbg_conf_forceFracWorld || this.time_hr > 22 || this.time_hr < 5;
 		this.rand.setSeed((long)var1 * 341873128712L + (long)var2 * 132897987541L);
-		byte[] var3 = new byte[-Short.MIN_VALUE];
-		Chunk var4 = new Chunk(this.worldObj, var3, var1, var2);
-		this.generateTerrain(var1, var2, var3);
-		this.replaceSurfaceBlocks(var1, var2, var3);
-		this.caveGenerator.generate(this, this.worldObj, var1, var2, var3);
-		var4.generateSkylightMap();
-		return var4;
+		byte[] var4 = new byte[-Short.MIN_VALUE];
+		Chunk var5 = new Chunk(this.worldObj, var4, var1, var2);
+		var1 += var6 ? this.rand.nextInt(2000) - this.rand.nextInt(1000) : 0;
+		var2 += var6 ? this.rand.nextInt(2000) - this.rand.nextInt(1000) : 0;
+		if(!ScreenDebugMenu.dbg_disable_worldgen && !(this.worldObj instanceof FreerunWorld)) {
+			this.generateTerrain(var1, var2, var4);
+			this.replaceSurfaceBlocks(var1, var2, var4);
+			this.caveGenerator.generate(this, this.worldObj, var1, var2, var4);
+			var5.generateSkylightMap();
+		}
+
+		return var5;
 	}
 
 	private double[] initializeNoiseField(double[] var1, int var2, int var3, int var4, int var5, int var6, int var7) {
@@ -292,168 +350,317 @@
 	}
 
 	public void populate(IChunkProvider var1, int var2, int var3) {
+		ThreadChunkPopulator.AddPopulateOperation(new ChunkProviderPopulateOperation(this, var1, var2, var3), this);
+	}
+
+	public void actualPopulate(IChunkProvider var1, int var2, int var3) {
 		BlockSand.fallInstantly = true;
-		int var4 = var2 * 16;
-		int var5 = var3 * 16;
+		Biome var7 = Biome.func_11922_2n3qE9TNSbq6jFP0jVF6MZR791V18lhzx1FrS1vTgw66qgr9H9NUnl54vO2R(this.worldObj.func_7342_9805301CWs03An9555qIw883P54dcq9802DkM5DuquNweM1NH26RH6oP02mr());
+		WorldGenMyconUnknownClass var4 = var7.func_11921_2L2822HFv0Zs3L6g73SmXjqyWS7YT96y6ZshUIa6nFgwp5KcjgV15AJ304yM(var2, var3, EnumWorldGenerator.SURFACE);
+		WorldGenMyconUnknownClass var5 = var7.func_11921_2L2822HFv0Zs3L6g73SmXjqyWS7YT96y6ZshUIa6nFgwp5KcjgV15AJ304yM(var2, var3, EnumWorldGenerator.UNDERGROUND);
+		WorldGenMyconUnknownClass var6 = var7.func_11921_2L2822HFv0Zs3L6g73SmXjqyWS7YT96y6ZshUIa6nFgwp5KcjgV15AJ304yM(var2, var3, EnumWorldGenerator.LOW_RIVER);
+		int var26 = var2 * 16;
+		int var8 = var3 * 16;
 		this.rand.setSeed(this.worldObj.randomSeed);
-		long var6 = this.rand.nextLong() / 2L * 2L + 1L;
-		long var8 = this.rand.nextLong() / 2L * 2L + 1L;
-		this.rand.setSeed((long)var2 * var6 + (long)var3 * var8 ^ this.worldObj.randomSeed);
-		double var10 = 0.25D;
-
-		int var12;
-		int var13;
-		int var14;
-		int var15;
-		for(var12 = 0; var12 < 8; ++var12) {
-			var13 = var4 + this.rand.nextInt(16) + 8;
-			var14 = this.rand.nextInt(128);
-			var15 = var5 + this.rand.nextInt(16) + 8;
-			(new WorldGenDungeons()).generate(this.worldObj, this.rand, var13, var14, var15);
-		}
-
-		for(var12 = 0; var12 < 10; ++var12) {
-			var13 = var4 + this.rand.nextInt(16);
-			var14 = this.rand.nextInt(128);
-			var15 = var5 + this.rand.nextInt(16);
-			(new WorldGenClay(32)).generate(this.worldObj, this.rand, var13, var14, var15);
-		}
-
-		for(var12 = 0; var12 < 20; ++var12) {
-			var13 = var4 + this.rand.nextInt(16);
-			var14 = this.rand.nextInt(128);
-			var15 = var5 + this.rand.nextInt(16);
-			(new WorldGenMinable(Block.dirt.blockID, 32)).generate(this.worldObj, this.rand, var13, var14, var15);
-		}
-
-		for(var12 = 0; var12 < 10; ++var12) {
-			var13 = var4 + this.rand.nextInt(16);
-			var14 = this.rand.nextInt(128);
-			var15 = var5 + this.rand.nextInt(16);
-			(new WorldGenMinable(Block.gravel.blockID, 32)).generate(this.worldObj, this.rand, var13, var14, var15);
-		}
-
-		for(var12 = 0; var12 < 20; ++var12) {
-			var13 = var4 + this.rand.nextInt(16);
-			var14 = this.rand.nextInt(128);
-			var15 = var5 + this.rand.nextInt(16);
-			(new WorldGenMinable(Block.oreCoal.blockID, 16)).generate(this.worldObj, this.rand, var13, var14, var15);
-		}
-
-		for(var12 = 0; var12 < 20; ++var12) {
-			var13 = var4 + this.rand.nextInt(16);
-			var14 = this.rand.nextInt(64);
-			var15 = var5 + this.rand.nextInt(16);
-			(new WorldGenMinable(Block.oreIron.blockID, 8)).generate(this.worldObj, this.rand, var13, var14, var15);
-		}
-
-		for(var12 = 0; var12 < 2; ++var12) {
-			var13 = var4 + this.rand.nextInt(16);
-			var14 = this.rand.nextInt(32);
-			var15 = var5 + this.rand.nextInt(16);
-			(new WorldGenMinable(Block.oreGold.blockID, 8)).generate(this.worldObj, this.rand, var13, var14, var15);
-		}
-
-		for(var12 = 0; var12 < 8; ++var12) {
-			var13 = var4 + this.rand.nextInt(16);
-			var14 = this.rand.nextInt(16);
-			var15 = var5 + this.rand.nextInt(16);
-			(new WorldGenMinable(Block.oreRedstone.blockID, 7)).generate(this.worldObj, this.rand, var13, var14, var15);
-		}
-
-		for(var12 = 0; var12 < 1; ++var12) {
-			var13 = var4 + this.rand.nextInt(16);
-			var14 = this.rand.nextInt(16);
-			var15 = var5 + this.rand.nextInt(16);
-			(new WorldGenMinable(Block.oreDiamond.blockID, 7)).generate(this.worldObj, this.rand, var13, var14, var15);
-		}
-
-		var10 = 0.5D;
-		var12 = (int)((this.mobSpawnerNoise.generateNoiseOctaves((double)var4 * var10, (double)var5 * var10) / 8.0D + this.rand.nextDouble() * 4.0D + 4.0D) / 3.0D);
-		if(var12 < 0) {
-			var12 = 0;
-		}
-
-		if(this.rand.nextInt(10) == 0) {
-			++var12;
-		}
-
-		Object var18 = new WorldGenTrees();
-		if(this.rand.nextInt(10) == 0) {
-			var18 = new WorldGenBigTree();
-		}
-
-		int var16;
-		for(var14 = 0; var14 < var12; ++var14) {
-			var15 = var4 + this.rand.nextInt(16) + 8;
-			var16 = var5 + this.rand.nextInt(16) + 8;
-			((WorldGenerator)var18).setScale(1.0D, 1.0D, 1.0D);
-			((WorldGenerator)var18).generate(this.worldObj, this.rand, var15, this.worldObj.getHeightValue(var15, var16), var16);
+		long var9 = this.rand.nextLong() / 2L * 2L + 1L;
+		long var11 = this.rand.nextLong() / 2L * 2L + 1L;
+		this.rand.setSeed((long)var2 * var9 + (long)var3 * var11 ^ this.worldObj.randomSeed);
+		double var13 = 0.25D;
+		byte var15 = 3;
+		if(!(this.worldObj instanceof FreerunWorld) && !(this.worldObj instanceof ZMWorld)) {
+			this.field_10359_2j6n1yw1R0AeJ7fX8dV7VsS6Llz1NtrigD0q3v7qKM2xRAdg03wtgiSs2FlQ.func_10699_62uS4fsEkbtpD61o05YRCJmy361J28B0mv5drK254qUSv35oE02IVr7fe8tU(this.worldObj, var2, var3);
 		}
 
 		int var17;
-		for(var14 = 0; var14 < 2; ++var14) {
-			var15 = var4 + this.rand.nextInt(16) + 8;
-			var16 = this.rand.nextInt(128);
-			var17 = var5 + this.rand.nextInt(16) + 8;
-			(new WorldGenFlowers(Block.plantYellow.blockID)).generate(this.worldObj, this.rand, var15, var16, var17);
-		}
-
-		if(this.rand.nextInt(2) == 0) {
-			var14 = var4 + this.rand.nextInt(16) + 8;
-			var15 = this.rand.nextInt(128);
-			var16 = var5 + this.rand.nextInt(16) + 8;
-			(new WorldGenFlowers(Block.plantRed.blockID)).generate(this.worldObj, this.rand, var14, var15, var16);
-		}
-
-		if(this.rand.nextInt(4) == 0) {
-			var14 = var4 + this.rand.nextInt(16) + 8;
-			var15 = this.rand.nextInt(128);
-			var16 = var5 + this.rand.nextInt(16) + 8;
-			(new WorldGenFlowers(Block.mushroomBrown.blockID)).generate(this.worldObj, this.rand, var14, var15, var16);
-		}
-
-		if(this.rand.nextInt(8) == 0) {
-			var14 = var4 + this.rand.nextInt(16) + 8;
-			var15 = this.rand.nextInt(128);
-			var16 = var5 + this.rand.nextInt(16) + 8;
-			(new WorldGenFlowers(Block.mushroomRed.blockID)).generate(this.worldObj, this.rand, var14, var15, var16);
-		}
-
-		for(var14 = 0; var14 < 10; ++var14) {
-			var15 = var4 + this.rand.nextInt(16) + 8;
-			var16 = this.rand.nextInt(128);
-			var17 = var5 + this.rand.nextInt(16) + 8;
-			(new WorldGenReed()).generate(this.worldObj, this.rand, var15, var16, var17);
-		}
-
-		for(var14 = 0; var14 < 1; ++var14) {
-			var15 = var4 + this.rand.nextInt(16) + 8;
-			var16 = this.rand.nextInt(128);
-			var17 = var5 + this.rand.nextInt(16) + 8;
-			(new WorldGenCactus()).generate(this.worldObj, this.rand, var15, var16, var17);
-		}
-
-		for(var14 = 0; var14 < 50; ++var14) {
-			var15 = var4 + this.rand.nextInt(16) + 8;
-			var16 = this.rand.nextInt(this.rand.nextInt(120) + 8);
-			var17 = var5 + this.rand.nextInt(16) + 8;
-			(new WorldGenLiquids(Block.waterMoving.blockID)).generate(this.worldObj, this.rand, var15, var16, var17);
-		}
-
-		for(var14 = 0; var14 < 20; ++var14) {
-			var15 = var4 + this.rand.nextInt(16) + 8;
-			var16 = this.rand.nextInt(this.rand.nextInt(this.rand.nextInt(112) + 8) + 8);
-			var17 = var5 + this.rand.nextInt(16) + 8;
-			(new WorldGenLiquids(Block.lavaMoving.blockID)).generate(this.worldObj, this.rand, var15, var16, var17);
-		}
-
-		for(var14 = var4 + 8 + 0; var14 < var4 + 8 + 16; ++var14) {
-			for(var15 = var5 + 8 + 0; var15 < var5 + 8 + 16; ++var15) {
-				var16 = this.worldObj.getTopSolidOrLiquidBlock(var14, var15);
-				if(this.worldObj.snowCovered && var16 > 0 && var16 < 128 && this.worldObj.getBlockId(var14, var16, var15) == 0 && this.worldObj.getBlockMaterial(var14, var16 - 1, var15).getIsSolid() && this.worldObj.getBlockMaterial(var14, var16 - 1, var15) != Material.ice) {
-					this.worldObj.setBlockWithNotify(var14, var16, var15, Block.snow.blockID);
-				}
+		int var18;
+		int var21;
+		int var22;
+		int var27;
+		if(var4.func_9982_84EZjwmgfVpn5brk96GnU3Eit81Yc6Xxm4lTPdVKUWyphKxl38Uh4dg8VF3T(this.rand, this.worldObj, var2, var3)) {
+			label421:
+			for(var21 = 0; var21 < 16; ++var21) {
+				for(var22 = 0; var22 < 16; ++var22) {
+					for(int var23 = 127; var23 > 97; --var23) {
+						if(this.rand.nextInt(70) == 0 && this.worldObj.getBlockId(var2 * 16 + var21, var23, var3 * 16 + var22) == Block.snow.blockID) {
+							var21 += var2 * 16;
+							var22 += var3 * 16;
+							++var23;
+							this.worldObj.setBlock(var21, var23, var22, Block.ice.blockID);
+							break label421;
+						}
+					}
+				}
+			}
+
+			boolean var29 = false;
+			if(var4 instanceof WorldGenMyconUnknownClass2) {
+				var29 = ((WorldGenMyconUnknownClass2)var4).field_9993_785AXtdFOhFXlosQ8xZ2sw8bZ29jM2mtdTSsO0C4Xzi6GtMPb6IYjy73g2C9 == 2;
+			}
+
+			Object var30 = var29 && this.rand.nextInt(40) == 0 ? (new WorldGenTrees()).generateHighwoodTrees(var29) : new WorldGenTrees();
+			if(this.rand.nextInt(10) == 0) {
+				var30 = var29 && this.rand.nextInt(50) == 0 ? (new WorldGenBigTree()).generateHighwoodTrees(var29) : new WorldGenBigTree();
+			}
+
+			WorldGenFrigidHighwood var31 = new WorldGenFrigidHighwood();
+
+			int var19;
+			for(var17 = 0; var17 < var15; ++var17) {
+				var18 = var26 + this.rand.nextInt(16) + 8;
+				var19 = var8 + this.rand.nextInt(16) + 8;
+				((WorldGenerator)var30).setScale(1.0D, 1.0D, 1.0D);
+				((WorldGenerator)var30).generate(this.worldObj, this.rand, var18, this.worldObj.getHeightValue(var18, var19), var19);
+			}
+
+			for(var17 = 0; var17 < var15; ++var17) {
+				var18 = var26 + this.rand.nextInt(8) + 8;
+				var19 = var8 + this.rand.nextInt(8) + 8;
+				var31.setScale(1.0D, 1.0D, 1.0D);
+				var31.generate(this.worldObj, this.rand, var18, this.worldObj.getHeightValue(var18, var19), var19);
+			}
+
+			int var20;
+			for(var17 = 0; var17 < 2; ++var17) {
+				var18 = var26 + this.rand.nextInt(16) + 8;
+				var19 = this.rand.nextInt(128);
+				var20 = var8 + this.rand.nextInt(16) + 8;
+				(new WorldGenFlowers(Block.plantYellow.blockID)).generate(this.worldObj, this.rand, var18, var19, var20);
+			}
+
+			for(int var24 = 0; var24 < 100; ++var24) {
+				var17 = var26 + this.rand.nextInt(16) + 8;
+				var18 = this.rand.nextInt(128);
+				var19 = var8 + this.rand.nextInt(16) + 8;
+				(new WorldGenGrass()).generate(this.worldObj, this.rand, var17, var18, var19);
+			}
+
+			if(this.rand.nextInt(2) == 0) {
+				var17 = var26 + this.rand.nextInt(16) + 8;
+				var18 = this.rand.nextInt(128);
+				var19 = var8 + this.rand.nextInt(16) + 8;
+				(new WorldGenFlowers(Block.plantRed.blockID)).generate(this.worldObj, this.rand, var17, var18, var19);
+			}
+
+			if(this.rand.nextInt(2) == 0) {
+				var17 = var26 + this.rand.nextInt(8) + 8;
+				var18 = this.rand.nextInt(128);
+				var19 = var8 + this.rand.nextInt(8) + 8;
+				(new WorldGenFlowers(ExtBlocks.Hydrangea.blockID)).generate(this.worldObj, this.rand, var17, var18, var19);
+			}
+
+			if(this.rand.nextInt(4) == 0) {
+				var17 = var26 + this.rand.nextInt(16) + 8;
+				var18 = this.rand.nextInt(128);
+				var19 = var8 + this.rand.nextInt(16) + 8;
+				(new WorldGenFlowers(Block.mushroomBrown.blockID)).generate(this.worldObj, this.rand, var17, var18, var19);
+			}
+
+			if(this.rand.nextInt(8) == 0) {
+				var17 = var26 + this.rand.nextInt(16) + 8;
+				var18 = this.rand.nextInt(128);
+				var19 = var8 + this.rand.nextInt(16) + 8;
+				(new WorldGenFlowers(Block.mushroomRed.blockID)).generate(this.worldObj, this.rand, var17, var18, var19);
+			}
+
+			if(this.rand.nextInt(10) == 0) {
+				var27 = var15 + 1;
+			}
+
+			if(!Minecraft.field_7272_4vZ36FKx2I9PxzXyWH4290I55Q6yd6FI668q2Ylv62ISy2u1yh710qJ4Q0Yo) {
+				int var25;
+				if(GenStonePlatform.isChunkWaterOnly(this.worldObj, var26, var8)) {
+					for(var25 = 0; var25 != 50; ++var25) {
+						if(this.rand.nextInt(8) == 0) {
+							var17 = var26 + this.rand.nextInt(16) + 8;
+							var18 = 50 + this.rand.nextInt(16);
+							var19 = var8 + this.rand.nextInt(16) + 8;
+							(new GenStonePlatform()).generate(this.worldObj, this.rand, var17, var18, var19);
+						}
+					}
+				}
+
+				for(var25 = 0; var25 < 4; ++var25) {
+					(new GenPillar(ExtBlocks.saltBlock.blockID)).generate(this.worldObj, this.rand, var26 + this.rand.nextInt(16) + 8, this.rand.nextInt(128), var8 + this.rand.nextInt(16) + 8);
+				}
+
+				for(var25 = 0; var25 < 5; ++var25) {
+					(new GenOnWater(ExtBlocks.glowingFlower.blockID)).generate(this.worldObj, this.rand, var26 + this.rand.nextInt(16) + 8, this.rand.nextInt(128), var8 + this.rand.nextInt(16) + 8);
+				}
+
+				for(var25 = 0; var25 < 5; ++var25) {
+					(new WorldGenLichen()).generate(this.worldObj, this.rand, var26 + this.rand.nextInt(16) + 8, this.rand.nextInt(10), var8 + this.rand.nextInt(16) + 8);
+				}
+
+				for(var25 = 0; var25 < 16; ++var25) {
+					(new WorldGenBlockGoldBlockSteel()).generate(this.worldObj, this.rand, var26 + this.rand.nextInt(16) + 8, this.rand.nextInt(128), var8 + this.rand.nextInt(16) + 8);
+				}
+
+				for(var25 = 0; var25 < 3; ++var25) {
+					(new GenSky(ExtBlocks.blueFireIdk.blockID)).generate(this.worldObj, this.rand, var26 + this.rand.nextInt(16) + 8, this.rand.nextInt(128), var8 + this.rand.nextInt(16) + 8);
+				}
+			}
+
+			for(var17 = 0; var17 < 10; ++var17) {
+				var18 = var26 + this.rand.nextInt(16) + 8;
+				var19 = this.rand.nextInt(128);
+				var20 = var8 + this.rand.nextInt(16) + 8;
+				(new WorldGenReed()).generate(this.worldObj, this.rand, var18, var19, var20);
+			}
+
+			for(var17 = 0; var17 < 1; ++var17) {
+				var18 = var26 + this.rand.nextInt(16) + 8;
+				var19 = this.rand.nextInt(128);
+				var20 = var8 + this.rand.nextInt(16) + 8;
+				(new WorldGenCactus()).generate(this.worldObj, this.rand, var18, var19, var20);
+			}
+
+			for(var17 = 0; var17 < 50; ++var17) {
+				var18 = var26 + this.rand.nextInt(16) + 8;
+				var19 = this.rand.nextInt(this.rand.nextInt(120) + 8);
+				var20 = var8 + this.rand.nextInt(16) + 8;
+				(new WorldGenLiquids(Block.waterMoving.blockID)).generate(this.worldObj, this.rand, var18, var19, var20);
+			}
+
+			for(var17 = 0; var17 < 20; ++var17) {
+				var18 = var26 + this.rand.nextInt(16) + 8;
+				var19 = this.rand.nextInt(this.rand.nextInt(this.rand.nextInt(112) + 8) + 8);
+				var20 = var8 + this.rand.nextInt(16) + 8;
+				(new WorldGenLiquids(Block.lavaMoving.blockID)).generate(this.worldObj, this.rand, var18, var19, var20);
+			}
+
+			for(var17 = var26 + 8; var17 < var26 + 8 + 16; ++var17) {
+				for(var18 = var8 + 8; var18 < var8 + 8 + 16; ++var18) {
+					var19 = this.worldObj.getTopSolidOrLiquidBlock(var17, var18);
+					if(this.worldObj.snowCovered && var19 > 0 && var19 < 128 && this.worldObj.getBlockId(var17, var19, var18) == 0 && this.worldObj.getBlockMaterial(var17, var19 - 1, var18).getIsSolid() && this.worldObj.getBlockMaterial(var17, var19 - 1, var18) != Material.ice) {
+						this.worldObj.setBlockWithNotify(var17, var19, var18, Block.snow.blockID);
+					}
+				}
+			}
+		}
+
+		int var16;
+		if(!Minecraft.field_7272_4vZ36FKx2I9PxzXyWH4290I55Q6yd6FI668q2Ylv62ISy2u1yh710qJ4Q0Yo) {
+			for(var21 = 0; var21 != 8; ++var21) {
+				for(var22 = 0; var22 != 4; ++var22) {
+					var16 = var26 + var21 * 2;
+					var17 = 5 + this.rand.nextInt(2);
+					var18 = var8 + var22 * 4;
+					(new GenLowRiver(2 + this.rand.nextInt(3), var26, var8)).generate(this.worldObj, this.rand, var16, var17, var18);
+					var6.func_9982_84EZjwmgfVpn5brk96GnU3Eit81Yc6Xxm4lTPdVKUWyphKxl38Uh4dg8VF3T(this.rand, this.worldObj, var2, var3);
+				}
+			}
+		}
+
+		if(var5.func_9982_84EZjwmgfVpn5brk96GnU3Eit81Yc6Xxm4lTPdVKUWyphKxl38Uh4dg8VF3T(this.rand, this.worldObj, var2, var3)) {
+			var13 = 0.5D;
+			var27 = (int)((this.field_10346_6m7y5BBc690f5k1wN62h1M5Q6MQ39ORFjeaEFLyPLBjJjSJBuGTvT3D2rW0F.generateNoiseOctaves((double)var26 * var13, (double)var8 * var13) / 8.0D + this.rand.nextDouble() * 4.0D + 4.0D) / 3.0D);
+			if(var27 < 0) {
+				boolean var28 = false;
+			}
+
+			for(var27 = 0; var27 < 8; ++var27) {
+				var16 = var26 + this.rand.nextInt(16) + 8;
+				var17 = this.rand.nextInt(128);
+				var18 = var8 + this.rand.nextInt(16) + 8;
+				(new WorldGenDungeons()).generate(this.worldObj, this.rand, var16, var17, var18);
+			}
+
+			for(var27 = 0; var27 < 1; ++var27) {
+				var16 = var26 + this.rand.nextInt(64) + 8;
+				var17 = this.rand.nextInt(5) + 55;
+				var18 = var8 + this.rand.nextInt(64) + 8;
+				(new WorldGenSmoothStone()).generate(this.worldObj, this.rand, var16, var17, var18);
+			}
+
+			for(var27 = 0; var27 < 10; ++var27) {
+				var16 = var26 + this.rand.nextInt(16);
+				var17 = this.rand.nextInt(128);
+				var18 = var8 + this.rand.nextInt(16);
+				(new WorldGenClay(32)).generate(this.worldObj, this.rand, var16, var17, var18);
+			}
+
+			for(var27 = 0; var27 < 20; ++var27) {
+				var16 = var26 + this.rand.nextInt(16);
+				var17 = this.rand.nextInt(128);
+				var18 = var8 + this.rand.nextInt(16);
+				(new WorldGenMinable(Block.dirt.blockID, 32)).generate(this.worldObj, this.rand, var16, var17, var18);
+			}
+
+			for(var27 = 0; var27 < 10; ++var27) {
+				var16 = var26 + this.rand.nextInt(16);
+				var17 = this.rand.nextInt(128);
+				var18 = var8 + this.rand.nextInt(16);
+				(new WorldGenMinable(Block.gravel.blockID, 32)).generate(this.worldObj, this.rand, var16, var17, var18);
+			}
+
+			for(var27 = 0; var27 < 20; ++var27) {
+				var16 = var26 + this.rand.nextInt(16);
+				var17 = this.rand.nextInt(128);
+				var18 = var8 + this.rand.nextInt(16);
+				(new WorldGenMinable(Block.oreCoal.blockID, ExtBlocks.LowOreCoal.blockID, 16)).generate(this.worldObj, this.rand, var16, var17, var18);
+			}
+
+			for(var27 = 0; var27 < 20; ++var27) {
+				var16 = var26 + this.rand.nextInt(16);
+				var17 = this.rand.nextInt(64);
+				var18 = var8 + this.rand.nextInt(16);
+				(new WorldGenMinable(Block.oreIron.blockID, ExtBlocks.LowOreIron.blockID, 8)).generate(this.worldObj, this.rand, var16, var17, var18);
+			}
+
+			for(var27 = 0; var27 < 2; ++var27) {
+				var16 = var26 + this.rand.nextInt(16);
+				var17 = this.rand.nextInt(32);
+				var18 = var8 + this.rand.nextInt(16);
+				(new WorldGenMinable(Block.oreGold.blockID, ExtBlocks.LowOreGold.blockID, 8)).generate(this.worldObj, this.rand, var16, var17, var18);
+			}
+
+			for(var27 = 0; var27 < 8; ++var27) {
+				var16 = var26 + this.rand.nextInt(16);
+				var17 = this.rand.nextInt(16);
+				var18 = var8 + this.rand.nextInt(16);
+				(new WorldGenMinable(Block.oreRedstone.blockID, ExtBlocks.LowOreGreenstone.blockID, 7)).generate(this.worldObj, this.rand, var16, var17, var18);
+			}
+
+			for(var27 = 0; var27 < 4; ++var27) {
+				var16 = var26 + this.rand.nextInt(16);
+				var17 = this.rand.nextInt(16);
+				var18 = var8 + this.rand.nextInt(16);
+				(new WorldGenMinable(Block.oreDiamond.blockID, ExtBlocks.LowOreDiamond.blockID, 7)).generate(this.worldObj, this.rand, var16, var17, var18);
+			}
+
+			for(var27 = 0; var27 < 4; ++var27) {
+				var16 = var26 + this.rand.nextInt(16);
+				var17 = this.rand.nextInt(10);
+				var18 = var8 + this.rand.nextInt(16);
+				(new WorldGenMinable(ExtBlocks.LaceAgateOre.blockID, ExtBlocks.LaceAgateOre.blockID, 3)).generate(this.worldObj, this.rand, var16, var17, var18);
+			}
+
+			for(var27 = 0; var27 < 4; ++var27) {
+				var16 = var26 + this.rand.nextInt(16);
+				var17 = this.rand.nextInt(10);
+				var18 = var8 + this.rand.nextInt(16);
+				(new WorldGenMinable(ExtBlocks.ClinohumiteOre.blockID, ExtBlocks.ClinohumiteOre.blockID, 3)).generate(this.worldObj, this.rand, var16, var17, var18);
+			}
+
+			for(var27 = 0; var27 < 4; ++var27) {
+				var16 = var26 + this.rand.nextInt(16);
+				var17 = this.rand.nextInt(10);
+				var18 = var8 + this.rand.nextInt(16);
+				(new WorldGenMinable(ExtBlocks.MalachiteOre.blockID, ExtBlocks.MalachiteOre.blockID, 3)).generate(this.worldObj, this.rand, var16, var17, var18);
+			}
+
+			for(var27 = 0; var27 < 4; ++var27) {
+				var16 = var26 + this.rand.nextInt(16);
+				var17 = this.rand.nextInt(10);
+				var18 = var8 + this.rand.nextInt(16);
+				(new WorldGenMinable(ExtBlocks.PyriteOre.blockID, ExtBlocks.PyriteOre.blockID, 3)).generate(this.worldObj, this.rand, var16, var17, var18);
+			}
+
+			for(var27 = 0; var27 < 4; ++var27) {
+				var16 = var26 + this.rand.nextInt(16);
+				var17 = this.rand.nextInt(16);
+				var18 = var8 + this.rand.nextInt(16);
+				(new WorldGenMinable(ExtBlocks.BismuthOre.blockID, ExtBlocks.BismuthOre.blockID, 7)).generate(this.worldObj, this.rand, var16, var17, var18);
 			}
 		}
 
--- /dev/null
+++ net/minecraft/src/WorldGenHouseBigInterior.java
@@ -1,0 +1,87 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class WorldGenHouseBigInterior {
+	public static double field_10706_0m3239E5PCmx6014r82tcO6x60s54kxSC8Aa2w47u8Ld1cNJD6SWY9tgmfTg = 0.5D;
+	public static int field_10705_2351wTc0tK13gSC0Woq6iY3dsIH1rQIibdC0Si2JL99j3238Chm8t8Nnzv64 = 4;
+	private final IHouseBig[] field_10707_7RO2WV7OFPctlqUTLBB0sLIlTVVC7N310a410Dr8bC4mQqx5QxcZH86WZ6gY;
+	private final float field_10704_3uifkM897I6agg2PH71ON3u35ZJb2Nt5DC6zj959RQX00bm25Wk8MRmw6w8s;
+	final NoiseGeneratorPerlin[] field_10703_5Pc19WlxBXZ8Ihy3qfUuPcx9t085ogH7UoD9SJ89Cg2GrfOoa1Sx48CLN30t = new NoiseGeneratorPerlin[field_10705_2351wTc0tK13gSC0Woq6iY3dsIH1rQIibdC0Si2JL99j3238Chm8t8Nnzv64];
+	final NoiseGeneratorPerlin field_10708_5urBUkyczA4gE8l0r1KvTSmPIdQ3954OpoPgh77QHV0e1DruZsU9W2z8l0bB;
+
+	public WorldGenHouseBigInterior(Random var1) {
+		this.field_10708_5urBUkyczA4gE8l0r1KvTSmPIdQ3954OpoPgh77QHV0e1DruZsU9W2z8l0bB = new NoiseGeneratorPerlin(var1);
+
+		for(int var2 = 0; var2 < field_10705_2351wTc0tK13gSC0Woq6iY3dsIH1rQIibdC0Si2JL99j3238Chm8t8Nnzv64; ++var2) {
+			this.field_10703_5Pc19WlxBXZ8Ihy3qfUuPcx9t085ogH7UoD9SJ89Cg2GrfOoa1Sx48CLN30t[var2] = new NoiseGeneratorPerlin(var1);
+		}
+
+		this.field_10707_7RO2WV7OFPctlqUTLBB0sLIlTVVC7N310a410Dr8bC4mQqx5QxcZH86WZ6gY = new IHouseBig[]{new WorldGenHouseBigUnknownClass(var1), new WorldGenHouseBigExterior(var1), new WorldGenHouseBig(var1)};
+		float var7 = 0.0F;
+		IHouseBig[] var3 = this.field_10707_7RO2WV7OFPctlqUTLBB0sLIlTVVC7N310a410Dr8bC4mQqx5QxcZH86WZ6gY;
+		int var4 = var3.length;
+
+		for(int var5 = 0; var5 < var4; ++var5) {
+			IHouseBig var6 = var3[var5];
+			var7 += var6.func_9883_913vTZx6no47397W6wG95Q5uB254nJBZ27osnW242XcA9M93Alb1ry5oPyVe();
+		}
+
+		this.field_10704_3uifkM897I6agg2PH71ON3u35ZJb2Nt5DC6zj959RQX00bm25Wk8MRmw6w8s = var7;
+	}
+
+	public <T extends IHouseBig> T func_10700_5gU7Uzvz8nL2B471oF833am7hLzT1BpDmvqeeqHlljsoXgtj9YU1z90SpE7J(Class<T> var1) {
+		IHouseBig[] var2 = this.field_10707_7RO2WV7OFPctlqUTLBB0sLIlTVVC7N310a410Dr8bC4mQqx5QxcZH86WZ6gY;
+		int var3 = var2.length;
+
+		for(int var4 = 0; var4 < var3; ++var4) {
+			IHouseBig var5 = var2[var4];
+			if(var1.isInstance(var5)) {
+				return (T)var1.cast(var5);
+			}
+		}
+
+		throw new MinecraftException2();
+	}
+
+	public IHouseBig func_10702_96UC4VBn6u965CnKc5uafY87yvjBZ6tGq8l4AZ6h876hH5k4586FgF30zZVW(int var1, int var2) {
+		if(Math.pow((double)Math.min(100, Math.abs(var1)), 2.0D) + Math.pow((double)Math.min(100, Math.abs(var2)), 2.0D) < 256.0D) {
+			return this.func_10700_5gU7Uzvz8nL2B471oF833am7hLzT1BpDmvqeeqHlljsoXgtj9YU1z90SpE7J(WorldGenHouseBigUnknownClass.class);
+		} else {
+			NoiseGeneratorPerlin[] var3 = this.field_10703_5Pc19WlxBXZ8Ihy3qfUuPcx9t085ogH7UoD9SJ89Cg2GrfOoa1Sx48CLN30t;
+			int var4 = var3.length;
+
+			for(int var5 = 0; var5 < var4; ++var5) {
+				NoiseGeneratorPerlin var6 = var3[var5];
+				if(var6.generateNoise((double)var1 / 16.0D, (double)var2 / 16.0D) < field_10706_0m3239E5PCmx6014r82tcO6x60s54kxSC8Aa2w47u8Ld1cNJD6SWY9tgmfTg * 2.0D - 1.0D) {
+					return this.func_10700_5gU7Uzvz8nL2B471oF833am7hLzT1BpDmvqeeqHlljsoXgtj9YU1z90SpE7J(WorldGenHouseBigUnknownClass.class);
+				}
+			}
+
+			double var9 = (this.field_10708_5urBUkyczA4gE8l0r1KvTSmPIdQ3954OpoPgh77QHV0e1DruZsU9W2z8l0bB.generateNoise((double)var1, (double)var2) / 2.0D + 0.5D) * (double)this.field_10704_3uifkM897I6agg2PH71ON3u35ZJb2Nt5DC6zj959RQX00bm25Wk8MRmw6w8s;
+			IHouseBig[] var10 = this.field_10707_7RO2WV7OFPctlqUTLBB0sLIlTVVC7N310a410Dr8bC4mQqx5QxcZH86WZ6gY;
+			int var11 = var10.length;
+
+			for(int var7 = 0; var7 < var11; ++var7) {
+				IHouseBig var8 = var10[var7];
+				if(var9 <= (double)var8.func_9883_913vTZx6no47397W6wG95Q5uB254nJBZ27osnW242XcA9M93Alb1ry5oPyVe()) {
+					return var8;
+				}
+
+				var9 -= (double)var8.func_9883_913vTZx6no47397W6wG95Q5uB254nJBZ27osnW242XcA9M93Alb1ry5oPyVe();
+			}
+
+			return this.func_10700_5gU7Uzvz8nL2B471oF833am7hLzT1BpDmvqeeqHlljsoXgtj9YU1z90SpE7J(WorldGenHouseBigUnknownClass.class);
+		}
+	}
+
+	public boolean func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(Class<? extends IHouseBig> var1, int var2, int var3) {
+		IHouseBig var4 = this.func_10702_96UC4VBn6u965CnKc5uafY87yvjBZ6tGq8l4AZ6h876hH5k4586FgF30zZVW(var2, var3);
+		return var1.isInstance(var4);
+	}
+
+	public void func_10699_62uS4fsEkbtpD61o05YRCJmy361J28B0mv5drK254qUSv35oE02IVr7fe8tU(World var1, int var2, int var3) {
+		IHouseBig var4 = this.func_10702_96UC4VBn6u965CnKc5uafY87yvjBZ6tGq8l4AZ6h876hH5k4586FgF30zZVW(var2, var3);
+		var4.func_9884_61qP7q8deV5ospnX8sW5XUMxMcV5ssOU68863452kQ9H403L5ScR3DEa98qO(var1, var2, var3, this);
+	}
+}
--- net/minecraft/src/EntitySnowball.java
+++ net/minecraft/src/EntitySnowball.java
@@ -75,6 +75,21 @@
 					this.setEntityDead();
 				}
 
+				if(var1 == ExtBlocks.targetBlock.blockID) {
+					ItemStack var2 = new ItemStack(ExtBlocks.targetBlock, 1);
+					EntityItem var3 = new EntityItem(this.worldObj, (double)this.xTile + 0.5D, (double)this.yTile + 0.5D, (double)this.zTile + 0.5D, var2);
+					var3.motionX = this.rand.nextDouble() - 0.5D;
+					var3.motionY = this.rand.nextDouble() - 0.5D;
+					var3.motionZ = this.rand.nextDouble() - 0.5D;
+					var3.motionX /= 8.0D;
+					var3.motionY /= 8.0D;
+					var3.motionZ /= 8.0D;
+					this.worldObj.spawnParticle("smoke", (double)this.xTile + 0.5D, (double)this.yTile + 0.5D, (double)this.zTile + 0.5D, 0.0D, 0.0D, 0.0D);
+					this.worldObj.spawnEntityInWorld(var3);
+					this.worldObj.setBlockWithNotify(this.xTile, this.yTile, this.zTile, 0);
+					this.worldObj.markBlocksDirty(this.xTile, this.yTile, this.zTile, this.xTile, this.yTile, this.zTile);
+				}
+
 				return;
 			}
 
@@ -89,12 +104,12 @@
 		}
 
 		Vec3D var15 = Vec3D.createVector(this.posX, this.posY, this.posZ);
-		Vec3D var2 = Vec3D.createVector(this.posX + this.motionX, this.posY + this.motionY, this.posZ + this.motionZ);
-		MovingObjectPosition var3 = this.worldObj.rayTraceBlocks(var15, var2);
+		Vec3D var16 = Vec3D.createVector(this.posX + this.motionX, this.posY + this.motionY, this.posZ + this.motionZ);
+		MovingObjectPosition var17 = this.worldObj.rayTraceBlocks(var15, var16);
 		var15 = Vec3D.createVector(this.posX, this.posY, this.posZ);
-		var2 = Vec3D.createVector(this.posX + this.motionX, this.posY + this.motionY, this.posZ + this.motionZ);
-		if(var3 != null) {
-			var2 = Vec3D.createVector(var3.hitVec.xCoord, var3.hitVec.yCoord, var3.hitVec.zCoord);
+		var16 = Vec3D.createVector(this.posX + this.motionX, this.posY + this.motionY, this.posZ + this.motionZ);
+		if(var17 != null) {
+			var16 = Vec3D.createVector(var17.hitVec.xCoord, var17.hitVec.yCoord, var17.hitVec.zCoord);
 		}
 
 		Entity var4 = null;
@@ -102,17 +117,17 @@
 		double var6 = 0.0D;
 
 		int var8;
-		float var10;
+		float var9;
 		for(var8 = 0; var8 < var5.size(); ++var8) {
-			Entity var9 = (Entity)var5.get(var8);
-			if(var9.canBeCollidedWith() && (var9 != this.thrower || this.ticksInAir >= 5)) {
-				var10 = 0.3F;
-				AxisAlignedBB var11 = var9.boundingBox.expand((double)var10, (double)var10, (double)var10);
-				MovingObjectPosition var12 = var11.calculateIntercept(var15, var2);
+			Entity var10 = (Entity)var5.get(var8);
+			if(var10.canBeCollidedWith() && (var10 != this.thrower || this.ticksInAir >= 5)) {
+				var9 = 0.3F;
+				AxisAlignedBB var11 = var10.boundingBox.expand((double)var9, (double)var9, (double)var9);
+				MovingObjectPosition var12 = var11.calculateIntercept(var15, var16);
 				if(var12 != null) {
 					double var13 = var15.distanceTo(var12.hitVec);
 					if(var13 < var6 || var6 == 0.0D) {
-						var4 = var9;
+						var4 = var10;
 						var6 = var13;
 					}
 				}
@@ -120,11 +135,11 @@
 		}
 
 		if(var4 != null) {
-			var3 = new MovingObjectPosition(var4);
+			var17 = new MovingObjectPosition(var4);
 		}
 
-		if(var3 != null) {
-			if(var3.entityHit != null && var3.entityHit.attackEntityFrom(this.thrower, 0)) {
+		if(var17 != null) {
+			if(var17.entityHit != null && var17.entityHit.attackEntityFrom(this.thrower, 0)) {
 			}
 
 			for(var8 = 0; var8 < 8; ++var8) {
@@ -137,10 +152,10 @@
 		this.posX += this.motionX;
 		this.posY += this.motionY;
 		this.posZ += this.motionZ;
-		float var16 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
+		float var18 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
 		this.rotationYaw = (float)(Math.atan2(this.motionX, this.motionZ) * 180.0D / (double)((float)Math.PI));
 
-		for(this.rotationPitch = (float)(Math.atan2(this.motionY, (double)var16) * 180.0D / (double)((float)Math.PI)); this.rotationPitch - this.prevRotationPitch < -180.0F; this.prevRotationPitch -= 360.0F) {
+		for(this.rotationPitch = (float)(Math.atan2(this.motionY, (double)var18) * 180.0D / (double)((float)Math.PI)); this.rotationPitch - this.prevRotationPitch < -180.0F; this.prevRotationPitch -= 360.0F) {
 		}
 
 		while(this.rotationPitch - this.prevRotationPitch >= 180.0F) {
@@ -157,21 +172,21 @@
 
 		this.rotationPitch = this.prevRotationPitch + (this.rotationPitch - this.prevRotationPitch) * 0.2F;
 		this.rotationYaw = this.prevRotationYaw + (this.rotationYaw - this.prevRotationYaw) * 0.2F;
-		float var17 = 0.99F;
-		var10 = 0.03F;
+		float var19 = 0.99F;
+		var9 = 0.03F;
 		if(this.handleWaterMovement()) {
-			for(int var18 = 0; var18 < 4; ++var18) {
-				float var19 = 0.25F;
-				this.worldObj.spawnParticle("bubble", this.posX - this.motionX * (double)var19, this.posY - this.motionY * (double)var19, this.posZ - this.motionZ * (double)var19, this.motionX, this.motionY, this.motionZ);
+			for(int var20 = 0; var20 < 4; ++var20) {
+				float var21 = 0.25F;
+				this.worldObj.spawnParticle("bubble", this.posX - this.motionX * (double)var21, this.posY - this.motionY * (double)var21, this.posZ - this.motionZ * (double)var21, this.motionX, this.motionY, this.motionZ);
 			}
 
-			var17 = 0.8F;
+			var19 = 0.8F;
 		}
 
-		this.motionX *= (double)var17;
-		this.motionY *= (double)var17;
-		this.motionZ *= (double)var17;
-		this.motionY -= (double)var10;
+		this.motionX *= (double)var19;
+		this.motionY *= (double)var19;
+		this.motionZ *= (double)var19;
+		this.motionY -= (double)var9;
 		this.setPosition(this.posX, this.posY, this.posZ);
 	}
 
--- /dev/null
+++ net/minecraft/src/BlockHidable.java
@@ -1,0 +1,32 @@
+package net.minecraft.src;
+
+public class BlockHidable extends BlockGlass {
+	public boolean render = true;
+	public int id;
+	public int tRes;
+
+	public BlockHidable(int var1, int var2, Material var3, boolean var4) {
+		super(var1, var2, var3, var4);
+		this.id = var1;
+		this.tRes = var2;
+	}
+
+	public int getBlockTexture(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		return this.render ? this.tRes : 160;
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		if(!(var1 instanceof FreerunWorld) && !(var1 instanceof ZMWorld)) {
+			ItemStack var6 = var5.inventory.getCurrentItem();
+			if(var6 == null) {
+				this.render = !this.render;
+				var1.setBlockWithNotify(var2, var3, var4, this.id);
+				return true;
+			} else {
+				return false;
+			}
+		} else {
+			return false;
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/GenHubWaterpool.java
@@ -1,0 +1,9 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class GenHubWaterpool extends WorldGenerator {
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		throw new UnsupportedOperationException("Not implemented yet");
+	}
+}
--- /dev/null
+++ net/minecraft/src/VisualsLucky8.java
@@ -1,0 +1,38 @@
+package net.minecraft.src;
+
+class VisualsLucky8 extends Visuals {
+    final /* synthetic */ VisualsManager field_10080_2fs7tKlMTAr47rFtiA6M8P2vTUQ289G4CFZ04ZW5ZUM9AOaWzKn0z5avZUa4;
+    
+    VisualsLucky8(final VisualsManager la) {
+        this.field_10080_2fs7tKlMTAr47rFtiA6M8P2vTUQ289G4CFZ04ZW5ZUM9AOaWzKn0z5avZUa4 = la;
+    }
+    
+    @Override
+    public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+        return "/unl/beb2cee7-d138-4138-9199-d2fa77127b99.xAL";
+    }
+    
+    @Override
+    public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(final Object... arr) {
+        if (arr[0] instanceof GuiEssenceTransformer && (int)arr[1] == 888) {
+            this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+            return true;
+        }
+        return false;
+    }
+    
+    @Override
+    public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+        return "unlock--lucky8";
+    }
+    
+    @Override
+    public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+        return "Lucky8";
+    }
+    
+    @Override
+    public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+        return "Obtain 888 Essence with one use of the Essence Transformer";
+    }
+}
--- /dev/null
+++ net/minecraft/src/WorldZMUnknownClass.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+import java.util.Comparator;
+
+class WorldZMUnknownClass implements Comparator<WorldZMSpawn> {
+    final /* synthetic */ HandlerSetCheckpointUnknownClass2 field_11443_1BJFlv1X4HOQ8lx6X836c0onpN9Co780DVeO1e481I5DeJmGRUvRU73CHrJa;
+    final /* synthetic */ ZMWorld field_11442_9H1iY0fX5894Xwzi8C649oW21hPHgwTFzq7M5kIcP35DG6r1LXtvFroq7aM3;
+    
+    WorldZMUnknownClass(final ZMWorld yv, final HandlerSetCheckpointUnknownClass2 acm) {
+        this.field_11442_9H1iY0fX5894Xwzi8C649oW21hPHgwTFzq7M5kIcP35DG6r1LXtvFroq7aM3 = yv;
+        this.field_11443_1BJFlv1X4HOQ8lx6X836c0onpN9Co780DVeO1e481I5DeJmGRUvRU73CHrJa = acm;
+    }
+    
+    public int compare(final WorldZMSpawn lz1, final WorldZMSpawn lz2) {
+        final HandlerSetCheckpointUnknownClass2 func_12096_2rdzFnI6r437tV8H4g4amO6c0UvbR1Bk63McJ9C8IuxrI5J07L0IocLF91rI = lz1.field_11034_662fuevXMrncHQHqjFB49Bxq6yi97SM7D89qKtblVUcLLaX82L33EYCU1qp7.func_12096_2rdzFnI6r437tV8H4g4amO6c0UvbR1Bk63McJ9C8IuxrI5J07L0IocLF91rI();
+        final HandlerSetCheckpointUnknownClass2 func_12096_2rdzFnI6r437tV8H4g4amO6c0UvbR1Bk63McJ9C8IuxrI5J07L0IocLF91rI2 = lz2.field_11034_662fuevXMrncHQHqjFB49Bxq6yi97SM7D89qKtblVUcLLaX82L33EYCU1qp7.func_12096_2rdzFnI6r437tV8H4g4amO6c0UvbR1Bk63McJ9C8IuxrI5J07L0IocLF91rI();
+        return Double.valueOf(this.field_11443_1BJFlv1X4HOQ8lx6X836c0onpN9Co780DVeO1e481I5DeJmGRUvRU73CHrJa.func_12185_77E7ly6r5p8AgeD7j1MC3wrd4wUdbSPPEtyupBLDu5J7c0z302AEf633qiD9(func_12096_2rdzFnI6r437tV8H4g4amO6c0UvbR1Bk63McJ9C8IuxrI5J07L0IocLF91rI.field_12186_05n216qDAUZ2kE810Fqi64V6niu79vbRckyfaVY9Fqw11STapU0px02uapMx, func_12096_2rdzFnI6r437tV8H4g4amO6c0UvbR1Bk63McJ9C8IuxrI5J07L0IocLF91rI.field_12187_7Kg8S2j0ooT9LE62UmIi8A7J7Y4sM22qj00KYKP97u5583AOirdarRO6WOFv)).compareTo(Double.valueOf(this.field_11443_1BJFlv1X4HOQ8lx6X836c0onpN9Co780DVeO1e481I5DeJmGRUvRU73CHrJa.func_12185_77E7ly6r5p8AgeD7j1MC3wrd4wUdbSPPEtyupBLDu5J7c0z302AEf633qiD9(func_12096_2rdzFnI6r437tV8H4g4amO6c0UvbR1Bk63McJ9C8IuxrI5J07L0IocLF91rI2.field_12186_05n216qDAUZ2kE810Fqi64V6niu79vbRckyfaVY9Fqw11STapU0px02uapMx, func_12096_2rdzFnI6r437tV8H4g4amO6c0UvbR1Bk63McJ9C8IuxrI5J07L0IocLF91rI2.field_12187_7Kg8S2j0ooT9LE62UmIi8A7J7Y4sM22qj00KYKP97u5583AOirdarRO6WOFv)));
+    }
+}
--- /dev/null
+++ net/minecraft/src/CertUtils.java
@@ -1,0 +1,107 @@
+package net.minecraft.src;
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileReader;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.security.KeyFactory;
+import java.security.KeyPair;
+import java.security.KeyPairGenerator;
+import java.security.NoSuchAlgorithmException;
+import java.security.PrivateKey;
+import java.security.PublicKey;
+import java.security.SecureRandom;
+import java.security.Signature;
+import java.security.spec.PKCS8EncodedKeySpec;
+import java.security.spec.X509EncodedKeySpec;
+import net.minecraft.client.Minecraft;
+
+public class CertUtils {
+	public static String publicKey = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2Fk6C4qL9xtReaZ8ZOPgOAANgazC7BqNQZDbHWnd6+8y4QyPuwJlbkzO+DpLzLtjQsDnrCKJTmtZ5ZMf1GLyRvm45db+e1G+YjSGUzvXPIpb/x508FZPmPJBsgmdFyOAvJ7wPkRhYJ+Pz4DHzz5X6EUoM9iXVlbHNtjb41L0uKJVghFm/xXhMvRg3IIHi2ypaX0KlQcQ9kxjA2BSbDw0VXrm6OYxf4mvlaHOM/iy7LdEJm9fMJpxXaVkqaXrGU+/wdYaIOlEaibMwv8FGZAvpAhU7tN0LpZNHyP91ZCpLu6o2Hw5sBQe+0N2Gm0VKRpzA2N/2eYtmVnU1Ege1H1eswIDAQAB";
+	public static PublicKey loadedPublicKey = null;
+	public static PrivateKey loadedPrivKey = null;
+
+	public static void MakeKeyPair() {
+		try {
+			KeyPairGenerator var0 = KeyPairGenerator.getInstance("RSA");
+			var0.initialize(2048, new SecureRandom());
+			KeyPair var1 = var0.generateKeyPair();
+			File var2 = new File("keys.txt");
+			FileWriter var3 = new FileWriter(var2);
+			var2.createNewFile();
+			var3.write("PrivateKey: " + new String(Base64.getEncoder().encode(var1.getPrivate().getEncoded())) + "\n\n###\n\n");
+			var3.write("PublicKey: " + new String(Base64.getEncoder().encode(var1.getPublic().getEncoded())));
+			var3.flush();
+			var3.close();
+		} catch (NoSuchAlgorithmException var4) {
+			var4.printStackTrace();
+		} catch (IOException var5) {
+			var5.printStackTrace();
+		}
+
+	}
+
+	public static void LoadKeys() {
+		loadedPublicKey = getPublicKey(publicKey);
+		ExtLogger.i("Successfully loaded publicKey");
+		if(Minecraft.loadCerts) {
+			File var0 = new File("certkey");
+			if(var0.exists()) {
+				try {
+					BufferedReader var1 = new BufferedReader(new FileReader(var0));
+					loadedPrivKey = getKey(var1.readLine());
+					ExtLogger.i("Successfully loaded private certificate");
+					var1.close();
+				} catch (FileNotFoundException var2) {
+					var2.printStackTrace();
+				} catch (IOException var3) {
+					var3.printStackTrace();
+				}
+			}
+		}
+
+	}
+
+	public static PrivateKey getKey(String var0) {
+		try {
+			byte[] var1 = Base64.getDecoder().decode(var0.getBytes());
+			PKCS8EncodedKeySpec var2 = new PKCS8EncodedKeySpec(var1);
+			KeyFactory var3 = KeyFactory.getInstance(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9789_9Z0Rf0DDC0E00xcydj7892e71E4s1cG5iX42294z122jeMAG69D8995634eb));
+			return var3.generatePrivate(var2);
+		} catch (Exception var4) {
+			var4.printStackTrace();
+			return null;
+		}
+	}
+
+	public static PublicKey getPublicKey(String var0) {
+		try {
+			byte[] var1 = Base64.getDecoder().decode(var0.getBytes());
+			X509EncodedKeySpec var2 = new X509EncodedKeySpec(var1);
+			KeyFactory var3 = KeyFactory.getInstance(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9789_9Z0Rf0DDC0E00xcydj7892e71E4s1cG5iX42294z122jeMAG69D8995634eb));
+			return var3.generatePublic(var2);
+		} catch (Exception var4) {
+			var4.printStackTrace();
+			return null;
+		}
+	}
+
+	public static String sign(String var0, PrivateKey var1) throws Exception {
+		Signature var2 = Signature.getInstance(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9793_29dm1e3GNDeOTZqsS1t29B2w34ks2F6TVj4W2QNMh33p0qFqKW79YSp421af));
+		var2.initSign(var1);
+		var2.update(var0.getBytes("UTF-8"));
+		byte[] var3 = var2.sign();
+		return Base64.getEncoder().encodeToString(var3);
+	}
+
+	public static boolean verify(String var0, String var1) throws Exception {
+		PublicKey var2 = loadedPublicKey;
+		Signature var3 = Signature.getInstance(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9793_29dm1e3GNDeOTZqsS1t29B2w34ks2F6TVj4W2QNMh33p0qFqKW79YSp421af));
+		var3.initVerify(var2);
+		var3.update(var0.getBytes("UTF-8"));
+		byte[] var4 = Base64.getDecoder().decode(var1);
+		return var3.verify(var4);
+	}
+}
--- net/minecraft/src/EntityList.java
+++ net/minecraft/src/EntityList.java
@@ -4,12 +4,12 @@
 import java.util.Map;
 
 public class EntityList {
-	private static Map stringToClassMapping = new HashMap();
-	private static Map classToStringMapping = new HashMap();
-	private static Map IDtoClassMapping = new HashMap();
-	private static Map classToIDMapping = new HashMap();
+	private static Map<String, Class<? extends Entity>> stringToClassMapping = new HashMap();
+	private static Map<Class<? extends Entity>, String> classToStringMapping = new HashMap();
+	private static Map<Integer, Class<? extends Entity>> IDtoClassMapping = new HashMap();
+	private static Map<Class<? extends Entity>, Integer> classToIDMapping = new HashMap();
 
-	private static void addMapping(Class var0, String var1, int var2) {
+	private static void addMapping(Class<? extends Entity> var0, String var1, int var2) {
 		stringToClassMapping.put(var1, var0);
 		classToStringMapping.put(var0, var1);
 		IDtoClassMapping.put(Integer.valueOf(var2), var0);
@@ -100,5 +100,11 @@
 		addMapping(EntityFallingSand.class, "FallingSand", 21);
 		addMapping(EntityMinecart.class, "Minecart", 40);
 		addMapping(EntityBoat.class, "Boat", 41);
+		addMapping(EntityShadowPlayer.class, "recruiter alphaver (real)", 69);
+		addMapping(EntityGiantBoss.class, "Colossus", 70);
+		addMapping(EntityAmoung.class, "amonus", 72);
+		addMapping(EntityEssenceProjectile.class, "EssenceProjectile", 77);
+		addMapping(EntityObserver.class, "Observer", 90);
+		ModLoader.AddAllEntityIDs();
 	}
 }
--- /dev/null
+++ net/minecraft/src/BlockContainerOld.java
@@ -1,0 +1,24 @@
+package net.minecraft.src;
+
+public abstract class BlockContainerOld extends BlockOld {
+	protected BlockContainerOld(int var1, Material var2) {
+		super(var1, var2);
+		isBlockContainer[var1] = true;
+	}
+
+	protected BlockContainerOld(int var1, int var2, Material var3) {
+		super(var1, var2, var3);
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		super.onBlockAdded(var1, var2, var3, var4);
+		var1.setBlockTileEntity(var2, var3, var4, this.getBlockEntity());
+	}
+
+	public void onBlockRemoval(World var1, int var2, int var3, int var4) {
+		super.onBlockRemoval(var1, var2, var3, var4);
+		var1.removeBlockTileEntity(var2, var3, var4);
+	}
+
+	protected abstract TileEntity getBlockEntity();
+}
--- net/minecraft/src/RecipeSorter.java
+++ net/minecraft/src/RecipeSorter.java
@@ -2,7 +2,7 @@
 
 import java.util.Comparator;
 
-class RecipeSorter implements Comparator {
+class RecipeSorter implements Comparator<CraftingRecipe> {
 	final CraftingManager craftingManager;
 
 	RecipeSorter(CraftingManager var1) {
@@ -13,7 +13,7 @@
 		return var2.getRecipeSize() < var1.getRecipeSize() ? -1 : (var2.getRecipeSize() > var1.getRecipeSize() ? 1 : 0);
 	}
 
-	public int compare(Object var1, Object var2) {
-		return this.compareRecipes((CraftingRecipe)var1, (CraftingRecipe)var2);
+	public int compare(CraftingRecipe var1, CraftingRecipe var2) {
+		return this.compareRecipes(var1, var2);
 	}
 }
--- net/minecraft/src/GuiContainer.java
+++ net/minecraft/src/GuiContainer.java
@@ -9,10 +9,11 @@
 	private static RenderItem itemRenderer = new RenderItem();
 	protected int xSize = 176;
 	protected int ySize = 166;
-	protected List inventorySlots = new ArrayList();
+	protected List<SlotInventory> inventorySlots = new ArrayList();
 
 	public void drawScreen(int var1, int var2, float var3) {
 		this.drawDefaultBackground();
+		GL11.glEnable(GL11.GL_BLEND);
 		int var4 = (this.width - this.xSize) / 2;
 		int var5 = (this.height - this.ySize) / 2;
 		this.drawGuiContainerBackgroundLayer(var3);
@@ -24,26 +25,48 @@
 		GL11.glTranslatef((float)var4, (float)var5, 0.0F);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
+		boolean var6 = false;
+		String var7 = "";
+		String var8 = "";
+		int var9 = 0;
+		int var10 = 0;
 
-		for(int var6 = 0; var6 < this.inventorySlots.size(); ++var6) {
-			SlotInventory var7 = (SlotInventory)this.inventorySlots.get(var6);
-			this.drawSlotInventory(var7);
-			if(var7.getIsMouseOverSlot(var1, var2)) {
+		for(int var11 = 0; var11 < this.inventorySlots.size(); ++var11) {
+			SlotInventory var12 = (SlotInventory)this.inventorySlots.get(var11);
+			this.drawSlotInventory(var12);
+			if(var12.getIsMouseOverSlot(var1, var2)) {
 				GL11.glDisable(GL11.GL_LIGHTING);
 				GL11.glDisable(GL11.GL_DEPTH_TEST);
-				int var8 = var7.xDisplayPosition;
-				int var9 = var7.yDisplayPosition;
-				this.drawGradientRect(var8, var9, var8 + 16, var9 + 16, -2130706433, -2130706433);
+				int var13 = var12.xDisplayPosition;
+				int var14 = var12.yDisplayPosition;
+				drawGradientRect(var13, var14, var13 + 16, var14 + 16, -2130706433, -2130706433);
+				ItemStack var15 = var12.getStack();
+				if(var15 != null) {
+					String var16 = "";
+					if(var15.itemID < Short.MAX_VALUE) {
+						var16 = Block.blocksList[var15.itemID].blockName;
+					} else {
+						var16 = var15.getItem().itemName();
+					}
+
+					if(var16 != "") {
+						var6 = true;
+						var7 = var16;
+						var9 = var13 + 16;
+						var10 = var14;
+					}
+				}
+
 				GL11.glEnable(GL11.GL_LIGHTING);
 				GL11.glEnable(GL11.GL_DEPTH_TEST);
 			}
 		}
 
-		InventoryPlayer var10 = this.mc.thePlayer.inventory;
-		if(var10.draggedItemStack != null) {
+		InventoryPlayer var17 = this.mc.thePlayer.inventory;
+		if(var17.draggedItemStack != null) {
 			GL11.glTranslatef(0.0F, 0.0F, 32.0F);
-			itemRenderer.renderItemIntoGUI(this.fontRenderer, this.mc.renderEngine, var10.draggedItemStack, var1 - var4 - 8, var2 - var5 - 8);
-			itemRenderer.renderItemOverlayIntoGUI(this.fontRenderer, this.mc.renderEngine, var10.draggedItemStack, var1 - var4 - 8, var2 - var5 - 8);
+			itemRenderer.renderItemIntoGUI(this.fontRenderer, this.mc.renderEngine, var17.draggedItemStack, var1 - var4 - 8, var2 - var5 - 8);
+			itemRenderer.renderItemOverlayIntoGUI(this.fontRenderer, this.mc.renderEngine, var17.draggedItemStack, var1 - var4 - 8, var2 - var5 - 8);
 		}
 
 		GL11.glDisable(GL12.GL_RESCALE_NORMAL);
@@ -51,9 +74,18 @@
 		GL11.glDisable(GL11.GL_LIGHTING);
 		GL11.glDisable(GL11.GL_DEPTH_TEST);
 		this.drawGuiContainerForegroundLayer();
+		if(var6) {
+			int var18 = this.mc.fontRenderer.getStringWidth(var7);
+			Gui.drawGradientRect(var9, var10, var9 + var18 + 8, var10 + 16, -16777216, 536870912);
+			Gui.drawGradientRect(var9, var10, var9 + var18 + 8, var10 + 1, -6168065, -3149569);
+			Gui.drawGradientRect(var9, var10, var9 + var18 + 8, var10 + 16, 547480063, 536870912);
+			this.mc.fontRenderer.drawStringWithShadow(var7, var9 + 4, var10 + 3, -1);
+		}
+
+		GL11.glPopMatrix();
+		super.drawScreen(var1, var2, var3);
 		GL11.glEnable(GL11.GL_LIGHTING);
 		GL11.glEnable(GL11.GL_DEPTH_TEST);
-		GL11.glPopMatrix();
 	}
 
 	protected void drawGuiContainerForegroundLayer() {
@@ -94,79 +126,83 @@
 	}
 
 	protected void mouseClicked(int var1, int var2, int var3) {
+		super.mouseClicked(var1, var2, var3);
 		if(var3 == 0 || var3 == 1) {
 			Slot var4 = this.getSlotAtPosition(var1, var2);
 			InventoryPlayer var5 = this.mc.thePlayer.inventory;
-			int var7;
+			int var6;
 			if(var4 != null) {
-				ItemStack var6 = var4.getStack();
-				if(var6 != null || var5.draggedItemStack != null) {
-					if(var6 != null && var5.draggedItemStack == null) {
-						var7 = var3 == 0 ? var6.stackSize : (var6.stackSize + 1) / 2;
-						var5.draggedItemStack = var4.inventory.decrStackSize(var4.slotIndex, var7);
-						if(var6.stackSize == 0) {
+				ItemStack var7 = var4.getStack();
+				if(var7 != null || var5.draggedItemStack != null) {
+					if(var7 != null && var5.draggedItemStack == null) {
+						var6 = var3 == 0 ? var7.stackSize : (var7.stackSize + 1) / 2;
+						var5.draggedItemStack = var4.inventory.decrStackSize(var4.slotIndex, var6);
+						if(var7.stackSize == 0) {
 							var4.putStack((ItemStack)null);
 						}
 
 						var4.onPickupFromSlot();
-					} else if(var6 == null && var5.draggedItemStack != null && var4.isItemValid(var5.draggedItemStack)) {
-						var7 = var3 == 0 ? var5.draggedItemStack.stackSize : 1;
-						if(var7 > var4.inventory.getInventoryStackLimit()) {
-							var7 = var4.inventory.getInventoryStackLimit();
+					} else if(var7 == null && var5.draggedItemStack != null && var4.isItemValid(var5.draggedItemStack)) {
+						var6 = var3 == 0 ? var5.draggedItemStack.stackSize : 1;
+						if(var6 > var4.inventory.getInventoryStackLimit()) {
+							var6 = var4.inventory.getInventoryStackLimit();
 						}
 
-						var4.putStack(var5.draggedItemStack.splitStack(var7));
+						var4.putStack(var5.draggedItemStack.splitStack(var6));
 						if(var5.draggedItemStack.stackSize == 0) {
 							var5.draggedItemStack = null;
 						}
-					} else if(var6 != null && var5.draggedItemStack != null) {
+					} else if(var7 != null && var5.draggedItemStack != null) {
 						if(var4.isItemValid(var5.draggedItemStack)) {
-							if(var6.itemID != var5.draggedItemStack.itemID) {
+							if(var7.itemID != var5.draggedItemStack.itemID) {
 								if(var5.draggedItemStack.stackSize <= var4.inventory.getInventoryStackLimit()) {
 									var4.putStack(var5.draggedItemStack);
-									var5.draggedItemStack = var6;
+									var5.draggedItemStack = var7;
+									var4.onSlotChanged();
 								}
-							} else if(var6.itemID == var5.draggedItemStack.itemID) {
+							} else if(var7.itemID == var5.draggedItemStack.itemID) {
 								if(var3 == 0) {
-									var7 = var5.draggedItemStack.stackSize;
-									if(var7 > var4.inventory.getInventoryStackLimit() - var6.stackSize) {
-										var7 = var4.inventory.getInventoryStackLimit() - var6.stackSize;
-									}
-
-									if(var7 > var5.draggedItemStack.getMaxStackSize() - var6.stackSize) {
-										var7 = var5.draggedItemStack.getMaxStackSize() - var6.stackSize;
-									}
-
-									var5.draggedItemStack.splitStack(var7);
+									var6 = var5.draggedItemStack.stackSize;
+									if(var6 > var4.inventory.getInventoryStackLimit() - var7.stackSize) {
+										var6 = var4.inventory.getInventoryStackLimit() - var7.stackSize;
+									}
+
+									if(var6 > var5.draggedItemStack.getMaxStackSize() - var7.stackSize) {
+										var6 = var5.draggedItemStack.getMaxStackSize() - var7.stackSize;
+									}
+
+									var5.draggedItemStack.splitStack(var6);
 									if(var5.draggedItemStack.stackSize == 0) {
 										var5.draggedItemStack = null;
 									}
 
-									var6.stackSize += var7;
+									var7.stackSize += var6;
+									var4.onSlotChanged();
 								} else if(var3 == 1) {
-									var7 = 1;
-									if(var7 > var4.inventory.getInventoryStackLimit() - var6.stackSize) {
-										var7 = var4.inventory.getInventoryStackLimit() - var6.stackSize;
-									}
-
-									if(var7 > var5.draggedItemStack.getMaxStackSize() - var6.stackSize) {
-										var7 = var5.draggedItemStack.getMaxStackSize() - var6.stackSize;
-									}
-
-									var5.draggedItemStack.splitStack(var7);
+									var6 = 1;
+									if(var6 > var4.inventory.getInventoryStackLimit() - var7.stackSize) {
+										var6 = var4.inventory.getInventoryStackLimit() - var7.stackSize;
+									}
+
+									if(var6 > var5.draggedItemStack.getMaxStackSize() - var7.stackSize) {
+										var6 = var5.draggedItemStack.getMaxStackSize() - var7.stackSize;
+									}
+
+									var5.draggedItemStack.splitStack(var6);
 									if(var5.draggedItemStack.stackSize == 0) {
 										var5.draggedItemStack = null;
 									}
 
-									var6.stackSize += var7;
+									var7.stackSize += var6;
+									var4.onSlotChanged();
 								}
 							}
-						} else if(var6.itemID == var5.draggedItemStack.itemID && var5.draggedItemStack.getMaxStackSize() > 1) {
-							var7 = var6.stackSize;
-							if(var7 > 0 && var7 + var5.draggedItemStack.stackSize <= var5.draggedItemStack.getMaxStackSize()) {
-								var5.draggedItemStack.stackSize += var7;
-								var6.splitStack(var7);
-								if(var6.stackSize == 0) {
+						} else if(var7.itemID == var5.draggedItemStack.itemID && var5.draggedItemStack.getMaxStackSize() > 1) {
+							var6 = var7.stackSize;
+							if(var6 > 0 && var6 + var5.draggedItemStack.stackSize <= var5.draggedItemStack.getMaxStackSize()) {
+								var5.draggedItemStack.stackSize += var6;
+								var7.splitStack(var6);
+								if(var7.stackSize == 0) {
 									var4.putStack((ItemStack)null);
 								}
 
@@ -179,8 +215,8 @@
 				var4.onSlotChanged();
 			} else if(var5.draggedItemStack != null) {
 				int var9 = (this.width - this.xSize) / 2;
-				var7 = (this.height - this.ySize) / 2;
-				if(var1 < var9 || var2 < var7 || var1 >= var9 + this.xSize || var2 >= var7 + this.xSize) {
+				var6 = (this.height - this.ySize) / 2;
+				if(var1 < var9 || var2 < var6 || var1 >= var9 + this.xSize || var2 >= var6 + this.xSize) {
 					EntityPlayerSP var8 = this.mc.thePlayer;
 					if(var3 == 0) {
 						var8.dropPlayerItem(var5.draggedItemStack);
@@ -200,6 +236,7 @@
 	}
 
 	protected void mouseMovedOrUp(int var1, int var2, int var3) {
+		super.mouseMovedOrUp(var1, var2, var3);
 		if(var3 == 0) {
 		}
 
--- /dev/null
+++ net/minecraft/src/GuiPlayer.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+import org.lwjgl.opengl.GL11;
+
+public class GuiPlayer extends GuiContainer {
+	public void initGui() {
+		this.controlList.clear();
+		this.controlList.add(new GuiSmallButton(0, 0, 0, ""));
+	}
+
+	protected void drawGuiContainerBackgroundLayer(float var1) {
+		int var2 = this.mc.renderEngine.getTexture("/gui/guiplayer.png");
+		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+		this.mc.renderEngine.bindTexture(var2);
+		int var3 = (this.width - this.xSize) / 2;
+		int var4 = (this.height - this.ySize) / 2;
+		this.drawTexturedModalRect(var3, var4, 0, 0, this.xSize, this.ySize);
+	}
+}
--- net/minecraft/src/BlockFence.java
+++ net/minecraft/src/BlockFence.java
@@ -7,7 +7,7 @@
 		super(var1, var2, Material.wood);
 	}
 
-	public void getCollidingBoundingBoxes(World var1, int var2, int var3, int var4, AxisAlignedBB var5, ArrayList var6) {
+	public void getCollidingBoundingBoxes(World var1, int var2, int var3, int var4, AxisAlignedBB var5, ArrayList<AxisAlignedBB> var6, Entity var7) {
 		var6.add(AxisAlignedBB.getBoundingBoxFromPool((double)var2, (double)var3, (double)var4, (double)(var2 + 1), (double)var3 + 1.5D, (double)(var4 + 1)));
 	}
 
--- net/minecraft/src/Explosion.java
+++ net/minecraft/src/Explosion.java
@@ -3,126 +3,146 @@
 import java.util.ArrayList;
 import java.util.HashSet;
 import java.util.List;
+import java.util.Random;
 
 public class Explosion {
 	public void doExplosion(World var1, Entity var2, double var3, double var5, double var7, float var9) {
+		this.func_11007_4ZrtJ8eBO5K7ZvbM8Gw126oo9J029QsI1l4qUTABn1j8Wtu9S1EVeBVuFfIl(var1, var2, var3, var5, var7, var9, true, -1);
+	}
+
+	public void func_11007_4ZrtJ8eBO5K7ZvbM8Gw126oo9J029QsI1l4qUTABn1j8Wtu9S1EVeBVuFfIl(World var1, Entity var2, double var3, double var5, double var7, float var9, boolean var10, int var11) {
 		var1.playSoundEffect(var3, var5, var7, "random.explode", 4.0F, (1.0F + (var1.rand.nextFloat() - var1.rand.nextFloat()) * 0.2F) * 0.7F);
-		HashSet var10 = new HashSet();
-		float var11 = var9;
-		byte var12 = 16;
-
-		int var13;
-		int var14;
+		HashSet var12 = new HashSet();
+		float var13 = var9;
+		byte var14 = 16;
 		int var15;
-		double var25;
-		double var27;
-		double var29;
-		for(var13 = 0; var13 < var12; ++var13) {
-			for(var14 = 0; var14 < var12; ++var14) {
-				for(var15 = 0; var15 < var12; ++var15) {
-					if(var13 == 0 || var13 == var12 - 1 || var14 == 0 || var14 == var12 - 1 || var15 == 0 || var15 == var12 - 1) {
-						double var16 = (double)((float)var13 / ((float)var12 - 1.0F) * 2.0F - 1.0F);
-						double var18 = (double)((float)var14 / ((float)var12 - 1.0F) * 2.0F - 1.0F);
-						double var20 = (double)((float)var15 / ((float)var12 - 1.0F) * 2.0F - 1.0F);
-						double var22 = Math.sqrt(var16 * var16 + var18 * var18 + var20 * var20);
-						var16 /= var22;
-						var18 /= var22;
-						var20 /= var22;
-						float var24 = var9 * (0.7F + var1.rand.nextFloat() * 0.6F);
-						var25 = var3;
-						var27 = var5;
-						var29 = var7;
-
-						for(float var31 = 0.3F; var24 > 0.0F; var24 -= var31 * (12.0F / 16.0F)) {
-							int var32 = MathHelper.floor_double(var25);
-							int var33 = MathHelper.floor_double(var27);
-							int var34 = MathHelper.floor_double(var29);
-							int var35 = var1.getBlockId(var32, var33, var34);
-							if(var35 > 0) {
-								var24 -= (Block.blocksList[var35].getExplosionResistance(var2) + 0.3F) * var31;
-							}
-
-							if(var24 > 0.0F) {
-								var10.add(new ChunkPosition(var32, var33, var34));
-							}
-
-							var25 += var16 * (double)var31;
-							var27 += var18 * (double)var31;
-							var29 += var20 * (double)var31;
+		int var16;
+		int var17;
+		double var18;
+		double var20;
+		double var22;
+		int var25;
+		int var35;
+		int var36;
+		if(var10) {
+			for(var15 = 0; var15 < var14; ++var15) {
+				for(var16 = 0; var16 < var14; ++var16) {
+					for(var17 = 0; var17 < var14; ++var17) {
+						if(var15 == 0 || var15 == var14 - 1 || var16 == 0 || var16 == var14 - 1 || var17 == 0 || var17 == var14 - 1) {
+							double var24 = (double)((float)var15 / ((float)var14 - 1.0F) * 2.0F - 1.0F);
+							double var26 = (double)((float)var16 / ((float)var14 - 1.0F) * 2.0F - 1.0F);
+							double var28 = (double)((float)var17 / ((float)var14 - 1.0F) * 2.0F - 1.0F);
+							double var30 = Math.sqrt(var24 * var24 + var26 * var26 + var28 * var28);
+							var24 /= var30;
+							var26 /= var30;
+							var28 /= var30;
+							float var32 = var9 * (0.7F + var1.rand.nextFloat() * 0.6F);
+							var18 = var3;
+							var20 = var5;
+							var22 = var7;
+
+							for(float var33 = 0.3F; var32 > 0.0F; var32 -= var33 * (12.0F / 16.0F)) {
+								int var34 = MathHelper.floor_double(var18);
+								var35 = MathHelper.floor_double(var20);
+								var36 = MathHelper.floor_double(var22);
+								int var37 = var1.getBlockId(var34, var35, var36);
+								if(var37 > 0) {
+									var32 -= (Block.blocksList[var37].getExplosionResistance(var2) + 0.3F) * var33;
+								}
+
+								if(var32 > 0.0F) {
+									var12.add(new ChunkPosition(var34, var35, var36));
+								}
+
+								var18 += var24 * (double)var33;
+								var20 += var26 * (double)var33;
+								var22 += var28 * (double)var33;
+							}
 						}
 					}
 				}
 			}
+		} else {
+			Random var51 = new Random();
+
+			for(var25 = 0; var25 != 20; ++var25) {
+				var1.spawnParticle("explode", var3 + var51.nextDouble() * 8.0D - 4.0D, var5 + var51.nextDouble() * 2.0D, var7 + var51.nextDouble() * 8.0D - 4.0D, 0.0D, 0.1D, 0.0D);
+				var1.spawnParticle("smoke", var3 + var51.nextDouble() * 8.0D - 4.0D, var5 + var51.nextDouble() * 2.0D, var7 + var51.nextDouble() * 8.0D - 4.0D, 0.0D, 0.1D, 0.0D);
+			}
 		}
 
 		var9 *= 2.0F;
-		var13 = MathHelper.floor_double(var3 - (double)var9 - 1.0D);
-		var14 = MathHelper.floor_double(var3 + (double)var9 + 1.0D);
-		var15 = MathHelper.floor_double(var5 - (double)var9 - 1.0D);
-		int var45 = MathHelper.floor_double(var5 + (double)var9 + 1.0D);
-		int var17 = MathHelper.floor_double(var7 - (double)var9 - 1.0D);
-		int var46 = MathHelper.floor_double(var7 + (double)var9 + 1.0D);
-		List var19 = var1.getEntitiesWithinAABBExcludingEntity(var2, AxisAlignedBB.getBoundingBoxFromPool((double)var13, (double)var15, (double)var17, (double)var14, (double)var45, (double)var46));
-		Vec3D var47 = Vec3D.createVector(var3, var5, var7);
+		var15 = MathHelper.floor_double(var3 - (double)var9 - 1.0D);
+		var16 = MathHelper.floor_double(var3 + (double)var9 + 1.0D);
+		var17 = MathHelper.floor_double(var5 - (double)var9 - 1.0D);
+		int var52 = MathHelper.floor_double(var5 + (double)var9 + 1.0D);
+		var25 = MathHelper.floor_double(var7 - (double)var9 - 1.0D);
+		int var53 = MathHelper.floor_double(var7 + (double)var9 + 1.0D);
+		List var27 = var1.getEntitiesWithinAABBExcludingEntity(var2, AxisAlignedBB.getBoundingBoxFromPool((double)var15, (double)var17, (double)var25, (double)var16, (double)var52, (double)var53));
+		Vec3D var54 = Vec3D.createVector(var3, var5, var7);
 
+		double var29;
+		double var31;
 		double var55;
-		double var56;
-		double var57;
-		for(int var21 = 0; var21 < var19.size(); ++var21) {
-			Entity var49 = (Entity)var19.get(var21);
-			double var23 = var49.getDistance(var3, var5, var7) / (double)var9;
-			if(var23 <= 1.0D) {
-				var25 = var49.posX - var3;
-				var27 = var49.posY - var5;
-				var29 = var49.posZ - var7;
-				var55 = (double)MathHelper.sqrt_double(var25 * var25 + var27 * var27 + var29 * var29);
-				var25 /= var55;
-				var27 /= var55;
-				var29 /= var55;
-				var56 = (double)var1.getBlockDensity(var47, var49.boundingBox);
-				var57 = (1.0D - var23) * var56;
-				var49.attackEntityFrom(var2, (int)((var57 * var57 + var57) / 2.0D * 8.0D * (double)var9 + 1.0D));
-				var49.motionX += var25 * var57;
-				var49.motionY += var27 * var57;
-				var49.motionZ += var29 * var57;
+		for(var35 = 0; var35 < var27.size(); ++var35) {
+			Entity var57 = (Entity)var27.get(var35);
+			double var58 = var57.getDistance(var3, var5, var7) / (double)var9;
+			if(var58 <= 1.0D) {
+				var18 = var57.posX - var3;
+				var20 = var57.posY - var5;
+				var22 = var57.posZ - var7;
+				var29 = (double)MathHelper.sqrt_double(var18 * var18 + var20 * var20 + var22 * var22);
+				var18 /= var29;
+				var20 /= var29;
+				var22 /= var29;
+				var31 = (double)var1.getBlockDensity(var54, var57.boundingBox);
+				var55 = (1.0D - var58) * var31;
+				if(var11 == -1) {
+					var57.attackEntityFrom(var2, (int)((var55 * var55 + var55) / 2.0D * 8.0D * (double)var9 + 1.0D));
+				} else {
+					var57.attackEntityFrom(var2, var11);
+				}
+
+				var57.motionX += var18 * var55;
+				var57.motionY += var20 * var55;
+				var57.motionZ += var22 * var55;
 			}
 		}
 
-		var9 = var11;
-		ArrayList var48 = new ArrayList();
-		var48.addAll(var10);
-
-		for(int var50 = var48.size() - 1; var50 >= 0; --var50) {
-			ChunkPosition var51 = (ChunkPosition)var48.get(var50);
-			int var52 = var51.x;
-			int var53 = var51.y;
-			int var26 = var51.z;
-			int var54 = var1.getBlockId(var52, var53, var26);
-
-			for(int var28 = 0; var28 < 1; ++var28) {
-				var29 = (double)((float)var52 + var1.rand.nextFloat());
-				var55 = (double)((float)var53 + var1.rand.nextFloat());
-				var56 = (double)((float)var26 + var1.rand.nextFloat());
-				var57 = var29 - var3;
-				double var37 = var55 - var5;
-				double var39 = var56 - var7;
-				double var41 = (double)MathHelper.sqrt_double(var57 * var57 + var37 * var37 + var39 * var39);
-				var57 /= var41;
-				var37 /= var41;
-				var39 /= var41;
-				double var43 = 0.5D / (var41 / (double)var9 + 0.1D);
-				var43 *= (double)(var1.rand.nextFloat() * var1.rand.nextFloat() + 0.3F);
-				var57 *= var43;
-				var37 *= var43;
-				var39 *= var43;
-				var1.spawnParticle("explode", (var29 + var3 * 1.0D) / 2.0D, (var55 + var5 * 1.0D) / 2.0D, (var56 + var7 * 1.0D) / 2.0D, var57, var37, var39);
-				var1.spawnParticle("smoke", var29, var55, var56, var57, var37, var39);
+		var9 = var13;
+		ArrayList var56 = new ArrayList(var12);
+
+		for(var36 = var56.size() - 1; var36 >= 0; --var36) {
+			ChunkPosition var59 = (ChunkPosition)var56.get(var36);
+			int var38 = var59.x;
+			int var39 = var59.y;
+			int var40 = var59.z;
+			int var41 = var1.getBlockId(var38, var39, var40);
+
+			for(int var42 = 0; var42 < 1; ++var42) {
+				var22 = (double)((float)var38 + var1.rand.nextFloat());
+				var29 = (double)((float)var39 + var1.rand.nextFloat());
+				var31 = (double)((float)var40 + var1.rand.nextFloat());
+				var55 = var22 - var3;
+				double var43 = var29 - var5;
+				double var45 = var31 - var7;
+				double var47 = (double)MathHelper.sqrt_double(var55 * var55 + var43 * var43 + var45 * var45);
+				var55 /= var47;
+				var43 /= var47;
+				var45 /= var47;
+				double var49 = 0.5D / (var47 / (double)var9 + 0.1D);
+				var49 *= (double)(var1.rand.nextFloat() * var1.rand.nextFloat() + 0.3F);
+				var55 *= var49;
+				var43 *= var49;
+				var45 *= var49;
+				var1.spawnParticle("explode", (var22 + var3 * 1.0D) / 2.0D, (var29 + var5 * 1.0D) / 2.0D, (var31 + var7 * 1.0D) / 2.0D, var55, var43, var45);
+				var1.spawnParticle("smoke", var22, var29, var31, var55, var43, var45);
 			}
 
-			if(var54 > 0) {
-				Block.blocksList[var54].dropBlockAsItemWithChance(var1, var52, var53, var26, var1.getBlockMetadata(var52, var53, var26), 0.3F);
-				var1.setBlockWithNotify(var52, var53, var26, 0);
-				Block.blocksList[var54].onBlockDestroyedByExplosion(var1, var52, var53, var26);
+			if(var41 > 0) {
+				Block.blocksList[var41].dropBlockAsItemWithChance(var1, var38, var39, var40, var1.getBlockMetadata(var38, var39, var40), 0.3F);
+				var1.setBlockWithNotify(var38, var39, var40, 0);
+				Block.blocksList[var41].onBlockDestroyedByExplosion(var1, var38, var39, var40);
 			}
 		}
 
--- net/minecraft/src/NoiseGeneratorOctaves.java
+++ net/minecraft/src/NoiseGeneratorOctaves.java
@@ -4,7 +4,7 @@
 
 public class NoiseGeneratorOctaves extends NoiseGenerator {
 	private NoiseGeneratorPerlin[] generatorCollection;
-	private int octaves;
+	private final int octaves;
 
 	public NoiseGeneratorOctaves(Random var1, int var2) {
 		this.octaves = var2;
--- /dev/null
+++ net/minecraft/src/CommandStopdemo.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+class CommandStopdemo extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8559_91sofwz6wkc60aZu9JnnxWL2Vk0hQo6z0q0gbJb82Zb2S34ygaC4LxL05C5H;
+    
+    CommandStopdemo(final CommandManager abb) {
+        this.field_8559_91sofwz6wkc60aZu9JnnxWL2Vk0hQo6z0q0gbJb82Zb2S34ygaC4LxL05C5H = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.func_12204_8r9RTHlpJjIj8rv8a68Pq9g6006yw2MZ4W4u9N9p23i9532c8WU7ByApxh50();
+        System.out.println("Demo record finished, " + InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.field_12210_1g5X6A25jcG50Z3d47g1ufx5qZuFNya14hd6OpQ6a42pd2RKbHZAqAO16G5P.size() + " frames");
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockGrassOld.java
@@ -1,0 +1,44 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockGrassOld extends BlockOld {
+	protected BlockGrassOld(int var1) {
+		super(var1, Material.grass);
+		this.blockIndexInTexture = 3;
+		this.setTickOnLoad(true);
+	}
+
+	public int getBlockTexture(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		if(var5 == 1) {
+			return 0;
+		} else if(var5 == 0) {
+			return 2;
+		} else {
+			Material var6 = var1.getBlockMaterial(var2, var3 + 1, var4);
+			return var6 != Material.snow && var6 != Material.craftedSnow ? 3 : 68;
+		}
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(var1.getBlockLightValue(var2, var3 + 1, var4) < 4 && var1.getBlockMaterial(var2, var3 + 1, var4).getCanBlockGrass()) {
+			if(var5.nextInt(4) != 0) {
+				return;
+			}
+
+			var1.setBlockWithNotify(var2, var3, var4, BlockOld.dirt.blockID);
+		} else if(var1.getBlockLightValue(var2, var3 + 1, var4) >= 9) {
+			int var6 = var2 + var5.nextInt(3) - 1;
+			int var7 = var3 + var5.nextInt(5) - 3;
+			int var8 = var4 + var5.nextInt(3) - 1;
+			if(var1.getBlockId(var6, var7, var8) == BlockOld.dirt.blockID && var1.getBlockLightValue(var6, var7 + 1, var8) >= 4 && !var1.getBlockMaterial(var6, var7 + 1, var8).getCanBlockGrass()) {
+				var1.setBlockWithNotify(var6, var7, var8, BlockOld.grass.blockID);
+			}
+		}
+
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return BlockOld.dirt.idDropped(0, var2);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockGrassTall.java
@@ -1,0 +1,33 @@
+package net.minecraft.src;
+
+public class BlockGrassTall extends BlockFlower {
+	int field_8361_9xg75975dD6A4d9T5oI8tGF0oWpQ42zz2ef0y7RQs41s83hqjse1ISW95Na6;
+
+	public BlockGrassTall(int var1, int var2, int var3) {
+		super(var1, var2);
+		this.field_8361_9xg75975dD6A4d9T5oI8tGF0oWpQ42zz2ef0y7RQs41s83hqjse1ISW95Na6 = var3;
+	}
+
+	public int func_8086_562a2lhwZKvA2q1SYRkk6a3ib277RkRI785Nc3EOo7NAF01ZLdp6C8534NoH(IBlockAccess var1, int var2, int var3, double var4, double var6, double var8) {
+		if(!ScreenDebugMenu.field_7964_8G80Kimsj2t150ZuEHxk97V3fSV455qzurOOVWgX8oTDDCEH9YV34z9vRAoC) {
+			if(var1 == null) {
+				return this.blockIndexInTexture;
+			} else {
+				WorldGenMyconUnknownClass var10 = var1.func_7342_9805301CWs03An9555qIw883P54dcq9802DkM5DuquNweM1NH26RH6oP02mr().func_10185_7j1lR4019pucW00n7wn38afjBd62vEMB6B6SVB9068f4kyPzw4E6wI65ufr8((int)var4, (int)var8, EnumWorldGenerator.SURFACE);
+				if(var10 != null) {
+					switch(var10.func_9983_8WfOXonA2bRS7hUpHd7sbe7k20yqj7N6OH13GX3XXy71V13Eva115wQwe47C()) {
+					case 1:
+					case 2:
+						return this.field_8361_9xg75975dD6A4d9T5oI8tGF0oWpQ42zz2ef0y7RQs41s83hqjse1ISW95Na6;
+					default:
+						return this.blockIndexInTexture;
+					}
+				} else {
+					return this.blockIndexInTexture;
+				}
+			}
+		} else {
+			return this.blockIndexInTexture;
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/EssenceTransformResult.java
@@ -1,0 +1,38 @@
+package net.minecraft.src;
+
+public class EssenceTransformResult implements IInventory {
+	public ItemStack[] stackResult = new ItemStack[2];
+
+	public int getSizeInventory() {
+		return 1;
+	}
+
+	public ItemStack getStackInSlot(int var1) {
+		return this.stackResult[var1];
+	}
+
+	public String getInvName() {
+		return "Result";
+	}
+
+	public ItemStack decrStackSize(int var1, int var2) {
+		if(this.stackResult[var1] != null) {
+			ItemStack var3 = this.stackResult[var1];
+			this.stackResult[var1] = null;
+			return var3;
+		} else {
+			return null;
+		}
+	}
+
+	public void setInventorySlotContents(int var1, ItemStack var2) {
+		this.stackResult[var1] = var2;
+	}
+
+	public int getInventoryStackLimit() {
+		return 64;
+	}
+
+	public void onInventoryChanged() {
+	}
+}
--- /dev/null
+++ net/minecraft/src/EntityGiantBoss.java
@@ -1,0 +1,88 @@
+package net.minecraft.src;
+
+public class EntityGiantBoss extends EntityMob {
+	public int maxHP = -1;
+
+	public EntityGiantBoss(World var1) {
+		super(var1);
+		this.texture = "/mob/collosal_a.png";
+		this.moveSpeed = 0.5F;
+		this.attackStrength = 50;
+		this.yOffset *= 6.0F;
+		this.setSize(this.width * 6.0F, this.height * 6.0F);
+		ExtEvents.bossfightInProgress = true;
+		ExtEvents.bossRef = this;
+		ExtEvents.bossname = "Dormant Giant";
+	}
+
+	public EntityGiantBoss(World var1, int var2) {
+		super(var1);
+		if(var2 <= 0) {
+			var2 = 1;
+		}
+
+		this.texture = "/mob/collosal_a.png";
+		this.moveSpeed = 0.5F;
+		this.attackStrength = 50;
+		this.health *= Math.min(4 * var2, 800);
+		this.maxHP = this.health;
+		this.yOffset *= 6.0F;
+		this.setSize(this.width * 6.0F, this.height * 6.0F);
+	}
+
+	protected float getBlockPathWeight(int var1, int var2, int var3) {
+		return this.worldObj.getBrightness(var1, var2, var3) - 0.5F;
+	}
+
+	protected void fall(float var1) {
+	}
+
+	protected String getLivingSound() {
+		return "ext.giantambient";
+	}
+
+	protected String getHurtSound() {
+		return "ext.gianthurt";
+	}
+
+	protected String getDeathSound() {
+		return "ext.giantdead";
+	}
+
+	public void writeEntityToNBT(NBTTagCompound var1) {
+		var1.setString("BossName", ExtEvents.bossname);
+		var1.setInteger("BossMaxHP", this.maxHP);
+		super.writeEntityToNBT(var1);
+	}
+
+	public void readEntityFromNBT(NBTTagCompound var1) {
+		ExtEvents.bossname = var1.getString("BossName");
+		this.maxHP = var1.getInteger("BossMaxHP");
+		super.readEntityFromNBT(var1);
+	}
+
+	public void onDeath(Entity var1) {
+		ExtEvents.GiantBossKilled(this);
+		super.onDeath(var1);
+		if(this.rand.nextInt(50) > 10) {
+			this.dropItem(ExtItems.flameberge.shiftedIndex, 1);
+		}
+
+	}
+
+	public void onLivingUpdate() {
+		super.onLivingUpdate();
+		if(this.maxHP == -1) {
+			this.maxHP = this.health;
+		}
+
+	}
+
+	public void setEntityDead() {
+		super.setEntityDead();
+	}
+
+	public int getEssenceDroppedOnKill() {
+		return 36 + this.rand.nextInt(12);
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandRTexfx.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+
+class CommandRTexfx extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8594_6C5Y0Xsr1Y4sJ2Hn6O2sb6Rgh4UTk4H5WQR40NtsM52j9819141C8ZTs5hv0;
+    
+    CommandRTexfx(final CommandManager abb) {
+        this.field_8594_6C5Y0Xsr1Y4sJ2Hn6O2sb6Rgh4UTk4H5WQR40NtsM52j9819141C8ZTs5hv0 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        Minecraft.field_7307_8AX67fsnsj54328J9e6FiY9333555Xj726t2182u3TBB948QMZsZX2iz02iv = ((int)arr[0] == 1);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return Minecraft.field_7307_8AX67fsnsj54328J9e6FiY9333555Xj726t2182u3TBB948QMZsZX2iz02iv ? "1" : "0";
+    }
+}
--- /dev/null
+++ net/minecraft/src/Packet202SecureChatEcho.java
@@ -1,0 +1,55 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+
+public class Packet202SecureChatEcho extends Packet3Chat {
+	public boolean verified = false;
+	public int secID = -1;
+	public int offset = 0;
+	String signature = "";
+
+	public Packet202SecureChatEcho() {
+	}
+
+	public Packet202SecureChatEcho(String var1, int var2, int var3, String var4) {
+		this.secID = var2;
+		this.message = var1;
+		this.offset = var3;
+		this.signature = var4;
+	}
+
+	public void readPacketData(DataInputStream var1) throws IOException {
+		this.secID = var1.readInt();
+		this.offset = var1.readInt();
+		this.message = var1.readUTF();
+		this.signature = var1.readUTF();
+
+		try {
+			this.verified = CertUtils.verify(this.secID + "" + this.message.substring(this.offset), this.signature);
+		} catch (Exception var3) {
+			var3.printStackTrace();
+		}
+
+	}
+
+	public void writePacket(DataOutputStream var1) throws IOException {
+		var1.writeInt(this.secID);
+		var1.writeInt(this.offset);
+		var1.writeUTF(this.message);
+		var1.writeUTF(this.signature);
+	}
+
+	public void processPacket(NetHandler var1) {
+		if(!this.verified) {
+			ExtLogger.i("[SecureChatEcho] INVALID SIGNATURE.");
+		}
+
+		var1.handleChat(this);
+	}
+
+	public int getPacketSize() {
+		return this.message.length() + this.signature.length() + 4 + 4;
+	}
+}
--- /dev/null
+++ net/minecraft/src/Packet201SecureChat.java
@@ -1,0 +1,59 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+
+public class Packet201SecureChat extends Packet3Chat {
+	public boolean verified = false;
+	public int secID = -1;
+	public String signature = "";
+
+	public Packet201SecureChat() {
+	}
+
+	public Packet201SecureChat(String var1, int var2) {
+		this.secID = var2;
+		this.message = var1;
+	}
+
+	public void readPacketData(DataInputStream var1) throws IOException {
+		this.secID = var1.readInt();
+		this.message = var1.readUTF();
+		this.signature = var1.readUTF();
+
+		try {
+			this.verified = CertUtils.verify(this.secID + "" + this.message, this.signature);
+		} catch (Exception var3) {
+			var3.printStackTrace();
+		}
+
+	}
+
+	public void writePacket(DataOutputStream var1) throws IOException {
+		var1.writeInt(this.secID);
+		var1.writeUTF(this.message);
+
+		try {
+			this.signature = CertUtils.sign(this.secID + "" + this.message, CertUtils.loadedPrivKey);
+			var1.writeUTF(this.signature);
+		} catch (Exception var3) {
+			var3.printStackTrace();
+		}
+
+	}
+
+	public void processPacket(NetHandler var1) {
+		if(this.verified) {
+			ExtLogger.i("[SecureChat] valid");
+			var1.handleChat(this);
+		} else {
+			ExtLogger.i("[SecureChat] RESPONSE");
+		}
+
+	}
+
+	public int getPacketSize() {
+		return this.message.length() + this.signature.length() + 4;
+	}
+}
--- net/minecraft/src/RenderLiving.java
+++ net/minecraft/src/RenderLiving.java
@@ -16,6 +16,23 @@
 		this.renderPassModel = var1;
 	}
 
+	public void ApplyRotations(EntityLiving var1) {
+	}
+
+	public float GetRotationRad(float var1) {
+		float var2 = var1 * 1.6F;
+		var2 = MathHelper.sqrt_float(var2);
+		if(var2 > 1.0F) {
+			var2 = 1.0F;
+		}
+
+		return var2;
+	}
+
+	public float getLimbSwing(EntityLiving var1, float var2) {
+		return var1.limbSwing - var1.limbYaw * (1.0F - var2);
+	}
+
 	public void doRenderLiving(EntityLiving var1, double var2, double var4, double var6, float var8, float var9) {
 		GL11.glPushMatrix();
 		GL11.glDisable(GL11.GL_CULL_FACE);
@@ -32,6 +49,7 @@
 			GL11.glTranslatef((float)var2, (float)var4, (float)var6);
 			float var13 = this.handleRotationFloat(var1, var9);
 			GL11.glRotatef(180.0F - var10, 0.0F, 1.0F, 0.0F);
+			this.ApplyRotations(var1);
 			float var14;
 			if(var1.deathTime > 0) {
 				var14 = ((float)var1.deathTime + var9 - 1.0F) / 20.0F * 1.6F;
@@ -48,18 +66,28 @@
 			GL11.glScalef(-1.0F, -1.0F, 1.0F);
 			this.preRenderCallback(var1, var9);
 			GL11.glTranslatef(0.0F, -24.0F * var14 - 0.0078125F, 0.0F);
-			float var15 = var1.prevLimbYaw + (var1.limbYaw - var1.prevLimbYaw) * var9;
-			float var16 = var1.limbSwing - var1.limbYaw * (1.0F - var9);
+			float var15 = this.getLimbAnimMaxMovement(var1, var9);
+			float var16 = this.getLimbSwing(var1, var9);
 			if(var15 > 1.0F) {
 				var15 = 1.0F;
 			}
 
-			this.loadDownloadableImageTexture(var1.skinUrl, var1.getTexture());
+			ImageHolder var17 = this.loadDownloadableImageTexture(var1.skinUrl, var1.getTexture());
+			if(var1 instanceof EntityPlayer) {
+				((EntityPlayer)var1).playerSkin = var17;
+			}
+
 			GL11.glEnable(GL11.GL_ALPHA_TEST);
+			if(var1 instanceof EntityOtherPlayerMPUnknownClass && var1.worldObj instanceof FreerunWorld) {
+				GL11.glEnable(GL11.GL_BLEND);
+				GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
+				GL11.glColor4f(1.0F, 1.0F, 1.0F, 0.4F);
+			}
+
 			this.mainModel.render(var16, var15, var13, var11 - var10, var12, var14);
 
-			for(int var17 = 0; var17 < 4; ++var17) {
-				if(this.shouldRenderPass(var1, var17)) {
+			for(int var18 = 0; var18 < 4; ++var18) {
+				if(this.shouldRenderPass(var1, var18)) {
 					this.renderPassModel.render(var16, var15, var13, var11 - var10, var12, var14);
 					GL11.glDisable(GL11.GL_BLEND);
 					GL11.glEnable(GL11.GL_ALPHA_TEST);
@@ -67,37 +95,37 @@
 			}
 
 			this.renderEquippedItems(var1, var9);
-			float var25 = var1.getBrightness(var9);
-			int var18 = this.getColorMultiplier(var1, var25, var9);
-			if((var18 >> 24 & 255) > 0 || var1.hurtTime > 0 || var1.deathTime > 0) {
+			float var26 = var1.getBrightness(var9);
+			int var19 = this.getColorMultiplier(var1, var26, var9);
+			if((var19 >> 24 & 255) > 0 || var1.hurtTime > 0 || var1.deathTime > 0) {
 				GL11.glDisable(GL11.GL_TEXTURE_2D);
 				GL11.glDisable(GL11.GL_ALPHA_TEST);
 				GL11.glEnable(GL11.GL_BLEND);
 				GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 				GL11.glDepthFunc(GL11.GL_EQUAL);
 				if(var1.hurtTime > 0 || var1.deathTime > 0) {
-					GL11.glColor4f(var25, 0.0F, 0.0F, 0.4F);
+					GL11.glColor4f(var26, 0.0F, 0.0F, 0.4F);
 					this.mainModel.render(var16, var15, var13, var11 - var10, var12, var14);
 
-					for(int var19 = 0; var19 < 4; ++var19) {
-						if(this.shouldRenderPass(var1, var19)) {
-							GL11.glColor4f(var25, 0.0F, 0.0F, 0.4F);
+					for(int var20 = 0; var20 < 4; ++var20) {
+						if(this.shouldRenderPass(var1, var20)) {
+							GL11.glColor4f(var26, 0.0F, 0.0F, 0.4F);
 							this.renderPassModel.render(var16, var15, var13, var11 - var10, var12, var14);
 						}
 					}
 				}
 
-				if((var18 >> 24 & 255) > 0) {
-					float var26 = (float)(var18 >> 16 & 255) / 255.0F;
-					float var20 = (float)(var18 >> 8 & 255) / 255.0F;
-					float var21 = (float)(var18 & 255) / 255.0F;
-					float var22 = (float)(var18 >> 24 & 255) / 255.0F;
-					GL11.glColor4f(var26, var20, var21, var22);
+				if((var19 >> 24 & 255) > 0) {
+					float var27 = (float)(var19 >> 16 & 255) / 255.0F;
+					float var21 = (float)(var19 >> 8 & 255) / 255.0F;
+					float var22 = (float)(var19 & 255) / 255.0F;
+					float var23 = (float)(var19 >> 24 & 255) / 255.0F;
+					GL11.glColor4f(var27, var21, var22, var23);
 					this.mainModel.render(var16, var15, var13, var11 - var10, var12, var14);
 
-					for(int var23 = 0; var23 < 4; ++var23) {
-						if(this.shouldRenderPass(var1, var23)) {
-							GL11.glColor4f(var26, var20, var21, var22);
+					for(int var24 = 0; var24 < 4; ++var24) {
+						if(this.shouldRenderPass(var1, var24)) {
+							GL11.glColor4f(var27, var21, var22, var23);
 							this.renderPassModel.render(var16, var15, var13, var11 - var10, var12, var14);
 						}
 					}
@@ -110,12 +138,16 @@
 			}
 
 			GL11.glDisable(GL12.GL_RESCALE_NORMAL);
-		} catch (Exception var24) {
-			var24.printStackTrace();
+		} catch (Exception var25) {
+			var25.printStackTrace();
 		}
 
 		GL11.glEnable(GL11.GL_CULL_FACE);
 		GL11.glPopMatrix();
+	}
+
+	public float getLimbAnimMaxMovement(EntityLiving var1, float var2) {
+		return var1.prevLimbYaw + (var1.limbYaw - var1.prevLimbYaw) * var2;
 	}
 
 	protected float renderSwingProgress(EntityLiving var1, float var2) {
--- net/minecraft/src/WorldClient.java
+++ net/minecraft/src/WorldClient.java
@@ -1,21 +1,29 @@
 package net.minecraft.src;
 
 import java.io.File;
+import java.util.ArrayList;
 import java.util.HashSet;
 import java.util.LinkedList;
+import java.util.List;
 import java.util.Set;
 
 public class WorldClient extends World {
-	private LinkedList blocksToReceive = new LinkedList();
+	private LinkedList<WorldBlockPositionType> blocksToReceive = new LinkedList();
 	private NetClientHandler sendQueue;
 	private ChunkProviderClient clientChunkProvider;
 	private boolean noTileEntityUpdates = false;
 	private MCHashTable entityHashTable = new MCHashTable();
-	private Set entityList = new HashSet();
-	private Set entitySpawnQueue = new HashSet();
+	private Set<Entity> entityList = new HashSet();
+	private Set<Entity> entitySpawnQueue = new HashSet();
+	public List<RemoteEntityData> remoteEntities = new ArrayList();
+
+	public BiomeUnknownClass func_7532_7eiXFy1EXe3J3c9CLBV7WYa2QRCpBXy4EHYd0LJAppn7e7M6U51c10aE6X4w() {
+		return (BiomeUnknownClass)this.field_7486_19Zq3usHE49nqTf42NA4437074mbHq57gg27445jru16ailF0t00O91Q8HO3;
+	}
 
 	public WorldClient(NetClientHandler var1) {
 		super("MpServer");
+		this.field_7486_19Zq3usHE49nqTf42NA4437074mbHq57gg27445jru16ailF0t00O91Q8HO3 = new BiomeUnknownClass();
 		this.sendQueue = var1;
 		this.spawnX = 8;
 		this.spawnY = 64;
@@ -34,6 +42,9 @@
 			}
 		}
 
+		this.func_7430_2WpX24v1vz12pVlm4Rc1b7y4nk1dDNM5jBcH0X8hn3Jw39FwYG2gi9mM940l();
+		InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.func_12196_7s9IfTKre2uJtyoPjdLc93WmidSQs9AM2aDgi63837RD3989LlCE6V4C08ci();
+
 		for(var2 = 0; var2 < 10 && !this.entitySpawnQueue.isEmpty(); ++var2) {
 			Entity var3 = (Entity)this.entitySpawnQueue.iterator().next();
 			this.spawnEntityInWorld(var3);
@@ -52,6 +63,9 @@
 
 	}
 
+	public void updateRemoteEntityState(RemoteEntityData var1) {
+	}
+
 	public void invalidateBlockReceiveRegion(int var1, int var2, int var3, int var4, int var5, int var6) {
 		for(int var7 = 0; var7 < this.blocksToReceive.size(); ++var7) {
 			WorldBlockPositionType var8 = (WorldBlockPositionType)this.blocksToReceive.get(var7);
@@ -83,11 +97,13 @@
 		return false;
 	}
 
-	public void doPreChunk(int var1, int var2, boolean var3) {
+	public void doPreChunk(int var1, int var2, boolean var3, float[] var4) {
 		if(var3) {
 			this.clientChunkProvider.loadChunk(var1, var2);
+			this.func_7532_7eiXFy1EXe3J3c9CLBV7WYa2QRCpBXy4EHYd0LJAppn7e7M6U51c10aE6X4w().func_10188_7w1lB4c92lMJbh1WTsqK8RWVdY460iP4FuXe5pstl82DxM6koOm8O527VIZ9(new WorldGenHouseSmallUnknownClass2(var1, var2), var4);
 		} else {
 			this.clientChunkProvider.unloadChunk(var1, var2);
+			this.func_7532_7eiXFy1EXe3J3c9CLBV7WYa2QRCpBXy4EHYd0LJAppn7e7M6U51c10aE6X4w().func_10187_3AndXWge0Me8Q040iwfs6eu0O3Y09uh0xQI51Sv3WSs5ZG8n7t4xbP8BL96U(new WorldGenHouseSmallUnknownClass2(var1, var2));
 		}
 
 		if(!var3) {
@@ -199,6 +215,7 @@
 		if(!this.noTileEntityUpdates) {
 			this.sendQueue.addToSendQueue(new Packet59ComplexEntity(var1, var2, var3, var4));
 		}
+
 	}
 
 	public void sendQuittingDisconnectingPacket() {
--- /dev/null
+++ net/minecraft/src/CommandWorldeditSetpos2.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandWorldeditSetpos2 extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8560_63Hb9M9oB3b0Y1LaFg3JqU70aofgcHuUHix95mx0hq5qU8iQ0Iq0107OovS2;
+    
+    CommandWorldeditSetpos2(final CommandManager abb) {
+        this.field_8560_63Hb9M9oB3b0Y1LaFg3JqU70aofgcHuUHix95mx0hq5qU8iQ0Iq0107OovS2 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.ingameGUI.weditOverlay.func_11901_4GX3NWZYNNxs7759a7f8764Sjs8mN8d0w06o2vq3vJdsHhi1084359oRzOm3();
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/ServerAuthManager.java
@@ -1,0 +1,4 @@
+package net.minecraft.src;
+
+public class ServerAuthManager {
+}
--- net/minecraft/src/EntityOtherPlayerMP.java
+++ net/minecraft/src/EntityOtherPlayerMP.java
@@ -15,7 +15,7 @@
 		this.yOffset = 0.0F;
 		this.stepHeight = 0.0F;
 		if(var2 != null && var2.length() > 0) {
-			this.skinUrl = "http://www.minecraft.net/skin/" + var2 + ".png";
+			this.skinUrl = var2;
 			System.out.println("Loading texture " + this.skinUrl);
 		}
 
--- /dev/null
+++ net/minecraft/src/GuiBannedMenu.java
@@ -1,0 +1,9 @@
+package net.minecraft.src;
+
+public class GuiBannedMenu extends GuiIngameMenu {
+	public void initGui() {
+		this.controlList.clear();
+		this.controlList.add(new GuiButton(4, this.width / 2 - 100, this.height / 4 + 24, "Back to game"));
+		this.controlList.add(new GuiButton(0, this.width / 2 - 100, this.height / 4 + 96, "Options..."));
+	}
+}
--- /dev/null
+++ net/minecraft/src/FreerunMap5.java
@@ -1,0 +1,25 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.util.List;
+
+public class FreerunMap5 extends FreerunWorld {
+	private NamedLoc[] field_7523_30Cj944ou67Mfe9UjAqSP5ckPho5H485d3Gt9gom3H99mQbuONAstNHz897d = new NamedLoc[]{new NamedLoc(104, 97, -136, "spawn"), new NamedLoc(102, 96, -142, 105, 98, -141, "spawn_start"), new NamedLoc(116, 88, -284, 123, 92, -277, "end")};
+
+	public FreerunMap5(File var1, String var2) {
+		super(var1, var2);
+		this.worldTime = 20000L;
+	}
+
+	public NamedLoc[] getCheckpoints() {
+		return this.field_7523_30Cj944ou67Mfe9UjAqSP5ckPho5H485d3Gt9gom3H99mQbuONAstNHz897d;
+	}
+
+	public int getResetY(long var1, long var3) {
+		return 76;
+	}
+
+	public List<HandlerSetCheckpointUnknownClass> func_7517_8oADBp42n4G2Ly6U1WLv70n6VyS2bkokzo8dF7ayUqDb1A6ofY86pUJA8mf8() {
+		return this.field_7498_65957fU9nGL5PA2e96ZOK3ePBveSt2ceA9Glj10PC2Jo5s0wI21ix69flng2;
+	}
+}
--- net/minecraft/src/PlayerControllerSP.java
+++ net/minecraft/src/PlayerControllerSP.java
@@ -62,37 +62,35 @@
 	public void sendBlockRemoving(int var1, int var2, int var3, int var4) {
 		if(this.blockHitWait > 0) {
 			--this.blockHitWait;
-		} else {
-			if(var1 == this.curBlockX && var2 == this.curBlockY && var3 == this.curBlockZ) {
-				int var5 = this.mc.theWorld.getBlockId(var1, var2, var3);
-				if(var5 == 0) {
-					return;
-				}
-
-				Block var6 = Block.blocksList[var5];
-				this.curBlockDamage += var6.blockStrength(this.mc.thePlayer);
-				if(this.blockDestroySoundCounter % 4.0F == 0.0F && var6 != null) {
-					this.mc.sndManager.playSound(var6.stepSound.getStepSound(), (float)var1 + 0.5F, (float)var2 + 0.5F, (float)var3 + 0.5F, (var6.stepSound.getVolume() + 1.0F) / 8.0F, var6.stepSound.getPitch() * 0.5F);
-				}
-
-				++this.blockDestroySoundCounter;
-				if(this.curBlockDamage >= 1.0F) {
-					this.sendBlockRemoved(var1, var2, var3, var4);
-					this.curBlockDamage = 0.0F;
-					this.prevBlockDamage = 0.0F;
-					this.blockDestroySoundCounter = 0.0F;
-					this.blockHitWait = 5;
-				}
-			} else {
+		} else if(var1 == this.curBlockX && var2 == this.curBlockY && var3 == this.curBlockZ) {
+			int var5 = this.mc.theWorld.getBlockId(var1, var2, var3);
+			if(var5 == 0) {
+				return;
+			}
+
+			Block var6 = Block.blocksList[var5];
+			this.curBlockDamage += var6.blockStrength(this.mc.thePlayer);
+			if(this.blockDestroySoundCounter % 4.0F == 0.0F && var6 != null) {
+				this.mc.sndManager.playSound(var6.stepSound.getStepSound(), (float)var1 + 0.5F, (float)var2 + 0.5F, (float)var3 + 0.5F, (var6.stepSound.getVolume() + 1.0F) / 8.0F, var6.stepSound.getPitch() * 0.5F);
+			}
+
+			++this.blockDestroySoundCounter;
+			if(this.curBlockDamage >= 1.0F) {
+				this.sendBlockRemoved(var1, var2, var3, var4);
 				this.curBlockDamage = 0.0F;
 				this.prevBlockDamage = 0.0F;
 				this.blockDestroySoundCounter = 0.0F;
-				this.curBlockX = var1;
-				this.curBlockY = var2;
-				this.curBlockZ = var3;
+				this.blockHitWait = 5;
 			}
-
+		} else {
+			this.curBlockDamage = 0.0F;
+			this.prevBlockDamage = 0.0F;
+			this.blockDestroySoundCounter = 0.0F;
+			this.curBlockX = var1;
+			this.curBlockY = var2;
+			this.curBlockZ = var3;
 		}
+
 	}
 
 	public void setPartialTime(float var1) {
@@ -117,8 +115,11 @@
 
 	public void onUpdate() {
 		this.prevBlockDamage = this.curBlockDamage;
-		this.monsterSpawner.onUpdate(this.mc.theWorld);
-		this.animalSpawner.onUpdate(this.mc.theWorld);
-		this.mc.sndManager.playRandomMusicIfReady();
+		if(this.mc.thePlayer.getClass() == EntityPlayerSP.class) {
+			this.monsterSpawner.onUpdate(this.mc.theWorld);
+			this.animalSpawner.onUpdate(this.mc.theWorld);
+			this.mc.sndManager.playRandomMusicIfReady();
+		}
+
 	}
 }
--- net/minecraft/src/Path.java
+++ net/minecraft/src/Path.java
@@ -51,11 +51,11 @@
 	private void sortBack(int var1) {
 		PathPoint var2 = this.pathPoints[var1];
 
-		int var4;
-		for(float var3 = var2.distanceToTarget; var1 > 0; var1 = var4) {
-			var4 = var1 - 1 >> 1;
-			PathPoint var5 = this.pathPoints[var4];
-			if(var3 >= var5.distanceToTarget) {
+		int var3;
+		for(float var4 = var2.distanceToTarget; var1 > 0; var1 = var3) {
+			var3 = var1 - 1 >> 1;
+			PathPoint var5 = this.pathPoints[var3];
+			if(var4 >= var5.distanceToTarget) {
 				break;
 			}
 
--- /dev/null
+++ net/minecraft/src/WorldZMWaves.java
@@ -1,0 +1,74 @@
+package net.minecraft.src;
+
+import java.util.Iterator;
+import net.minecraft.client.Minecraft;
+import org.lwjgl.opengl.GL11;
+
+public class WorldZMWaves {
+	private Minecraft field_11170_05A1miNp2BEVpcn35LSeg2P16Zv3bxD7dn2VaTITlDwJ9ep8Hn70gG5422j1;
+	private boolean field_11169_0uG3ONmXnRgF58Kx5s98zRvS53Y8aVc689hjwGFKTiw26OuIN1Hgcbjv1Gep = false;
+
+	public WorldZMWaves(Minecraft var1) {
+		this.field_11170_05A1miNp2BEVpcn35LSeg2P16Zv3bxD7dn2VaTITlDwJ9ep8Hn70gG5422j1 = var1;
+	}
+
+	public void func_11168_6h3rOHQYGRO7TA7Td6vS2750aVTKL5987vHSuDMiv9P7jUAw4e58s0G3d6Wz(int var1, int var2, int var3) {
+		int var4 = 32 + var1 * 32;
+		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.field_11170_05A1miNp2BEVpcn35LSeg2P16Zv3bxD7dn2VaTITlDwJ9ep8Hn70gG5422j1.renderEngine.getTexture("/gui/zm_perks.png"));
+		Tessellator.instance.startDrawingQuads();
+		Tessellator.instance.addVertexWithUV((double)var2, (double)var3, 0.0D, (double)((float)var4 / 256.0F), 0.0D);
+		Tessellator.instance.addVertexWithUV((double)var2, (double)(var3 + 32), 0.0D, (double)((float)var4 / 256.0F), 0.125D);
+		Tessellator.instance.addVertexWithUV((double)(var2 + 32), (double)(var3 + 32), 0.0D, (double)((float)(var4 + 32) / 256.0F), 0.125D);
+		Tessellator.instance.addVertexWithUV((double)(var2 + 32), (double)var3, 0.0D, (double)((float)(var4 + 32) / 256.0F), 0.0D);
+		Tessellator.instance.draw();
+	}
+
+	public void func_11167_4U925ZN0m8Nu9TK03KYE01U693LubPBQnFZPTZ58D5mrAp59upNarhi1NZXt(GuiIngame var1, int var2, int var3) {
+		GL11.glDisable(GL11.GL_LIGHTING);
+		FontRenderer var4 = this.field_11170_05A1miNp2BEVpcn35LSeg2P16Zv3bxD7dn2VaTITlDwJ9ep8Hn70gG5422j1.fontRenderer;
+		EntityPlayerZombieModeClient var5 = (EntityPlayerZombieModeClient)InputHandler.mc.thePlayer;
+		String var6 = "Wave " + var5.worldIn.wave;
+		Gui.drawString(var4, var6, 10, var3 / 24 * 23, 16777215);
+		Gui.drawString(var4, "Points: " + var5.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.func_8686_3fQ4Zvl6ZGZtMHz8BDhx9ci7pQP8EhDqu7Ri4ywsZ3854I2e4ev3W4B3R3iy(), 10, var3 / 24 * 23 - 38 - 25, 16777215);
+		Gui.drawString(var4, "Zombies left: " + (((ZMWorld)this.field_11170_05A1miNp2BEVpcn35LSeg2P16Zv3bxD7dn2VaTITlDwJ9ep8Hn70gG5422j1.theWorld).field_7562_3PLxvFTSuw98l2Tmt3im3M24nX1eATY0cEgRp2TFFF4G6s95xE89X6PYKutH - ((ZMWorld)this.field_11170_05A1miNp2BEVpcn35LSeg2P16Zv3bxD7dn2VaTITlDwJ9ep8Hn70gG5422j1.theWorld).field_7563_094H2VxtQX1PBry5CvxOiTi1xXrY5nta9M6hMPv418x8M47N5W97AYsw3wm2), 10, var3 / 24 * 23 - 38 - 15, 16777215);
+		InventoryVendingMachine var7 = (InventoryVendingMachine)this.field_11170_05A1miNp2BEVpcn35LSeg2P16Zv3bxD7dn2VaTITlDwJ9ep8Hn70gG5422j1.thePlayer.inventory;
+		if(var7.getCurrentItem() != null && (var7.getCurrentItem().itemID == ExtItems.essenceGun.shiftedIndex || var7.getCurrentItem().itemID == ExtItems.GrayGun.shiftedIndex)) {
+			Gui.drawString(var4, "> " + var7.field_8689_3p0gv43cL7j25sTw85c9cXfcP4HTk7W010VdL2XjgPV7V0w2R2sQvYNjSAja, var2 / 12 * 11, var3 / 24 * 23, 16777215);
+		}
+
+		int var8 = 10;
+
+		int var9;
+		for(var9 = 0; var9 != 4; ++var9) {
+			if(var5.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.func_8687_2j3o3G4w9YEuL5Ti00BI486Z8qmmrnAgVGJYmg4Or967q661jjx3SsHBV6Ko(var9 + 1)) {
+				this.func_11168_6h3rOHQYGRO7TA7Td6vS2750aVTKL5987vHSuDMiv9P7jUAw4e58s0G3d6Wz(var9, var8, var3 / 24 * 23 - 38);
+				var8 += 32;
+			}
+		}
+
+		int var10;
+		if(var5.field_9099_9Swr41S6T68d6dEsYG2c2L6B4clPHDs2giSrx84SjI081x3148rUDLOdX7Lp > 0) {
+			var1.drawCenteredString(var4, "Reviving " + this.field_11170_05A1miNp2BEVpcn35LSeg2P16Zv3bxD7dn2VaTITlDwJ9ep8Hn70gG5422j1.thePlayer.username + "...", var2 / 2, var3 / 4, 16777215);
+			GL11.glDisable(GL11.GL_LIGHTING);
+			Gui.drawGradientRect(var2 / 2 - 100 - 1, var3 / 2 - 30 - 1, var2 / 2 - 100 + 200 + 1, var3 / 2 - 30 + 5 + 1, -14671840, -16777216);
+			var9 = 100 - var5.field_9099_9Swr41S6T68d6dEsYG2c2L6B4clPHDs2giSrx84SjI081x3148rUDLOdX7Lp;
+			var10 = 16777215;
+			int var11 = 12303291;
+			int var12 = (int)(200.0F * ((float)var9 / 100.0F));
+			Gui.drawGradientRect(var2 / 2 - 100, var3 / 2 - 30, var2 / 2 - 100 + var12, var3 / 2 - 30 + 5, var10, -var11);
+		} else if(var5.field_9097_867sEKNEsa45Xq4Etlk5s449h7UUOWVcX6nYd2PGjFy373Y2PXcol521PBg2 != null) {
+			var1.drawCenteredString(var4, var5.field_9097_867sEKNEsa45Xq4Etlk5s449h7UUOWVcX6nYd2PGjFy373Y2PXcol521PBg2.func_8287_3t2cX22yD5J55Zh6G33szTT1PY525wnemKTHp3jQ2r2jhLod41nugOV5rhqI(var5, var5.field_9093_8pX3Foh9nnqOBZGkAhkc659OKcv5h23UrLcQ0x07ZRU1yOwY57fY6vz12UYR), var2 / 2, var3 / 4 * 3, 16777215);
+		}
+
+		if(this.field_11169_0uG3ONmXnRgF58Kx5s98zRvS53Y8aVc689hjwGFKTiw26OuIN1Hgcbjv1Gep) {
+			var9 = 40;
+			var10 = 0;
+
+			for(Iterator var13 = ((ZMWorld)this.field_11170_05A1miNp2BEVpcn35LSeg2P16Zv3bxD7dn2VaTITlDwJ9ep8Hn70gG5422j1.theWorld).field_7566_69E5GE0gWo145zq9937KGEU69w4fB0548pDTr5ja6vCMm6tn1vRONd86gs5E.iterator(); var13.hasNext(); var9 += 10) {
+				EntityZombie var14 = (EntityZombie)var13.next();
+				Gui.drawString(var4, "[" + var10++ + "] X:" + (int)var14.posX + ", Y:" + (int)var14.posY + ", Z:" + (int)var14.posZ, 5, var9, 16777215);
+			}
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockMultiSided.java
@@ -1,0 +1,41 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockMultiSided extends Block {
+	private int texTop;
+	private int texSide;
+	private int texBottom;
+	private int id;
+
+	public BlockMultiSided(int var1, int var2, int var3, int var4) {
+		super(var1, Material.grass);
+		this.blockIndexInTexture = var3;
+		this.setTickOnLoad(true);
+		this.texTop = var2;
+		this.texSide = var3;
+		this.texBottom = var4;
+		this.id = var1;
+	}
+
+	public BlockMultiSided(int var1, int var2, int var3, int var4, Material var5) {
+		super(var1, var5);
+		this.blockIndexInTexture = var3;
+		this.setTickOnLoad(true);
+		this.texTop = var2;
+		this.texSide = var3;
+		this.texBottom = var4;
+		this.id = var1;
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 == 1 ? this.texTop : (var1 == 0 ? this.texBottom : this.texSide);
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return this.id;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockChestOld.java
@@ -1,0 +1,196 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockChestOld extends BlockContainerOld {
+	private Random random = new Random();
+
+	protected BlockChestOld(int var1) {
+		super(var1, Material.wood);
+		this.blockIndexInTexture = 26;
+	}
+
+	public int getBlockTexture(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		if(var5 == 1) {
+			return this.blockIndexInTexture - 1;
+		} else if(var5 == 0) {
+			return this.blockIndexInTexture - 1;
+		} else {
+			int var6 = var1.getBlockId(var2, var3, var4 - 1);
+			int var7 = var1.getBlockId(var2, var3, var4 + 1);
+			int var8 = var1.getBlockId(var2 - 1, var3, var4);
+			int var9 = var1.getBlockId(var2 + 1, var3, var4);
+			int var10;
+			int var11;
+			int var12;
+			byte var13;
+			if(var6 != this.blockID && var7 != this.blockID) {
+				if(var8 != this.blockID && var9 != this.blockID) {
+					byte var14 = 3;
+					if(BlockOld.opaqueCubeLookup[var6] && !BlockOld.opaqueCubeLookup[var7]) {
+						var14 = 3;
+					}
+
+					if(BlockOld.opaqueCubeLookup[var7] && !BlockOld.opaqueCubeLookup[var6]) {
+						var14 = 2;
+					}
+
+					if(BlockOld.opaqueCubeLookup[var8] && !BlockOld.opaqueCubeLookup[var9]) {
+						var14 = 5;
+					}
+
+					if(BlockOld.opaqueCubeLookup[var9] && !BlockOld.opaqueCubeLookup[var8]) {
+						var14 = 4;
+					}
+
+					return var5 == var14 ? this.blockIndexInTexture + 1 : this.blockIndexInTexture;
+				} else if(var5 != 4 && var5 != 5) {
+					var10 = 0;
+					if(var8 == this.blockID) {
+						var10 = -1;
+					}
+
+					var11 = var1.getBlockId(var8 == this.blockID ? var2 - 1 : var2 + 1, var3, var4 - 1);
+					var12 = var1.getBlockId(var8 == this.blockID ? var2 - 1 : var2 + 1, var3, var4 + 1);
+					if(var5 == 3) {
+						var10 = -1 - var10;
+					}
+
+					var13 = 3;
+					if((BlockOld.opaqueCubeLookup[var6] || BlockOld.opaqueCubeLookup[var11]) && !BlockOld.opaqueCubeLookup[var7] && !BlockOld.opaqueCubeLookup[var12]) {
+						var13 = 3;
+					}
+
+					if((BlockOld.opaqueCubeLookup[var7] || BlockOld.opaqueCubeLookup[var12]) && !BlockOld.opaqueCubeLookup[var6] && !BlockOld.opaqueCubeLookup[var11]) {
+						var13 = 2;
+					}
+
+					return (var5 == var13 ? this.blockIndexInTexture + 16 : this.blockIndexInTexture + 32) + var10;
+				} else {
+					return this.blockIndexInTexture;
+				}
+			} else if(var5 != 2 && var5 != 3) {
+				var10 = 0;
+				if(var6 == this.blockID) {
+					var10 = -1;
+				}
+
+				var11 = var1.getBlockId(var2 - 1, var3, var6 == this.blockID ? var4 - 1 : var4 + 1);
+				var12 = var1.getBlockId(var2 + 1, var3, var6 == this.blockID ? var4 - 1 : var4 + 1);
+				if(var5 == 4) {
+					var10 = -1 - var10;
+				}
+
+				var13 = 5;
+				if((BlockOld.opaqueCubeLookup[var8] || BlockOld.opaqueCubeLookup[var11]) && !BlockOld.opaqueCubeLookup[var9] && !BlockOld.opaqueCubeLookup[var12]) {
+					var13 = 5;
+				}
+
+				if((BlockOld.opaqueCubeLookup[var9] || BlockOld.opaqueCubeLookup[var12]) && !BlockOld.opaqueCubeLookup[var8] && !BlockOld.opaqueCubeLookup[var11]) {
+					var13 = 4;
+				}
+
+				return (var5 == var13 ? this.blockIndexInTexture + 16 : this.blockIndexInTexture + 32) + var10;
+			} else {
+				return this.blockIndexInTexture;
+			}
+		}
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 == 1 ? this.blockIndexInTexture - 1 : (var1 == 0 ? this.blockIndexInTexture - 1 : (var1 == 3 ? this.blockIndexInTexture + 1 : this.blockIndexInTexture));
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		int var5 = 0;
+		if(var1.getBlockId(var2 - 1, var3, var4) == this.blockID) {
+			++var5;
+		}
+
+		if(var1.getBlockId(var2 + 1, var3, var4) == this.blockID) {
+			++var5;
+		}
+
+		if(var1.getBlockId(var2, var3, var4 - 1) == this.blockID) {
+			++var5;
+		}
+
+		if(var1.getBlockId(var2, var3, var4 + 1) == this.blockID) {
+			++var5;
+		}
+
+		return var5 > 1 ? false : (this.isThereANeighborChest(var1, var2 - 1, var3, var4) ? false : (this.isThereANeighborChest(var1, var2 + 1, var3, var4) ? false : (this.isThereANeighborChest(var1, var2, var3, var4 - 1) ? false : !this.isThereANeighborChest(var1, var2, var3, var4 + 1))));
+	}
+
+	private boolean isThereANeighborChest(World var1, int var2, int var3, int var4) {
+		return var1.getBlockId(var2, var3, var4) != this.blockID ? false : (var1.getBlockId(var2 - 1, var3, var4) == this.blockID ? true : (var1.getBlockId(var2 + 1, var3, var4) == this.blockID ? true : (var1.getBlockId(var2, var3, var4 - 1) == this.blockID ? true : var1.getBlockId(var2, var3, var4 + 1) == this.blockID)));
+	}
+
+	public void onBlockRemoval(World var1, int var2, int var3, int var4) {
+		TileEntityChest var5 = (TileEntityChest)var1.getBlockTileEntity(var2, var3, var4);
+
+		for(int var6 = 0; var6 < var5.getSizeInventory(); ++var6) {
+			ItemStack var7 = var5.getStackInSlot(var6);
+			if(var7 != null) {
+				float var8 = this.random.nextFloat() * 0.8F + 0.1F;
+				float var9 = this.random.nextFloat() * 0.8F + 0.1F;
+				float var10 = this.random.nextFloat() * 0.8F + 0.1F;
+
+				while(var7.stackSize > 0) {
+					int var11 = this.random.nextInt(21) + 10;
+					if(var11 > var7.stackSize) {
+						var11 = var7.stackSize;
+					}
+
+					var7.stackSize -= var11;
+					EntityItem var12 = new EntityItem(var1, (double)((float)var2 + var8), (double)((float)var3 + var9), (double)((float)var4 + var10), new ItemStack(var7.itemID, var11, var7.itemDmg));
+					float var13 = 0.05F;
+					var12.motionX = (double)((float)this.random.nextGaussian() * var13);
+					var12.motionY = (double)((float)this.random.nextGaussian() * var13 + 0.2F);
+					var12.motionZ = (double)((float)this.random.nextGaussian() * var13);
+					var1.spawnEntityInWorld(var12);
+				}
+			}
+		}
+
+		super.onBlockRemoval(var1, var2, var3, var4);
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		Object var6 = (TileEntityChest)var1.getBlockTileEntity(var2, var3, var4);
+		if(var1.isBlockNormalCube(var2, var3 + 1, var4)) {
+			return true;
+		} else if(var1.getBlockId(var2 - 1, var3, var4) == this.blockID && var1.isBlockNormalCube(var2 - 1, var3 + 1, var4)) {
+			return true;
+		} else if(var1.getBlockId(var2 + 1, var3, var4) == this.blockID && var1.isBlockNormalCube(var2 + 1, var3 + 1, var4)) {
+			return true;
+		} else if(var1.getBlockId(var2, var3, var4 - 1) == this.blockID && var1.isBlockNormalCube(var2, var3 + 1, var4 - 1)) {
+			return true;
+		} else if(var1.getBlockId(var2, var3, var4 + 1) == this.blockID && var1.isBlockNormalCube(var2, var3 + 1, var4 + 1)) {
+			return true;
+		} else {
+			if(var1.getBlockId(var2 - 1, var3, var4) == this.blockID) {
+				var6 = new InventoryLargeChest("Large chest", (TileEntityChest)var1.getBlockTileEntity(var2 - 1, var3, var4), (IInventory)var6);
+			}
+
+			if(var1.getBlockId(var2 + 1, var3, var4) == this.blockID) {
+				var6 = new InventoryLargeChest("Large chest", (IInventory)var6, (TileEntityChest)var1.getBlockTileEntity(var2 + 1, var3, var4));
+			}
+
+			if(var1.getBlockId(var2, var3, var4 - 1) == this.blockID) {
+				var6 = new InventoryLargeChest("Large chest", (TileEntityChest)var1.getBlockTileEntity(var2, var3, var4 - 1), (IInventory)var6);
+			}
+
+			if(var1.getBlockId(var2, var3, var4 + 1) == this.blockID) {
+				var6 = new InventoryLargeChest("Large chest", (IInventory)var6, (TileEntityChest)var1.getBlockTileEntity(var2, var3, var4 + 1));
+			}
+
+			var5.displayGUIChest((IInventory)var6);
+			return true;
+		}
+	}
+
+	protected TileEntity getBlockEntity() {
+		return new TileEntityChest();
+	}
+}
--- net/minecraft/src/BlockStairs.java
+++ net/minecraft/src/BlockStairs.java
@@ -30,28 +30,28 @@
 		return super.shouldSideBeRendered(var1, var2, var3, var4, var5);
 	}
 
-	public void getCollidingBoundingBoxes(World var1, int var2, int var3, int var4, AxisAlignedBB var5, ArrayList var6) {
-		int var7 = var1.getBlockMetadata(var2, var3, var4);
-		if(var7 == 0) {
+	public void getCollidingBoundingBoxes(World var1, int var2, int var3, int var4, AxisAlignedBB var5, ArrayList<AxisAlignedBB> var6, Entity var7) {
+		int var8 = var1.getBlockMetadata(var2, var3, var4);
+		if(var8 == 0) {
 			this.setBlockBounds(0.0F, 0.0F, 0.0F, 0.5F, 0.5F, 1.0F);
-			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6, var7);
 			this.setBlockBounds(0.5F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
-			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
-		} else if(var7 == 1) {
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6, var7);
+		} else if(var8 == 1) {
 			this.setBlockBounds(0.0F, 0.0F, 0.0F, 0.5F, 1.0F, 1.0F);
-			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6, var7);
 			this.setBlockBounds(0.5F, 0.0F, 0.0F, 1.0F, 0.5F, 1.0F);
-			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
-		} else if(var7 == 2) {
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6, var7);
+		} else if(var8 == 2) {
 			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.5F, 0.5F);
-			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6, var7);
 			this.setBlockBounds(0.0F, 0.0F, 0.5F, 1.0F, 1.0F, 1.0F);
-			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
-		} else if(var7 == 3) {
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6, var7);
+		} else if(var8 == 3) {
 			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 0.5F);
-			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6, var7);
 			this.setBlockBounds(0.0F, 0.0F, 0.5F, 1.0F, 0.5F, 1.0F);
-			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6);
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6, var7);
 		}
 
 		this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
@@ -75,6 +75,7 @@
 
 			this.modelBlock.onNeighborBlockChange(var1, var2, var3, var4, var5);
 		}
+
 	}
 
 	private void updateState(World var1, int var2, int var3, int var4) {
@@ -135,8 +136,8 @@
 			if(var5 >= 0) {
 				var1.setBlockMetadataWithNotify(var2, var3, var4, var5);
 			}
-
 		}
+
 	}
 
 	private boolean isBlockSolid(World var1, int var2, int var3, int var4) {
--- /dev/null
+++ net/minecraft/src/HubFragment2.java
@@ -1,0 +1,18 @@
+package net.minecraft.src;
+
+public class HubFragment2 extends HubWorldUnknownClass2 {
+	public HubFragment2(HubWorld var1, int var2, int var3, int var4) {
+		super(var1, var2, var3, var4);
+	}
+
+	public void func_9822_96pkMbVA643Z1Y78zU1zOHbm0WbR47PCGp9q1ZyTK64G0pr0ViUREK2TCos1() {
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 0, 5, 16, 0, 10, ExtBlocks.dimensionFloorBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(5, 0, 0, 10, 0, 16, ExtBlocks.dimensionFloorBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 1, 5, 16, 3, 10, ExtBlocks.dimensionWallBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(5, 0, 0, 10, 3, 16, ExtBlocks.dimensionWallBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 4, 5, 16, 4, 10, ExtBlocks.dimensionFloorBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(5, 4, 0, 10, 4, 16, ExtBlocks.dimensionFloorBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 1, 6, 16, 3, 9, 0);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(6, 0, 0, 9, 3, 16, 0);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockDoorOld.java
@@ -1,0 +1,195 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockDoorOld extends BlockOld {
+	protected BlockDoorOld(int var1, Material var2) {
+		super(var1, var2);
+		this.blockIndexInTexture = 97;
+		if(var2 == Material.iron) {
+			++this.blockIndexInTexture;
+		}
+
+		float var3 = 0.5F;
+		float var4 = 1.0F;
+		this.setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, var4, 0.5F + var3);
+	}
+
+	public int getBlockTextureFromSideAndMetadata(int var1, int var2) {
+		if(var1 != 0 && var1 != 1) {
+			int var3 = this.getState(var2);
+			if((var3 == 0 || var3 == 2) ^ var1 <= 3) {
+				return this.blockIndexInTexture;
+			} else {
+				int var4 = var3 / 2 + (var1 & 1 ^ var3);
+				var4 += (var2 & 4) / 4;
+				int var5 = this.blockIndexInTexture - (var2 & 8) * 2;
+				if((var4 & 1) != 0) {
+					var5 = -var5;
+				}
+
+				return var5;
+			}
+		} else {
+			return this.blockIndexInTexture;
+		}
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 7;
+	}
+
+	public AxisAlignedBB getSelectedBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		this.setBlockBoundsBasedOnState(var1, var2, var3, var4);
+		return super.getSelectedBoundingBoxFromPool(var1, var2, var3, var4);
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		this.setBlockBoundsBasedOnState(var1, var2, var3, var4);
+		return super.getCollisionBoundingBoxFromPool(var1, var2, var3, var4);
+	}
+
+	public void setBlockBoundsBasedOnState(IBlockAccess var1, int var2, int var3, int var4) {
+		this.setDoorRotation(this.getState(var1.getBlockMetadata(var2, var3, var4)));
+	}
+
+	public void setDoorRotation(int var1) {
+		float var2 = 3.0F / 16.0F;
+		this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 2.0F, 1.0F);
+		if(var1 == 0) {
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, var2);
+		}
+
+		if(var1 == 1) {
+			this.setBlockBounds(1.0F - var2, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
+		}
+
+		if(var1 == 2) {
+			this.setBlockBounds(0.0F, 0.0F, 1.0F - var2, 1.0F, 1.0F, 1.0F);
+		}
+
+		if(var1 == 3) {
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, var2, 1.0F, 1.0F);
+		}
+
+	}
+
+	public void onBlockClicked(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		this.blockActivated(var1, var2, var3, var4, var5);
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		if(this.material == Material.iron) {
+			return true;
+		} else {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			if((var6 & 8) != 0) {
+				if(var1.getBlockId(var2, var3 - 1, var4) == this.blockID) {
+					this.blockActivated(var1, var2, var3 - 1, var4, var5);
+				}
+
+				return true;
+			} else {
+				if(var1.getBlockId(var2, var3 + 1, var4) == this.blockID) {
+					var1.setBlockMetadataWithNotify(var2, var3 + 1, var4, (var6 ^ 4) + 8);
+				}
+
+				var1.setBlockMetadataWithNotify(var2, var3, var4, var6 ^ 4);
+				var1.markBlocksDirty(var2, var3 - 1, var4, var2, var3, var4);
+				if(Math.random() < 0.5D) {
+					var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "random.door_open", 1.0F, var1.rand.nextFloat() * 0.1F + 0.9F);
+				} else {
+					var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "random.door_close", 1.0F, var1.rand.nextFloat() * 0.1F + 0.9F);
+				}
+
+				return true;
+			}
+		}
+	}
+
+	public void onPoweredBlockChange(World var1, int var2, int var3, int var4, boolean var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		if((var6 & 8) != 0) {
+			if(var1.getBlockId(var2, var3 - 1, var4) == this.blockID) {
+				this.onPoweredBlockChange(var1, var2, var3 - 1, var4, var5);
+			}
+
+		} else {
+			boolean var7 = (var1.getBlockMetadata(var2, var3, var4) & 4) > 0;
+			if(var7 != var5) {
+				if(var1.getBlockId(var2, var3 + 1, var4) == this.blockID) {
+					var1.setBlockMetadataWithNotify(var2, var3 + 1, var4, (var6 ^ 4) + 8);
+				}
+
+				var1.setBlockMetadataWithNotify(var2, var3, var4, var6 ^ 4);
+				var1.markBlocksDirty(var2, var3 - 1, var4, var2, var3, var4);
+				if(Math.random() < 0.5D) {
+					var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "random.door_open", 1.0F, var1.rand.nextFloat() * 0.1F + 0.9F);
+				} else {
+					var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "random.door_close", 1.0F, var1.rand.nextFloat() * 0.1F + 0.9F);
+				}
+
+			}
+		}
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		if((var6 & 8) != 0) {
+			if(var1.getBlockId(var2, var3 - 1, var4) != this.blockID) {
+				var1.setBlockWithNotify(var2, var3, var4, 0);
+			}
+
+			if(var5 > 0 && BlockOld.blocksList[var5].canProvidePower()) {
+				this.onNeighborBlockChange(var1, var2, var3 - 1, var4, var5);
+			}
+		} else {
+			boolean var7 = false;
+			if(var1.getBlockId(var2, var3 + 1, var4) != this.blockID) {
+				var1.setBlockWithNotify(var2, var3, var4, 0);
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3 - 1, var4)) {
+				var1.setBlockWithNotify(var2, var3, var4, 0);
+				var7 = true;
+				if(var1.getBlockId(var2, var3 + 1, var4) == this.blockID) {
+					var1.setBlockWithNotify(var2, var3 + 1, var4, 0);
+				}
+			}
+
+			if(var7) {
+				this.dropBlockAsItem(var1, var2, var3, var4, var6);
+			} else if(var5 > 0 && BlockOld.blocksList[var5].canProvidePower()) {
+				boolean var8 = var1.isBlockIndirectlyGettingPowered(var2, var3, var4) || var1.isBlockIndirectlyGettingPowered(var2, var3 + 1, var4);
+				this.onPoweredBlockChange(var1, var2, var3, var4, var8);
+			}
+		}
+
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return (var1 & 8) != 0 ? 0 : (this.material == Material.iron ? Item.doorSteel.shiftedIndex : Item.doorWood.shiftedIndex);
+	}
+
+	public MovingObjectPosition collisionRayTrace(World var1, int var2, int var3, int var4, Vec3D var5, Vec3D var6) {
+		this.setBlockBoundsBasedOnState(var1, var2, var3, var4);
+		return super.collisionRayTrace(var1, var2, var3, var4, var5, var6);
+	}
+
+	public int getState(int var1) {
+		return (var1 & 4) == 0 ? var1 - 1 & 3 : var1 & 3;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return var3 >= 127 ? false : var1.isBlockNormalCube(var2, var3 - 1, var4) && super.canPlaceBlockAt(var1, var2, var3, var4) && super.canPlaceBlockAt(var1, var2, var3 + 1, var4);
+	}
+}
--- net/minecraft/src/RecipesArmor.java
+++ net/minecraft/src/RecipesArmor.java
@@ -2,7 +2,7 @@
 
 public class RecipesArmor {
 	private String[][] recipePatterns = new String[][]{{"XXX", "X X"}, {"X X", "XXX", "XXX"}, {"XXX", "X X", "X X"}, {"X X", "X X"}};
-	private Object[][] recipeItems = new Object[][]{{Item.leather, Block.fire, Item.ingotIron, Item.diamond, Item.ingotGold}, {Item.helmetLeather, Item.helmetChain, Item.helmetSteel, Item.helmetDiamond, Item.helmetGold}, {Item.plateLeather, Item.plateChain, Item.plateSteel, Item.plateDiamond, Item.plateGold}, {Item.legsLeather, Item.legsChain, Item.legsSteel, Item.legsDiamond, Item.legsGold}, {Item.bootsLeather, Item.bootsChain, Item.bootsSteel, Item.bootsDiamond, Item.bootsGold}};
+	private Object[][] recipeItems = new Object[][]{{Item.leather, ExtItems.ObserverFur, Item.ingotIron, Item.diamond, Item.ingotGold}, {Item.helmetLeather, Item.helmetChain, Item.helmetSteel, Item.helmetDiamond, Item.helmetGold}, {Item.plateLeather, Item.plateChain, Item.plateSteel, Item.plateDiamond, Item.plateGold}, {Item.legsLeather, Item.legsChain, Item.legsSteel, Item.legsDiamond, Item.legsGold}, {Item.bootsLeather, Item.bootsChain, Item.bootsSteel, Item.bootsDiamond, Item.bootsGold}};
 
 	public void addRecipes(CraftingManager var1) {
 		for(int var2 = 0; var2 < this.recipeItems[0].length; ++var2) {
--- net/minecraft/src/WorldIso.java
+++ net/minecraft/src/WorldIso.java
@@ -2,7 +2,7 @@
 
 import java.io.File;
 
-class WorldIso extends World {
+public class WorldIso extends World {
 	final CanvasIsomPreview isomPreview;
 
 	WorldIso(CanvasIsomPreview var1, File var2, String var3) {
--- /dev/null
+++ net/minecraft/src/CubeListBuilder.java
@@ -1,0 +1,38 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class CubeListBuilder {
+	public List<CubeListElement> cubeList = new ArrayList();
+
+	public static CubeListBuilder create() {
+		return new CubeListBuilder();
+	}
+
+	public CubeListBuilder texOffs(int var1, int var2) {
+		this.cubeList.add(new CubeListElement(var1, var2));
+		return this;
+	}
+
+	public CubeListBuilder addBox(float var1, float var2, float var3, float var4, float var5, float var6, CubeDeformation var7) {
+		CubeListElement var8 = (CubeListElement)this.cubeList.get(this.cubeList.size() - 1);
+		var8.offsetX = var1;
+		var8.offsetY = var2;
+		var8.offsetZ = var3;
+		var8.widthX = (int)var4;
+		var8.height = (int)var5;
+		var8.widthZ = (int)var6;
+		return this;
+	}
+
+	public CubeListBuilder mirror() {
+		((CubeListElement)this.cubeList.get(this.cubeList.size() - 1)).mirror = true;
+		return this;
+	}
+
+	public CubeListBuilder mirror(boolean var1) {
+		((CubeListElement)this.cubeList.get(this.cubeList.size() - 1)).mirror = var1;
+		return this;
+	}
+}
--- /dev/null
+++ net/minecraft/src/EntityPongormatron.java
@@ -1,0 +1,35 @@
+package net.minecraft.src;
+
+public class EntityPongormatron extends EntityMob {
+	public boolean unusedBool2 = false;
+
+	public EntityPongormatron(World var1) {
+		super(var1);
+		this.texture = "/mob/pongt.png";
+		this.setSize(1.0F, 2.0F);
+	}
+
+	public void writeEntityToNBT(NBTTagCompound var1) {
+		super.writeEntityToNBT(var1);
+	}
+
+	public void readEntityFromNBT(NBTTagCompound var1) {
+		super.readEntityFromNBT(var1);
+	}
+
+	protected String getHurtSound() {
+		return "mob.skeletonhurt";
+	}
+
+	protected String getDeathSound() {
+		return "mob.skeletonhurt";
+	}
+
+	protected float getSoundVolume() {
+		return 0.4F;
+	}
+
+	public boolean interact(EntityPlayer var1) {
+		return false;
+	}
+}
--- net/minecraft/src/Timer.java
+++ net/minecraft/src/Timer.java
@@ -21,11 +21,11 @@
 		long var1 = System.currentTimeMillis();
 		long var3 = var1 - this.lastSyncSysClock;
 		long var5 = System.nanoTime() / 1000000L;
-		double var9;
+		double var7;
 		if(var3 > 1000L) {
-			long var7 = var5 - this.lastSyncHRClock;
-			var9 = (double)var3 / (double)var7;
-			this.timeSyncAdjustment += (var9 - this.timeSyncAdjustment) * (double)0.2F;
+			long var9 = var5 - this.lastSyncHRClock;
+			var7 = (double)var3 / (double)var9;
+			this.timeSyncAdjustment += (var7 - this.timeSyncAdjustment) * (double)0.2F;
 			this.lastSyncSysClock = var1;
 			this.lastSyncHRClock = var5;
 		}
@@ -36,17 +36,17 @@
 		}
 
 		double var11 = (double)var5 / 1000.0D;
-		var9 = (var11 - this.lastHRTime) * this.timeSyncAdjustment;
+		var7 = (var11 - this.lastHRTime) * this.timeSyncAdjustment;
 		this.lastHRTime = var11;
-		if(var9 < 0.0D) {
-			var9 = 0.0D;
-		}
-
-		if(var9 > 1.0D) {
-			var9 = 1.0D;
-		}
-
-		this.elapsedPartialTicks = (float)((double)this.elapsedPartialTicks + var9 * (double)this.timerSpeed * (double)this.ticksPerSecond);
+		if(var7 < 0.0D) {
+			var7 = 0.0D;
+		}
+
+		if(var7 > 1.0D) {
+			var7 = 1.0D;
+		}
+
+		this.elapsedPartialTicks = (float)((double)this.elapsedPartialTicks + var7 * (double)this.timerSpeed * (double)this.ticksPerSecond);
 		this.elapsedTicks = (int)this.elapsedPartialTicks;
 		this.elapsedPartialTicks -= (float)this.elapsedTicks;
 		if(this.elapsedTicks > 10) {
--- /dev/null
+++ net/minecraft/src/VisualsReader.java
@@ -1,0 +1,144 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipFile;
+import javax.imageio.ImageIO;
+import net.minecraft.client.Minecraft;
+import org.lwjgl.opengl.GL11;
+
+public class VisualsReader extends VisualsUnknownClass {
+	private ZipFile field_10172_571vUI1nI9vTchTM5C9H8xdh8TeB7u53h277FkE3zjWL4WzRM124lI04eRu6;
+	private int field_10171_2cUT0SUjeOMs7J6RZO3UBarVwD8a0JC8U48dhuR2R9pfyIQap1sO7FF8B3ct = -1;
+	private BufferedImage field_10170_2gve41Fd8RbvPhjqP6Qn697JjCjxn62kB6A60Dtr7TUxCo6cL9421hPZZ16W;
+	private File field_10173_7RJ0G7RpLs64I31WE97VKAl1w2b68fgkGi6s73Jx0s1KwfPGh4l4qfINn508;
+
+	public VisualsReader(File var1) {
+		this.field_10166_0Sg7537VnLZ7du5FsLln7EYJ7tLG9LfdbFsVG53zuLLa94D21JXk6aie9tls = var1.getName();
+		this.field_10173_7RJ0G7RpLs64I31WE97VKAl1w2b68fgkGi6s73Jx0s1KwfPGh4l4qfINn508 = var1;
+	}
+
+	private String func_10169_27DPOA93HRGUbxXTtJ13X8a2q3wp16k5W2EI2N4AGpkaM5Ca8v0hMJXB0133(String var1) {
+		if(var1 != null && var1.length() > 34) {
+			var1 = var1.substring(0, 34);
+		}
+
+		return var1;
+	}
+
+	public void func_10158_0Gpj8594Ufmy5e2AAxicC9QX8AZ598q48b12zV8cSfE61ZzMvANYL3Omgcv9(Minecraft var1) throws IOException {
+		ZipFile var2 = null;
+		InputStream var3 = null;
+
+		try {
+			var2 = new ZipFile(this.field_10173_7RJ0G7RpLs64I31WE97VKAl1w2b68fgkGi6s73Jx0s1KwfPGh4l4qfINn508);
+
+			try {
+				var3 = var2.getInputStream(var2.getEntry("pack.txt"));
+				BufferedReader var4 = new BufferedReader(new InputStreamReader(var3));
+				this.field_10168_6rK7r47m1wf6M34G2s0hL7m282kBAy4521c3axU19Y9WKmYF8gZ6ryN7JLjP = this.func_10169_27DPOA93HRGUbxXTtJ13X8a2q3wp16k5W2EI2N4AGpkaM5Ca8v0hMJXB0133(var4.readLine());
+				this.field_10165_3AzF56gtxWJ9912dPKDPOy7hH3t9Hl1HPMnVNkT671yMpR86uFp7khyzZyaR = this.func_10169_27DPOA93HRGUbxXTtJ13X8a2q3wp16k5W2EI2N4AGpkaM5Ca8v0hMJXB0133(var4.readLine());
+				var4.close();
+				var3.close();
+			} catch (Exception var23) {
+			}
+
+			try {
+				this.field_10164_5N63dbka0na7Is07L9kMmSk6ZK28Ioxdll6JwQgybo1I69cauDA8U5rtDvBv = new VisualsConfiguration();
+				var3 = var2.getInputStream(var2.getEntry("packconfig.cfg"));
+				this.field_10164_5N63dbka0na7Is07L9kMmSk6ZK28Ioxdll6JwQgybo1I69cauDA8U5rtDvBv = VisualsConfiguration.func_12190_4qG6SCyQHhAB3Z4dLMG6530SnOk4ZY0WE2d12Vzgf77VgolUcGMS3afod9NS(var3);
+				var3.close();
+			} catch (Exception var22) {
+			}
+
+			try {
+				var3 = var2.getInputStream(var2.getEntry("pack.png"));
+				this.field_10170_2gve41Fd8RbvPhjqP6Qn697JjCjxn62kB6A60Dtr7TUxCo6cL9421hPZZ16W = ImageIO.read(var3);
+				var3.close();
+			} catch (Exception var21) {
+			}
+
+			try {
+				var3 = var2.getInputStream(var2.getEntry("terrain.png"));
+				BufferedImage var27 = ImageIO.read(var3);
+				if(var27.getWidth() != 256 || var27.getHeight() != 512) {
+					this.field_10164_5N63dbka0na7Is07L9kMmSk6ZK28Ioxdll6JwQgybo1I69cauDA8U5rtDvBv.field_12194_99q16b50kyIAY3WydyIly32wBpFBLxi4p3yRL4x1J0O0Z0CR3wEHi9t1G3x9 = false;
+				}
+
+				var3.close();
+			} catch (Exception var24) {
+			}
+
+			var2.close();
+		} catch (Exception var25) {
+			var25.printStackTrace();
+		} finally {
+			try {
+				var3.close();
+			} catch (Exception var20) {
+			}
+
+			try {
+				var2.close();
+			} catch (Exception var19) {
+			}
+
+		}
+
+	}
+
+	public void func_10160_6kOi4sh8w5g34shttmoUUEDgCPE5VRiNwN076cQcxuDFXDkU0y92lK2v99vL(Minecraft var1) {
+		if(this.field_10170_2gve41Fd8RbvPhjqP6Qn697JjCjxn62kB6A60Dtr7TUxCo6cL9421hPZZ16W != null) {
+			var1.renderEngine.deleteTexture(this.field_10171_2cUT0SUjeOMs7J6RZO3UBarVwD8a0JC8U48dhuR2R9pfyIQap1sO7FF8B3ct);
+		}
+
+		this.func_10163_2I13qZ82Olr559q81461XqI7EvNeguYD7GAG7DmGJf04Fu44f4iY1Oy7WJME();
+	}
+
+	public void func_10162_7X6Ocgi2aWrG07279w14Ok6jeWFPa9bmt1my2NA0a1ZEmdxx5QjSOn3mi5a8(Minecraft var1) {
+		if(this.field_10170_2gve41Fd8RbvPhjqP6Qn697JjCjxn62kB6A60Dtr7TUxCo6cL9421hPZZ16W != null && this.field_10171_2cUT0SUjeOMs7J6RZO3UBarVwD8a0JC8U48dhuR2R9pfyIQap1sO7FF8B3ct < 0) {
+			this.field_10171_2cUT0SUjeOMs7J6RZO3UBarVwD8a0JC8U48dhuR2R9pfyIQap1sO7FF8B3ct = var1.renderEngine.allocateAndSetupTexture(this.field_10170_2gve41Fd8RbvPhjqP6Qn697JjCjxn62kB6A60Dtr7TUxCo6cL9421hPZZ16W);
+		}
+
+		if(this.field_10170_2gve41Fd8RbvPhjqP6Qn697JjCjxn62kB6A60Dtr7TUxCo6cL9421hPZZ16W != null) {
+			var1.renderEngine.bindTexture(this.field_10171_2cUT0SUjeOMs7J6RZO3UBarVwD8a0JC8U48dhuR2R9pfyIQap1sO7FF8B3ct);
+		} else {
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var1.renderEngine.getTexture("/gui/unknown_pack.png"));
+		}
+
+	}
+
+	public void func_10159_18ZVjfTsTKfB80BRv0MI82mIW7A5kEEVTFqM41a5Y88G06sn7n695Ml9CX4X() {
+		try {
+			this.field_10172_571vUI1nI9vTchTM5C9H8xdh8TeB7u53h277FkE3zjWL4WzRM124lI04eRu6 = new ZipFile(this.field_10173_7RJ0G7RpLs64I31WE97VKAl1w2b68fgkGi6s73Jx0s1KwfPGh4l4qfINn508);
+		} catch (Exception var2) {
+		}
+
+	}
+
+	public void func_10163_2I13qZ82Olr559q81461XqI7EvNeguYD7GAG7DmGJf04Fu44f4iY1Oy7WJME() {
+		try {
+			this.field_10172_571vUI1nI9vTchTM5C9H8xdh8TeB7u53h277FkE3zjWL4WzRM124lI04eRu6.close();
+		} catch (Exception var2) {
+		}
+
+		this.field_10172_571vUI1nI9vTchTM5C9H8xdh8TeB7u53h277FkE3zjWL4WzRM124lI04eRu6 = null;
+	}
+
+	public InputStream getResourceAsStream(String var1) {
+		try {
+			ZipEntry var2 = this.field_10172_571vUI1nI9vTchTM5C9H8xdh8TeB7u53h277FkE3zjWL4WzRM124lI04eRu6.getEntry(var1.substring(1));
+			if(var2 != null) {
+				return this.field_10172_571vUI1nI9vTchTM5C9H8xdh8TeB7u53h277FkE3zjWL4WzRM124lI04eRu6.getInputStream(var2);
+			}
+		} catch (Exception var3) {
+		}
+
+		return Ext1605Utils.func_12150_5v4Cs6sI06e6Hjpg3rSI82gG008x14C2jag2OM7ADaW5U8a3DYSrf570CJm6(var1);
+	}
+}
--- net/minecraft/src/GuiButton.java
+++ net/minecraft/src/GuiButton.java
@@ -12,14 +12,21 @@
 	public int id;
 	public boolean enabled;
 	public boolean visible;
+	public boolean field_7874_8hutMN8Nkr6540tkVq0b1457yM08Q9Ty13MenI0kbL06Yf3m8DLUel3bs5Tm;
+	public int textColorHovered;
+	public int textColorUnhovered;
+	public long field_7885_8V9j94Md79aR86aj138Uw1LB5a62IQFql5eu5V3i1ZWfbQ46z3u0vqthhNz3;
+	public final long field_7877_4s9RdDbT5Y5Oz1LLGNh3g7UJi93213FSMDu5iEiBtANiGV16140lr3Y76O2K;
 
 	public GuiButton(int var1, int var2, int var3, String var4) {
 		this(var1, var2, var3, 200, 20, var4);
 	}
 
-	protected GuiButton(int var1, int var2, int var3, int var4, int var5, String var6) {
-		this.width = 200;
-		this.height = 20;
+	public GuiButton(int var1, int var2, int var3, int var4, int var5, String var6) {
+		this.field_7874_8hutMN8Nkr6540tkVq0b1457yM08Q9Ty13MenI0kbL06Yf3m8DLUel3bs5Tm = false;
+		this.textColorHovered = 16777120;
+		this.textColorUnhovered = 14737632;
+		this.field_7877_4s9RdDbT5Y5Oz1LLGNh3g7UJi93213FSMDu5iEiBtANiGV16140lr3Y76O2K = 300L;
 		this.enabled = true;
 		this.visible = true;
 		this.id = var1;
@@ -28,6 +35,11 @@
 		this.width = var4;
 		this.height = var5;
 		this.displayString = var6;
+		this.field_7885_8V9j94Md79aR86aj138Uw1LB5a62IQFql5eu5V3i1ZWfbQ46z3u0vqthhNz3 = System.currentTimeMillis();
+	}
+
+	public boolean func_7873_6nn76xn75jkNpKB9Sh129Q32vm9N0lG68zRy7yDWq13FtymI5qk8UIhvhIPd() {
+		return true;
 	}
 
 	protected int getHoverState(boolean var1) {
@@ -43,23 +55,40 @@
 
 	public void drawButton(Minecraft var1, int var2, int var3) {
 		if(this.visible) {
-			FontRenderer var4 = var1.fontRenderer;
+			ScaledResolution var4 = new ScaledResolution(var1.displayWidth, var1.displayHeight);
+			int var5 = var4.getScaledWidth();
+			int var6 = var4.getScaledHeight();
+			int var7 = this.xPosition;
+			int var8 = this.yPosition;
+			long var9 = System.currentTimeMillis() - this.field_7885_8V9j94Md79aR86aj138Uw1LB5a62IQFql5eu5V3i1ZWfbQ46z3u0vqthhNz3;
+			if(this.func_7873_6nn76xn75jkNpKB9Sh129Q32vm9N0lG68zRy7yDWq13FtymI5qk8UIhvhIPd() && var9 >= 0L && var9 < 300L) {
+				float var11 = (float)var9 / 300.0F;
+				var8 = (int)((float)var8 + (float)var6 * Ext1605Utils.func_12145_369AWaIx763AmDMElKtaxw1v8736Hd9436zT4kb46Iz21Y2Nw4rxl2u27Hjk(1.0F - var11));
+			}
+
+			FontRenderer var13 = var1.fontRenderer;
 			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var1.renderEngine.getTexture("/gui/gui.png"));
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-			boolean var5 = var2 >= this.xPosition && var3 >= this.yPosition && var2 < this.xPosition + this.width && var3 < this.yPosition + this.height;
-			int var6 = this.getHoverState(var5);
-			this.drawTexturedModalRect(this.xPosition, this.yPosition, 0, 46 + var6 * 20, this.width / 2, this.height);
-			this.drawTexturedModalRect(this.xPosition + this.width / 2, this.yPosition, 200 - this.width / 2, 46 + var6 * 20, this.width / 2, this.height);
+			this.field_7874_8hutMN8Nkr6540tkVq0b1457yM08Q9Ty13MenI0kbL06Yf3m8DLUel3bs5Tm = var2 >= this.xPosition && var3 >= this.yPosition && var2 < this.xPosition + this.width && var3 < this.yPosition + this.height;
+			int var12 = this.getHoverState(this.field_7874_8hutMN8Nkr6540tkVq0b1457yM08Q9Ty13MenI0kbL06Yf3m8DLUel3bs5Tm);
+			this.drawTexturedModalRect(var7, var8, 0, 46 + var12 * 20, this.width / 2, this.height);
+			this.drawTexturedModalRect(var7 + this.width / 2, var8, 200 - this.width / 2, 46 + var12 * 20, this.width / 2, this.height);
 			this.mouseDragged(var1, var2, var3);
 			if(!this.enabled) {
-				this.drawCenteredString(var4, this.displayString, this.xPosition + this.width / 2, this.yPosition + (this.height - 8) / 2, -6250336);
-			} else if(var5) {
-				this.drawCenteredString(var4, this.displayString, this.xPosition + this.width / 2, this.yPosition + (this.height - 8) / 2, 16777120);
+				this.drawCenteredString(var13, this.displayString, var7 + this.width / 2, var8 + (this.height - 8) / 2, -6250336);
+			} else if(this.field_7874_8hutMN8Nkr6540tkVq0b1457yM08Q9Ty13MenI0kbL06Yf3m8DLUel3bs5Tm) {
+				this.drawCenteredString(var13, this.displayString, var7 + this.width / 2, var8 + (this.height - 8) / 2, this.textColorHovered);
 			} else {
-				this.drawCenteredString(var4, this.displayString, this.xPosition + this.width / 2, this.yPosition + (this.height - 8) / 2, 14737632);
+				this.drawCenteredString(var13, this.displayString, var7 + this.width / 2, var8 + (this.height - 8) / 2, this.textColorUnhovered);
 			}
-
 		}
+
+	}
+
+	public GuiButton SetTextColors(int var1, int var2) {
+		this.textColorHovered = var1;
+		this.textColorUnhovered = var2;
+		return this;
 	}
 
 	protected void mouseDragged(Minecraft var1, int var2, int var3) {
--- net/minecraft/src/Packet6SpawnPosition.java
+++ net/minecraft/src/Packet6SpawnPosition.java
@@ -8,17 +8,20 @@
 	public int xPosition;
 	public int yPosition;
 	public int zPosition;
+	public long worldSeed;
 
 	public void readPacketData(DataInputStream var1) throws IOException {
 		this.xPosition = var1.readInt();
 		this.yPosition = var1.readInt();
 		this.zPosition = var1.readInt();
+		this.worldSeed = var1.readLong();
 	}
 
 	public void writePacket(DataOutputStream var1) throws IOException {
 		var1.writeInt(this.xPosition);
 		var1.writeInt(this.yPosition);
 		var1.writeInt(this.zPosition);
+		var1.writeLong(this.worldSeed);
 	}
 
 	public void processPacket(NetHandler var1) {
@@ -26,6 +29,6 @@
 	}
 
 	public int getPacketSize() {
-		return 12;
+		return 20;
 	}
 }
--- /dev/null
+++ net/minecraft/src/ModelCatBomb.java
@@ -1,0 +1,24 @@
+package net.minecraft.src;
+
+public class ModelCatBomb<T extends Entity> extends EntityModel<T> {
+	public static final ModelLayerLocation LAYER_LOCATION = new ModelLayerLocation(new ResourceLocation("modid", "catbomb"), "main");
+	private final ModelPart bb_main;
+
+	public ModelCatBomb(ModelPart var1) {
+		this.bb_main = var1.getChild("bb_main");
+	}
+
+	public static LayerDefinition createBodyLayer() {
+		MeshDefinition var0 = new MeshDefinition();
+		PartDefinition var1 = var0.getRoot();
+		var1.addOrReplaceChild("bb_main", CubeListBuilder.create().texOffs(0, 10).addBox(1.0F, -1.0F, -3.0F, 1.0F, 1.0F, 2.0F, new CubeDeformation(0.0F)).texOffs(0, 0).addBox(-2.0F, -5.0F, -1.0F, 4.0F, 5.0F, 2.0F, new CubeDeformation(0.0F)).texOffs(6, 7).addBox(-2.0F, -1.0F, -3.0F, 1.0F, 1.0F, 2.0F, new CubeDeformation(0.0F)).texOffs(0, 7).addBox(-0.5F, -1.0F, 1.0F, 1.0F, 1.0F, 2.0F, new CubeDeformation(0.0F)).texOffs(10, 7).addBox(1.0F, -6.0F, -1.0F, 1.0F, 1.0F, 1.0F, new CubeDeformation(0.0F)).texOffs(4, 10).addBox(-2.0F, -6.0F, -1.0F, 1.0F, 1.0F, 1.0F, new CubeDeformation(0.0F)).texOffs(10, 0).addBox(-2.0F, -3.0F, -2.0F, 1.0F, 1.0F, 1.0F, new CubeDeformation(0.0F)).texOffs(4, 7).addBox(1.0F, -3.0F, -2.0F, 1.0F, 1.0F, 1.0F, new CubeDeformation(0.0F)), PartPose.offset(0.0F, 24.0F, 0.0F));
+		return LayerDefinition.create(var0, 16, 16);
+	}
+
+	public void setupAnim(T var1, float var2, float var3, float var4, float var5, float var6) {
+	}
+
+	public void renderToBuffer(PoseStack var1, VertexConsumer var2, int var3, int var4, float var5, float var6, float var7, float var8) {
+		this.bb_main.render(var1, var2, var3, var4, var5, var6, var7, var8);
+	}
+}
--- net/minecraft/src/RenderEngine.java
+++ net/minecraft/src/RenderEngine.java
@@ -4,6 +4,7 @@
 import java.awt.image.BufferedImage;
 import java.awt.image.ImageObserver;
 import java.io.IOException;
+import java.io.InputStream;
 import java.nio.ByteBuffer;
 import java.nio.IntBuffer;
 import java.util.ArrayList;
@@ -12,46 +13,54 @@
 import java.util.List;
 import java.util.Map;
 import javax.imageio.ImageIO;
+import net.minecraft.client.Minecraft;
 import org.lwjgl.opengl.GL11;
 
 public class RenderEngine {
 	public static boolean useMipmaps = false;
-	private HashMap textureMap = new HashMap();
-	private HashMap textureContentsMap = new HashMap();
+	private HashMap<String, Integer> textureMap = new HashMap();
+	private HashMap<Integer, BufferedImage> textureContentsMap = new HashMap();
 	private IntBuffer singleIntBuffer = GLAllocation.createDirectIntBuffer(1);
-	private ByteBuffer imageData = GLAllocation.createDirectByteBuffer(1048576);
-	private List textureList = new ArrayList();
-	private Map urlToImageDataMap = new HashMap();
-	private GameSettings options;
+	private ByteBuffer imageData = GLAllocation.createDirectByteBuffer(4194304);
+	private List<TextureFX> textureList = new ArrayList();
+	private Map<String, ThreadDownloadImageData> urlToImageDataMap = new HashMap();
+	public GameSettings options;
 	private boolean clampTexture = false;
+	public MinecraftUnknownClass2 field_12279_8nB09v2wL31LD7473aXNMbJrX47AX71iPMP6yPX544heeDvxj78y5qTJYk68;
+	public ImageHolder nonDeclImageHolder = new ImageHolder();
 
-	public RenderEngine(GameSettings var1) {
-		this.options = var1;
+	public RenderEngine(MinecraftUnknownClass2 var1, GameSettings var2) {
+		this.field_12279_8nB09v2wL31LD7473aXNMbJrX47AX71iPMP6yPX544heeDvxj78y5qTJYk68 = var1;
+		this.options = var2;
 	}
 
 	public int getTexture(String var1) {
-		Integer var2 = (Integer)this.textureMap.get(var1);
-		if(var2 != null) {
-			return var2.intValue();
+		VisualsUnknownClass var2 = this.field_12279_8nB09v2wL31LD7473aXNMbJrX47AX71iPMP6yPX544heeDvxj78y5qTJYk68.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0;
+		Integer var3 = (Integer)this.textureMap.get(var1);
+		if(var3 != null) {
+			return var3.intValue();
 		} else {
 			try {
 				this.singleIntBuffer.clear();
 				GLAllocation.generateTextureNames(this.singleIntBuffer);
 				int var4 = this.singleIntBuffer.get(0);
 				if(var1.startsWith("##")) {
-					this.setupTexture(this.unwrapImageByColumns(ImageIO.read(RenderEngine.class.getResourceAsStream(var1.substring(2)))), var4);
+					this.setupTexture(this.unwrapImageByColumns(this.func_12266_6Y6At49CUc59G341H19D7WD31Nq480a9ni7bM1Y4l5x2a18LJLiG1Z5Uv9sB(var2.getResourceAsStream(var1.substring(2)))), var4);
 				} else if(var1.startsWith("%%")) {
 					this.clampTexture = true;
-					this.setupTexture(ImageIO.read(RenderEngine.class.getResourceAsStream(var1.substring(2))), var4);
+					this.setupTexture(this.func_12266_6Y6At49CUc59G341H19D7WD31Nq480a9ni7bM1Y4l5x2a18LJLiG1Z5Uv9sB(var2.getResourceAsStream(var1.substring(2))), var4);
 					this.clampTexture = false;
 				} else {
-					this.setupTexture(ImageIO.read(RenderEngine.class.getResourceAsStream(var1)), var4);
+					this.setupTexture(this.func_12266_6Y6At49CUc59G341H19D7WD31Nq480a9ni7bM1Y4l5x2a18LJLiG1Z5Uv9sB(var2.getResourceAsStream(var1)), var4);
 				}
 
 				this.textureMap.put(var1, Integer.valueOf(var4));
 				return var4;
-			} catch (IOException var3) {
+			} catch (IOException var5) {
 				throw new RuntimeException("!!");
+			} catch (IllegalArgumentException var6) {
+				System.err.println("Failed to load resource: " + var1);
+				throw new RuntimeException(var6);
 			}
 		}
 	}
@@ -84,8 +93,8 @@
 			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MIN_FILTER, GL11.GL_LINEAR_MIPMAP_LINEAR);
 			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MAG_FILTER, GL11.GL_LINEAR);
 		} else {
-			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MIN_FILTER, GL11.GL_NEAREST);
-			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MAG_FILTER, GL11.GL_NEAREST);
+			GL11.glTexParameteri(3553, GL11.GL_TEXTURE_MIN_FILTER, ScreenDebugMenu.field_7956_48H3fYB8k2jE5s5HC81S9Sm600nFD73Lb4N90Pl1F0LSIx70mF1gldgvzgRz ? GL11.GL_LINEAR : GL11.GL_NEAREST);
+			GL11.glTexParameteri(3553, GL11.GL_TEXTURE_MAG_FILTER, ScreenDebugMenu.field_7956_48H3fYB8k2jE5s5HC81S9Sm600nFD73Lb4N90Pl1F0LSIx70mF1gldgvzgRz ? GL11.GL_LINEAR : GL11.GL_NEAREST);
 		}
 
 		if(this.clampTexture) {
@@ -165,8 +174,14 @@
 		GL11.glDeleteTextures(this.singleIntBuffer);
 	}
 
-	public int getTextureForDownloadableImage(String var1, String var2) {
-		ThreadDownloadImageData var3 = (ThreadDownloadImageData)this.urlToImageDataMap.get(var1);
+	public ImageHolder getTextureForDownloadableImage(String var1, String var2) {
+		ImageHolder var3;
+		if(SkinManager.skins.containsKey(var1)) {
+			var3 = (ImageHolder)SkinManager.skins.get(var1);
+		} else {
+			var3 = (ImageHolder)this.urlToImageDataMap.get(var1);
+		}
+
 		if(var3 != null && var3.image != null && !var3.textureSetupComplete) {
 			if(var3.textureName < 0) {
 				var3.textureName = this.allocateAndSetupTexture(var3.image);
@@ -177,12 +192,27 @@
 			var3.textureSetupComplete = true;
 		}
 
-		return var3 != null && var3.textureName >= 0 ? var3.textureName : this.getTexture(var2);
+		if(var3 != null && var3.textureName >= 0) {
+			return var3;
+		} else {
+			this.nonDeclImageHolder.textureName = this.getTexture(var2);
+			return this.nonDeclImageHolder;
+		}
 	}
 
-	public ThreadDownloadImageData obtainImageData(String var1, ImageBuffer var2) {
-		ThreadDownloadImageData var3 = (ThreadDownloadImageData)this.urlToImageDataMap.get(var1);
+	public ImageHolder obtainImageData(String var1, ImageBuffer var2) {
+		ImageHolder var3;
+		if(SkinManager.skins.containsKey(var1)) {
+			var3 = (ImageHolder)SkinManager.skins.get(var1);
+		} else {
+			var3 = (ImageHolder)this.urlToImageDataMap.get(var1);
+		}
+
 		if(var3 == null) {
+			if(this.urlToImageDataMap.containsKey(var1)) {
+				this.urlToImageDataMap.remove(var1);
+			}
+
 			this.urlToImageDataMap.put(var1, new ThreadDownloadImageData(var1, var2));
 		} else {
 			++var3.referenceCount;
@@ -192,7 +222,7 @@
 	}
 
 	public void releaseImageData(String var1) {
-		ThreadDownloadImageData var2 = (ThreadDownloadImageData)this.urlToImageDataMap.get(var1);
+		ImageHolder var2 = (ImageHolder)this.urlToImageDataMap.get(var1);
 		if(var2 != null) {
 			--var2.referenceCount;
 			if(var2.referenceCount == 0) {
@@ -212,83 +242,85 @@
 	}
 
 	public void updateDynamicTextures() {
-		int var1;
-		TextureFX var2;
-		int var3;
-		int var4;
-		int var5;
-		int var6;
-		int var7;
-		int var8;
-		int var9;
-		int var10;
-		int var11;
-		int var12;
-		for(var1 = 0; var1 < this.textureList.size(); ++var1) {
-			var2 = (TextureFX)this.textureList.get(var1);
-			var2.anaglyphEnabled = this.options.anaglyph;
-			var2.onTick();
-			this.imageData.clear();
-			this.imageData.put(var2.imageData);
-			this.imageData.position(0).limit(var2.imageData.length);
-			var2.bindImage(this);
-
-			for(var3 = 0; var3 < var2.tileSize; ++var3) {
-				for(var4 = 0; var4 < var2.tileSize; ++var4) {
-					GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, var2.iconIndex % 16 * 16 + var3 * 16, var2.iconIndex / 16 * 16 + var4 * 16, 16, 16, GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, (ByteBuffer)this.imageData);
-					if(useMipmaps) {
-						for(var5 = 1; var5 <= 4; ++var5) {
-							var6 = 16 >> var5 - 1;
-							var7 = 16 >> var5;
-
-							for(var8 = 0; var8 < var7; ++var8) {
-								for(var9 = 0; var9 < var7; ++var9) {
-									var10 = this.imageData.getInt((var8 * 2 + 0 + (var9 * 2 + 0) * var6) * 4);
-									var11 = this.imageData.getInt((var8 * 2 + 1 + (var9 * 2 + 0) * var6) * 4);
-									var12 = this.imageData.getInt((var8 * 2 + 1 + (var9 * 2 + 1) * var6) * 4);
-									int var13 = this.imageData.getInt((var8 * 2 + 0 + (var9 * 2 + 1) * var6) * 4);
-									int var14 = this.averageColor(this.averageColor(var10, var11), this.averageColor(var12, var13));
-									this.imageData.putInt((var8 + var9 * var7) * 4, var14);
-								}
-							}
-
-							GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, var5, var2.iconIndex % 16 * var7, var2.iconIndex / 16 * var7, var7, var7, GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, this.imageData);
-						}
-					}
-				}
-			}
-		}
-
-		for(var1 = 0; var1 < this.textureList.size(); ++var1) {
-			var2 = (TextureFX)this.textureList.get(var1);
-			if(var2.textureId > 0) {
+		if(Minecraft.field_7307_8AX67fsnsj54328J9e6FiY9333555Xj726t2182u3TBB948QMZsZX2iz02iv) {
+			int var1;
+			TextureFX var2;
+			int var3;
+			int var4;
+			int var5;
+			int var6;
+			int var7;
+			int var8;
+			int var9;
+			int var10;
+			int var11;
+			int var12;
+			for(var1 = 0; var1 < this.textureList.size(); ++var1) {
+				var2 = (TextureFX)this.textureList.get(var1);
+				var2.anaglyphEnabled = this.options.anaglyph;
+				var2.onTick();
 				this.imageData.clear();
 				this.imageData.put(var2.imageData);
 				this.imageData.position(0).limit(var2.imageData.length);
-				GL11.glBindTexture(GL11.GL_TEXTURE_2D, var2.textureId);
-				GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, 0, 0, 16, 16, GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, (ByteBuffer)this.imageData);
-				if(useMipmaps) {
-					for(var3 = 1; var3 <= 4; ++var3) {
-						var4 = 16 >> var3 - 1;
-						var5 = 16 >> var3;
-
-						for(var6 = 0; var6 < var5; ++var6) {
-							for(var7 = 0; var7 < var5; ++var7) {
-								var8 = this.imageData.getInt((var6 * 2 + 0 + (var7 * 2 + 0) * var4) * 4);
-								var9 = this.imageData.getInt((var6 * 2 + 1 + (var7 * 2 + 0) * var4) * 4);
-								var10 = this.imageData.getInt((var6 * 2 + 1 + (var7 * 2 + 1) * var4) * 4);
-								var11 = this.imageData.getInt((var6 * 2 + 0 + (var7 * 2 + 1) * var4) * 4);
-								var12 = this.averageColor(this.averageColor(var8, var9), this.averageColor(var10, var11));
-								this.imageData.putInt((var6 + var7 * var5) * 4, var12);
-							}
-						}
-
-						GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, var3, 0, 0, var5, var5, GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, (ByteBuffer)this.imageData);
-					}
-				}
-			}
+				var2.bindImage(this);
+
+				for(var3 = 0; var3 < var2.tileSize; ++var3) {
+					for(var4 = 0; var4 < var2.tileSize; ++var4) {
+						GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, var2.iconIndex % 16 * 16 + var3 * 16, var2.iconIndex / 16 * 16 + var4 * 16, 16, 16, GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, (ByteBuffer)this.imageData);
+						if(useMipmaps) {
+							for(var5 = 1; var5 <= 4; ++var5) {
+								var6 = 16 >> var5 - 1;
+								var7 = 16 >> var5;
+
+								for(var8 = 0; var8 < var7; ++var8) {
+									for(var9 = 0; var9 < var7; ++var9) {
+										var10 = this.imageData.getInt((var8 * 2 + 0 + (var9 * 2 + 0) * var6) * 4);
+										var11 = this.imageData.getInt((var8 * 2 + 1 + (var9 * 2 + 0) * var6) * 4);
+										var12 = this.imageData.getInt((var8 * 2 + 1 + (var9 * 2 + 1) * var6) * 4);
+										int var13 = this.imageData.getInt((var8 * 2 + 0 + (var9 * 2 + 1) * var6) * 4);
+										int var14 = this.averageColor(this.averageColor(var10, var11), this.averageColor(var12, var13));
+										this.imageData.putInt((var8 + var9 * var7) * 4, var14);
+									}
+								}
+
+								GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, var5, var2.iconIndex % 16 * var7, var2.iconIndex / 16 * var7, var7, var7, GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, this.imageData);
+							}
+						}
+					}
+				}
+			}
+
+			for(var1 = 0; var1 < this.textureList.size(); ++var1) {
+				var2 = (TextureFX)this.textureList.get(var1);
+				if(var2.textureId > 0) {
+					this.imageData.clear();
+					this.imageData.put(var2.imageData);
+					this.imageData.position(0).limit(var2.imageData.length);
+					GL11.glBindTexture(GL11.GL_TEXTURE_2D, var2.textureId);
+					GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, 0, 0, 16, 16, GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, (ByteBuffer)this.imageData);
+					if(useMipmaps) {
+						for(var3 = 1; var3 <= 4; ++var3) {
+							var4 = 16 >> var3 - 1;
+							var5 = 16 >> var3;
+
+							for(var6 = 0; var6 < var5; ++var6) {
+								for(var7 = 0; var7 < var5; ++var7) {
+									var8 = this.imageData.getInt((var6 * 2 + 0 + (var7 * 2 + 0) * var4) * 4);
+									var9 = this.imageData.getInt((var6 * 2 + 1 + (var7 * 2 + 0) * var4) * 4);
+									var10 = this.imageData.getInt((var6 * 2 + 1 + (var7 * 2 + 1) * var4) * 4);
+									var11 = this.imageData.getInt((var6 * 2 + 0 + (var7 * 2 + 1) * var4) * 4);
+									var12 = this.averageColor(this.averageColor(var8, var9), this.averageColor(var10, var11));
+									this.imageData.putInt((var6 + var7 * var5) * 4, var12);
+								}
+							}
+
+							GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, var3, 0, 0, var5, var5, GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, (ByteBuffer)this.imageData);
+						}
+					}
+				}
+			}
+
 		}
-
 	}
 
 	private int averageColor(int var1, int var2) {
@@ -320,48 +352,56 @@
 	}
 
 	public void refreshTextures() {
-		Iterator var1 = this.textureContentsMap.keySet().iterator();
+		VisualsUnknownClass var1 = this.field_12279_8nB09v2wL31LD7473aXNMbJrX47AX71iPMP6yPX544heeDvxj78y5qTJYk68.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0;
+		Iterator var2 = this.textureContentsMap.keySet().iterator();
 
 		BufferedImage var3;
-		while(var1.hasNext()) {
-			int var2 = ((Integer)var1.next()).intValue();
-			var3 = (BufferedImage)this.textureContentsMap.get(Integer.valueOf(var2));
-			this.setupTexture(var3, var2);
-		}
-
-		ThreadDownloadImageData var6;
-		for(var1 = this.urlToImageDataMap.values().iterator(); var1.hasNext(); var6.textureSetupComplete = false) {
-			var6 = (ThreadDownloadImageData)var1.next();
-		}
-
-		var1 = this.textureMap.keySet().iterator();
-
-		while(var1.hasNext()) {
-			String var7 = (String)var1.next();
+		while(var2.hasNext()) {
+			int var4 = ((Integer)var2.next()).intValue();
+			var3 = (BufferedImage)this.textureContentsMap.get(Integer.valueOf(var4));
+			this.setupTexture(var3, var4);
+		}
+
+		ImageHolder var8;
+		for(var2 = this.urlToImageDataMap.values().iterator(); var2.hasNext(); var8.textureSetupComplete = false) {
+			var8 = (ImageHolder)var2.next();
+		}
+
+		var2 = this.textureMap.keySet().iterator();
+
+		while(var2.hasNext()) {
+			String var5 = (String)var2.next();
 
 			try {
-				if(var7.startsWith("##")) {
-					var3 = this.unwrapImageByColumns(ImageIO.read(RenderEngine.class.getResourceAsStream(var7.substring(2))));
-				} else if(var7.startsWith("%%")) {
+				if(var5.startsWith("##")) {
+					var3 = this.unwrapImageByColumns(this.func_12266_6Y6At49CUc59G341H19D7WD31Nq480a9ni7bM1Y4l5x2a18LJLiG1Z5Uv9sB(var1.getResourceAsStream(var5.substring(2))));
+				} else if(var5.startsWith("%%")) {
 					this.clampTexture = true;
-					var3 = ImageIO.read(RenderEngine.class.getResourceAsStream(var7.substring(2)));
+					var3 = this.func_12266_6Y6At49CUc59G341H19D7WD31Nq480a9ni7bM1Y4l5x2a18LJLiG1Z5Uv9sB(var1.getResourceAsStream(var5.substring(2)));
 					this.clampTexture = false;
 				} else {
-					var3 = ImageIO.read(RenderEngine.class.getResourceAsStream(var7));
+					var3 = this.func_12266_6Y6At49CUc59G341H19D7WD31Nq480a9ni7bM1Y4l5x2a18LJLiG1Z5Uv9sB(var1.getResourceAsStream(var5));
 				}
 
-				int var4 = ((Integer)this.textureMap.get(var7)).intValue();
-				this.setupTexture(var3, var4);
-			} catch (IOException var5) {
-				var5.printStackTrace();
+				int var6 = ((Integer)this.textureMap.get(var5)).intValue();
+				this.setupTexture(var3, var6);
+			} catch (IOException var7) {
+				var7.printStackTrace();
 			}
 		}
 
+	}
+
+	private BufferedImage func_12266_6Y6At49CUc59G341H19D7WD31Nq480a9ni7bM1Y4l5x2a18LJLiG1Z5Uv9sB(InputStream var1) throws IOException {
+		BufferedImage var2 = ImageIO.read(var1);
+		var1.close();
+		return var2;
 	}
 
 	public void bindTexture(int var1) {
 		if(var1 >= 0) {
 			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var1);
 		}
+
 	}
 }
--- net/minecraft/src/ImageBufferDownload.java
+++ net/minecraft/src/ImageBufferDownload.java
@@ -60,8 +60,8 @@
 					this.imageData[var5 + var6 * this.imageWidth] &= 16777215;
 				}
 			}
-
 		}
+
 	}
 
 	private void setAreaOpaque(int var1, int var2, int var3, int var4) {
--- net/minecraft/src/ThreadDownloadImage.java
+++ net/minecraft/src/ThreadDownloadImage.java
@@ -1,11 +1,17 @@
 package net.minecraft.src;
 
+import java.awt.Color;
+import java.awt.Graphics2D;
+import java.awt.image.BufferedImage;
+import java.io.File;
+import java.io.IOException;
 import java.net.HttpURLConnection;
 import java.net.URL;
+import java.util.Iterator;
 import javax.imageio.ImageIO;
 
 class ThreadDownloadImage extends Thread {
-	final String location;
+	String location;
 	final ImageBuffer buffer;
 	final ThreadDownloadImageData imageData;
 
@@ -16,29 +22,67 @@
 	}
 
 	public void run() {
-		HttpURLConnection var1 = null;
-
-		try {
-			URL var2 = new URL(this.location);
-			var1 = (HttpURLConnection)var2.openConnection();
-			var1.setDoInput(true);
-			var1.setDoOutput(false);
-			var1.connect();
-			if(var1.getResponseCode() != 404) {
-				if(this.buffer == null) {
-					this.imageData.image = ImageIO.read(var1.getInputStream());
+		while(this.location.charAt(0) == 1 || this.location.charAt(0) == 2) {
+			this.location = this.location.substring(1);
+		}
+
+		if(this.location == "@@") {
+			this.imageData.image = new BufferedImage(32, 16, 2);
+			Graphics2D var13 = this.imageData.image.createGraphics();
+			var13.setColor(new Color(0, 0, 0));
+			var13.fillRect(0, 0, 32, 16);
+			var13.dispose();
+		} else {
+			Iterator var1 = Ext1605Utils.skinUrls.iterator();
+
+			while(true) {
+				if(var1.hasNext()) {
+					String var2 = (String)var1.next();
+					String var3 = var2 + this.location + ".png";
+					if(var2.startsWith("file://")) {
+						try {
+							this.imageData.image = ImageIO.read(new File(var3.substring(7)));
+						} catch (IOException var10) {
+							System.out.println("Failed to load skin from " + var3);
+						}
+					} else {
+						HttpURLConnection var4 = null;
+
+						try {
+							URL var5 = new URL(var3);
+							var4 = (HttpURLConnection)var5.openConnection();
+							var4.setDoInput(true);
+							var4.setDoOutput(false);
+							var4.connect();
+							if(var4.getResponseCode() == 404) {
+								return;
+							}
+
+							if(this.buffer == null) {
+								this.imageData.image = ImageIO.read(var4.getInputStream());
+							} else {
+								this.imageData.image = this.buffer.parseUserSkin(ImageIO.read(var4.getInputStream()));
+							}
+						} catch (Exception var11) {
+							var11.printStackTrace();
+						} finally {
+							var4.disconnect();
+						}
+					}
+
+					if(this.imageData.image == null) {
+						continue;
+					}
+				}
+
+				if(this.imageData.image == null) {
+					System.out.println("Failed to load skin.");
 				} else {
-					this.imageData.image = this.buffer.parseUserSkin(ImageIO.read(var1.getInputStream()));
+					this.imageData.initialize();
 				}
 
 				return;
 			}
-		} catch (Exception var6) {
-			var6.printStackTrace();
-			return;
-		} finally {
-			var1.disconnect();
 		}
-
 	}
 }
--- /dev/null
+++ net/minecraft/src/ResourceLocation.java
@@ -1,0 +1,6 @@
+package net.minecraft.src;
+
+public class ResourceLocation {
+	public ResourceLocation(String var1, String var2) {
+	}
+}
--- /dev/null
+++ net/minecraft/src/EntityPlayerZombieModeClient.java
@@ -1,0 +1,142 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+import org.lwjgl.input.Keyboard;
+
+public class EntityPlayerZombieModeClient extends EntityPlayerSP {
+	public BlockUnknownInterface field_9097_867sEKNEsa45Xq4Etlk5s449h7UUOWVcX6nYd2PGjFy373Y2PXcol521PBg2;
+	public XYZv field_9093_8pX3Foh9nnqOBZGkAhkc659OKcv5h23UrLcQ0x07ZRU1yOwY57fY6vz12UYR;
+	public ZMWorld worldIn;
+	private NamedLoc[] checkps = null;
+	public InventoryVendingMachine field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q;
+	public int field_9096_9Cq66X6kSMd1628jv96ZzpX8854blZjSRkO0AnxAFkKnO80vIjYxJK4rDT37 = 0;
+	public int field_9099_9Swr41S6T68d6dEsYG2c2L6B4clPHDs2giSrx84SjI081x3148rUDLOdX7Lp = -1;
+	public int field_9098_0T4mYOo96os7D946wHj66WQEoVFA7VTvN1ol4CfqE18e95s48a1Ihb6vgf6X = 0;
+
+	public void func_9090_5033aW84oic86C12UqY7P8G6DZj8848fFMS717oT7yfysLA8bD9uerQqVB7E() {
+		this.setSize(0.2F, 0.2F);
+		this.field_9099_9Swr41S6T68d6dEsYG2c2L6B4clPHDs2giSrx84SjI081x3148rUDLOdX7Lp = 100;
+		this.health = 1;
+	}
+
+	public EntityPlayerZombieModeClient(Minecraft var1, ZMWorld var2, Session var3) {
+		super(var1, var2, var3);
+		this.worldIn = var2;
+		XYZv var4 = var2.func_7546_09CNVM2pJHfEd8I53GaO82x396qpVix0JSZqlf73zO9Itp6Z0ZM1dFPcr9r6();
+		this.setPosition((double)var4.x, (double)var4.y, (double)var4.z);
+		this.inventory = this.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q = new InventoryVendingMachine(this);
+		ItemStack[] var5 = var2.startingItems;
+		int var6 = var5.length;
+
+		for(int var7 = 0; var7 < var6; ++var7) {
+			ItemStack var8 = var5[var7];
+			this.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.addItemStackToInventory(var8.copy());
+		}
+
+	}
+
+	public boolean attackEntityFrom(Entity var1, int var2) {
+		if(var2 != 0 && this.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.field_8695_54O4q276dxP8y31413ENJjhqXBnFshV4S4ng8H76Bv5Y3Ma2DF7fbLk53PvO) {
+			var2 /= 2;
+			var2 = Math.max(var2, 1);
+		}
+
+		if(this.field_9099_9Swr41S6T68d6dEsYG2c2L6B4clPHDs2giSrx84SjI081x3148rUDLOdX7Lp < 0) {
+			super.attackEntityFrom(var1, var2);
+			this.field_9098_0T4mYOo96os7D946wHj66WQEoVFA7VTvN1ol4CfqE18e95s48a1Ihb6vgf6X = 0;
+			if(this.health <= 0 && this.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.field_8692_8s3a9ZFU1Lb4Y33KzN5HEwzzvMoj71d2qDVF231HNAJ36vP850tAYydwpyN6) {
+				this.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.field_8692_8s3a9ZFU1Lb4Y33KzN5HEwzzvMoj71d2qDVF231HNAJ36vP850tAYydwpyN6 = false;
+				this.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.field_8693_6a3I3v4L072y21iqK2Q4a7OJa1SIY587gNZ7teLm8k1uZzO68dY6lE8PKTBh = false;
+				this.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.field_8690_9ajSfayfVo92Z68A5B2rvo13codHKhrUqqH2LRN64r7Ac066r0ki4BD2lC9w = false;
+				this.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.field_8695_54O4q276dxP8y31413ENJjhqXBnFshV4S4ng8H76Bv5Y3Ma2DF7fbLk53PvO = false;
+				this.func_9090_5033aW84oic86C12UqY7P8G6DZj8848fFMS717oT7yfysLA8bD9uerQqVB7E();
+			}
+
+			return true;
+		} else {
+			return false;
+		}
+	}
+
+	public void displayGUIChest(IInventory var1) {
+	}
+
+	public void displayGUIEditSign(TileEntitySign var1) {
+	}
+
+	public void displayWorkbenchGUI() {
+	}
+
+	public void displayGUIFurnace(TileEntityFurnace var1) {
+	}
+
+	public void onLivingUpdate() {
+		if(this.field_9099_9Swr41S6T68d6dEsYG2c2L6B4clPHDs2giSrx84SjI081x3148rUDLOdX7Lp >= 0) {
+			--this.field_9099_9Swr41S6T68d6dEsYG2c2L6B4clPHDs2giSrx84SjI081x3148rUDLOdX7Lp;
+			this.motionX = this.motionY = this.motionZ = 0.0D;
+			this.movementInput.moveForward = this.movementInput.moveStrafe = 0.0F;
+			if(this.field_9099_9Swr41S6T68d6dEsYG2c2L6B4clPHDs2giSrx84SjI081x3148rUDLOdX7Lp == -1) {
+				this.setSize(1.6F, 1.8F);
+				this.health = 20;
+			} else {
+				this.yOffset = 0.1F;
+				this.setSize(0.2F, 0.2F);
+			}
+
+			super.func_9048_6Gw1VytaaUv0K01sl03hRqP53Gtn1diJT7GGN022KtBtJsK73Sx1JZ0GS264();
+		} else {
+			++this.field_9098_0T4mYOo96os7D946wHj66WQEoVFA7VTvN1ol4CfqE18e95s48a1Ihb6vgf6X;
+			if(this.field_9098_0T4mYOo96os7D946wHj66WQEoVFA7VTvN1ol4CfqE18e95s48a1Ihb6vgf6X > 120) {
+				this.field_9098_0T4mYOo96os7D946wHj66WQEoVFA7VTvN1ol4CfqE18e95s48a1Ihb6vgf6X -= 30;
+				this.heal(1);
+			}
+
+			this.affectedByFallDamage = !this.flying;
+			this.movementInput.updatePlayerMoveState(this);
+			if(this.movementInput.sneak && this.ySize < 0.2F) {
+				this.ySize = 0.2F;
+			}
+
+			if(this.dashTimer > 0) {
+				--this.dashTimer;
+				if(this.dashTimer == 0) {
+					this.mc.theWorld.playSoundEffect(this.posX, this.posY, this.posZ, "ext.recharg", 0.6F, 1.0F);
+				}
+			}
+
+			this.flying = ScreenDebugMenu.dbg_conf_fly;
+			this.func_9057_6FZ3s2AdD8672ATKvVLxT93uc6yRL35dQvB2PbBj9KC2ZS6kQVimb3657Hqb();
+			if(Keyboard.isKeyDown(Keyboard.KEY_F8)) {
+				this.worldIn.func_7555_0bxBq3DD3lTvn8h5d6Lh9Ud6SBFd8P1VY734Br5npXUaSk1x7rgO4bfsPjZk();
+			}
+
+			super.onLivingUpdate_handled();
+			if(this.flying) {
+				if(InputHandler.IsKeyDown(InputHandler.mc.options.keyBindJump.keyCode)) {
+					this.motionY = 1.0D;
+				} else if(InputHandler.IsKeyDown(InputHandler.mc.options.keyBindSneak.keyCode)) {
+					this.motionY = -1.0D;
+				} else {
+					this.motionY = 0.0D;
+				}
+			}
+		}
+
+	}
+
+	public void func_9050_0Y2V1e7t06S7hQ12YogQ88R8Lcbm2Sz6Y3o802q297lUgzXrhuM8Ioqo9Hzq(Minecraft var1) {
+		if(InputHandler.IsKeyDown(54)) {
+			super.func_9050_0Y2V1e7t06S7hQ12YogQ88R8Lcbm2Sz6Y3o802q297lUgzXrhuM8Ioqo9Hzq(var1);
+		} else {
+			this.func_9091_9LGb3eft4Vdk4NKxJJVr2dXQVsNzQTnqHvU8F7T7yL3TgO8aHWk01SZ8U29Z();
+		}
+
+	}
+
+	public void func_9091_9LGb3eft4Vdk4NKxJJVr2dXQVsNzQTnqHvU8F7T7yL3TgO8aHWk01SZ8U29Z() {
+		if(this.field_9097_867sEKNEsa45Xq4Etlk5s449h7UUOWVcX6nYd2PGjFy373Y2PXcol521PBg2 != null) {
+			this.field_9097_867sEKNEsa45Xq4Etlk5s449h7UUOWVcX6nYd2PGjFy373Y2PXcol521PBg2.func_8286_2f84KM1xKjK9eBj4915qo36L405Hm9W3JZ41244r918IGv3BpYiut0G1VBGw(this, this.field_9093_8pX3Foh9nnqOBZGkAhkc659OKcv5h23UrLcQ0x07ZRU1yOwY57fY6vz12UYR);
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/HandlerSetCheckpointUnknownClass2.java
@@ -1,0 +1,17 @@
+package net.minecraft.src;
+
+public class HandlerSetCheckpointUnknownClass2 {
+	public double field_12186_05n216qDAUZ2kE810Fqi64V6niu79vbRckyfaVY9Fqw11STapU0px02uapMx;
+	public double field_12188_9uq1C9Zys0Le7aJhWE0BeKD05T9G0hDuv6srjUYYK3RiBek01P8Ij69s3Es9;
+	public double field_12187_7Kg8S2j0ooT9LE62UmIi8A7J7Y4sM22qj00KYKP97u5583AOirdarRO6WOFv;
+
+	public HandlerSetCheckpointUnknownClass2(double var1, double var3, double var5) {
+		this.field_12186_05n216qDAUZ2kE810Fqi64V6niu79vbRckyfaVY9Fqw11STapU0px02uapMx = var1;
+		this.field_12188_9uq1C9Zys0Le7aJhWE0BeKD05T9G0hDuv6srjUYYK3RiBek01P8Ij69s3Es9 = var3;
+		this.field_12187_7Kg8S2j0ooT9LE62UmIi8A7J7Y4sM22qj00KYKP97u5583AOirdarRO6WOFv = var5;
+	}
+
+	public double func_12185_77E7ly6r5p8AgeD7j1MC3wrd4wUdbSPPEtyupBLDu5J7c0z302AEf633qiD9(double var1, double var3) {
+		return Math.sqrt(Math.pow(this.field_12186_05n216qDAUZ2kE810Fqi64V6niu79vbRckyfaVY9Fqw11STapU0px02uapMx - var1, 2.0D) + Math.pow(this.field_12187_7Kg8S2j0ooT9LE62UmIi8A7J7Y4sM22qj00KYKP97u5583AOirdarRO6WOFv - var3, 2.0D));
+	}
+}
--- net/minecraft/src/CraftingInventoryWorkbenchCB.java
+++ net/minecraft/src/CraftingInventoryWorkbenchCB.java
@@ -4,7 +4,7 @@
 	public InventoryCrafting craftMatrix = new InventoryCrafting(this, 3, 3);
 	public IInventory craftResult = new InventoryCraftResult();
 
-	public void onCraftMatrixChanged(IInventory var1) {
+	public void a(IInventory var1) {
 		int[] var2 = new int[9];
 
 		for(int var3 = 0; var3 < 3; ++var3) {
--- net/minecraft/src/Packet50PreChunk.java
+++ net/minecraft/src/Packet50PreChunk.java
@@ -8,17 +8,71 @@
 	public int xPosition;
 	public int yPosition;
 	public boolean mode;
+	public float[] field_8483_9F000reVs09qJC6RM1CDXbwpWot2ap8bQLJ224QEy3l8Sj0Ca7AELxBGg6v9;
+
+	public Packet50PreChunk() {
+	}
+
+	public Packet50PreChunk(int var1, int var2, float[] var3) {
+		this.xPosition = var1;
+		this.yPosition = var2;
+		this.field_8483_9F000reVs09qJC6RM1CDXbwpWot2ap8bQLJ224QEy3l8Sj0Ca7AELxBGg6v9 = var3;
+		this.mode = var3.length != 0;
+	}
 
 	public void readPacketData(DataInputStream var1) throws IOException {
 		this.xPosition = var1.readInt();
 		this.yPosition = var1.readInt();
 		this.mode = var1.read() != 0;
+		if(this.mode) {
+			float var2 = var1.readFloat();
+			float var3 = var1.readFloat();
+			float var4 = var3 - var2;
+			byte[] var5 = new byte[1536];
+			var1.readFully(var5);
+			this.field_8483_9F000reVs09qJC6RM1CDXbwpWot2ap8bQLJ224QEy3l8Sj0Ca7AELxBGg6v9 = new float[1536];
+
+			for(int var6 = 0; var6 < var5.length; ++var6) {
+				this.field_8483_9F000reVs09qJC6RM1CDXbwpWot2ap8bQLJ224QEy3l8Sj0Ca7AELxBGg6v9[var6] = var2 + (float)(var5[var6] & 255) / 255.0F * var4;
+			}
+		}
+
 	}
 
 	public void writePacket(DataOutputStream var1) throws IOException {
 		var1.writeInt(this.xPosition);
 		var1.writeInt(this.yPosition);
 		var1.write(this.mode ? 1 : 0);
+		if(this.mode) {
+			float var2 = Float.MAX_VALUE;
+			float var3 = 1.17549435E-38F;
+			float[] var4 = this.field_8483_9F000reVs09qJC6RM1CDXbwpWot2ap8bQLJ224QEy3l8Sj0Ca7AELxBGg6v9;
+			int var5 = var4.length;
+
+			int var6;
+			for(var6 = 0; var6 < var5; ++var6) {
+				float var7 = var4[var6];
+				if(var2 > var7) {
+					var2 = var7;
+				}
+
+				if(var3 < var7) {
+					var3 = var7;
+				}
+			}
+
+			float var8 = var3 - var2;
+			byte[] var9 = new byte[1536];
+
+			for(var6 = 0; var6 < var9.length; ++var6) {
+				var9[var6] = (byte)((int)((this.field_8483_9F000reVs09qJC6RM1CDXbwpWot2ap8bQLJ224QEy3l8Sj0Ca7AELxBGg6v9[var6] + var2) / var8 * 255.0F));
+			}
+
+			var1.writeFloat(var2);
+			var1.writeFloat(var3);
+			var1.write(var9);
+		}
+
 	}
 
 	public void processPacket(NetHandler var1) {
--- /dev/null
+++ net/minecraft/src/EnumVendingMachine.java
@@ -1,0 +1,26 @@
+package net.minecraft.src;
+
+public enum EnumVendingMachine {
+	HealthBoost,
+	Armor,
+	Dash,
+	QuickRevive;
+
+    private static final /* synthetic */ EnumVendingMachine[] field_8625_1jn27Ud6K1E5aSFYYd6mPcAHRLbB5b99cdhLMyAifQxcxPKV6fEHsH17Y6Lr;
+
+	public static EnumVendingMachine[] func_8621_1A4K8JmwLTo1bRceY319ILcN68Kz1yddU8DZWKk5CMsNwnMN4Amc8gdj0Pfv() {
+		return (EnumVendingMachine[])field_8625_1jn27Ud6K1E5aSFYYd6mPcAHRLbB5b99cdhLMyAifQxcxPKV6fEHsH17Y6Lr.clone();
+	}
+
+	public static EnumVendingMachine func_8620_0aJ1y4py1uO94VN9J2l4GELt978qX5AXCL4ZmZHwpP1ii30s8C2kJ6youLd6(String var0) {
+		return (EnumVendingMachine)Enum.valueOf(EnumVendingMachine.class, var0);
+	}
+
+	private static EnumVendingMachine[] func_8619_0VbSu8hi2TTghgtF7b2V61g7ZVe4jHvkomY6fhXrpXdH8k2GY6X98sWc6368() {
+		return new EnumVendingMachine[]{HealthBoost, Armor, Dash, QuickRevive};
+	}
+
+    static {
+        field_8625_1jn27Ud6K1E5aSFYYd6mPcAHRLbB5b99cdhLMyAifQxcxPKV6fEHsH17Y6Lr = EnumVendingMachine.func_8619_0VbSu8hi2TTghgtF7b2V61g7ZVe4jHvkomY6fhXrpXdH8k2GY6X98sWc6368();
+    }
+}
--- /dev/null
+++ net/minecraft/src/EntityLeafFX.java
@@ -1,0 +1,37 @@
+package net.minecraft.src;
+
+public class EntityLeafFX extends EntityFX {
+	public EntityLeafFX(World var1, double var2, double var4, double var6, double var8, double var10, double var12) {
+		super(var1, var2, var4, var6, var8, var10, var12);
+		this.motionX = this.motionX * (double)0.01F + var8;
+		this.motionY = this.motionY * (double)0.01F + var10;
+		this.motionZ = this.motionZ * (double)0.01F + var12;
+		this.particleRed = this.particleGreen = this.particleBlue = 1.0F;
+		this.noClip = true;
+		this.particleTextureIndex = 80;
+		this.particleMaxAge *= 2;
+	}
+
+	public void renderParticle(Tessellator var1, float var2, float var3, float var4, float var5, float var6, float var7) {
+		super.renderParticle(var1, var2, var3, var4, var5, var6, var7);
+	}
+
+	public void onUpdate() {
+		this.prevPosX = this.posX;
+		this.prevPosY = this.posY;
+		this.prevPosZ = this.posZ;
+		if(this.particleAge++ >= this.particleMaxAge) {
+			this.setEntityDead();
+		}
+
+		this.moveEntity(this.motionX, this.motionY, this.motionZ);
+		this.motionX *= (double)0.96F;
+		this.motionY *= (double)0.96F;
+		this.motionZ *= (double)0.96F;
+		if(this.onGround) {
+			this.motionX *= (double)0.7F;
+			this.motionZ *= (double)0.7F;
+		}
+
+	}
+}
--- net/minecraft/src/GuiOptions.java
+++ net/minecraft/src/GuiOptions.java
@@ -4,6 +4,8 @@
 	private GuiScreen parentScreen;
 	protected String screenTitle = "Options";
 	private GameSettings options;
+	public GuiOptionsUnknownClass[] field_7995_39B0S54XEoj9o578952Q1No7Z7432CSZfrb5cQA55jyR56Cie0Dk9uTlnOSY = new GuiOptionsUnknownClass[]{new GuiOptionsUnknownClass("AUDIO", new int[]{0, 1}), new GuiOptionsUnknownClass("CONTROLS", new int[]{2, 3, 100}), new GuiOptionsUnknownClass("GAME", new int[]{8, 5, 10}), new GuiOptionsUnknownClass("GRAPHICS", new int[]{4, 6, 7, 9, 11, 12, 101}), new GuiOptionsUnknownClass("ADV.GRAPHICS", new int[]{20, 21, 22, 23, 24})};
+	int field_7993_0H17uB6IO6cG7dQAsZqeXTW7jbxvmHrvBd13bbhKX72k1G3KevfMB9wFULbX = 0;
 
 	public GuiOptions(GuiScreen var1, GameSettings var2) {
 		this.parentScreen = var1;
@@ -11,17 +13,33 @@
 	}
 
 	public void initGui() {
-		for(int var1 = 0; var1 < this.options.numberOfOptions; ++var1) {
-			int var2 = this.options.isSlider(var1);
-			if(var2 == 0) {
-				this.controlList.add(new GuiSmallButton(var1, this.width / 2 - 155 + var1 % 2 * 160, this.height / 6 + 24 * (var1 >> 1), this.options.getOptionDisplayString(var1)));
+		this.controlList.clear();
+		byte var1 = 80;
+
+		int var2;
+		for(var2 = 0; var2 != this.field_7995_39B0S54XEoj9o578952Q1No7Z7432CSZfrb5cQA55jyR56Cie0Dk9uTlnOSY.length; ++var2) {
+			GuiOptionsUnknownClass var3 = this.field_7995_39B0S54XEoj9o578952Q1No7Z7432CSZfrb5cQA55jyR56Cie0Dk9uTlnOSY[var2];
+			ButtonSel var4 = new ButtonSel(300 + var2, 10 + var1 * var2, 50, var1, 20, var3.field_11925_9Ru5RKiPGrWu85AybUGX8oMPo03B0m3zkt61t6dKCVEnr8y0yY74Kh1R2IVb, false);
+			this.controlList.add(var4);
+			var4.enabled = this.field_7993_0H17uB6IO6cG7dQAsZqeXTW7jbxvmHrvBd13bbhKX72k1G3KevfMB9wFULbX != var2;
+		}
+
+		var2 = 0;
+		byte var7 = 100;
+
+		for(int var8 = 0; var8 < this.field_7995_39B0S54XEoj9o578952Q1No7Z7432CSZfrb5cQA55jyR56Cie0Dk9uTlnOSY[this.field_7993_0H17uB6IO6cG7dQAsZqeXTW7jbxvmHrvBd13bbhKX72k1G3KevfMB9wFULbX].field_11926_9f6mt94hA9p2UClP6Cr5Zgnmo0Z76O6tynyCk27MR31oKNk3vK7Snk8Fkgl8.length; ++var8) {
+			int var5 = this.field_7995_39B0S54XEoj9o578952Q1No7Z7432CSZfrb5cQA55jyR56Cie0Dk9uTlnOSY[this.field_7993_0H17uB6IO6cG7dQAsZqeXTW7jbxvmHrvBd13bbhKX72k1G3KevfMB9wFULbX].field_11926_9f6mt94hA9p2UClP6Cr5Zgnmo0Z76O6tynyCk27MR31oKNk3vK7Snk8Fkgl8[var8];
+			int var6 = this.options.isSlider(var5);
+			if(var6 == 0) {
+				this.controlList.add(new GuiSmallButton(var5, this.width / 2 - 155 + var8 % 2 * 160, var7 + 24 * (var8 >> 1), this.options.getOptionDisplayString(var5)));
 			} else {
-				this.controlList.add(new GuiSlider(var1, this.width / 2 - 155 + var1 % 2 * 160, this.height / 6 + 24 * (var1 >> 1), var1, this.options.getOptionDisplayString(var1), this.options.getOptionFloatValue(var1)));
+				this.controlList.add(new GuiSlider(var5, this.width / 2 - 155 + var8 % 2 * 160, var7 + 24 * (var8 >> 1), var5, this.options.getOptionDisplayString(var5), this.options.getOptionFloatValue(var5)));
 			}
+
+			var2 = ((GuiButton)this.controlList.get(this.controlList.size() - 1)).yPosition;
 		}
 
-		this.controlList.add(new GuiButton(100, this.width / 2 - 100, this.height / 6 + 120 + 12, "Controls..."));
-		this.controlList.add(new GuiButton(200, this.width / 2 - 100, this.height / 6 + 168, "Done"));
+		this.controlList.add(new ButtonSel(200, this.width / 2 - 100, Math.min(this.height / 6 * 5, var2 + 58), 180, 20, "Done", false));
 	}
 
 	protected void actionPerformed(GuiButton var1) {
@@ -35,16 +53,27 @@
 				this.mc.displayGuiScreen(new GuiControls(this, this.options));
 			}
 
+			if(var1.id == 101) {
+				this.mc.displayGuiScreen(new GuiVisuals(this));
+			}
+
 			if(var1.id == 200) {
+				this.options.saveOptions();
 				this.mc.displayGuiScreen(this.parentScreen);
 			}
 
+			if(var1.id >= 300 && var1.id < 400) {
+				this.field_7993_0H17uB6IO6cG7dQAsZqeXTW7jbxvmHrvBd13bbhKX72k1G3KevfMB9wFULbX = var1.id - 300;
+				this.initGui();
+			}
 		}
+
 	}
 
 	public void drawScreen(int var1, int var2, float var3) {
 		this.drawDefaultBackground();
 		this.drawCenteredString(this.fontRenderer, this.screenTitle, this.width / 2, 20, 16777215);
+		Gui.drawGradientRect(0, 80, this.width, this.height, -1610612736, 537657372);
 		super.drawScreen(var1, var2, var3);
 	}
 }
--- net/minecraft/src/EntityPlayerSP.java
+++ net/minecraft/src/EntityPlayerSP.java
@@ -4,13 +4,18 @@
 
 public class EntityPlayerSP extends EntityPlayer {
 	public MovementInput movementInput;
-	private Minecraft mc;
+	protected Minecraft mc;
+	public int dashTimer = 0;
+	protected long lastGroupX = 0L;
+	protected long lastGroupZ = 0L;
+	protected long lastPlayerX = 0L;
+	protected long lastPlayerZ = 0L;
 
 	public EntityPlayerSP(Minecraft var1, World var2, Session var3) {
 		super(var2);
 		this.mc = var1;
 		if(var3 != null && var3.username != null && var3.username.length() > 0) {
-			this.skinUrl = "http://www.minecraft.net/skin/" + var3.username + ".png";
+			this.skinUrl = var3.username;
 			System.out.println("Loading texture " + this.skinUrl);
 		}
 
@@ -21,16 +26,82 @@
 		super.updateEntityActionState();
 		this.moveStrafing = this.movementInput.moveStrafe;
 		this.moveForward = this.movementInput.moveForward;
+		if(this.isSneaking() && this.isInsideOfMaterial(Material.water)) {
+			this.moveForward /= 2.0F;
+			this.moveStrafing /= 2.0F;
+		}
+
 		this.isJumping = this.movementInput.jump;
 	}
 
+	public void func_9048_6Gw1VytaaUv0K01sl03hRqP53Gtn1diJT7GGN022KtBtJsK73Sx1JZ0GS264() {
+		super.func_8999_2V2k958X8cUl0N1lA83kol6zqQt7yi5f733JmXLv5F2q3Uq9IkthN796za9B();
+	}
+
+	public void onLivingUpdate_handled() {
+		super.onLivingUpdate();
+	}
+
+	public void func_9057_6FZ3s2AdD8672ATKvVLxT93uc6yRL35dQvB2PbBj9KC2ZS6kQVimb3657Hqb() {
+		long var1 = (long)this.posX;
+		long var3 = (long)this.posZ;
+		if(var1 != this.lastPlayerX || var3 != this.lastPlayerZ) {
+			this.lastPlayerX = var1;
+			this.lastPlayerZ = var3;
+			ExtEvents.PlayerMoveXZBlock(this, this.worldObj);
+		}
+
+	}
+
+	public void func_9053_4r7E25wNycK5Dtg6xYrBsbWgXj4SV79G01FBa6LOr2ZexDCWEEl67EY5VZXD() {
+		long var1 = (long)this.posX;
+		long var3 = (long)this.posZ;
+		long var5 = var1 / 32L;
+		long var7 = var3 / 32L;
+		if(this.lastGroupX != var5 || this.lastGroupZ != var7) {
+			this.lastGroupX = var5;
+			this.lastGroupZ = var7;
+			ExtEvents.PlayerMoveChunkgroup(this, this.worldObj);
+		}
+
+	}
+
 	public void onLivingUpdate() {
+		this.affectedByFallDamage = !this.flying;
 		this.movementInput.updatePlayerMoveState(this);
 		if(this.movementInput.sneak && this.ySize < 0.2F) {
 			this.ySize = 0.2F;
 		}
 
+		if(this.air < 150 && this.air % 15 == 0) {
+			int var1 = 1 + this.rand.nextInt(this.isSneaking() ? 2 : 5);
+
+			for(int var2 = 0; var2 != var1; ++var2) {
+				this.worldObj.spawnParticle("bubble", this.posX, this.posY, this.posZ + (double)((float)(var2 / var1) * 0.2F), 0.0D, 0.5D, 0.0D);
+			}
+		}
+
+		if(this.dashTimer > 0) {
+			--this.dashTimer;
+			if(this.dashTimer == 0) {
+				this.mc.theWorld.playSoundEffect(this.posX, this.posY, this.posZ, "ext.recharg", 0.6F, 1.0F);
+			}
+		}
+
+		this.func_9057_6FZ3s2AdD8672ATKvVLxT93uc6yRL35dQvB2PbBj9KC2ZS6kQVimb3657Hqb();
+		this.func_9053_4r7E25wNycK5Dtg6xYrBsbWgXj4SV79G01FBa6LOr2ZexDCWEEl67EY5VZXD();
+		this.flying = ScreenDebugMenu.dbg_conf_fly;
 		super.onLivingUpdate();
+		if(this.flying) {
+			if(InputHandler.IsKeyDown(InputHandler.mc.options.keyBindJump.keyCode)) {
+				this.motionY = 1.0D;
+			} else if(InputHandler.IsKeyDown(InputHandler.mc.options.keyBindSneak.keyCode)) {
+				this.motionY = -1.0D;
+			} else {
+				this.motionY = 0.0D;
+			}
+		}
+
 	}
 
 	public void resetPlayerKeyState() {
@@ -51,6 +122,10 @@
 		this.score = var1.getInteger("Score");
 	}
 
+	public void func_9014_8m5ZIeFsLDmTSL7vg0gU2Gb8dJg6fdSuixcwsqYKcnVLS6AUHVRG1qS6my5L() {
+		this.mc.displayGuiScreen(new GuiPlayer());
+	}
+
 	public void displayGUIChest(IInventory var1) {
 		this.mc.displayGuiScreen(new GuiChest(this.inventory, var1));
 	}
@@ -63,6 +138,18 @@
 		this.mc.displayGuiScreen(new GuiCrafting(this.inventory));
 	}
 
+	public void displayEssenceTransformerGUI() {
+		this.mc.displayGuiScreen(new GuiEssenceTransformer(this.inventory));
+	}
+
+	public void displayEssenceClonerGUI() {
+		this.mc.displayGuiScreen(new GuiEssenceCloner(this.inventory));
+	}
+
+	public void displayFreezerGUI(TileEntityFreezer var1) {
+		this.mc.displayGuiScreen(new GuiFreezer(this.inventory, var1));
+	}
+
 	public void displayGUIFurnace(TileEntityFurnace var1) {
 		this.mc.displayGuiScreen(new GuiFurnace(this.inventory, var1));
 	}
@@ -83,6 +170,43 @@
 
 	}
 
+	public boolean attackEntityFrom(Entity var1, int var2) {
+		if(InputHandler.field_9759_4OT0vPMcJ68s5EU822c0Y9Asw74Su111s3rRCw8OSGMsYM8lx153p73RBtj3) {
+			return true;
+		} else {
+			if(var1 instanceof EntityEssenceProjectileUnknownClass) {
+				var2 /= 3;
+			}
+
+			if(this.mc.options.difficulty != 4) {
+				return super.attackEntityFrom(var1, var2);
+			} else if(this.health <= 0) {
+				return false;
+			} else if((float)this.heartsLife > (float)this.heartsHalvesLife / 2.0F) {
+				return false;
+			} else {
+				this.heartsLife = this.heartsHalvesLife;
+				System.out.println("Damage taken: " + var2);
+				if(this.inventory.getTotalArmorValue() == 0) {
+					this.health = 0;
+					this.onDeath((Entity)null);
+					this.worldObj.playSoundAtEntity(this, "random.glass", 1.0F, 1.0F);
+				} else {
+					this.worldObj.playSoundAtEntity(this, "ext.crack", 1.0F, 1.0F);
+					int var3 = 0;
+
+					for(int var4 = 0; var4 != 4; ++var4) {
+						var3 += this.inventory.armorItemInSlot(var4) == null ? 0 : 1;
+					}
+
+					this.inventory.damageArmor(var2 * 16 / var3);
+				}
+
+				return true;
+			}
+		}
+	}
+
 	public void onItemPickup(Entity var1, int var2) {
 		this.mc.effectRenderer.addEffect(new EntityPickupFX(this.mc.theWorld, var1, this, -0.5F));
 	}
@@ -101,11 +225,12 @@
 					this.destroyCurrentEquippedItem();
 				}
 			}
-
 		}
+
 	}
 
 	public void sendChatMessage(String var1) {
+		this.mc.ingameGUI.addChatMessage(this.username + "> " + var1);
 	}
 
 	public void onPlayerUpdate() {
@@ -113,5 +238,21 @@
 
 	public boolean isSneaking() {
 		return this.movementInput.sneak;
+	}
+
+	public void func_9050_0Y2V1e7t06S7hQ12YogQ88R8Lcbm2Sz6Y3o802q297lUgzXrhuM8Ioqo9Hzq(Minecraft var1) {
+		var1.displayGuiScreen(new GuiInventory(this.inventory, this.inventory.craftingInventory));
+	}
+
+	public void func_9049_0ir9tc7u5jmtNfeoBzZphngtt8O4D64zHw295M26kn9G40qzE3od61GQC9sP(Object var1) {
+		GuiScreen var2 = ModLoader.OpenModGUI(this, var1);
+		if(var2 != null) {
+			this.mc.displayGuiScreen(var2);
+		}
+
+	}
+
+	public boolean func_9051_0BV0Y2WM6kf88F6w7vcsLwnVBSniYsQu514MV1I5ZUN7fP2Rw484I9Mp1dV0(Class<? extends GuiScreen> var1) {
+		return var1 == null ? this.mc.currentScreen == null : var1.isInstance(this.mc.currentScreen);
 	}
 }
--- net/minecraft/src/EnumSkyBlock.java
+++ net/minecraft/src/EnumSkyBlock.java
@@ -5,8 +5,25 @@
 	Block(0);
 
 	public final int defaultLightValue;
+	private static final /* synthetic */ EnumSkyBlock[] field_11426_9Oc2Y0v2oEq5UbV2KOWF7q7h2MOzsnA3gAIO7v6aO8XLd4L3c2Yxv0Iaun8K;
+
+	public static EnumSkyBlock[] func_11423_7onbADO9fG53f1v6L10ZSInBoLlz81WNX5z63C3Mkd786XD9881q8bWzF1gN() {
+		return (EnumSkyBlock[])field_11426_9Oc2Y0v2oEq5UbV2KOWF7q7h2MOzsnA3gAIO7v6aO8XLd4L3c2Yxv0Iaun8K.clone();
+	}
+
+	public static EnumSkyBlock func_11422_35IUvK4RK2Pe4JauNi90Ozvp1f4FO3FYCdGiu7GQ0TKrUT3uO7BHEN93zOt0(String var0) {
+		return (EnumSkyBlock)Enum.valueOf(EnumSkyBlock.class, var0);
+	}
 
 	private EnumSkyBlock(int var3) {
 		this.defaultLightValue = var3;
 	}
+
+	private static EnumSkyBlock[] func_11424_2Wq1HNI2vV64aNT0V0zloEyh02E97lV1vY3DkWi79v950BJB8nMoOofpp31N() {
+		return new EnumSkyBlock[]{Sky, Block};
+	}
+	
+	static {
+        field_11426_9Oc2Y0v2oEq5UbV2KOWF7q7h2MOzsnA3gAIO7v6aO8XLd4L3c2Yxv0Iaun8K = EnumSkyBlock.func_11424_2Wq1HNI2vV64aNT0V0zloEyh02E97lV1vY3DkWi79v950BJB8nMoOofpp31N();
+    }
 }
--- /dev/null
+++ net/minecraft/src/EntitySquib.java
@@ -1,0 +1,35 @@
+package net.minecraft.src;
+
+public class EntitySquib extends EntityMob {
+	public boolean unusedBool2 = false;
+
+	public EntitySquib(World var1) {
+		super(var1);
+		this.texture = "/mob/kill_squid.png";
+		this.setSize(1.0F, 2.0F);
+	}
+
+	public void writeEntityToNBT(NBTTagCompound var1) {
+		super.writeEntityToNBT(var1);
+	}
+
+	public void readEntityFromNBT(NBTTagCompound var1) {
+		super.readEntityFromNBT(var1);
+	}
+
+	protected String getHurtSound() {
+		return "mob.skeletonhurt";
+	}
+
+	protected String getDeathSound() {
+		return "mob.skeletonhurt";
+	}
+
+	protected float getSoundVolume() {
+		return 0.4F;
+	}
+
+	public boolean interact(EntityPlayer var1) {
+		return false;
+	}
+}
--- net/minecraft/src/GuiConflictWarning.java
+++ net/minecraft/src/GuiConflictWarning.java
@@ -13,21 +13,19 @@
 	}
 
 	protected void actionPerformed(GuiButton var1) {
-		if(var1.enabled) {
-			if(var1.id == 0) {
-				this.mc.displayGuiScreen(new GuiMainMenu());
-			}
-
+		if(var1.enabled && var1.id == 0) {
+			this.mc.displayGuiScreen(new GuiMainMenu());
 		}
+
 	}
 
 	public void drawScreen(int var1, int var2, float var3) {
 		this.drawDefaultBackground();
 		this.drawCenteredString(this.fontRenderer, "Level save conflict", this.width / 2, this.height / 4 - 60 + 20, 16777215);
-		this.drawString(this.fontRenderer, "Minecraft detected a conflict in the level save data.", this.width / 2 - 140, this.height / 4 - 60 + 60 + 0, 10526880);
-		this.drawString(this.fontRenderer, "This could be caused by two copies of the game", this.width / 2 - 140, this.height / 4 - 60 + 60 + 18, 10526880);
-		this.drawString(this.fontRenderer, "accessing the same level.", this.width / 2 - 140, this.height / 4 - 60 + 60 + 27, 10526880);
-		this.drawString(this.fontRenderer, "To prevent level corruption, the current game has quit.", this.width / 2 - 140, this.height / 4 - 60 + 60 + 45, 10526880);
+		drawString(this.fontRenderer, "Minecraft detected a conflict in the level save data.", this.width / 2 - 140, this.height / 4 - 60 + 60 + 0, 10526880);
+		drawString(this.fontRenderer, "This could be caused by two copies of the game", this.width / 2 - 140, this.height / 4 - 60 + 60 + 18, 10526880);
+		drawString(this.fontRenderer, "accessing the same level.", this.width / 2 - 140, this.height / 4 - 60 + 60 + 27, 10526880);
+		drawString(this.fontRenderer, "To prevent level corruption, the current game has quit.", this.width / 2 - 140, this.height / 4 - 60 + 60 + 45, 10526880);
 		super.drawScreen(var1, var2, var3);
 	}
 }
--- net/minecraft/src/BlockSand.java
+++ net/minecraft/src/BlockSand.java
@@ -22,14 +22,14 @@
 	}
 
 	private void tryToFall(World var1, int var2, int var3, int var4) {
-		if(canFallBelow(var1, var2, var3 - 1, var4) && var3 >= 0) {
-			EntityFallingSand var8 = new EntityFallingSand(var1, (float)var2 + 0.5F, (float)var3 + 0.5F, (float)var4 + 0.5F, this.blockID);
+		if(Math.abs(var2) <= 12540000 && Math.abs(var4) <= 12540000 && canFallBelow(var1, var2, var3 - 1, var4) && var3 >= 0) {
+			EntityFallingSand var5 = new EntityFallingSand(var1, (float)var2 + 0.5F, (float)var3 + 0.5F, (float)var4 + 0.5F, this.blockID);
 			if(fallInstantly) {
-				while(!var8.isDead) {
-					var8.onUpdate();
+				while(!var5.isDead) {
+					var5.onUpdate();
 				}
 			} else {
-				var1.spawnEntityInWorld(var8);
+				var1.spawnEntityInWorld(var5);
 			}
 		}
 
--- /dev/null
+++ net/minecraft/src/Start.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.lang.reflect.Field;
+import net.minecraft.client.Minecraft;
+
+public class Start {
+	public static void main(String[] var0) {
+		try {
+			Field var1 = Minecraft.class.getDeclaredField("minecraftDir");
+			Field.setAccessible(new Field[]{var1}, true);
+			var1.set((Object)null, new File("."));
+		} catch (Exception var2) {
+			var2.printStackTrace();
+			return;
+		}
+
+		Minecraft.main(var0);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockFurnaceOld.java
@@ -1,0 +1,110 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockFurnaceOld extends BlockContainerOld {
+	private final boolean isActive;
+
+	protected BlockFurnaceOld(int var1, boolean var2) {
+		super(var1, Material.rock);
+		this.isActive = var2;
+		this.blockIndexInTexture = 45;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return BlockOld.stoneOvenIdle.blockID;
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		super.onBlockAdded(var1, var2, var3, var4);
+		this.setDefaultDirection(var1, var2, var3, var4);
+	}
+
+	private void setDefaultDirection(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockId(var2, var3, var4 - 1);
+		int var6 = var1.getBlockId(var2, var3, var4 + 1);
+		int var7 = var1.getBlockId(var2 - 1, var3, var4);
+		int var8 = var1.getBlockId(var2 + 1, var3, var4);
+		byte var9 = 3;
+		if(BlockOld.opaqueCubeLookup[var5] && !BlockOld.opaqueCubeLookup[var6]) {
+			var9 = 3;
+		}
+
+		if(BlockOld.opaqueCubeLookup[var6] && !BlockOld.opaqueCubeLookup[var5]) {
+			var9 = 2;
+		}
+
+		if(BlockOld.opaqueCubeLookup[var7] && !BlockOld.opaqueCubeLookup[var8]) {
+			var9 = 5;
+		}
+
+		if(BlockOld.opaqueCubeLookup[var8] && !BlockOld.opaqueCubeLookup[var7]) {
+			var9 = 4;
+		}
+
+		var1.setBlockMetadataWithNotify(var2, var3, var4, var9);
+	}
+
+	public int getBlockTexture(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		if(var5 == 1) {
+			return BlockOld.stone.blockIndexInTexture;
+		} else if(var5 == 0) {
+			return BlockOld.stone.blockIndexInTexture;
+		} else {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			return var5 != var6 ? this.blockIndexInTexture : (this.isActive ? this.blockIndexInTexture + 16 : this.blockIndexInTexture - 1);
+		}
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(this.isActive) {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			float var7 = (float)var2 + 0.5F;
+			float var8 = (float)var3 + 0.0F + var5.nextFloat() * 6.0F / 16.0F;
+			float var9 = (float)var4 + 0.5F;
+			float var10 = 0.52F;
+			float var11 = var5.nextFloat() * 0.6F - 0.3F;
+			if(var6 == 4) {
+				var1.spawnParticle("smoke", (double)(var7 - var10), (double)var8, (double)(var9 + var11), 0.0D, 0.0D, 0.0D);
+				var1.spawnParticle("flame", (double)(var7 - var10), (double)var8, (double)(var9 + var11), 0.0D, 0.0D, 0.0D);
+			} else if(var6 == 5) {
+				var1.spawnParticle("smoke", (double)(var7 + var10), (double)var8, (double)(var9 + var11), 0.0D, 0.0D, 0.0D);
+				var1.spawnParticle("flame", (double)(var7 + var10), (double)var8, (double)(var9 + var11), 0.0D, 0.0D, 0.0D);
+			} else if(var6 == 2) {
+				var1.spawnParticle("smoke", (double)(var7 + var11), (double)var8, (double)(var9 - var10), 0.0D, 0.0D, 0.0D);
+				var1.spawnParticle("flame", (double)(var7 + var11), (double)var8, (double)(var9 - var10), 0.0D, 0.0D, 0.0D);
+			} else if(var6 == 3) {
+				var1.spawnParticle("smoke", (double)(var7 + var11), (double)var8, (double)(var9 + var10), 0.0D, 0.0D, 0.0D);
+				var1.spawnParticle("flame", (double)(var7 + var11), (double)var8, (double)(var9 + var10), 0.0D, 0.0D, 0.0D);
+			}
+
+		}
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 == 1 ? BlockOld.stone.blockID : (var1 == 0 ? BlockOld.stone.blockID : (var1 == 3 ? this.blockIndexInTexture - 1 : this.blockIndexInTexture));
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		TileEntityFurnace var6 = (TileEntityFurnace)var1.getBlockTileEntity(var2, var3, var4);
+		var5.displayGUIFurnace(var6);
+		return true;
+	}
+
+	public static void updateFurnaceBlockState(boolean var0, World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		TileEntity var6 = var1.getBlockTileEntity(var2, var3, var4);
+		if(var0) {
+			var1.setBlockWithNotify(var2, var3, var4, BlockOld.stoneOvenActive.blockID);
+		} else {
+			var1.setBlockWithNotify(var2, var3, var4, BlockOld.stoneOvenIdle.blockID);
+		}
+
+		var1.setBlockMetadataWithNotify(var2, var3, var4, var5);
+		var1.setBlockTileEntity(var2, var3, var4, var6);
+	}
+
+	protected TileEntity getBlockEntity() {
+		return new TileEntityFurnace();
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandPlaceonme.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+class CommandPlaceonme extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8589_074hH8oZcO7pmHc267mWcI3SQgHU2aTg6Y4cYw5wTV5ic7463i88InLBw16o;
+    
+    CommandPlaceonme(final CommandManager abb) {
+        this.field_8589_074hH8oZcO7pmHc267mWcI3SQgHU2aTg6Y4cYw5wTV5ic7463i88InLBw16o = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        final World theWorld = InputHandler.mc.theWorld;
+        final EntityPlayerSP thePlayer = InputHandler.mc.thePlayer;
+        theWorld.setBlock((int)thePlayer.posX, (int)thePlayer.posY, (int)thePlayer.posZ, 1);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- net/minecraft/src/CodecMus.java
+++ net/minecraft/src/CodecMus.java
@@ -2,10 +2,18 @@
 
 import java.io.IOException;
 import java.io.InputStream;
+import java.net.URL;
+import java.net.URLConnection;
 import paulscode.sound.codecs.CodecJOrbis;
 
 public class CodecMus extends CodecJOrbis {
 	protected InputStream openInputStream() throws IOException {
-		return new MusInputStream(this, this.url, this.urlConnection.getInputStream());
+		try {
+			URL var1 = (URL)Refl.getField(this, "url", URL.class);
+			URLConnection var2 = (URLConnection)Refl.getField(this, "urlConnection", URLConnection.class);
+			return new MusInputStream(this, var1, var2.getInputStream());
+		} catch (IOException var3) {
+			return null;
+		}
 	}
 }
--- /dev/null
+++ net/minecraft/src/CommandMcTermconn.java
@@ -1,0 +1,24 @@
+package net.minecraft.src;
+
+class CommandMcTermconn extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8590_3Xt55qOW228q5D8Xz377DE7DB6377kBy46RK8Aqps9gCelIg0BNp53n2AWv1;
+    
+    CommandMcTermconn(final CommandManager abb) {
+        this.field_8590_3Xt55qOW228q5D8Xz377DE7DB6377kBy46RK8Aqps9gCelIg0BNp53n2AWv1 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        ScreenDebugMenu.field_7955_2x00ovR61G2n6Zj5nN9jd9FAdV8H3Cz32KtPOCpcvM363cbIQ5o5vSMN7x7B = ((int)arr[0] == 1);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "" + (int)(ScreenDebugMenu.field_7955_2x00ovR61G2n6Zj5nN9jd9FAdV8H3Cz32KtPOCpcvM363cbIQ5o5vSMN7x7B ? 1 : 0);
+    }
+    
+    @Override
+    public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+        return false;
+    }
+}
--- net/minecraft/src/ThreadDownloadResources.java
+++ net/minecraft/src/ThreadDownloadResources.java
@@ -1,23 +1,33 @@
 package net.minecraft.src;
 
+import java.io.BufferedReader;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.File;
 import java.io.FileOutputStream;
 import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
 import java.net.URL;
-import javax.xml.parsers.DocumentBuilder;
-import javax.xml.parsers.DocumentBuilderFactory;
+import java.nio.file.CopyOption;
+import java.nio.file.FileVisitResult;
+import java.nio.file.FileVisitor;
+import java.nio.file.Files;
+import java.nio.file.Paths;
+import java.nio.file.SimpleFileVisitor;
+import java.nio.file.StandardCopyOption;
+import java.nio.file.attribute.BasicFileAttributes;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipInputStream;
 import net.minecraft.client.Minecraft;
-import org.w3c.dom.Document;
-import org.w3c.dom.Element;
-import org.w3c.dom.Node;
-import org.w3c.dom.NodeList;
 
 public class ThreadDownloadResources extends Thread {
 	public File resourcesFolder;
 	private Minecraft mc;
 	private boolean closing = false;
+	public static boolean finished = false;
+	public static int field_11491_0SH256J50ztK98I6A6bs5r40vo8pH2P0gb6sxjqPY3KzLgiP3OXy0Scq9399 = 0;
+	public static int field_11492_8f3Z0A851l0Aj7j727QIWsGHy7xKwyrM81FsXm09QFVtF7dPCOH2aOfq9n9c = 100;
 
 	public ThreadDownloadResources(File var1, Minecraft var2) {
 		this.mc = var2;
@@ -29,33 +39,112 @@
 		}
 	}
 
+	void deleteDirectoryWalkTree(Path path) throws IOException {
+        ThreadDownloadResourcesUnknownClass threadDownloadResourcesUnknownClass = new ThreadDownloadResourcesUnknownClass(this);
+        Files.walkFileTree((java.nio.file.Path)path, (FileVisitor)threadDownloadResourcesUnknownClass);
+    }
+
+	public void UnpackReader(BufferedReader var1) throws IOException {
+		while(true) {
+			String var2 = var1.readLine();
+			if(var2 == null) {
+				System.out.println("Resources unpacked");
+				var1.close();
+				return;
+			}
+
+			if(var2 != "") {
+				String var3 = var2.replace("worldstatic", "saves").replace("sounddata", "resources");
+				InputStream var4 = Ext1605Utils.func_12150_5v4Cs6sI06e6Hjpg3rSI82gG008x14C2jag2OM7ADaW5U8a3DYSrf570CJm6(var2);
+				File var5 = new File(Minecraft.getMinecraftDir(), var3);
+				var5.mkdirs();
+				Files.copy(var4, Paths.get(var5.toString(), new String[0]), new CopyOption[]{StandardCopyOption.REPLACE_EXISTING});
+				var4.close();
+			}
+		}
+	}
+
 	public void run() {
 		try {
-			URL var1 = new URL("http://s3.amazonaws.com/MinecraftResources/");
-			DocumentBuilderFactory var2 = DocumentBuilderFactory.newInstance();
-			DocumentBuilder var3 = var2.newDocumentBuilder();
-			Document var4 = var3.parse(var1.openStream());
-			NodeList var5 = var4.getElementsByTagName("Contents");
-
-			for(int var6 = 0; var6 < 2; ++var6) {
-				for(int var7 = 0; var7 < var5.getLength(); ++var7) {
-					Node var8 = var5.item(var7);
-					if(var8.getNodeType() == 1) {
-						Element var9 = (Element)var8;
-						String var10 = ((Element)var9.getElementsByTagName("Key").item(0)).getChildNodes().item(0).getNodeValue();
-						long var11 = Long.parseLong(((Element)var9.getElementsByTagName("Size").item(0)).getChildNodes().item(0).getNodeValue());
-						if(var11 > 0L) {
-							this.downloadAndInstallResource(var1, var10, var11, var6);
-							if(this.closing) {
-								return;
-							}
-						}
-					}
-				}
+			if(!(new File(Minecraft.getMinecraftDir(), "/resources/contentversion-1d")).exists()) {
+				try {
+					this.deleteDirectoryWalkTree((Path) Paths.get(Minecraft.getMinecraftDir() + "/resources/", new String[0]));
+					this.resourcesFolder.mkdirs();
+				} catch (Exception var28) {
+					System.out.println("Error removing existing resources...");
+				}
+
+				InputStream var1 = Ext1605Utils.func_12150_5v4Cs6sI06e6Hjpg3rSI82gG008x14C2jag2OM7ADaW5U8a3DYSrf570CJm6("/soundres.txt");
+
+				try {
+					BufferedReader var2 = new BufferedReader(new InputStreamReader(var1));
+					this.UnpackReader(var2);
+				} catch (Exception var26) {
+					var26.printStackTrace();
+				} finally {
+					var1.close();
+				}
+
+				if(!(new File(Minecraft.getMinecraftDir(), "/saves/freerun/WorldFreerun0")).exists() || !(new File(Minecraft.getMinecraftDir(), "/saves/freerun/WorldFreerun1")).exists() || !(new File(Minecraft.getMinecraftDir(), "/saves/freerun/WorldFreerun2")).exists() || !(new File(Minecraft.getMinecraftDir(), "/saves/freerun/WorldFreerun3")).exists() || !(new File(Minecraft.getMinecraftDir(), "/saves/freerun/WorldFreerun4")).exists() || !(new File(Minecraft.getMinecraftDir(), "/saves/freerun/WorldFreerun5")).exists() || !(new File(Minecraft.getMinecraftDir(), "/saves/freerun/WorldZM1")).exists() || !(new File(Minecraft.getMinecraftDir(), "/saves/zombies/WorldZM2")).exists()) {
+					ZipInputStream var31;
+					for(var31 = new ZipInputStream(Ext1605Utils.func_12150_5v4Cs6sI06e6Hjpg3rSI82gG008x14C2jag2OM7ADaW5U8a3DYSrf570CJm6("/wstatic.zip")); var31.getNextEntry() != null; ++field_11492_8f3Z0A851l0Aj7j727QIWsGHy7xKwyrM81FsXm09QFVtF7dPCOH2aOfq9n9c) {
+					}
+
+					field_11492_8f3Z0A851l0Aj7j727QIWsGHy7xKwyrM81FsXm09QFVtF7dPCOH2aOfq9n9c -= 100;
+					var31.close();
+					ZipInputStream var3 = new ZipInputStream(Ext1605Utils.func_12150_5v4Cs6sI06e6Hjpg3rSI82gG008x14C2jag2OM7ADaW5U8a3DYSrf570CJm6("/wstatic.zip"));
+					ZipEntry var4 = var3.getNextEntry();
+
+					while(true) {
+						if(var4 == null) {
+							var3.close();
+							break;
+						}
+
+						if(!var4.isDirectory()) {
+							String var5 = var4.getName();
+							if(var5.contains("/")) {
+								String var6 = var5.substring(0, var5.lastIndexOf("/"));
+								(new File(Minecraft.getMinecraftDir(), "/saves/" + var6)).mkdirs();
+							}
+
+							ExtLogger.i("Unpacking to " + Minecraft.getMinecraftDir().toString() + "/saves/" + var5);
+							FileOutputStream var32 = new FileOutputStream(Minecraft.getMinecraftDir().toString() + "/saves/" + var5);
+							byte[] var7 = new byte[1024];
+
+							while(true) {
+								int var8 = var3.read(var7);
+								if(var8 < 0) {
+									var32.close();
+									break;
+								}
+
+								var32.write(var7, 0, var8);
+							}
+						}
+
+						++field_11491_0SH256J50ztK98I6A6bs5r40vo8pH2P0gb6sxjqPY3KzLgiP3OXy0Scq9399;
+						var4 = var3.getNextEntry();
+					}
+				}
+
+				(new File(Minecraft.getMinecraftDir() + "/resources/contentversion-1d")).createNewFile();
 			}
-		} catch (Exception var13) {
+		} catch (Exception var29) {
+			var29.printStackTrace();
+		} finally {
 			this.loadResource(this.resourcesFolder, "");
-			var13.printStackTrace();
+			finished = true;
+
+			try {
+				Thread.sleep(1000L);
+			} catch (InterruptedException var25) {
+			}
+
+			if(InputHandler.mc.theWorld == null && SoundManager.sndSystem != null && !SoundManager.sndSystem.playing("BgMusic")) {
+				InputHandler.mc.sndManager.func_12031_514dv3mYU7t95lOh23lLhBI10XBv07D8y61Goe1u7G926JNt2Y1WIoiHj5tm("mainmenu", true);
+			}
+
 		}
 
 	}
@@ -75,6 +164,7 @@
 					this.mc.installResource(var2 + var3[var4].getName(), var3[var4]);
 				} catch (Exception var6) {
 					System.out.println("Failed to add " + var2 + var3[var4].getName());
+					var6.printStackTrace();
 				}
 			}
 		}
--- /dev/null
+++ net/minecraft/src/CommandRFullscreen.java
@@ -1,0 +1,29 @@
+package net.minecraft.src;
+
+import org.lwjgl.LWJGLException;
+import org.lwjgl.opengl.Display;
+
+class CommandRFullscreen extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8554_7vFNu3zc3b7C0UzWx0ahO64asYLV2lPx2j1Q7Q9g9NW74rjBz2R0IUAS8u5o;
+    
+    CommandRFullscreen(final CommandManager abb) {
+        this.field_8554_7vFNu3zc3b7C0UzWx0ahO64asYLV2lPx2j1Q7Q9g9NW74rjBz2R0IUAS8u5o = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.fullscreen = ((int)arr[0] == 1);
+        try {
+            Display.setFullscreen((int)arr[0] == 1);
+        }
+        catch (final LWJGLException ex) {
+            ex.printStackTrace();
+        }
+        Display.update();
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "" + (int)(InputHandler.mc.fullscreen ? 1 : 0);
+    }
+}
--- net/minecraft/src/BlockFluid.java
+++ net/minecraft/src/BlockFluid.java
@@ -86,13 +86,13 @@
 
 		for(int var7 = 0; var7 < 4; ++var7) {
 			int var8 = var2;
-			int var10 = var4;
+			int var9 = var4;
 			if(var7 == 0) {
 				var8 = var2 - 1;
 			}
 
 			if(var7 == 1) {
-				var10 = var4 - 1;
+				var9 = var4 - 1;
 			}
 
 			if(var7 == 2) {
@@ -100,60 +100,60 @@
 			}
 
 			if(var7 == 3) {
-				++var10;
+				++var9;
 			}
 
-			int var11 = this.getEffectiveFlowDecay(var1, var8, var3, var10);
-			int var12;
-			if(var11 < 0) {
-				if(!var1.getBlockMaterial(var8, var3, var10).getIsSolid()) {
-					var11 = this.getEffectiveFlowDecay(var1, var8, var3 - 1, var10);
-					if(var11 >= 0) {
-						var12 = var11 - (var6 - 8);
-						var5 = var5.addVector((double)((var8 - var2) * var12), (double)((var3 - var3) * var12), (double)((var10 - var4) * var12));
+			int var10 = this.getEffectiveFlowDecay(var1, var8, var3, var9);
+			int var11;
+			if(var10 < 0) {
+				if(!var1.getBlockMaterial(var8, var3, var9).getIsSolid()) {
+					var10 = this.getEffectiveFlowDecay(var1, var8, var3 - 1, var9);
+					if(var10 >= 0) {
+						var11 = var10 - (var6 - 8);
+						var5 = var5.addVector((double)((var8 - var2) * var11), (double)((var3 - var3) * var11), (double)((var9 - var4) * var11));
 					}
 				}
-			} else if(var11 >= 0) {
-				var12 = var11 - var6;
-				var5 = var5.addVector((double)((var8 - var2) * var12), (double)((var3 - var3) * var12), (double)((var10 - var4) * var12));
+			} else if(var10 >= 0) {
+				var11 = var10 - var6;
+				var5 = var5.addVector((double)((var8 - var2) * var11), (double)((var3 - var3) * var11), (double)((var9 - var4) * var11));
 			}
 		}
 
 		if(var1.getBlockMetadata(var2, var3, var4) >= 8) {
-			boolean var13 = false;
-			if(var13 || this.shouldSideBeRendered(var1, var2, var3, var4 - 1, 2)) {
-				var13 = true;
-			}
-
-			if(var13 || this.shouldSideBeRendered(var1, var2, var3, var4 + 1, 3)) {
-				var13 = true;
-			}
-
-			if(var13 || this.shouldSideBeRendered(var1, var2 - 1, var3, var4, 4)) {
-				var13 = true;
-			}
-
-			if(var13 || this.shouldSideBeRendered(var1, var2 + 1, var3, var4, 5)) {
-				var13 = true;
-			}
-
-			if(var13 || this.shouldSideBeRendered(var1, var2, var3 + 1, var4 - 1, 2)) {
-				var13 = true;
-			}
-
-			if(var13 || this.shouldSideBeRendered(var1, var2, var3 + 1, var4 + 1, 3)) {
-				var13 = true;
-			}
-
-			if(var13 || this.shouldSideBeRendered(var1, var2 - 1, var3 + 1, var4, 4)) {
-				var13 = true;
-			}
-
-			if(var13 || this.shouldSideBeRendered(var1, var2 + 1, var3 + 1, var4, 5)) {
-				var13 = true;
-			}
-
-			if(var13) {
+			boolean var12 = false;
+			if(var12 || this.shouldSideBeRendered(var1, var2, var3, var4 - 1, 2)) {
+				var12 = true;
+			}
+
+			if(var12 || this.shouldSideBeRendered(var1, var2, var3, var4 + 1, 3)) {
+				var12 = true;
+			}
+
+			if(var12 || this.shouldSideBeRendered(var1, var2 - 1, var3, var4, 4)) {
+				var12 = true;
+			}
+
+			if(var12 || this.shouldSideBeRendered(var1, var2 + 1, var3, var4, 5)) {
+				var12 = true;
+			}
+
+			if(var12 || this.shouldSideBeRendered(var1, var2, var3 + 1, var4 - 1, 2)) {
+				var12 = true;
+			}
+
+			if(var12 || this.shouldSideBeRendered(var1, var2, var3 + 1, var4 + 1, 3)) {
+				var12 = true;
+			}
+
+			if(var12 || this.shouldSideBeRendered(var1, var2 - 1, var3 + 1, var4, 4)) {
+				var12 = true;
+			}
+
+			if(var12 || this.shouldSideBeRendered(var1, var2 + 1, var3 + 1, var4, 5)) {
+				var12 = true;
+			}
+
+			if(var12) {
 				var5 = var5.normalize().addVector(0.0D, -6.0D, 0.0D);
 			}
 		}
@@ -226,42 +226,40 @@
 	}
 
 	private void checkForHarden(World var1, int var2, int var3, int var4) {
-		if(var1.getBlockId(var2, var3, var4) == this.blockID) {
-			if(this.material == Material.lava) {
-				boolean var5 = false;
-				if(var5 || var1.getBlockMaterial(var2, var3, var4 - 1) == Material.water) {
-					var5 = true;
-				}
-
-				if(var5 || var1.getBlockMaterial(var2, var3, var4 + 1) == Material.water) {
-					var5 = true;
-				}
-
-				if(var5 || var1.getBlockMaterial(var2 - 1, var3, var4) == Material.water) {
-					var5 = true;
-				}
-
-				if(var5 || var1.getBlockMaterial(var2 + 1, var3, var4) == Material.water) {
-					var5 = true;
-				}
-
-				if(var5 || var1.getBlockMaterial(var2, var3 + 1, var4) == Material.water) {
-					var5 = true;
-				}
-
-				if(var5) {
-					int var6 = var1.getBlockMetadata(var2, var3, var4);
-					if(var6 == 0) {
-						var1.setBlockWithNotify(var2, var3, var4, Block.obsidian.blockID);
-					} else if(var6 <= 4) {
-						var1.setBlockWithNotify(var2, var3, var4, Block.cobblestone.blockID);
-					}
-
-					this.triggerLavaMixEffects(var1, var2, var3, var4);
-				}
-			}
-
+		if(var1.getBlockId(var2, var3, var4) == this.blockID && this.material == Material.lava) {
+			boolean var5 = false;
+			if(var5 || var1.getBlockMaterial(var2, var3, var4 - 1) == Material.water) {
+				var5 = true;
+			}
+
+			if(var5 || var1.getBlockMaterial(var2, var3, var4 + 1) == Material.water) {
+				var5 = true;
+			}
+
+			if(var5 || var1.getBlockMaterial(var2 - 1, var3, var4) == Material.water) {
+				var5 = true;
+			}
+
+			if(var5 || var1.getBlockMaterial(var2 + 1, var3, var4) == Material.water) {
+				var5 = true;
+			}
+
+			if(var5 || var1.getBlockMaterial(var2, var3 + 1, var4) == Material.water) {
+				var5 = true;
+			}
+
+			if(var5) {
+				int var6 = var1.getBlockMetadata(var2, var3, var4);
+				if(var6 == 0) {
+					var1.setBlockWithNotify(var2, var3, var4, Block.obsidian.blockID);
+				} else if(var6 <= 4) {
+					var1.setBlockWithNotify(var2, var3, var4, Block.cobblestone.blockID);
+				}
+
+				this.triggerLavaMixEffects(var1, var2, var3, var4);
+			}
 		}
+
 	}
 
 	protected void triggerLavaMixEffects(World var1, int var2, int var3, int var4) {
--- /dev/null
+++ net/minecraft/src/HubNetworkUnknownClass.java
@@ -1,0 +1,50 @@
+package net.minecraft.src;
+
+import java.net.InetAddress;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.List;
+
+public class HubNetworkUnknownClass {
+	private final ArrayList<HubNetworkUnknownClass2> field_11077_8qiGAomP1Ac59NByARiO6pVjqT4C6N37mr32u6eG2epkwyCHGmsH5PxpA9JO = new ArrayList();
+	boolean field_11079_8R0mBB7qtp39935XMEFi447KYF8skIV0XL1aWdss5yPZm1ex2uh66NCDjg85;
+	private static final String field_11078_5Lw1SQWLG80U10f06kq95YIR7fW76FAzTEIJ9296C9Nq0Hn6726cSy59Nr40 = "CL_00001136";
+
+	public synchronized boolean func_11074_53A5WI0FU98UL8SXf5cJVaH1xv8pv3UGLAjw753vVH5y6xI0PW0Z8240M6rY() {
+		return this.field_11079_8R0mBB7qtp39935XMEFi447KYF8skIV0XL1aWdss5yPZm1ex2uh66NCDjg85;
+	}
+
+	public synchronized void func_11073_0y8txWznESNB1q0JYvpTmTj4BNS015M11I5smw3PILvvh9x8IV38iS08E1q0() {
+		this.field_11079_8R0mBB7qtp39935XMEFi447KYF8skIV0XL1aWdss5yPZm1ex2uh66NCDjg85 = false;
+	}
+
+	public synchronized List<HubNetworkUnknownClass2> func_11075_52XI3RXerJv8CbWlcvMpwK9y35fi0m50zFf24uZqVddP89zIWh0vc8cgSBBR() {
+		return Collections.unmodifiableList(this.field_11077_8qiGAomP1Ac59NByARiO6pVjqT4C6N37mr32u6eG2epkwyCHGmsH5PxpA9JO);
+	}
+
+	public synchronized void func_11076_6JWlo5oTbj6698u3MxWj43m8jjLW826DJsk9l6DW0z4oK6cxa991XuVMtgSV(String var1, InetAddress var2) {
+		String var3 = ThreadHubServerPing.getMotdFromPingResponse(var1);
+		String var4 = ThreadHubServerPing.getAdFromPingResponse(var1);
+		if(var4 != null) {
+			var4 = var2.getHostAddress() + ":" + var4;
+			boolean var5 = false;
+			Iterator var6 = this.field_11077_8qiGAomP1Ac59NByARiO6pVjqT4C6N37mr32u6eG2epkwyCHGmsH5PxpA9JO.iterator();
+
+			while(var6.hasNext()) {
+				HubNetworkUnknownClass2 var7 = (HubNetworkUnknownClass2)var6.next();
+				if(var7.func_10778_8gM7pIBK1I76SCft4Dhm813bD256bmhlhOrb5h1mMYJ3i7FFAMb9LSfc7uw2().equals(var4)) {
+					var7.func_10777_04W88zu2434rH5KSiplYwuX5J2HRsV2SgDIT38qBV8XVz0wUb2NY5BCpH2aW();
+					var5 = true;
+					break;
+				}
+			}
+
+			if(!var5) {
+				this.field_11077_8qiGAomP1Ac59NByARiO6pVjqT4C6N37mr32u6eG2epkwyCHGmsH5PxpA9JO.add(new HubNetworkUnknownClass2(var3, var4));
+				this.field_11079_8R0mBB7qtp39935XMEFi447KYF8skIV0XL1aWdss5yPZm1ex2uh66NCDjg85 = true;
+			}
+		}
+
+	}
+}
--- net/minecraft/src/ChunkLoader.java
+++ net/minecraft/src/ChunkLoader.java
@@ -4,6 +4,7 @@
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
 import java.util.Iterator;
+import java.util.Random;
 
 public class ChunkLoader implements IChunkLoader {
 	private File saveDir;
@@ -81,22 +82,23 @@
 		}
 
 		try {
-			File var4 = new File(this.saveDir, "tmp_chunk.dat");
-			FileOutputStream var5 = new FileOutputStream(var4);
-			NBTTagCompound var6 = new NBTTagCompound();
+			Random var4 = new Random();
+			File var5 = new File(this.saveDir, "tmp_chunk" + var4.nextLong() + "" + var4.nextLong() + ".dat");
+			FileOutputStream var6 = new FileOutputStream(var5);
 			NBTTagCompound var7 = new NBTTagCompound();
-			var6.setTag("Level", var7);
-			this.storeChunkInCompound(var2, var1, var7);
-			CompressedStreamTools.writeCompressed(var6, var5);
-			var5.close();
+			NBTTagCompound var8 = new NBTTagCompound();
+			var7.setTag("Level", var8);
+			this.storeChunkInCompound(var2, var1, var8);
+			CompressedStreamTools.writeCompressed(var7, var6);
+			var6.close();
 			if(var3.exists()) {
 				var3.delete();
 			}
 
-			var4.renameTo(var3);
+			var5.renameTo(var3);
 			var1.sizeOnDisk += var3.length();
-		} catch (Exception var8) {
-			var8.printStackTrace();
+		} catch (Exception var9) {
+			var9.printStackTrace();
 		}
 
 	}
@@ -115,30 +117,30 @@
 		var1.hasEntities = false;
 		NBTTagList var4 = new NBTTagList();
 
-		Iterator var6;
-		NBTTagCompound var8;
-		for(int var5 = 0; var5 < var1.entities.length; ++var5) {
-			var6 = var1.entities[var5].iterator();
+		NBTTagCompound var5;
+		Iterator var7;
+		for(int var6 = 0; var6 < var1.entities.length; ++var6) {
+			var7 = var1.entities[var6].iterator();
 
-			while(var6.hasNext()) {
-				Entity var7 = (Entity)var6.next();
+			while(var7.hasNext()) {
+				Entity var8 = (Entity)var7.next();
 				var1.hasEntities = true;
-				var8 = new NBTTagCompound();
-				if(var7.addEntityID(var8)) {
-					var4.setTag(var8);
+				var5 = new NBTTagCompound();
+				if(var8.addEntityID(var5)) {
+					var4.setTag(var5);
 				}
 			}
 		}
 
 		var3.setTag("Entities", var4);
 		NBTTagList var9 = new NBTTagList();
-		var6 = var1.chunkTileEntityMap.values().iterator();
+		var7 = var1.chunkTileEntityMap.values().iterator();
 
-		while(var6.hasNext()) {
-			TileEntity var10 = (TileEntity)var6.next();
-			var8 = new NBTTagCompound();
-			var10.writeToNBT(var8);
-			var9.setTag(var8);
+		while(var7.hasNext()) {
+			TileEntity var10 = (TileEntity)var7.next();
+			var5 = new NBTTagCompound();
+			var10.writeToNBT(var5);
+			var9.setTag(var5);
 		}
 
 		var3.setTag("TileEntities", var9);
--- /dev/null
+++ net/minecraft/src/EnumWorldGenerator.java
@@ -1,0 +1,25 @@
+package net.minecraft.src;
+
+public enum EnumWorldGenerator {
+	SURFACE,
+	UNDERGROUND,
+	LOW_RIVER;
+
+	private static final /* synthetic */ EnumWorldGenerator[] field_10218_3QrIHxRx2jG15e9tuS5r0965HnOUaDkLsjOAqP48GPYU5wQjQ45qYyYp6i39;
+	
+	public static EnumWorldGenerator[] func_10212_687pFhoaPBF6M4hBc653Q576K1D17054nP32W3591E5Q2aYGU1m5Kdc9N1JW() {
+		return (EnumWorldGenerator[])field_10218_3QrIHxRx2jG15e9tuS5r0965HnOUaDkLsjOAqP48GPYU5wQjQ45qYyYp6i39.clone();
+	}
+
+	public static EnumWorldGenerator func_10213_0ZK60yIEWC7x49spI4Px0g54M5La7Pn2X3qKvS4J166Fmb2htc02is7LQRlq(String var0) {
+		return (EnumWorldGenerator)Enum.valueOf(EnumWorldGenerator.class, var0);
+	}
+
+	private static EnumWorldGenerator[] func_10214_7w4698oPqL58Fjaf1uMTfEAgGG0uN10YP758eR09r2wx2dSrl77je7cUNid6() {
+		return new EnumWorldGenerator[]{SURFACE, UNDERGROUND, LOW_RIVER};
+	}
+	
+    static {
+        field_10218_3QrIHxRx2jG15e9tuS5r0965HnOUaDkLsjOAqP48GPYU5wQjQ45qYyYp6i39 = EnumWorldGenerator.func_10214_7w4698oPqL58Fjaf1uMTfEAgGG0uN10YP758eR09r2wx2dSrl77je7cUNid6();
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockStoneOld.java
@@ -1,0 +1,13 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockStoneOld extends BlockOld {
+	public BlockStoneOld(int var1, int var2) {
+		super(var1, var2, Material.rock);
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return BlockOld.cobblestone.blockID;
+	}
+}
--- net/minecraft/src/EntitySkeleton.java
+++ net/minecraft/src/EntitySkeleton.java
@@ -35,7 +35,7 @@
 			double var5 = var1.posZ - this.posZ;
 			if(this.attackTime == 0) {
 				EntityArrow var7 = new EntityArrow(this.worldObj, this);
-				var7.posY += (double)1.4F;
+				++var7.posY;
 				double var8 = var1.posY - (double)0.2F - var7.posY;
 				float var10 = MathHelper.sqrt_double(var3 * var3 + var5 * var5) * 0.2F;
 				this.worldObj.playSoundAtEntity(this, "random.bow", 1.0F, 1.0F / (this.rand.nextFloat() * 0.4F + 0.8F));
@@ -60,5 +60,9 @@
 
 	protected int getDropItemId() {
 		return Item.arrow.shiftedIndex;
+	}
+
+	public int getEssenceDroppedOnKill() {
+		return 12 + this.rand.nextInt(6);
 	}
 }
--- /dev/null
+++ net/minecraft/src/CommandName.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+class CommandName extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8551_44E6V5Mg9bzvMFx5VEPdcQ4Jwt8r6O2lwz0d55z7359uqj6ZAeJIzJ49W0H2;
+    
+    CommandName(final CommandManager abb) {
+        this.field_8551_44E6V5Mg9bzvMFx5VEPdcQ4Jwt8r6O2lwz0d55z7359uqj6ZAeJIzJ49W0H2 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.session.username = (String)arr[0];
+        InputHandler.mc.func_7251_0aCQ3QUtAn82t0f1z3JQKRAg5aNB155g64AWf0ztqf7j603OA1tsJsAwlFrq();
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return InputHandler.mc.session.username;
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockLeverOld.java
@@ -1,0 +1,196 @@
+package net.minecraft.src;
+
+public class BlockLeverOld extends BlockOld {
+	protected BlockLeverOld(int var1, int var2) {
+		super(var1, var2, Material.circuits);
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 12;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return var1.isBlockNormalCube(var2 - 1, var3, var4) ? true : (var1.isBlockNormalCube(var2 + 1, var3, var4) ? true : (var1.isBlockNormalCube(var2, var3, var4 - 1) ? true : (var1.isBlockNormalCube(var2, var3, var4 + 1) ? true : var1.isBlockNormalCube(var2, var3 - 1, var4))));
+	}
+
+	public void onBlockPlaced(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		int var7 = var6 & 8;
+		var6 &= 7;
+		if(var5 == 1 && var1.isBlockNormalCube(var2, var3 - 1, var4)) {
+			var6 = 5 + var1.rand.nextInt(2);
+		}
+
+		if(var5 == 2 && var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+			var6 = 4;
+		}
+
+		if(var5 == 3 && var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+			var6 = 3;
+		}
+
+		if(var5 == 4 && var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+			var6 = 2;
+		}
+
+		if(var5 == 5 && var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+			var6 = 1;
+		}
+
+		var1.setBlockMetadataWithNotify(var2, var3, var4, var6 + var7);
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		if(var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 1);
+		} else if(var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 2);
+		} else if(var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 3);
+		} else if(var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 4);
+		} else if(var1.isBlockNormalCube(var2, var3 - 1, var4)) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 5 + var1.rand.nextInt(2));
+		}
+
+		this.checkIfAttachedToBlock(var1, var2, var3, var4);
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		if(this.checkIfAttachedToBlock(var1, var2, var3, var4)) {
+			int var6 = var1.getBlockMetadata(var2, var3, var4) & 7;
+			boolean var7 = false;
+			if(!var1.isBlockNormalCube(var2 - 1, var3, var4) && var6 == 1) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2 + 1, var3, var4) && var6 == 2) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3, var4 - 1) && var6 == 3) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3, var4 + 1) && var6 == 4) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3 - 1, var4) && var6 == 5) {
+				var7 = true;
+			}
+
+			if(var7) {
+				this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+				var1.setBlockWithNotify(var2, var3, var4, 0);
+			}
+		}
+
+	}
+
+	private boolean checkIfAttachedToBlock(World var1, int var2, int var3, int var4) {
+		if(!this.canPlaceBlockAt(var1, var2, var3, var4)) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	public void setBlockBoundsBasedOnState(IBlockAccess var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4) & 7;
+		float var6 = 3.0F / 16.0F;
+		if(var5 == 1) {
+			this.setBlockBounds(0.0F, 0.2F, 0.5F - var6, var6 * 2.0F, 0.8F, 0.5F + var6);
+		} else if(var5 == 2) {
+			this.setBlockBounds(1.0F - var6 * 2.0F, 0.2F, 0.5F - var6, 1.0F, 0.8F, 0.5F + var6);
+		} else if(var5 == 3) {
+			this.setBlockBounds(0.5F - var6, 0.2F, 0.0F, 0.5F + var6, 0.8F, var6 * 2.0F);
+		} else if(var5 == 4) {
+			this.setBlockBounds(0.5F - var6, 0.2F, 1.0F - var6 * 2.0F, 0.5F + var6, 0.8F, 1.0F);
+		} else {
+			var6 = 0.25F;
+			this.setBlockBounds(0.5F - var6, 0.0F, 0.5F - var6, 0.5F + var6, 0.6F, 0.5F + var6);
+		}
+
+	}
+
+	public void onBlockClicked(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		this.blockActivated(var1, var2, var3, var4, var5);
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		int var7 = var6 & 7;
+		int var8 = 8 - (var6 & 8);
+		var1.setBlockMetadataWithNotify(var2, var3, var4, var7 + var8);
+		var1.markBlocksDirty(var2, var3, var4, var2, var3, var4);
+		var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "random.click", 0.3F, var8 > 0 ? 0.6F : 0.5F);
+		var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
+		if(var7 == 1) {
+			var1.notifyBlocksOfNeighborChange(var2 - 1, var3, var4, this.blockID);
+		} else if(var7 == 2) {
+			var1.notifyBlocksOfNeighborChange(var2 + 1, var3, var4, this.blockID);
+		} else if(var7 == 3) {
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4 - 1, this.blockID);
+		} else if(var7 == 4) {
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4 + 1, this.blockID);
+		} else {
+			var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+		}
+
+		return true;
+	}
+
+	public void onBlockRemoval(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		if((var5 & 8) > 0) {
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
+			int var6 = var5 & 7;
+			if(var6 == 1) {
+				var1.notifyBlocksOfNeighborChange(var2 - 1, var3, var4, this.blockID);
+			} else if(var6 == 2) {
+				var1.notifyBlocksOfNeighborChange(var2 + 1, var3, var4, this.blockID);
+			} else if(var6 == 3) {
+				var1.notifyBlocksOfNeighborChange(var2, var3, var4 - 1, this.blockID);
+			} else if(var6 == 4) {
+				var1.notifyBlocksOfNeighborChange(var2, var3, var4 + 1, this.blockID);
+			} else {
+				var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+			}
+		}
+
+		super.onBlockRemoval(var1, var2, var3, var4);
+	}
+
+	public boolean isPoweringTo(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		return (var1.getBlockMetadata(var2, var3, var4) & 8) > 0;
+	}
+
+	public boolean isIndirectlyPoweringTo(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		if((var6 & 8) == 0) {
+			return false;
+		} else {
+			int var7 = var6 & 7;
+			return var7 == 5 && var5 == 1 ? true : (var7 == 4 && var5 == 2 ? true : (var7 == 3 && var5 == 3 ? true : (var7 == 2 && var5 == 4 ? true : var7 == 1 && var5 == 5)));
+		}
+	}
+
+	public boolean canProvidePower() {
+		return true;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockEmptyBookshelf.java
@@ -1,0 +1,17 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockEmptyBookshelf extends Block {
+	public BlockEmptyBookshelf(int var1, int var2) {
+		super(var1, var2, Material.wood);
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 <= 1 ? 127 : this.blockIndexInTexture;
+	}
+
+	public int quantityDropped(Random var1) {
+		return 0;
+	}
+}
--- net/minecraft/src/InventoryCrafting.java
+++ net/minecraft/src/InventoryCrafting.java
@@ -3,15 +3,15 @@
 public class InventoryCrafting implements IInventory {
 	private ItemStack[] stackList;
 	private int gridSize;
-	private CraftingInventoryCB craftingInventory;
+	private InventoryCB craftingInventory;
 
-	public InventoryCrafting(CraftingInventoryCB var1, int var2, int var3) {
+	public InventoryCrafting(InventoryCB var1, int var2, int var3) {
 		this.gridSize = var2 * var3;
 		this.stackList = new ItemStack[this.gridSize];
 		this.craftingInventory = var1;
 	}
 
-	public InventoryCrafting(CraftingInventoryCB var1, ItemStack[] var2) {
+	public InventoryCrafting(InventoryCB var1, ItemStack[] var2) {
 		this.gridSize = var2.length;
 		this.stackList = var2;
 		this.craftingInventory = var1;
@@ -35,7 +35,7 @@
 			if(this.stackList[var1].stackSize <= var2) {
 				var3 = this.stackList[var1];
 				this.stackList[var1] = null;
-				this.craftingInventory.onCraftMatrixChanged(this);
+				this.craftingInventory.a(this);
 				return var3;
 			} else {
 				var3 = this.stackList[var1].splitStack(var2);
@@ -43,7 +43,7 @@
 					this.stackList[var1] = null;
 				}
 
-				this.craftingInventory.onCraftMatrixChanged(this);
+				this.craftingInventory.a(this);
 				return var3;
 			}
 		} else {
@@ -53,7 +53,7 @@
 
 	public void setInventorySlotContents(int var1, ItemStack var2) {
 		this.stackList[var1] = var2;
-		this.craftingInventory.onCraftMatrixChanged(this);
+		this.craftingInventory.a(this);
 	}
 
 	public int getInventoryStackLimit() {
--- /dev/null
+++ net/minecraft/src/EnumHouseBig.java
@@ -1,0 +1,31 @@
+package net.minecraft.src;
+
+enum EnumHouseBig {
+	None,
+	Door,
+	PinkGlass,
+	BlueGlass,
+	LimeGlass,
+	BlackGlass,
+	WhiteGlass,
+	Doorless,
+	PlateDecor;
+
+    private static final /* synthetic */ EnumHouseBig[] field_12162_3ohPnU20KK0B3749924RNr8lbCpQasiePhtV1KEYP88a0Gy0sOCo3Qt724XT;
+
+	public static EnumHouseBig[] func_12158_5d1PqAM31919iSOCPJkkBw3o2MG1I7zT27GPOp97Xf3srdW4U58elVI1No8M() {
+		return (EnumHouseBig[])field_12162_3ohPnU20KK0B3749924RNr8lbCpQasiePhtV1KEYP88a0Gy0sOCo3Qt724XT.clone();
+	}
+
+	public static EnumHouseBig func_12159_9NhRvHFhUTqV1qGM1SvT7e65i70URCm3i6u46KI7jt261H4O551ScEE5x9oe(String var0) {
+		return (EnumHouseBig)Enum.valueOf(EnumHouseBig.class, var0);
+	}
+
+	private static EnumHouseBig[] func_12157_0TxqrB9t263mD1k6604P3L01Vwh2X40gSZVg737b7zNkUpBeZhIJ2YTMs895() {
+		return new EnumHouseBig[]{None, Door, PinkGlass, BlueGlass, LimeGlass, BlackGlass, WhiteGlass, Doorless, PlateDecor};
+	}
+
+    static {
+        field_12162_3ohPnU20KK0B3749924RNr8lbCpQasiePhtV1KEYP88a0Gy0sOCo3Qt724XT = EnumHouseBig.func_12157_0TxqrB9t263mD1k6604P3L01Vwh2X40gSZVg737b7zNkUpBeZhIJ2YTMs895();
+    }
+}
--- /dev/null
+++ net/minecraft/src/CommandWorldeditSetpos.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandWorldeditSetpos extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8573_2i927939HzkFLH5oG4VnVZi3n1nnH05aF8rRn7be4xXJ5H0808k98uL0RLx5;
+    
+    CommandWorldeditSetpos(final CommandManager abb) {
+        this.field_8573_2i927939HzkFLH5oG4VnVZi3n1nnH05aF8rRn7be4xXJ5H0808k98uL0RLx5 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.ingameGUI.weditOverlay.func_11896_21hxskjoCalSdNwCUtCH797a5Bv6x17Si7L3X48r8FIf14LJZL110IOeH5JV();
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/EntityPlayerBanned.java
@@ -1,0 +1,14 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+
+public class EntityPlayerBanned extends EntityPlayerSP {
+	public EntityPlayerBanned(Minecraft var1, World var2, Session var3) {
+		super(var1, var2, var3);
+		var1.ingameGUI = new GuiBanned(var1);
+	}
+
+	public boolean attackEntityFrom(Entity var1, int var2) {
+		return false;
+	}
+}
--- net/minecraft/src/WorldGenMinable.java
+++ net/minecraft/src/WorldGenMinable.java
@@ -4,8 +4,14 @@
 
 public class WorldGenMinable extends WorldGenerator {
 	private int minableBlockId;
+	private int blockIDBelowY10;
 	private int numberOfBlocks;
 
+	public WorldGenMinable(int var1, int var2, int var3) {
+		this(var1, var3);
+		this.blockIDBelowY10 = var2;
+	}
+
 	public WorldGenMinable(int var1, int var2) {
 		this.minableBlockId = var1;
 		this.numberOfBlocks = var2;
@@ -34,8 +40,19 @@
 						double var35 = ((double)var32 + 0.5D - var20) / (var28 / 2.0D);
 						double var37 = ((double)var33 + 0.5D - var22) / (var30 / 2.0D);
 						double var39 = ((double)var34 + 0.5D - var24) / (var28 / 2.0D);
-						if(var35 * var35 + var37 * var37 + var39 * var39 < 1.0D && var1.getBlockId(var32, var33, var34) == Block.stone.blockID) {
-							var1.setBlock(var32, var33, var34, this.minableBlockId);
+						if(var35 * var35 + var37 * var37 + var39 * var39 < 1.0D && (var1.getBlockId(var32, var33, var34) == Block.stone.blockID || var1.getBlockId(var32, var33, var34) == ExtBlocks.LowStone.blockID)) {
+							var1.setBlock(var32, var33, var34, var33 <= 10 ? this.blockIDBelowY10 : this.minableBlockId);
+							if(var33 <= 10) {
+								for(int var41 = -1; var41 <= 1; var41 += 2) {
+									for(int var42 = -1; var42 <= 1; var42 += 2) {
+										for(int var43 = -1; var43 <= 1; var43 += 2) {
+											if(var1.getBlockId(var32 + var41, var33 + var42, var34 + var43) == Block.stone.blockID) {
+												var1.setBlock(var32 + var41, var33 + var42, var34 + var43, ExtBlocks.LowStone.blockID);
+											}
+										}
+									}
+								}
+							}
 						}
 					}
 				}
--- net/minecraft/client/MinecraftApplet.java
+++ net/minecraft/client/MinecraftApplet.java
@@ -54,6 +54,7 @@
 			this.mcThread = new Thread(this.mc, "Minecraft main thread");
 			this.mcThread.start();
 		}
+
 	}
 
 	public void start() {
@@ -90,6 +91,7 @@
 
 			this.mcThread = null;
 		}
+
 	}
 
 	public void clearApplet() {
--- /dev/null
+++ net/minecraft/src/GuiFreerunWorlds.java
@@ -1,0 +1,110 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.util.Iterator;
+import net.minecraft.client.Minecraft;
+
+public class GuiFreerunWorlds extends GuiScreen {
+	protected GuiScreen parentScreen;
+	protected String screenTitle = "Freerun";
+	private boolean selected = false;
+	public long field_8064_4oNKTSR4J6PmB4lQ8Og86yJYr49F2Y9cBz2H2uDi9sVNSS5rSVh489kn0E56 = -1L;
+	GuiImageHandler field_8066_0zGDjQ05EJl5TayZsg879M41o7X39B5M7SD8x5WnJz78w3cGByQ9ivEu9GZp;
+
+	public GuiFreerunWorlds(GuiScreen var1) {
+		this.parentScreen = var1;
+		this.field_8064_4oNKTSR4J6PmB4lQ8Og86yJYr49F2Y9cBz2H2uDi9sVNSS5rSVh489kn0E56 = System.currentTimeMillis();
+		this.field_8066_0zGDjQ05EJl5TayZsg879M41o7X39B5M7SD8x5WnJz78w3cGByQ9ivEu9GZp = new GuiImageHandler(var1.mc, "/gui/freerun_cover0.png", 500.0F);
+	}
+
+	public void CreateWorldButtons() {
+		while(this.controlList.size() > 2) {
+			this.controlList.remove(2);
+		}
+
+		File var1 = Minecraft.getMinecraftDir();
+
+		for(int var2 = 0; var2 < 6; ++var2) {
+			GuiButton var3 = new GuiButton(var2, this.width / 2 - 75 + (var2 > 2 ? 80 : -80), this.height / 4 + 25 * (var2 % 3), 150, 20, this.getSaveName(var2));
+			this.controlList.add(var3);
+			NBTTagCompound var4 = World.getLevelData(var1, "/freerun/WorldFreerun" + var2);
+			if(var4 == null) {
+				var3.enabled = false;
+			}
+		}
+
+	}
+
+	public void initGui() {
+		this.controlList.clear();
+		this.initButtons();
+		this.CreateWorldButtons();
+	}
+
+	protected String getSaveName(int var1) {
+		switch(var1) {
+		case 0:
+			return "INTRODUCTION";
+		case 1:
+			return "CONSTRUCT";
+		case 2:
+			return "SKYLINE";
+		case 3:
+			return "SORROW";
+		case 4:
+			return "SHIVER";
+		case 5:
+			return "FINALE";
+		default:
+			return "???";
+		}
+	}
+
+	public void initButtons() {
+		this.controlList.add(new GuiButton(-2, this.width / 2 - 100, this.height / 6 + 168, "Back"));
+	}
+
+	protected void actionPerformed(GuiButton var1) {
+		if(var1.enabled) {
+			if(var1.id > -1) {
+				Class var2 = var1.id == 0 ? FreerunMap0.class : (var1.id == 1 ? FreerunMap1.class : (var1.id == 2 ? FreerunMap2.class : (var1.id == 3 ? FreerunMap3.class : (var1.id == 4 ? FreerunMap4.class : (var1.id == 5 ? FreerunMap5.class : null)))));
+				this.selectWorld("/freerun/WorldFreerun" + var1.id, var2);
+			} else if(var1.id == -2) {
+				this.mc.displayGuiScreen(this.parentScreen);
+			}
+		}
+
+	}
+
+	public void selectWorld(String var1, Class<? extends FreerunWorld> var2) {
+		if(var2 != null) {
+			((BlockHidable)ExtBlocks.BarrierBlock).render = false;
+			this.mc.displayGuiScreen((GuiScreen)null);
+			if(!this.selected) {
+				this.selected = true;
+				this.mc.playerController = new PlayerControllerSP(this.mc);
+				this.mc.func_7260_29708o9t3Kv11ORjhW6WgtZ1jrShpxII2V33oCWwflopdLkDYzM1ouYGxg87(var1, var2);
+				this.mc.displayGuiScreen((GuiScreen)null);
+			}
+
+		}
+	}
+
+	public void drawScreen(int var1, int var2, float var3) {
+		Iterator var4 = this.controlList.iterator();
+
+		while(var4.hasNext()) {
+			GuiButton var5 = (GuiButton)var4.next();
+			if(var5.field_7874_8hutMN8Nkr6540tkVq0b1457yM08Q9Ty13MenI0kbL06Yf3m8DLUel3bs5Tm && !this.field_8066_0zGDjQ05EJl5TayZsg879M41o7X39B5M7SD8x5WnJz78w3cGByQ9ivEu9GZp.field_9956_15GOe6410z7Fl452j2yZISN60Abc7m54nek0mM34PB830a3aHI564YEQpTcg.contains("cover" + var5.id + ".png") && var5.id >= 0 && var5.id <= 5) {
+				this.field_8066_0zGDjQ05EJl5TayZsg879M41o7X39B5M7SD8x5WnJz78w3cGByQ9ivEu9GZp.func_9955_5630DX5SV053d8F74A11907j9t7039N0rdr37W800V11wnAC9AhArcyC6F5W("/gui/freerun_cover" + var5.id + ".png");
+			}
+		}
+
+		this.field_8066_0zGDjQ05EJl5TayZsg879M41o7X39B5M7SD8x5WnJz78w3cGByQ9ivEu9GZp.func_9954_31xL9lqzsd832NIF2fnqGsFer65B6pP9dW8u4402h7H3mW9p6ZjIZK9RM2zT(this.width, this.height);
+		this.drawCenteredString(this.fontRenderer, this.screenTitle, this.width / 2, 20, 16777215);
+		this.drawCenteredString(this.fontRenderer, "-- FREERUN --", this.width / 2, this.height / 6 + 118, 16777215);
+		this.drawCenteredString(this.fontRenderer, "Test your skills using the new gameplay mechanics", this.width / 2, this.height / 6 + 138, 10526880);
+		this.drawCenteredString(this.fontRenderer, "by playing these timed stages.", this.width / 2, this.height / 6 + 148, 10526880);
+		super.drawScreen(var1, var2, var3);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockSaplingOld.java
@@ -1,0 +1,32 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockSaplingOld extends BlockFlowerOld {
+	protected BlockSaplingOld(int var1, int var2) {
+		super(var1, var2);
+		float var3 = 0.4F;
+		this.setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, var3 * 2.0F, 0.5F + var3);
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		super.updateTick(var1, var2, var3, var4, var5);
+		if(var1.getBlockLightValue(var2, var3 + 1, var4) >= 9 && var5.nextInt(5) == 0) {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			if(var6 < 15) {
+				var1.setBlockMetadataWithNotify(var2, var3, var4, var6 + 1);
+			} else {
+				var1.setBlock(var2, var3, var4, 0);
+				Object var7 = new WorldGenTrees();
+				if(var5.nextInt(10) == 0) {
+					var7 = new WorldGenBigTree();
+				}
+
+				if(!((WorldGenerator)var7).generate(var1, var5, var2, var3, var4)) {
+					var1.setBlock(var2, var3, var4, this.blockID);
+				}
+			}
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/WorldGenHouseSmallUnknownClass5.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.List;
+
+class WorldGenHouseSmallUnknownClass5 {
+	public int field_12171_5UJO83Sal8307YLDFyzIt779v5qD6812ur6y32x891iN95OgW8FOAZDB1pNG;
+	public int field_12173_7fAKjHW1LE847OSwtPxt16L6WGEi68u7u6fWOmkZTpO3ZbiE0TR39wTva1vJ;
+	public int field_12170_8ceUXPOD34dVCWOlpGT5Do01b84rla5c3oO5uc195z07QUJ9oHb4k9hRdKb9;
+	public int field_12175_2H1YgXg1iR1kd9fC2ubGim1KGwSPUAnw9qg68y5mGH12kgO6dN8w61caMKO3;
+	public int field_12174_2QgdUt39i2D2kz0DVgEK57x7SbqDO3VF01u5FKjDkJE4E2TM9g1sTnjxdetP;
+	public List<EnumHouseSmall[]> field_12172_7EQ6jd3x88fSv4M9BHi7s57Y778Lr34WSc98fXK3YndnTY5T4cO73NCZv1zn = new ArrayList();
+
+	public WorldGenHouseSmallUnknownClass5(int var1, int var2, int var3, int var4, int var5) {
+		this.field_12171_5UJO83Sal8307YLDFyzIt779v5qD6812ur6y32x891iN95OgW8FOAZDB1pNG = var1;
+		this.field_12173_7fAKjHW1LE847OSwtPxt16L6WGEi68u7u6fWOmkZTpO3ZbiE0TR39wTva1vJ = var2;
+		this.field_12170_8ceUXPOD34dVCWOlpGT5Do01b84rla5c3oO5uc195z07QUJ9oHb4k9hRdKb9 = var3;
+		this.field_12175_2H1YgXg1iR1kd9fC2ubGim1KGwSPUAnw9qg68y5mGH12kgO6dN8w61caMKO3 = var4;
+		this.field_12174_2QgdUt39i2D2kz0DVgEK57x7SbqDO3VF01u5FKjDkJE4E2TM9g1sTnjxdetP = var5;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockGlowing.java
@@ -1,0 +1,91 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockGlowing extends Block {
+	int renderMode = 1;
+
+	public BlockGlowing(int var1, int var2, int var3) {
+		super(var1, var2, Material.plants);
+		this.setTickOnLoad(true);
+		this.renderMode = var3;
+	}
+
+	public BlockGlowing(int var1, int var2, Material var3) {
+		super(var1, var2, var3);
+		this.setTickOnLoad(true);
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return this.renderMode;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return true;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		super.updateTick(var1, var2, var3, var4, var5);
+		if(var1.getBlockMetadata(var2, var3, var4) == 0) {
+			this.onBlockAdded(var1, var2, var3, var4);
+		}
+
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		if(this.h(var1, var2, var3, var4)) {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			boolean var7 = false;
+			if(!var1.isBlockNormalCube(var2 - 1, var3, var4) && var6 == 1) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2 + 1, var3, var4) && var6 == 2) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3, var4 - 1) && var6 == 3) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3, var4 + 1) && var6 == 4) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3 - 1, var4) && var6 == 5) {
+				var7 = true;
+			}
+
+			if(var7) {
+				this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+				var1.setBlockWithNotify(var2, var3, var4, 0);
+			}
+		}
+
+	}
+
+	private boolean h(World var1, int var2, int var3, int var4) {
+		if(!this.canPlaceBlockAt(var1, var2, var3, var4)) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+	}
+}
--- /dev/null
+++ net/minecraft/src/ShapelessCraftingRecipe.java
@@ -1,0 +1,42 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+
+public class ShapelessCraftingRecipe extends CraftingRecipe {
+	public ShapelessCraftingRecipe(int var1, int var2, int[] var3, ItemStack var4) {
+		super(var1, var2, var3, var4);
+	}
+
+	public boolean matches(int[] var1) {
+		ArrayList var2 = new ArrayList();
+		int[] var3 = this.ingredientMap;
+		int var4 = var3.length;
+
+		int var5;
+		int var6;
+		for(var5 = 0; var5 < var4; ++var5) {
+			var6 = var3[var5];
+			if(var6 != -1) {
+				var2.add(Integer.valueOf(var6));
+			}
+		}
+
+		var3 = var1;
+		var4 = var1.length;
+
+		for(var5 = 0; var5 < var4; ++var5) {
+			var6 = var3[var5];
+			if(var6 != -1) {
+				if(var2.size() == 0) {
+					return false;
+				}
+
+				if(var2.contains(Integer.valueOf(var6))) {
+					var2.remove(Integer.valueOf(var6));
+				}
+			}
+		}
+
+		return var2.size() == 0;
+	}
+}
--- /dev/null
+++ net/minecraft/src/EssenceTransformerInventoryCB.java
@@ -1,0 +1,36 @@
+package net.minecraft.src;
+
+public class EssenceTransformerInventoryCB extends InventoryCB {
+	public InventoryEssenceTransformer craftMatrix = new InventoryEssenceTransformer(this, 3, 3);
+	public EssenceTransformResult craftResult = new EssenceTransformResult();
+	public int currentEssenceVal = 0;
+
+	public void a(IInventory var1) {
+		this.currentEssenceVal = 0;
+
+		for(int var2 = 0; var2 < 3; ++var2) {
+			for(int var3 = 0; var3 < 3; ++var3) {
+				ItemStack var4 = this.craftMatrix.getStackInSlot(var2 + var3 * 3);
+				if(var4 != null) {
+					this.currentEssenceVal += var4.getEssenceValue() * var4.stackSize;
+				}
+			}
+		}
+
+	}
+
+	public void onCraftGuiClosed(EntityPlayer var1) {
+		InventoryPlayer var2 = var1.inventory;
+		if(var2.draggedItemStack != null) {
+			var1.dropPlayerItem(var2.draggedItemStack);
+		}
+
+		for(int var3 = 0; var3 < 9; ++var3) {
+			ItemStack var4 = this.craftMatrix.getStackInSlot(var3);
+			if(var4 != null) {
+				var1.dropPlayerItem(var4);
+			}
+		}
+
+	}
+}
--- net/minecraft/src/ItemStack.java
+++ net/minecraft/src/ItemStack.java
@@ -6,6 +6,16 @@
 	public int itemID;
 	public int itemDmg;
 
+	public void func_10812_1A6pzoPv1nkjqwR9gM0v7CU0l8Z064TFD4D4Cr06sgkHSnb2m8Rq0p8Ot8ke() {
+		if(this.itemID < 0) {
+			ExtLogger.i("##################");
+			ExtLogger.i("SEND A SCREENSHOT OF THIS TO CHAT:");
+			Ext1605Utils.FindOutWhatTheFuckIsMakingThisNotWork();
+			System.exit(3939);
+		}
+
+	}
+
 	public ItemStack(Block var1) {
 		this((Block)var1, 1);
 	}
@@ -30,6 +40,7 @@
 		this.stackSize = 0;
 		this.itemID = var1;
 		this.stackSize = var2;
+		this.func_10812_1A6pzoPv1nkjqwR9gM0v7CU0l8Z064TFD4D4Cr06sgkHSnb2m8Rq0p8Ot8ke();
 	}
 
 	public ItemStack(int var1, int var2, int var3) {
@@ -37,11 +48,19 @@
 		this.itemID = var1;
 		this.stackSize = var2;
 		this.itemDmg = var3;
+		this.func_10812_1A6pzoPv1nkjqwR9gM0v7CU0l8Z064TFD4D4Cr06sgkHSnb2m8Rq0p8Ot8ke();
 	}
 
 	public ItemStack(NBTTagCompound var1) {
 		this.stackSize = 0;
 		this.readFromNBT(var1);
+		this.func_10812_1A6pzoPv1nkjqwR9gM0v7CU0l8Z064TFD4D4Cr06sgkHSnb2m8Rq0p8Ot8ke();
+	}
+
+	public ItemStack(NBTTagCompound var1, boolean var2) {
+		this.stackSize = 0;
+		this.func_10814_40m3ravc2GR8df70VK4wnGhY0290ChbYFQY8zdF1EKI25IV7eSrX00jgEf51(var1, var2);
+		this.func_10812_1A6pzoPv1nkjqwR9gM0v7CU0l8Z064TFD4D4Cr06sgkHSnb2m8Rq0p8Ot8ke();
 	}
 
 	public ItemStack splitStack(int var1) {
@@ -53,6 +72,10 @@
 		return Item.itemsList[this.itemID];
 	}
 
+	public int getEssenceValue() {
+		return this.itemID > Short.MAX_VALUE ? Item.itemsList[this.itemID].essenceValue : Block.blocksList[this.itemID].essenceValue;
+	}
+
 	public int getIconIndex() {
 		return this.getItem().getIconIndex(this);
 	}
@@ -71,19 +94,33 @@
 
 	public NBTTagCompound writeToNBT(NBTTagCompound var1) {
 		var1.setShort("id", (short)this.itemID);
-		var1.setByte("Count", (byte)this.stackSize);
+		var1.setByte("NFORMAT", (byte)57);
+		var1.setInteger("Count", this.stackSize);
 		var1.setShort("Damage", (short)this.itemDmg);
 		return var1;
 	}
 
 	public void readFromNBT(NBTTagCompound var1) {
-		this.itemID = var1.getShort("id");
-		this.stackSize = var1.getByte("Count");
+		this.func_10814_40m3ravc2GR8df70VK4wnGhY0290ChbYFQY8zdF1EKI25IV7eSrX00jgEf51(var1, var1.hasKey("NFORMAT"));
+	}
+
+	public void func_10814_40m3ravc2GR8df70VK4wnGhY0290ChbYFQY8zdF1EKI25IV7eSrX00jgEf51(NBTTagCompound var1, boolean var2) {
+		this.itemID = var1.getShort("id") & '\uffff';
+		if(!var2 && this.itemID >= 256) {
+			this.itemID = this.itemID - 256 + Short.MAX_VALUE;
+		}
+
+		try {
+			this.stackSize = var1.getInteger("Count");
+		} catch (ClassCastException var4) {
+			this.stackSize = var1.getByte("Count");
+		}
+
 		this.itemDmg = var1.getShort("Damage");
 	}
 
 	public int getMaxStackSize() {
-		return this.getItem().getItemStackLimit();
+		return this.itemID == ExtBlocks.EssenceBlock.blockID ? 10000 : this.getItem().getItemStackLimit();
 	}
 
 	public int getMaxDamage() {
--- net/minecraft/src/Entity.java
+++ net/minecraft/src/Entity.java
@@ -10,7 +10,7 @@
 	public boolean preventEntitySpawning = false;
 	public Entity riddenByEntity;
 	public Entity ridingEntity;
-	protected World worldObj;
+	public World worldObj;
 	public double prevPosX;
 	public double prevPosY;
 	public double prevPosZ;
@@ -47,7 +47,7 @@
 	public boolean noClip = false;
 	public float entityCollisionReduction = 0.0F;
 	public boolean unusedBool = false;
-	protected Random rand = new Random();
+	public Random rand = new Random();
 	public int ticksExisted = 0;
 	public int fireResistance = 1;
 	public int fire = 0;
@@ -82,18 +82,21 @@
 
 	protected void preparePlayerToSpawn() {
 		if(this.worldObj != null) {
-			while(this.posY > 0.0D) {
-				this.setPosition(this.posX, this.posY, this.posZ);
-				if(this.worldObj.getCollidingBoundingBoxes(this, this.boundingBox).size() == 0) {
-					break;
+			while(true) {
+				if(this.posY > 0.0D) {
+					this.setPosition(this.posX, this.posY, this.posZ);
+					if(this.worldObj.getCollidingBoundingBoxes(this, this.boundingBox).size() != 0) {
+						++this.posY;
+						continue;
+					}
 				}
 
-				++this.posY;
+				this.motionX = this.motionY = this.motionZ = 0.0D;
+				this.rotationPitch = 0.0F;
+				break;
 			}
-
-			this.motionX = this.motionY = this.motionZ = 0.0D;
-			this.rotationPitch = 0.0F;
 		}
+
 	}
 
 	public void setEntityDead() {
@@ -185,14 +188,7 @@
 			this.inWater = false;
 		}
 
-		if(this.fire > 0) {
-			if(this.fire % 20 == 0) {
-				this.attackEntityFrom((Entity)null, 1);
-			}
-
-			--this.fire;
-		}
-
+		this.fireDamage();
 		if(this.handleLavaMovement()) {
 			this.attackEntityFrom((Entity)null, 10);
 			this.fire = 600;
@@ -205,6 +201,21 @@
 		this.firstUpdate = false;
 	}
 
+	protected void fireDamage() {
+		if(this.fire > 0) {
+			if(this.shouldBeDamagedByFire() && this.fire % 20 == 0) {
+				this.attackEntityFrom((Entity)null, 1);
+			}
+
+			--this.fire;
+		}
+
+	}
+
+	protected boolean shouldBeDamagedByFire() {
+		return true;
+	}
+
 	protected void kill() {
 		this.setEntityDead();
 	}
@@ -252,96 +263,96 @@
 				}
 			}
 
-			List var35 = this.worldObj.getCollidingBoundingBoxes(this, this.boundingBox.addCoord(var1, var3, var5));
+			List var36 = this.worldObj.getCollidingBoundingBoxes(this, this.boundingBox.addCoord(var1, var3, var5));
 
-			for(int var20 = 0; var20 < var35.size(); ++var20) {
-				var3 = ((AxisAlignedBB)var35.get(var20)).calculateYOffset(this.boundingBox, var3);
+			for(int var20 = 0; var20 < var36.size(); ++var20) {
+				var3 = ((AxisAlignedBB)var36.get(var20)).calculateYOffset(this.boundingBox, var3);
 			}
 
 			this.boundingBox.offset(0.0D, var3, 0.0D);
 			if(!this.surfaceCollision && var13 != var3) {
 				var5 = 0.0D;
-				var3 = var5;
-				var1 = var5;
+				var3 = 0.0D;
+				var1 = 0.0D;
 			}
 
-			boolean var36 = this.onGround || var13 != var3 && var13 < 0.0D;
+			boolean var37 = this.onGround || var13 != var3 && var13 < 0.0D;
 
 			int var21;
-			for(var21 = 0; var21 < var35.size(); ++var21) {
-				var1 = ((AxisAlignedBB)var35.get(var21)).calculateXOffset(this.boundingBox, var1);
+			for(var21 = 0; var21 < var36.size(); ++var21) {
+				var1 = ((AxisAlignedBB)var36.get(var21)).calculateXOffset(this.boundingBox, var1);
 			}
 
 			this.boundingBox.offset(var1, 0.0D, 0.0D);
 			if(!this.surfaceCollision && var11 != var1) {
 				var5 = 0.0D;
-				var3 = var5;
-				var1 = var5;
+				var3 = 0.0D;
+				var1 = 0.0D;
 			}
 
-			for(var21 = 0; var21 < var35.size(); ++var21) {
-				var5 = ((AxisAlignedBB)var35.get(var21)).calculateZOffset(this.boundingBox, var5);
+			for(var21 = 0; var21 < var36.size(); ++var21) {
+				var5 = ((AxisAlignedBB)var36.get(var21)).calculateZOffset(this.boundingBox, var5);
 			}
 
 			this.boundingBox.offset(0.0D, 0.0D, var5);
 			if(!this.surfaceCollision && var15 != var5) {
 				var5 = 0.0D;
-				var3 = var5;
-				var1 = var5;
+				var3 = 0.0D;
+				var1 = 0.0D;
 			}
 
-			double var23;
-			int var28;
-			double var37;
-			if(this.stepHeight > 0.0F && var36 && this.ySize < 0.05F && (var11 != var1 || var15 != var5)) {
-				var37 = var1;
-				var23 = var3;
-				double var25 = var5;
+			double var22;
+			int var24;
+			double var25;
+			if(this.stepHeight > 0.0F && var37 && this.ySize < 0.05F && (var11 != var1 || var15 != var5)) {
+				var25 = var1;
+				var22 = var3;
+				double var27 = var5;
 				var1 = var11;
 				var3 = (double)this.stepHeight;
 				var5 = var15;
-				AxisAlignedBB var27 = this.boundingBox.copy();
+				AxisAlignedBB var29 = this.boundingBox.copy();
 				this.boundingBox.setBB(var17);
-				var35 = this.worldObj.getCollidingBoundingBoxes(this, this.boundingBox.addCoord(var11, var3, var15));
+				var36 = this.worldObj.getCollidingBoundingBoxes(this, this.boundingBox.addCoord(var11, var3, var15));
 
-				for(var28 = 0; var28 < var35.size(); ++var28) {
-					var3 = ((AxisAlignedBB)var35.get(var28)).calculateYOffset(this.boundingBox, var3);
+				for(var24 = 0; var24 < var36.size(); ++var24) {
+					var3 = ((AxisAlignedBB)var36.get(var24)).calculateYOffset(this.boundingBox, var3);
 				}
 
 				this.boundingBox.offset(0.0D, var3, 0.0D);
 				if(!this.surfaceCollision && var13 != var3) {
 					var5 = 0.0D;
-					var3 = var5;
-					var1 = var5;
+					var3 = 0.0D;
+					var1 = 0.0D;
 				}
 
-				for(var28 = 0; var28 < var35.size(); ++var28) {
-					var1 = ((AxisAlignedBB)var35.get(var28)).calculateXOffset(this.boundingBox, var1);
+				for(var24 = 0; var24 < var36.size(); ++var24) {
+					var1 = ((AxisAlignedBB)var36.get(var24)).calculateXOffset(this.boundingBox, var1);
 				}
 
 				this.boundingBox.offset(var1, 0.0D, 0.0D);
 				if(!this.surfaceCollision && var11 != var1) {
 					var5 = 0.0D;
-					var3 = var5;
-					var1 = var5;
+					var3 = 0.0D;
+					var1 = 0.0D;
 				}
 
-				for(var28 = 0; var28 < var35.size(); ++var28) {
-					var5 = ((AxisAlignedBB)var35.get(var28)).calculateZOffset(this.boundingBox, var5);
+				for(var24 = 0; var24 < var36.size(); ++var24) {
+					var5 = ((AxisAlignedBB)var36.get(var24)).calculateZOffset(this.boundingBox, var5);
 				}
 
 				this.boundingBox.offset(0.0D, 0.0D, var5);
 				if(!this.surfaceCollision && var15 != var5) {
 					var5 = 0.0D;
-					var3 = var5;
-					var1 = var5;
+					var3 = 0.0D;
+					var1 = 0.0D;
 				}
 
-				if(var37 * var37 + var25 * var25 >= var1 * var1 + var5 * var5) {
-					var1 = var37;
-					var3 = var23;
-					var5 = var25;
-					this.boundingBox.setBB(var27);
+				if(var25 * var25 + var27 * var27 >= var1 * var1 + var5 * var5) {
+					var1 = var25;
+					var3 = var22;
+					var5 = var27;
+					this.boundingBox.setBB(var29);
 				} else {
 					this.ySize = (float)((double)this.ySize + 0.5D);
 				}
@@ -375,54 +386,56 @@
 				this.motionZ = 0.0D;
 			}
 
-			var37 = this.posX - var7;
-			var23 = this.posZ - var9;
-			this.distanceWalkedModified = (float)((double)this.distanceWalkedModified + (double)MathHelper.sqrt_double(var37 * var37 + var23 * var23) * 0.6D);
-			int var26;
+			var25 = this.posX - var7;
+			var22 = this.posZ - var9;
+			this.distanceWalkedModified = (float)((double)this.distanceWalkedModified + (double)MathHelper.sqrt_double(var25 * var25 + var22 * var22) * 0.6D);
+			int var28;
 			int var38;
-			int var40;
+			int var39;
 			if(this.canTriggerWalking && !var18) {
-				var38 = MathHelper.floor_double(this.posX);
-				var26 = MathHelper.floor_double(this.posY - (double)0.2F - (double)this.yOffset);
-				var40 = MathHelper.floor_double(this.posZ);
-				var28 = this.worldObj.getBlockId(var38, var26, var40);
-				if(this.distanceWalkedModified > (float)this.nextStepDistance && var28 > 0) {
+				var28 = MathHelper.floor_double(this.posX);
+				var38 = MathHelper.floor_double(this.posY - (double)0.2F - (double)this.yOffset);
+				var39 = MathHelper.floor_double(this.posZ);
+				var24 = this.worldObj.getBlockId(var28, var38, var39);
+				if(this.distanceWalkedModified > (float)this.nextStepDistance) {
 					++this.nextStepDistance;
-					StepSound var29 = Block.blocksList[var28].stepSound;
-					if(this.worldObj.getBlockId(var38, var26 + 1, var40) == Block.snow.blockID) {
-						var29 = Block.snow.stepSound;
-						this.worldObj.playSoundAtEntity(this, var29.getStepSound(), var29.getVolume() * 0.15F, var29.getPitch());
-					} else if(!Block.blocksList[var28].material.getIsLiquid()) {
-						this.worldObj.playSoundAtEntity(this, var29.getStepSound(), var29.getVolume() * 0.15F, var29.getPitch());
+					if(var24 > 0) {
+						StepSound var30 = Block.blocksList[var24].stepSound;
+						if(this.worldObj.getBlockId(var28, var38 + 1, var39) == Block.snow.blockID) {
+							var30 = Block.snow.stepSound;
+							this.worldObj.playSoundAtEntity(this, var30.getStepSound(), var30.getVolume() * 0.15F, var30.getPitch());
+						} else if(!Block.blocksList[var24].material.getIsLiquid()) {
+							this.worldObj.playSoundAtEntity(this, var30.getStepSound(), var30.getVolume() * 0.15F, var30.getPitch());
+						}
+
+						Block.blocksList[var24].onEntityWalking(this.worldObj, var28, var38, var39, this);
 					}
-
-					Block.blocksList[var28].onEntityWalking(this.worldObj, var38, var26, var40, this);
 				}
 			}
 
-			var38 = MathHelper.floor_double(this.boundingBox.minX);
-			var26 = MathHelper.floor_double(this.boundingBox.minY);
-			var40 = MathHelper.floor_double(this.boundingBox.minZ);
-			var28 = MathHelper.floor_double(this.boundingBox.maxX);
-			int var41 = MathHelper.floor_double(this.boundingBox.maxY);
-			int var30 = MathHelper.floor_double(this.boundingBox.maxZ);
+			var28 = MathHelper.floor_double(this.boundingBox.minX);
+			var38 = MathHelper.floor_double(this.boundingBox.minY);
+			var39 = MathHelper.floor_double(this.boundingBox.minZ);
+			var24 = MathHelper.floor_double(this.boundingBox.maxX);
+			int var40 = MathHelper.floor_double(this.boundingBox.maxY);
+			int var31 = MathHelper.floor_double(this.boundingBox.maxZ);
 
-			for(int var31 = var38; var31 <= var28; ++var31) {
-				for(int var32 = var26; var32 <= var41; ++var32) {
-					for(int var33 = var40; var33 <= var30; ++var33) {
-						int var34 = this.worldObj.getBlockId(var31, var32, var33);
-						if(var34 > 0) {
-							Block.blocksList[var34].onEntityCollidedWithBlock(this.worldObj, var31, var32, var33, this);
+			for(int var32 = var28; var32 <= var24; ++var32) {
+				for(int var33 = var38; var33 <= var40; ++var33) {
+					for(int var34 = var39; var34 <= var31; ++var34) {
+						int var35 = this.worldObj.getBlockId(var32, var33, var34);
+						if(var35 > 0) {
+							Block.blocksList[var35].onEntityCollidedWithBlock(this.worldObj, var32, var33, var34, this);
 						}
 					}
 				}
 			}
 
 			this.ySize *= 0.4F;
-			boolean var39 = this.handleWaterMovement();
+			boolean var41 = this.handleWaterMovement();
 			if(this.worldObj.isBoundingBoxBurning(this.boundingBox)) {
 				this.dealFireDamage(1);
-				if(!var39) {
+				if(!var41) {
 					++this.fire;
 					if(this.fire == 0) {
 						this.fire = 300;
@@ -432,12 +445,12 @@
 				this.fire = -this.fireResistance;
 			}
 
-			if(var39 && this.fire > 0) {
+			if(var41 && this.fire > 0) {
 				this.worldObj.playSoundAtEntity(this, "random.fizz", 0.7F, 1.6F + (this.rand.nextFloat() - this.rand.nextFloat()) * 0.4F);
 				this.fire = -this.fireResistance;
 			}
-
 		}
+
 	}
 
 	public boolean isSneaking() {
@@ -449,7 +462,10 @@
 	}
 
 	protected void dealFireDamage(int var1) {
-		this.attackEntityFrom((Entity)null, var1);
+		if(this.shouldBeDamagedByFire()) {
+			this.attackEntityFrom((Entity)null, var1);
+		}
+
 	}
 
 	protected void fall(float var1) {
@@ -483,20 +499,26 @@
 	}
 
 	public void moveFlying(float var1, float var2, float var3) {
-		float var4 = MathHelper.sqrt_float(var1 * var1 + var2 * var2);
-		if(var4 >= 0.01F) {
-			if(var4 < 1.0F) {
-				var4 = 1.0F;
+		this.moveFlying(var1, var2, var3, 0.0F);
+	}
+
+	public void moveFlying(float var1, float var2, float var3, float var4) {
+		float var5 = MathHelper.sqrt_float(var1 * var1 + var2 * var2);
+		if(var5 >= 0.01F) {
+			if(var5 < 1.0F) {
+				var5 = 1.0F;
 			}
 
-			var4 = var3 / var4;
-			var1 *= var4;
-			var2 *= var4;
-			float var5 = MathHelper.sin(this.rotationYaw * (float)Math.PI / 180.0F);
-			float var6 = MathHelper.cos(this.rotationYaw * (float)Math.PI / 180.0F);
-			this.motionX += (double)(var1 * var6 - var2 * var5);
-			this.motionZ += (double)(var2 * var6 + var1 * var5);
+			var5 = var3 / var5;
+			var1 *= var5;
+			var2 *= var5;
+			float var6 = MathHelper.sin(this.rotationYaw * (float)Math.PI / 180.0F);
+			float var7 = MathHelper.cos(this.rotationYaw * (float)Math.PI / 180.0F);
+			this.motionX += (double)(var1 * var7 - var2 * var6);
+			this.motionZ += (double)(var2 * var7 + var1 * var6);
+			this.motionY += (double)var4;
 		}
+
 	}
 
 	public float getBrightness(float var1) {
@@ -593,8 +615,8 @@
 				this.addVelocity(-var2, 0.0D, -var4);
 				var1.addVelocity(var2, 0.0D, var4);
 			}
-
 		}
+
 	}
 
 	public void addVelocity(double var1, double var3, double var5) {
@@ -628,7 +650,7 @@
 
 	public boolean isInRangeToRenderDist(double var1) {
 		double var3 = this.boundingBox.getAverageEdgeLength();
-		var3 *= 64.0D * this.renderDistanceWeight;
+		var3 *= 128.0D * this.renderDistanceWeight;
 		return var1 < var3 * var3;
 	}
 
@@ -648,8 +670,8 @@
 	}
 
 	public void writeToNBT(NBTTagCompound var1) {
-		var1.setTag("Pos", this.newDoubleNBTList(new double[]{this.posX, this.posY, this.posZ}));
-		var1.setTag("Motion", this.newDoubleNBTList(new double[]{this.motionX, this.motionY, this.motionZ}));
+		var1.setTag(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9795_70meZjpgin77izFDRms6YiXGbm7sTRK649zXtTMpcaGJg7Z3848NcHmipQ3k), this.newDoubleNBTList(new double[]{this.posX, this.posY, this.posZ}));
+		var1.setTag(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9791_17t872E67KsYQ1d04LU0O5giS6ZSq17O2qre6bZO5GyA530TyCK24CM264IQ), this.newDoubleNBTList(new double[]{this.motionX, this.motionY, this.motionZ}));
 		var1.setTag("Rotation", this.newFloatNBTList(new float[]{this.rotationYaw, this.rotationPitch}));
 		var1.setFloat("FallDistance", this.fallDistance);
 		var1.setShort("Fire", (short)this.fire);
@@ -659,8 +681,8 @@
 	}
 
 	public void readFromNBT(NBTTagCompound var1) {
-		NBTTagList var2 = var1.getTagList("Pos");
-		NBTTagList var3 = var1.getTagList("Motion");
+		NBTTagList var2 = var1.getTagList(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9795_70meZjpgin77izFDRms6YiXGbm7sTRK649zXtTMpcaGJg7Z3848NcHmipQ3k));
+		NBTTagList var3 = var1.getTagList(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9791_17t872E67KsYQ1d04LU0O5giS6ZSq17O2qre6bZO5GyA530TyCK24CM264IQ));
 		NBTTagList var4 = var1.getTagList("Rotation");
 		this.setPosition(0.0D, 0.0D, 0.0D);
 		this.motionX = ((NBTTagDouble)var3.tagAt(0)).doubleValue;
@@ -797,6 +819,7 @@
 			this.rotationYaw = (float)((double)this.rotationYaw + var1);
 			this.rotationPitch = (float)((double)this.rotationPitch + var3);
 		}
+
 	}
 
 	protected void updateRiderPosition() {
@@ -830,6 +853,7 @@
 			this.ridingEntity = var1;
 			var1.riddenByEntity = this;
 		}
+
 	}
 
 	public void setPositionAndRotation(double var1, double var3, double var5, float var7, float var8, int var9) {
--- /dev/null
+++ net/minecraft/src/BlockFenceOld.java
@@ -1,0 +1,29 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+
+public class BlockFenceOld extends BlockOld {
+	public BlockFenceOld(int var1, int var2) {
+		super(var1, var2, Material.wood);
+	}
+
+	public void getCollidingBoundingBoxes(World var1, int var2, int var3, int var4, AxisAlignedBB var5, ArrayList var6) {
+		var6.add(AxisAlignedBB.getBoundingBoxFromPool((double)var2, (double)var3, (double)var4, (double)(var2 + 1), (double)var3 + 1.5D, (double)(var4 + 1)));
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return var1.getBlockId(var2, var3 - 1, var4) == this.blockID ? false : (!var1.getBlockMaterial(var2, var3 - 1, var4).isSolid() ? false : super.canPlaceBlockAt(var1, var2, var3, var4));
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 11;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockDirtOld.java
@@ -1,0 +1,7 @@
+package net.minecraft.src;
+
+public class BlockDirtOld extends BlockOld {
+	protected BlockDirtOld(int var1, int var2) {
+		super(var1, var2, Material.grass);
+	}
+}
--- net/minecraft/src/NetClientHandler.java
+++ net/minecraft/src/NetClientHandler.java
@@ -17,6 +17,7 @@
 	private WorldClient worldClient;
 	private boolean posUpdated = false;
 	Random rand = new Random();
+	public int secureID = -1;
 
 	public NetClientHandler(Minecraft var1, String var2, int var3) throws IOException {
 		this.mc = var1;
@@ -28,12 +29,14 @@
 		if(!this.disconnected) {
 			this.netManager.processReadPackets();
 		}
+
 	}
 
 	public void handleLogin(Packet1Login var1) {
 		this.mc.playerController = new PlayerControllerMP(this.mc, this);
 		this.worldClient = new WorldClient(this);
 		this.worldClient.multiplayerWorld = true;
+		this.secureID = var1.secID;
 		this.mc.changeWorld1(this.worldClient);
 		this.mc.displayGuiScreen(new GuiDownloadTerrain(this));
 	}
@@ -92,6 +95,10 @@
 		float var8 = (float)(var1.rotation * 360) / 256.0F;
 		float var9 = (float)(var1.pitch * 360) / 256.0F;
 		EntityOtherPlayerMP var10 = new EntityOtherPlayerMP(this.mc.theWorld, var1.name);
+		if(!SkinManager.skins.containsKey(var1.name)) {
+			this.netManager.addToSendQueue(new Packet7SendSkinRequest(var1.name));
+		}
+
 		var10.serverPosX = var1.xPosition;
 		var10.serverPosY = var1.yPosition;
 		var10.serverPosZ = var1.zPosition;
@@ -119,6 +126,7 @@
 			float var10 = (float)(var1.pitch * 360) / 256.0F;
 			var2.setPositionAndRotation(var3, var5, var7, var9, var10, 3);
 		}
+
 	}
 
 	public void handleEntity(Packet30Entity var1) {
@@ -134,6 +142,7 @@
 			float var10 = var1.rotating ? (float)(var1.pitch * 360) / 256.0F : var2.rotationPitch;
 			var2.setPositionAndRotation(var3, var5, var7, var9, var10, 3);
 		}
+
 	}
 
 	public void handleDestroyEntity(Packet29DestroyEntity var1) {
@@ -177,7 +186,7 @@
 	}
 
 	public void handlePreChunk(Packet50PreChunk var1) {
-		this.worldClient.doPreChunk(var1.xPosition, var1.yPosition, var1.mode);
+		this.worldClient.doPreChunk(var1.xPosition, var1.yPosition, var1.mode, var1.field_8483_9F000reVs09qJC6RM1CDXbwpWot2ap8bQLJ224QEy3l8Sj0Ca7AELxBGg6v9);
 	}
 
 	public void handleMultiBlockChange(Packet52MultiBlockChange var1) {
@@ -221,12 +230,14 @@
 			this.mc.changeWorld1((World)null);
 			this.mc.displayGuiScreen(new GuiConnectFailed("Connection lost", var1));
 		}
+
 	}
 
 	public void addToSendQueue(Packet var1) {
 		if(!this.disconnected) {
 			this.netManager.addToSendQueue(var1);
 		}
+
 	}
 
 	public void handleCollect(Packet22Collect var1) {
@@ -254,11 +265,16 @@
 			} else {
 				var3.inventory.mainInventory[var3.inventory.currentItem] = new ItemStack(var4);
 			}
-
 		}
+
 	}
 
 	public void handleChat(Packet3Chat var1) {
+		if(var1 instanceof Packet202SecureChatEcho && !((Packet202SecureChatEcho)var1).verified) {
+			this.mc.ingameGUI.addChatMessage("WARNING!");
+			this.mc.ingameGUI.addChatMessage("This message is not legitimate.");
+		}
+
 		this.mc.ingameGUI.addChatMessage(var1.message);
 	}
 
@@ -268,6 +284,7 @@
 			EntityPlayer var3 = (EntityPlayer)var2;
 			var3.swingItem();
 		}
+
 	}
 
 	public void handleAddToInventory(Packet17AddToInventory var1) {
@@ -276,7 +293,11 @@
 
 	public void handleHandshake(Packet2Handshake var1) {
 		if(var1.username.equals("-")) {
-			this.addToSendQueue(new Packet1Login(this.mc.session.username, "Password", 2));
+			if(CertUtils.loadedPrivKey == null) {
+				this.addToSendQueue(new Packet1Login(this.mc.session.username, "Password", 2));
+			} else {
+				this.addToSendQueue(new Packet200SecureLogin(this.mc.session.username, "Password", 2, GuiMultiplayer.playerMode));
+			}
 		} else {
 			try {
 				URL var2 = new URL("http://www.minecraft.net/game/joinserver.jsp?user=" + this.mc.session.username + "&sessionId=" + this.mc.session.sessionId + "&serverId=" + var1.username);
@@ -290,7 +311,7 @@
 				}
 			} catch (Exception var5) {
 				var5.printStackTrace();
-				this.netManager.networkShutdown("Internal client error: " + var5.toString());
+				this.netManager.networkShutdown("Internal client error: " + var5);
 			}
 		}
 
@@ -349,5 +370,44 @@
 		this.worldClient.spawnX = var1.xPosition;
 		this.worldClient.spawnY = var1.yPosition;
 		this.worldClient.spawnZ = var1.zPosition;
+		this.worldClient.randomSeed = var1.worldSeed;
+	}
+
+	public void handleRemoteEntityData(Packet210RemoteEntityData var1) {
+		RemoteEntityData var2 = new RemoteEntityData(var1.id);
+		var2.x = var1.px;
+		var2.y = var1.py;
+		var2.z = var1.pz;
+		var2.rotPitch = var1.rx;
+		var2.rotYaw = var1.ry;
+		this.worldClient.updateRemoteEntityState(var2);
+	}
+
+	public void func_9533_25tX06Rn1x8M23UU2H9zV6jXRvKnHTUhNF2dQmklMdj7A1h0k1f98dr4AwsU(Packet211 var1) {
+		XYZv var2 = var1.field_8478_2tSnAC2xVUHExz1aDX8Sa8Y3qNowB5P09O82NNyk8BjqM44f064S2911lmuQ;
+		XYZv var3 = var1.field_8477_6nRq2qJNrDKC2o4Y72ETc41d4Mx8UAPay651yfdnjp6nj25JnXzS4zszE35c;
+		long var4 = Math.min(var2.x, var3.x);
+		long var6 = Math.max(var2.x, var3.x);
+		long var8 = Math.min(var2.y, var3.y);
+		long var10 = Math.max(var2.y, var3.y);
+		long var12 = Math.min(var2.z, var3.z);
+		long var14 = Math.max(var2.z, var3.z);
+
+		for(long var16 = var4; var16 <= var6; ++var16) {
+			for(long var18 = var8; var18 <= var10; ++var18) {
+				for(long var20 = var12; var20 <= var14; ++var20) {
+					this.worldClient.setBlockWithNotify((int)var16, (int)var18, (int)var20, var1.field_8476_3gK8iVkh5Ag4DU8I447HxslvLJJu2925rh5f4WA43l64kg50e321Ohb427Ez);
+				}
+			}
+		}
+
+	}
+
+	public void func_9567_8Uqzx4T0U7C4w4y2Ni3ekUd757k1g1Aslx6MbBL4gp7k8VP7S54Cq5ura317(Packet71 var1) {
+		this.worldClient.playSoundEffect(var1.field_8474_145olukCshOr7AbHQ37u7Mek5J4P72YUunedJaJO16hjSfTGODn4m9m5a1li, var1.field_8470_9IrDiRRUrGdyFa6A7PTN8n2gN7KM6m7hJt8zUc23Te1J28vMxI4uo31CBYay, var1.field_8475_3jlw1j330Q8Z8q9Qo97DvEh5W2hcFrGUFMo0W390y314Nds665s329qCvr51, var1.field_8472_28DRek4v4KQUw9KLE6Oc1AsTx74xRWg892e8w2RDtc17be6dHpNr005yCRW6, var1.field_8471_102rZg1EIQM0yf5sxDO3Mo7Ck6i5Z4kWuhm2PPl40f7rZS7L9M2G9ciup82Q, var1.field_8473_42sARdt3h0YOa81x8UlPl0CEJtC90d59hSH909CU366FzIF4B45o6aiwz125);
+	}
+
+	public void func_9565_0Y8HJW4TgPPE2z549sYe11V6j33RgAx30G8Wqd6O07L94mxIBzIR8Xpj72GI(Packet72 var1) {
+		this.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw(var1.field_8485_902s024v0T40AC31By11eacj2G9ftX6I7oIimZe17emPq6w323bj398K2v81, var1.field_8486_8TA6UV69W9P3wmw711p172l3T8s0Ptbd25wMM71jF6fUH6cq4n64JE8jvFIR);
 	}
 }
--- /dev/null
+++ net/minecraft/src/GuiEssenceCloner.java
@@ -1,0 +1,47 @@
+package net.minecraft.src;
+
+import org.lwjgl.opengl.GL11;
+
+public class GuiEssenceCloner extends GuiContainer {
+	public EssenceClonerInventoryCB craftingInventory = new EssenceClonerInventoryCB();
+
+	public GuiEssenceCloner(InventoryPlayer var1) {
+		this.inventorySlots.add(new SlotInventory(this, this.craftingInventory.craftMatrix, 0, 30, 35));
+		this.inventorySlots.add(new SlotInventory(this, this.craftingInventory.craftMatrix, 1, 48, 35));
+		this.inventorySlots.add(new SlotInventory(this, this.craftingInventory.craftMatrix, 2, 66, 35));
+		this.inventorySlots.add(new SlotEssenceCloner(this, this.craftingInventory.craftMatrix, this.craftingInventory.craftResult, 0, 102, 35));
+		this.inventorySlots.add(new SlotEssenceCloner(this, this.craftingInventory.craftMatrix, this.craftingInventory.craftResult, 1, 120, 35));
+		this.inventorySlots.add(new SlotEssenceCloner(this, this.craftingInventory.craftMatrix, this.craftingInventory.craftResult, 2, 138, 35));
+
+		int var2;
+		for(var2 = 0; var2 < 3; ++var2) {
+			for(int var3 = 0; var3 < 9; ++var3) {
+				this.inventorySlots.add(new SlotInventory(this, var1, var3 + (var2 + 1) * 9, 8 + var3 * 18, 84 + var2 * 18));
+			}
+		}
+
+		for(var2 = 0; var2 < 9; ++var2) {
+			this.inventorySlots.add(new SlotInventory(this, var1, var2, 8 + var2 * 18, 142));
+		}
+
+	}
+
+	public void onGuiClosed() {
+		super.onGuiClosed();
+		this.craftingInventory.onCraftGuiClosed(this.mc.thePlayer);
+	}
+
+	protected void drawGuiContainerForegroundLayer() {
+		this.fontRenderer.drawString("Essence Cloner", 30, 6, 16777215);
+		this.fontRenderer.drawString("Inventory", 8, this.ySize - 96 + 2, 16777215);
+	}
+
+	protected void drawGuiContainerBackgroundLayer(float var1) {
+		int var2 = this.mc.renderEngine.getTexture("/gui/essencecloner.png");
+		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+		this.mc.renderEngine.bindTexture(var2);
+		int var3 = (this.width - this.xSize) / 2;
+		int var4 = (this.height - this.ySize) / 2;
+		this.drawTexturedModalRect(var3, var4, 0, 0, this.xSize, this.ySize);
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandGuiVersionstring.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandGuiVersionstring extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8553_2uh2AnL8M7fn5IDp8w3625fo72jBhJUYO8qCZ8H78oo4hJUuuW8BTGoR01kF;
+    
+    CommandGuiVersionstring(final CommandManager abb) {
+        this.field_8553_2uh2AnL8M7fn5IDp8w3625fo72jBhJUYO8qCZ8H78oo4hJUuuW8BTGoR01kF = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        GuiIngame.field_7848_69F5OIYAc4x6RX395dAQNvnAE6gbvlYWUWFq5k519dDHt6V3lS7NcP1YaM1d = (String)arr[0];
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return GuiIngame.field_7848_69F5OIYAc4x6RX395dAQNvnAE6gbvlYWUWFq5k519dDHt6V3lS7NcP1YaM1d;
+    }
+}
--- net/minecraft/src/SpawnerAnimals.java
+++ net/minecraft/src/SpawnerAnimals.java
@@ -7,10 +7,10 @@
 public class SpawnerAnimals {
 	private int maxSpawns;
 	private Class entityType;
-	private Class[] entities;
-	private Set eligibleChunksForSpawning = new HashSet();
+	private Class<? extends EntityLiving>[] entities;
+	private Set<ChunkCoordIntPair> eligibleChunksForSpawning = new HashSet();
 
-	public SpawnerAnimals(int var1, Class var2, Class[] var3) {
+	public SpawnerAnimals(int var1, Class var2, Class<? extends EntityLiving>[] var3) {
 		this.maxSpawns = var1;
 		this.entityType = var2;
 		this.entities = var3;
@@ -37,51 +37,51 @@
 		this.eligibleChunksForSpawning.clear();
 
 		int var4;
+		int var5;
+		int var6;
 		int var7;
-		int var9;
-		int var10;
 		for(var4 = 0; var4 < var1.playerEntities.size(); ++var4) {
-			EntityPlayer var5 = (EntityPlayer)var1.playerEntities.get(var4);
-			int var6 = MathHelper.floor_double(var5.posX / 16.0D);
-			var7 = MathHelper.floor_double(var5.posZ / 16.0D);
-			byte var8 = 4;
+			EntityPlayer var8 = (EntityPlayer)var1.playerEntities.get(var4);
+			int var9 = MathHelper.floor_double(var8.posX / 16.0D);
+			var5 = MathHelper.floor_double(var8.posZ / 16.0D);
+			byte var10 = 4;
 
-			for(var9 = -var8; var9 <= var8; ++var9) {
-				for(var10 = -var8; var10 <= var8; ++var10) {
-					this.eligibleChunksForSpawning.add(new ChunkCoordIntPair(var9 + var6, var10 + var7));
+			for(var6 = -var10; var6 <= var10; ++var6) {
+				for(var7 = -var10; var7 <= var10; ++var7) {
+					this.eligibleChunksForSpawning.add(new ChunkCoordIntPair(var6 + var9, var7 + var5));
 				}
 			}
 		}
 
 		var4 = 0;
-		Iterator var26 = this.eligibleChunksForSpawning.iterator();
+		Iterator var28 = this.eligibleChunksForSpawning.iterator();
 
 		while(true) {
-			ChunkCoordIntPair var27;
+			ChunkCoordIntPair var29;
 			do {
-				if(!var26.hasNext()) {
+				if(!var28.hasNext()) {
 					return var4;
 				}
 
-				var27 = (ChunkCoordIntPair)var26.next();
+				var29 = (ChunkCoordIntPair)var28.next();
 			} while(var1.rand.nextInt(10) != 0);
 
-			var7 = var1.rand.nextInt(this.entities.length);
-			ChunkPosition var28 = this.getRandomSpawningPointInChunk(var1, var27.chunkXPos * 16, var27.chunkZPos * 16);
-			var9 = var28.x;
-			var10 = var28.y;
-			int var11 = var28.z;
-			if(var1.isBlockNormalCube(var9, var10, var11)) {
+			var5 = var1.rand.nextInt(this.entities.length);
+			ChunkPosition var30 = this.getRandomSpawningPointInChunk(var1, var29.chunkXPos * 16, var29.chunkZPos * 16);
+			var6 = var30.x;
+			var7 = var30.y;
+			int var11 = var30.z;
+			if(var1.isBlockNormalCube(var6, var7, var11)) {
 				return 0;
 			}
 
-			if(var1.getBlockMaterial(var9, var10, var11) != Material.air) {
+			if(var1.getBlockMaterial(var6, var7, var11) != Material.air) {
 				return 0;
 			}
 
 			for(int var12 = 0; var12 < 3; ++var12) {
-				int var13 = var9;
-				int var14 = var10;
+				int var13 = var6;
+				int var14 = var7;
 				int var15 = var11;
 				byte var16 = 6;
 
@@ -99,23 +99,23 @@
 							float var23 = var20 - (float)var1.spawnZ;
 							float var24 = var21 * var21 + var22 * var22 + var23 * var23;
 							if(var24 >= 576.0F) {
-								EntityLiving var29;
+								EntityLiving var25;
 								try {
-									var29 = (EntityLiving)this.entities[var7].getConstructor(new Class[]{World.class}).newInstance(new Object[]{var1});
-								} catch (Exception var25) {
-									var25.printStackTrace();
+									var25 = (EntityLiving)this.entities[var5].getConstructor(new Class[]{World.class}).newInstance(new Object[]{var1});
+								} catch (Exception var27) {
+									var27.printStackTrace();
 									return var4;
 								}
 
-								var29.setLocationAndAngles((double)var18, (double)var19, (double)var20, var1.rand.nextFloat() * 360.0F, 0.0F);
-								if(var29.getCanSpawnHere()) {
+								var25.setLocationAndAngles((double)var18, (double)var19, (double)var20, var1.rand.nextFloat() * 360.0F, 0.0F);
+								if(var25.getCanSpawnHere()) {
 									++var4;
-									var1.spawnEntityInWorld(var29);
-									if(var29 instanceof EntitySpider && var1.rand.nextInt(100) == 0) {
-										EntitySkeleton var30 = new EntitySkeleton(var1);
-										var30.setLocationAndAngles((double)var18, (double)var19, (double)var20, var29.rotationYaw, 0.0F);
-										var1.spawnEntityInWorld(var30);
-										var30.mountEntity(var29);
+									var1.spawnEntityInWorld(var25);
+									if(var25 instanceof EntitySpider && var1.rand.nextInt(100) == 0) {
+										EntitySkeleton var26 = new EntitySkeleton(var1);
+										var26.setLocationAndAngles((double)var18, (double)var19, (double)var20, var25.rotationYaw, 0.0F);
+										var1.spawnEntityInWorld(var26);
+										var26.mountEntity(var25);
 									}
 								}
 							}
--- /dev/null
+++ net/minecraft/src/BlockEssenceFountain.java
@@ -1,0 +1,71 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockEssenceFountain extends BlockContainer {
+	public BlockEssenceFountain(int var1, Material var2) {
+		super(var1, var2);
+		this.blockIndexInTexture = 1;
+		this.setTickOnLoad(true);
+		this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.25F, 1.0F);
+	}
+
+	protected TileEntity getBlockEntity() {
+		return new TileEntityEssenceFountain();
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 14;
+	}
+
+	public boolean shouldSideBeRendered(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		return true;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		TileEntityEssenceFountain var6 = (TileEntityEssenceFountain)var1.getBlockTileEntity(var2, var3, var4);
+		if(var6.getStackInSlot(0).stackSize != 0) {
+			if(++var6.counter >= 2 && var5.nextInt(3) == 0) {
+				if(var6.getStackInSlot(0).stackSize == 64) {
+					var1.markBlocksDirty(var2, var3, var4, var2, var3, var4);
+				}
+
+				var6.decrStackSize(0, 1);
+				var6.counter = 0;
+				if(var6.getStackInSlot(0).stackSize == 0) {
+					for(int var7 = 0; var7 < 12; ++var7) {
+						var1.spawnParticle("smoke", (double)var2 + var5.nextDouble(), (double)var3 + 0.4D, (double)var4 + var5.nextDouble(), 0.0D, 0.1D, 0.0D);
+						var1.markBlocksDirty(var2, var3, var4, var2, var3, var4);
+					}
+				}
+			}
+
+		}
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+		TileEntityEssenceFountain var6 = (TileEntityEssenceFountain)var1.getBlockTileEntity(var2, var3, var4);
+		if(var6.getStackInSlot(0).stackSize != 0) {
+			if(var5.nextInt(2) == 0) {
+				var1.spawnParticle("snowballpoof", (double)var2 + var5.nextDouble(), (double)var3 + 0.4D, (double)var4 + var5.nextDouble(), 0.0D, 0.0D, 0.0D);
+			}
+
+			if(var5.nextInt(3) == 0) {
+				for(int var7 = var3 + 1; var7 < Math.min(128, var6.getStackInSlot(0).stackSize + var3) && var1.getBlockId(var2, var7, var4) == 0; ++var7) {
+					if(var5.nextInt(6) == 0) {
+						var1.spawnParticle("splash", (double)var2 + var5.nextDouble(), (double)var7 + var5.nextDouble(), (double)var4 + var5.nextDouble(), 0.0D, 0.0D, 0.0D);
+					}
+				}
+			}
+
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/ItemHoursLongPastVI.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+public class ItemHoursLongPastVI extends Item {
+	private int field_9431_6c8m4a2A82WE6Y6dp5kLAR23JJoR713x6HH39dB5eBiJU0Ux4PC29w4uT4D8 = 804;
+
+	public ItemHoursLongPastVI(int var1) {
+		super(var1);
+		this.maxStackSize = 1;
+	}
+
+	public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+		var2.playSoundAtEntity(var3, "ext.notif", 1.0F, 1.0F / (rand.nextFloat() * 0.4F + 0.8F));
+		GuiInGameUnknownClass2 var4 = (GuiInGameUnknownClass2)InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.field_11177_7Zksb7i503i87T27QXh6g1K1pS0mrm03cH6J60Ws3B3hciqhuD9PIOw861xp.peek();
+		if(var4 == null || var4.field_8627_0ZmECs21Yya5NZUsnBNbB5tPFhkwONMzlzVXHX4jsV5aynDc020B97BLqocx != this.field_9431_6c8m4a2A82WE6Y6dp5kLAR23JJoR713x6HH39dB5eBiJU0Ux4PC29w4uT4D8) {
+			InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11171_604vK63ksNcNlyaekc36K9YTmY8326K6noo7h77989I2TsYQ61KM5M25Nii9("Hours Long Past IV \nBut far down below, the Old World still lives. Flowers bloom\n with a light stolen from them so long ago\n Moss and fungi grow as trees - just like they would before.\nAnd they will, too, be seen again one day.", 20000, this.field_9431_6c8m4a2A82WE6Y6dp5kLAR23JJoR713x6HH39dB5eBiJU0Ux4PC29w4uT4D8);
+		}
+
+		return var1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/ExtEvents.java
@@ -1,0 +1,167 @@
+package net.minecraft.src;
+
+import java.util.Iterator;
+import java.util.List;
+import java.util.Random;
+import org.lwjgl.input.Keyboard;
+
+public class ExtEvents {
+	public static Random rand = new Random();
+	public static boolean bossfightInProgress = false;
+	public static String bossname = "";
+	public static EntityGiantBoss bossRef = null;
+
+	public static void PlayerMoveChunkgroup(EntityPlayer var0, World var1) {
+		if(!var1.multiplayerWorld) {
+			if(ScreenDebugMenu.dbg_conf_spawnShadowPlayers && rand.nextInt(100) < 3) {
+				Spawn(var0, var1);
+			}
+
+			if(rand.nextInt(100) > 94 || Keyboard.isKeyDown(Keyboard.KEY_END)) {
+				CueSpawnBossFrom((int)var0.posX, (int)var0.posZ, var1);
+			}
+		}
+
+		if(var0 == InputHandler.mc.thePlayer) {
+			InputHandler.mc.ingameGUI.ResetNamegen();
+		}
+
+	}
+
+	public static void WorldTick(World var0) {
+		if(bossfightInProgress && (bossRef == null || bossRef.isDead || bossRef.worldObj != var0)) {
+			bossfightInProgress = false;
+			bossRef = null;
+		}
+
+	}
+
+	public static void Spawn(EntityPlayer var0, World var1) {
+		EntityShadowPlayer var2 = new EntityShadowPlayer(var1);
+		var2.spawnedThisCycle = true;
+		int var3 = (int)(var0.posX + (double)((rand.nextBoolean() ? 1 : -1) * (20 + rand.nextInt(60))));
+		int var4 = (int)var0.posY;
+
+		int var5;
+		for(var5 = (int)(var0.posZ + (double)((rand.nextBoolean() ? 1 : -1) * (20 + rand.nextInt(60)))); var1.getBlockId(var3, var4, var5) != 0 || var1.getBlockId(var3, var4 + 1, var5) != 0; ++var4) {
+		}
+
+		while(var1.getBlockId(var3, var4 - 1, var5) == 0) {
+			--var4;
+		}
+
+		var2.setPosition((double)var3, (double)(var4 + 2), (double)var5);
+		var1.spawnEntityInWorld(var2);
+	}
+
+	public static void func_11856_0t7OQN0wYClKPyfCdKW9g3t0MW94ScRD4ffzAB4MaIwS6K3mB51a67GSmU0B(EntityPlayer var0, World var1) {
+		EntityShadowPlayer var2 = new EntityShadowPlayer(var1);
+		var2.spawnedThisCycle = true;
+		int var3 = (int)var0.posX;
+		int var4 = (int)var0.posY;
+		int var5 = (int)var0.posZ;
+		var2.setPosition((double)var3, (double)(var4 + 2), (double)var5);
+		var1.spawnEntityInWorld(var2);
+	}
+
+	public static EntityGiantBoss SpawnGiant(double var0, double var2, double var4, World var6) {
+		EntityGiantBoss var7 = new EntityGiantBoss(var6, (int)var6.GetMilestone());
+		var7.setLocationAndAngles(var0, var2, var4, rand.nextFloat() * 360.0F, 0.0F);
+		InputHandler.mc.theWorld.spawnEntityInWorld(var7);
+		return var7;
+	}
+
+	public static void CueSpawnBossFrom(int var0, int var1, World var2) {
+		if(!var2.multiplayerWorld && !bossfightInProgress) {
+			Random var3 = new Random();
+			int var4 = var0 + 32 * (var3.nextInt(3) - 1);
+			int var5 = var1 + 32 * (var3.nextInt(3) - 1);
+			if(var4 == var0 && var5 == var1) {
+				var5 += 32;
+			}
+
+			bossname = "Giant of " + GuiIngame.Namegen2(var2.randomSeed, var4 / 32, var5 / 32);
+			bossRef = SpawnGiant((double)var4, 100.0D, (double)var5, var2);
+			bossfightInProgress = true;
+		}
+
+	}
+
+	public static void GiantBossKilled(EntityGiantBoss var0) {
+		bossfightInProgress = false;
+		bossRef = null;
+		bossname = "";
+	}
+
+	public static void PlayerMoveXZBlock(EntityPlayer var0, World var1) {
+		if(var1 instanceof FreerunWorld) {
+			List var2 = ((FreerunWorld)var1).func_7517_8oADBp42n4G2Ly6U1WLv70n6VyS2bkokzo8dF7ayUqDb1A6ofY86pUJA8mf8();
+			if(var2 != null) {
+				Iterator var3 = var2.iterator();
+
+				while(var3.hasNext()) {
+					HandlerSetCheckpointUnknownClass var4 = (HandlerSetCheckpointUnknownClass)var3.next();
+					if(var4.func_10085_7D2n8t3Lap70612qvby3qIC226DCKo8Nk73Nno70193Sp6c96td8erpx97bW(var0)) {
+						InputHandler.field_9756_3t1caBu1CS15veqc01ypG4DqCRJ91Rw6b5pITOU21064uqb1k1F7E6SIPrCO = true;
+						InputHandler.field_9755_40jW6A12nU5Bx0XJVnftRWc1g168MkyD0Hs1G3PDx769g8p92eI4LUrp43lZ = var4;
+						InputHandler.field_9770_2V6p0RtqpP2jB5MbKC4kOM794OwxL5Fl82SMBE30e16wdk1Iemyry4Fh4Dt6 = var0;
+					}
+				}
+			}
+		}
+
+		if(var1 instanceof ZMWorld) {
+			int[] var14 = new int[]{0, 0, -1, 0, 1, 0, 0, -1, 0, 1, -1, -1, 1, 1, -1, 1, 1, -1};
+			int var17 = (int)Math.floor(var0.posX);
+			int var20 = (int)Math.ceil(var0.posY);
+			int var5 = (int)Math.floor(var0.posZ);
+			((EntityPlayerZombieModeClient)var0).field_9097_867sEKNEsa45Xq4Etlk5s449h7UUOWVcX6nYd2PGjFy373Y2PXcol521PBg2 = null;
+			((EntityPlayerZombieModeClient)var0).field_9093_8pX3Foh9nnqOBZGkAhkc659OKcv5h23UrLcQ0x07ZRU1yOwY57fY6vz12UYR = null;
+
+			for(int var6 = 0; var6 != var14.length / 2; ++var6) {
+				for(int var7 = -2; var7 != 1; ++var7) {
+					int var8 = var17 + var14[var6 * 2];
+					int var9 = var20 + var7;
+					int var10 = var5 + var14[var6 * 2 + 1];
+					int var11 = ((ZMWorld)var1).getBlockId(var8, var9, var10);
+					if(var11 != 0) {
+						Block var12 = Block.blocksList[var11];
+						if(var12 instanceof BlockUnknownInterface) {
+							int var13 = ((BlockUnknownInterface)var12).func_8288_98t8S89tFW42rGL9ALNhVV7sJ5qB3j8Z10bg69FoU68e30R380Rp4L4Dn5kC();
+							if(var13 != -1) {
+								((EntityPlayerZombieModeClient)var0).field_9097_867sEKNEsa45Xq4Etlk5s449h7UUOWVcX6nYd2PGjFy373Y2PXcol521PBg2 = (BlockUnknownInterface)var12;
+								((EntityPlayerZombieModeClient)var0).field_9093_8pX3Foh9nnqOBZGkAhkc659OKcv5h23UrLcQ0x07ZRU1yOwY57fY6vz12UYR = new XYZv((long)var8, (long)var9, (long)var10);
+							}
+						}
+					}
+				}
+			}
+
+			((ZMWorld)var1).func_7549_44O8yX39q3gNk27615OXRQ532BD73gQDG1C0XB575HgYp5YVG7N00ux31ql9(var0);
+		}
+
+		Iterator var15 = var1.field_7498_65957fU9nGL5PA2e96ZOK3ePBveSt2ceA9Glj10PC2Jo5s0wI21ix69flng2.iterator();
+
+		while(var15.hasNext()) {
+			HandlerSetCheckpointUnknownClass var18 = (HandlerSetCheckpointUnknownClass)var15.next();
+			if(var18.func_10085_7D2n8t3Lap70612qvby3qIC226DCKo8Nk73Nno70193Sp6c96td8erpx97bW(var0)) {
+				InputHandler.field_9756_3t1caBu1CS15veqc01ypG4DqCRJ91Rw6b5pITOU21064uqb1k1F7E6SIPrCO = true;
+				InputHandler.field_9755_40jW6A12nU5Bx0XJVnftRWc1g168MkyD0Hs1G3PDx769g8p92eI4LUrp43lZ = var18;
+				InputHandler.field_9770_2V6p0RtqpP2jB5MbKC4kOM794OwxL5Fl82SMBE30e16wdk1Iemyry4Fh4Dt6 = var0;
+			}
+		}
+
+		if(!var1.multiplayerWorld && var1.difficultySetting != 0 && !(var1 instanceof ZMWorld) && !(var1 instanceof FreerunWorld) && var0.observerCooldown <= 0L && var0 instanceof EntityPlayerSP && rand.nextInt(100) < 5) {
+			XYZv var16 = new XYZv((long)var0.posX, (long)var0.posY, (long)var0.posZ);
+			long var19 = var1.worldTime % 24000L;
+			if((double)var1.getBrightness((int)var16.x, (int)var16.y, (int)var16.z) < 0.2D && var19 >= 14000L && var19 <= 22800L) {
+				EntityObserver var21 = new EntityObserver(var1);
+				var21.setPosition((double)var16.x, (double)(var16.y + 2L), (double)var16.z);
+				var1.spawnEntityInWorld(var21);
+				var1.playSoundAtEntity(var0, "ext.obvr_spawn", 1.0F, 1.0F);
+				var0.observerCooldown = 5500L;
+			}
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockFireOld2.java
@@ -1,0 +1,224 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockFireOld2 extends Block {
+	private int[] field_8356_064Q9Z2cEh2dH1cNb2g5urp8z80Vae941DOOD757H839J0r4ZzA2Pt74B8pN = new int[Short.MAX_VALUE];
+	private int[] field_8357_019Uc9q8fiF1aTHYJsQuU9Jr5L5ljf7Z82n2063KcKG8u0kib8C7Q20N9KVe = new int[Short.MAX_VALUE];
+
+	protected BlockFireOld2(int var1, int var2) {
+		super(var1, var2, Material.fire);
+		this.func_8352_7Z212n48NiXMyCofFqitKG3edYMY2HWc5fBaSQd5lWYR2Sp070zg98U67V3W(Block.planks.blockID, 5, 20);
+		this.func_8352_7Z212n48NiXMyCofFqitKG3edYMY2HWc5fBaSQd5lWYR2Sp070zg98U67V3W(Block.wood.blockID, 5, 5);
+		this.func_8352_7Z212n48NiXMyCofFqitKG3edYMY2HWc5fBaSQd5lWYR2Sp070zg98U67V3W(Block.leaves.blockID, 30, 60);
+		this.func_8352_7Z212n48NiXMyCofFqitKG3edYMY2HWc5fBaSQd5lWYR2Sp070zg98U67V3W(Block.bookshelf.blockID, 30, 20);
+		this.func_8352_7Z212n48NiXMyCofFqitKG3edYMY2HWc5fBaSQd5lWYR2Sp070zg98U67V3W(Block.tnt.blockID, 15, 100);
+		this.func_8352_7Z212n48NiXMyCofFqitKG3edYMY2HWc5fBaSQd5lWYR2Sp070zg98U67V3W(Block.cloth.blockID, 30, 60);
+		this.setTickOnLoad(true);
+	}
+
+	private void func_8352_7Z212n48NiXMyCofFqitKG3edYMY2HWc5fBaSQd5lWYR2Sp070zg98U67V3W(int var1, int var2, int var3) {
+		this.field_8356_064Q9Z2cEh2dH1cNb2g5urp8z80Vae941DOOD757H839J0r4ZzA2Pt74B8pN[var1] = var2;
+		this.field_8357_019Uc9q8fiF1aTHYJsQuU9Jr5L5ljf7Z82n2063KcKG8u0kib8C7Q20N9KVe[var1] = var3;
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 3;
+	}
+
+	public int quantityDropped(Random var1) {
+		return 0;
+	}
+
+	public int tickRate() {
+		return 10;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		if(var6 < 15) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, var6 + 1);
+			var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
+		}
+
+		if(!this.func_8354_75avOdXJd9YwI3L0G15wKvOuuCJ2R0I30ejp4VpwoQiRj5hC145X882Eoas4(var1, var2, var3, var4)) {
+			if(!var1.isBlockNormalCube(var2, var3 - 1, var4) || var6 > 3) {
+				var1.setBlockWithNotify(var2, var3, var4, 0);
+			}
+		} else if(!this.func_8350_8O3kVuPnAs3h2Kx4b8R9skbm8A5w9UV30W0BE92lQ5zOiggZ897bv2Y6RyA0(var1, var2, var3 - 1, var4) && var6 == 15 && var5.nextInt(4) == 0) {
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		} else if(var6 % 2 == 0 && var6 > 2) {
+			this.func_8353_29gKfL9t3ANlzP5mtP92TA7l24RI160YGGY68k081p3K9a8W3rOSD22Ptzil(var1, var2 + 1, var3, var4, 300, var5);
+			this.func_8353_29gKfL9t3ANlzP5mtP92TA7l24RI160YGGY68k081p3K9a8W3rOSD22Ptzil(var1, var2 - 1, var3, var4, 300, var5);
+			this.func_8353_29gKfL9t3ANlzP5mtP92TA7l24RI160YGGY68k081p3K9a8W3rOSD22Ptzil(var1, var2, var3 - 1, var4, 200, var5);
+			this.func_8353_29gKfL9t3ANlzP5mtP92TA7l24RI160YGGY68k081p3K9a8W3rOSD22Ptzil(var1, var2, var3 + 1, var4, 250, var5);
+			this.func_8353_29gKfL9t3ANlzP5mtP92TA7l24RI160YGGY68k081p3K9a8W3rOSD22Ptzil(var1, var2, var3, var4 - 1, 300, var5);
+			this.func_8353_29gKfL9t3ANlzP5mtP92TA7l24RI160YGGY68k081p3K9a8W3rOSD22Ptzil(var1, var2, var3, var4 + 1, 300, var5);
+
+			for(int var7 = var2 - 1; var7 <= var2 + 1; ++var7) {
+				for(int var8 = var4 - 1; var8 <= var4 + 1; ++var8) {
+					for(int var9 = var3 - 1; var9 <= var3 + 4; ++var9) {
+						if(var7 != var2 || var9 != var3 || var8 != var4) {
+							int var10 = 100;
+							if(var9 > var3 + 1) {
+								var10 += (var9 - (var3 + 1)) * 100;
+							}
+
+							int var11 = this.func_8355_42hRnbxCf6OY0Z56rbmq105B75461JtJD9SMQ2BEIlJeekIwHwxDlS4S2FlN(var1, var7, var9, var8);
+							if(var11 > 0 && var5.nextInt(var10) <= var11) {
+								var1.setBlockWithNotify(var7, var9, var8, this.blockID);
+							}
+						}
+					}
+				}
+			}
+		}
+
+	}
+
+	private void func_8353_29gKfL9t3ANlzP5mtP92TA7l24RI160YGGY68k081p3K9a8W3rOSD22Ptzil(World var1, int var2, int var3, int var4, int var5, Random var6) {
+		int var7 = this.field_8357_019Uc9q8fiF1aTHYJsQuU9Jr5L5ljf7Z82n2063KcKG8u0kib8C7Q20N9KVe[var1.getBlockId(var2, var3, var4)];
+		if(var6.nextInt(var5) < var7) {
+			boolean var8 = var1.getBlockId(var2, var3, var4) == Block.tnt.blockID;
+			if(var6.nextInt(2) == 0) {
+				var1.setBlockWithNotify(var2, var3, var4, this.blockID);
+			} else {
+				var1.setBlockWithNotify(var2, var3, var4, 0);
+			}
+
+			if(var8) {
+				Block.tnt.onBlockDestroyedByPlayer(var1, var2, var3, var4, 0);
+			}
+		}
+
+	}
+
+	private boolean func_8354_75avOdXJd9YwI3L0G15wKvOuuCJ2R0I30ejp4VpwoQiRj5hC145X882Eoas4(World var1, int var2, int var3, int var4) {
+		return this.func_8350_8O3kVuPnAs3h2Kx4b8R9skbm8A5w9UV30W0BE92lQ5zOiggZ897bv2Y6RyA0(var1, var2 + 1, var3, var4) ? true : (this.func_8350_8O3kVuPnAs3h2Kx4b8R9skbm8A5w9UV30W0BE92lQ5zOiggZ897bv2Y6RyA0(var1, var2 - 1, var3, var4) ? true : (this.func_8350_8O3kVuPnAs3h2Kx4b8R9skbm8A5w9UV30W0BE92lQ5zOiggZ897bv2Y6RyA0(var1, var2, var3 - 1, var4) ? true : (this.func_8350_8O3kVuPnAs3h2Kx4b8R9skbm8A5w9UV30W0BE92lQ5zOiggZ897bv2Y6RyA0(var1, var2, var3 + 1, var4) ? true : (this.func_8350_8O3kVuPnAs3h2Kx4b8R9skbm8A5w9UV30W0BE92lQ5zOiggZ897bv2Y6RyA0(var1, var2, var3, var4 - 1) ? true : this.func_8350_8O3kVuPnAs3h2Kx4b8R9skbm8A5w9UV30W0BE92lQ5zOiggZ897bv2Y6RyA0(var1, var2, var3, var4 + 1)))));
+	}
+
+	private int func_8355_42hRnbxCf6OY0Z56rbmq105B75461JtJD9SMQ2BEIlJeekIwHwxDlS4S2FlN(World var1, int var2, int var3, int var4) {
+		byte var5 = 0;
+		if(var1.getBlockId(var2, var3, var4) != 0) {
+			return 0;
+		} else {
+			int var6 = this.func_8351_67Za7K9F7vhGS7e86pG0eB37akuNC27rj0UYDRsbdGwZ5UceiE2sDlb4Q88h(var1, var2 + 1, var3, var4, var5);
+			var6 = this.func_8351_67Za7K9F7vhGS7e86pG0eB37akuNC27rj0UYDRsbdGwZ5UceiE2sDlb4Q88h(var1, var2 - 1, var3, var4, var6);
+			var6 = this.func_8351_67Za7K9F7vhGS7e86pG0eB37akuNC27rj0UYDRsbdGwZ5UceiE2sDlb4Q88h(var1, var2, var3 - 1, var4, var6);
+			var6 = this.func_8351_67Za7K9F7vhGS7e86pG0eB37akuNC27rj0UYDRsbdGwZ5UceiE2sDlb4Q88h(var1, var2, var3 + 1, var4, var6);
+			var6 = this.func_8351_67Za7K9F7vhGS7e86pG0eB37akuNC27rj0UYDRsbdGwZ5UceiE2sDlb4Q88h(var1, var2, var3, var4 - 1, var6);
+			var6 = this.func_8351_67Za7K9F7vhGS7e86pG0eB37akuNC27rj0UYDRsbdGwZ5UceiE2sDlb4Q88h(var1, var2, var3, var4 + 1, var6);
+			return var6;
+		}
+	}
+
+	public boolean isCollidable() {
+		return false;
+	}
+
+	public boolean func_8350_8O3kVuPnAs3h2Kx4b8R9skbm8A5w9UV30W0BE92lQ5zOiggZ897bv2Y6RyA0(IBlockAccess var1, int var2, int var3, int var4) {
+		return this.field_8356_064Q9Z2cEh2dH1cNb2g5urp8z80Vae941DOOD757H839J0r4ZzA2Pt74B8pN[var1.getBlockId(var2, var3, var4)] > 0;
+	}
+
+	public int func_8351_67Za7K9F7vhGS7e86pG0eB37akuNC27rj0UYDRsbdGwZ5UceiE2sDlb4Q88h(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = this.field_8356_064Q9Z2cEh2dH1cNb2g5urp8z80Vae941DOOD757H839J0r4ZzA2Pt74B8pN[var1.getBlockId(var2, var3, var4)];
+		return var6 > var5 ? var6 : var5;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return var1.isBlockNormalCube(var2, var3 - 1, var4) || this.func_8354_75avOdXJd9YwI3L0G15wKvOuuCJ2R0I30ejp4VpwoQiRj5hC145X882Eoas4(var1, var2, var3, var4);
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		if(!var1.isBlockNormalCube(var2, var3 - 1, var4) && !this.func_8354_75avOdXJd9YwI3L0G15wKvOuuCJ2R0I30ejp4VpwoQiRj5hC145X882Eoas4(var1, var2, var3, var4)) {
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		}
+
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		if(!var1.isBlockNormalCube(var2, var3 - 1, var4) && !this.func_8354_75avOdXJd9YwI3L0G15wKvOuuCJ2R0I30ejp4VpwoQiRj5hC145X882Eoas4(var1, var2, var3, var4)) {
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		} else {
+			var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
+		}
+
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(var5.nextInt(24) == 0) {
+			var1.playSoundEffect((double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F), "fire.fire", 1.0F + var5.nextFloat(), var5.nextFloat() * 0.7F + 0.3F);
+		}
+
+		int var6;
+		float var7;
+		float var8;
+		float var9;
+		if(!var1.isBlockNormalCube(var2, var3 - 1, var4) && !Block.fire.canBlockCatchFire(var1, var2, var3 - 1, var4)) {
+			if(Block.fire.canBlockCatchFire(var1, var2 - 1, var3, var4)) {
+				for(var6 = 0; var6 < 2; ++var6) {
+					var7 = (float)var2 + var5.nextFloat() * 0.1F;
+					var8 = (float)var3 + var5.nextFloat();
+					var9 = (float)var4 + var5.nextFloat();
+					var1.spawnParticle("largesmoke", (double)var7, (double)var8, (double)var9, 0.0D, 0.0D, 0.0D);
+				}
+			}
+
+			if(Block.fire.canBlockCatchFire(var1, var2 + 1, var3, var4)) {
+				for(var6 = 0; var6 < 2; ++var6) {
+					var7 = (float)(var2 + 1) - var5.nextFloat() * 0.1F;
+					var8 = (float)var3 + var5.nextFloat();
+					var9 = (float)var4 + var5.nextFloat();
+					var1.spawnParticle("largesmoke", (double)var7, (double)var8, (double)var9, 0.0D, 0.0D, 0.0D);
+				}
+			}
+
+			if(Block.fire.canBlockCatchFire(var1, var2, var3, var4 - 1)) {
+				for(var6 = 0; var6 < 2; ++var6) {
+					var7 = (float)var2 + var5.nextFloat();
+					var8 = (float)var3 + var5.nextFloat();
+					var9 = (float)var4 + var5.nextFloat() * 0.1F;
+					var1.spawnParticle("largesmoke", (double)var7, (double)var8, (double)var9, 0.0D, 0.0D, 0.0D);
+				}
+			}
+
+			if(Block.fire.canBlockCatchFire(var1, var2, var3, var4 + 1)) {
+				for(var6 = 0; var6 < 2; ++var6) {
+					var7 = (float)var2 + var5.nextFloat();
+					var8 = (float)var3 + var5.nextFloat();
+					var9 = (float)(var4 + 1) - var5.nextFloat() * 0.1F;
+					var1.spawnParticle("largesmoke", (double)var7, (double)var8, (double)var9, 0.0D, 0.0D, 0.0D);
+				}
+			}
+
+			if(Block.fire.canBlockCatchFire(var1, var2, var3 + 1, var4)) {
+				for(var6 = 0; var6 < 2; ++var6) {
+					var7 = (float)var2 + var5.nextFloat();
+					var8 = (float)(var3 + 1) - var5.nextFloat() * 0.1F;
+					var9 = (float)var4 + var5.nextFloat();
+					var1.spawnParticle("largesmoke", (double)var7, (double)var8, (double)var9, 0.0D, 0.0D, 0.0D);
+				}
+			}
+		} else {
+			for(var6 = 0; var6 < 3; ++var6) {
+				var7 = (float)var2 + var5.nextFloat();
+				var8 = (float)var3 + var5.nextFloat() * 0.5F + 0.5F;
+				var9 = (float)var4 + var5.nextFloat();
+				var1.spawnParticle("largesmoke", (double)var7, (double)var8, (double)var9, 0.0D, 0.0D, 0.0D);
+			}
+		}
+
+	}
+}
--- net/minecraft/src/ThreadRunIsoClient.java
+++ net/minecraft/src/ThreadRunIsoClient.java
@@ -1,9 +1,9 @@
 package net.minecraft.src;
 
-class ThreadRunIsoClient extends Thread {
+public class ThreadRunIsoClient extends Thread {
 	final CanvasIsomPreview isomPreview;
 
-	ThreadRunIsoClient(CanvasIsomPreview var1) {
+	public ThreadRunIsoClient(CanvasIsomPreview var1) {
 		this.isomPreview = var1;
 	}
 
--- net/minecraft/src/TextureLavaFlowFX.java
+++ net/minecraft/src/TextureLavaFlowFX.java
@@ -14,72 +14,76 @@
 
 	public void onTick() {
 		++this.tickCounter;
-
-		int var2;
-		float var3;
-		int var5;
-		int var6;
-		int var7;
-		int var8;
-		int var9;
-		for(int var1 = 0; var1 < 16; ++var1) {
-			for(var2 = 0; var2 < 16; ++var2) {
-				var3 = 0.0F;
-				int var4 = (int)(MathHelper.sin((float)var2 * (float)Math.PI * 2.0F / 16.0F) * 1.2F);
-				var5 = (int)(MathHelper.sin((float)var1 * (float)Math.PI * 2.0F / 16.0F) * 1.2F);
-
-				for(var6 = var1 - 1; var6 <= var1 + 1; ++var6) {
-					for(var7 = var2 - 1; var7 <= var2 + 1; ++var7) {
-						var8 = var6 + var4 & 15;
-						var9 = var7 + var5 & 15;
-						var3 += this.red[var8 + var9 * 16];
-					}
-				}
-
-				this.green[var1 + var2 * 16] = var3 / 10.0F + (this.blue[(var1 + 0 & 15) + (var2 + 0 & 15) * 16] + this.blue[(var1 + 1 & 15) + (var2 + 0 & 15) * 16] + this.blue[(var1 + 1 & 15) + (var2 + 1 & 15) * 16] + this.blue[(var1 + 0 & 15) + (var2 + 1 & 15) * 16]) / 4.0F * 0.8F;
-				this.blue[var1 + var2 * 16] += this.alpha[var1 + var2 * 16] * 0.01F;
-				if(this.blue[var1 + var2 * 16] < 0.0F) {
-					this.blue[var1 + var2 * 16] = 0.0F;
-				}
-
-				this.alpha[var1 + var2 * 16] -= 0.06F;
-				if(Math.random() < 0.005D) {
-					this.alpha[var1 + var2 * 16] = 1.5F;
-				}
-			}
-		}
-
-		float[] var11 = this.green;
-		this.green = this.red;
-		this.red = var11;
-
-		for(var2 = 0; var2 < 256; ++var2) {
-			var3 = this.red[var2 - this.tickCounter / 3 * 16 & 255] * 2.0F;
-			if(var3 > 1.0F) {
-				var3 = 1.0F;
-			}
-
-			if(var3 < 0.0F) {
-				var3 = 0.0F;
-			}
-
-			var5 = (int)(var3 * 100.0F + 155.0F);
-			var6 = (int)(var3 * var3 * 255.0F);
-			var7 = (int)(var3 * var3 * var3 * var3 * 128.0F);
-			if(this.anaglyphEnabled) {
-				var8 = (var5 * 30 + var6 * 59 + var7 * 11) / 100;
-				var9 = (var5 * 30 + var6 * 70) / 100;
-				int var10 = (var5 * 30 + var7 * 70) / 100;
-				var5 = var8;
-				var6 = var9;
-				var7 = var10;
-			}
-
-			this.imageData[var2 * 4 + 0] = (byte)var5;
-			this.imageData[var2 * 4 + 1] = (byte)var6;
-			this.imageData[var2 * 4 + 2] = (byte)var7;
-			this.imageData[var2 * 4 + 3] = -1;
-		}
-
+		if(InputHandler.mc.options.fancyGraphics != 2 || this.field_10713_88024hG6da4f4kcVfOqR8cTJ36RtCs13wB6V30Rs17vqAj14F4Cqz3neFg20) {
+			this.field_10713_88024hG6da4f4kcVfOqR8cTJ36RtCs13wB6V30Rs17vqAj14F4Cqz3neFg20 = false;
+
+			int var1;
+			float var2;
+			int var3;
+			int var4;
+			int var5;
+			int var6;
+			int var7;
+			int var9;
+			for(int var8 = 0; var8 < 16; ++var8) {
+				for(var1 = 0; var1 < 16; ++var1) {
+					var2 = 0.0F;
+					var9 = (int)(MathHelper.sin((float)var1 * (float)Math.PI * 2.0F / 16.0F) * 1.2F);
+					var3 = (int)(MathHelper.sin((float)var8 * (float)Math.PI * 2.0F / 16.0F) * 1.2F);
+
+					for(var4 = var8 - 1; var4 <= var8 + 1; ++var4) {
+						for(var5 = var1 - 1; var5 <= var1 + 1; ++var5) {
+							var6 = var4 + var9 & 15;
+							var7 = var5 + var3 & 15;
+							var2 += this.red[var6 + var7 * 16];
+						}
+					}
+
+					this.green[var8 + var1 * 16] = var2 / 10.0F + (this.blue[(var8 + 0 & 15) + (var1 + 0 & 15) * 16] + this.blue[(var8 + 1 & 15) + (var1 + 0 & 15) * 16] + this.blue[(var8 + 1 & 15) + (var1 + 1 & 15) * 16] + this.blue[(var8 + 0 & 15) + (var1 + 1 & 15) * 16]) / 4.0F * 0.8F;
+					this.blue[var8 + var1 * 16] += this.alpha[var8 + var1 * 16] * 0.01F;
+					if(this.blue[var8 + var1 * 16] < 0.0F) {
+						this.blue[var8 + var1 * 16] = 0.0F;
+					}
+
+					this.alpha[var8 + var1 * 16] -= 0.06F;
+					if(Math.random() < 0.005D) {
+						this.alpha[var8 + var1 * 16] = 1.5F;
+					}
+				}
+			}
+
+			float[] var10 = this.green;
+			this.green = this.red;
+			this.red = var10;
+
+			for(var1 = 0; var1 < 256; ++var1) {
+				var2 = this.red[var1 - this.tickCounter / 3 * 16 & 255] * 2.0F;
+				if(var2 > 1.0F) {
+					var2 = 1.0F;
+				}
+
+				if(var2 < 0.0F) {
+					var2 = 0.0F;
+				}
+
+				var3 = (int)(var2 * 100.0F + 155.0F);
+				var4 = (int)(var2 * var2 * 255.0F);
+				var5 = (int)(var2 * var2 * var2 * var2 * 128.0F);
+				if(this.anaglyphEnabled) {
+					var6 = (var3 * 30 + var4 * 59 + var5 * 11) / 100;
+					var7 = (var3 * 30 + var4 * 70) / 100;
+					var9 = (var3 * 30 + var5 * 70) / 100;
+					var3 = var6;
+					var4 = var7;
+					var5 = var9;
+				}
+
+				this.imageData[var1 * 4 + 0] = (byte)var3;
+				this.imageData[var1 * 4 + 1] = (byte)var4;
+				this.imageData[var1 * 4 + 2] = (byte)var5;
+				this.imageData[var1 * 4 + 3] = -1;
+			}
+
+		}
 	}
 }
--- net/minecraft/src/PlayerControllerMP.java
+++ net/minecraft/src/PlayerControllerMP.java
@@ -11,7 +11,7 @@
 	private float stepSoundTickCounter = 0.0F;
 	private int blockHitDelay = 0;
 	private boolean isHittingBlock = false;
-	private NetClientHandler netClientHandler;
+	public NetClientHandler netClientHandler;
 	private int currentPlayerItem = 0;
 
 	public PlayerControllerMP(Minecraft var1, NetClientHandler var2) {
@@ -65,6 +65,7 @@
 			this.curBlockDamageMP = 0.0F;
 			this.blockHitDelay = 0;
 		}
+
 	}
 
 	public void sendBlockRemoving(int var1, int var2, int var3, int var4) {
@@ -73,37 +74,35 @@
 		this.netClientHandler.addToSendQueue(new Packet14BlockDig(1, var1, var2, var3, var4));
 		if(this.blockHitDelay > 0) {
 			--this.blockHitDelay;
-		} else {
-			if(var1 == this.currentBlockX && var2 == this.currentBlockY && var3 == this.currentBlockZ) {
-				int var5 = this.mc.theWorld.getBlockId(var1, var2, var3);
-				if(var5 == 0) {
-					return;
-				}
-
-				Block var6 = Block.blocksList[var5];
-				this.curBlockDamageMP += var6.blockStrength(this.mc.thePlayer);
-				if(this.stepSoundTickCounter % 4.0F == 0.0F && var6 != null) {
-					this.mc.sndManager.playSound(var6.stepSound.getStepSound(), (float)var1 + 0.5F, (float)var2 + 0.5F, (float)var3 + 0.5F, (var6.stepSound.getVolume() + 1.0F) / 8.0F, var6.stepSound.getPitch() * 0.5F);
-				}
-
-				++this.stepSoundTickCounter;
-				if(this.curBlockDamageMP >= 1.0F) {
-					this.sendBlockRemoved(var1, var2, var3, var4);
-					this.curBlockDamageMP = 0.0F;
-					this.prevBlockDamageMP = 0.0F;
-					this.stepSoundTickCounter = 0.0F;
-					this.blockHitDelay = 5;
-				}
-			} else {
+		} else if(var1 == this.currentBlockX && var2 == this.currentBlockY && var3 == this.currentBlockZ) {
+			int var5 = this.mc.theWorld.getBlockId(var1, var2, var3);
+			if(var5 == 0) {
+				return;
+			}
+
+			Block var6 = Block.blocksList[var5];
+			this.curBlockDamageMP += var6.blockStrength(this.mc.thePlayer);
+			if(this.stepSoundTickCounter % 4.0F == 0.0F && var6 != null) {
+				this.mc.sndManager.playSound(var6.stepSound.getStepSound(), (float)var1 + 0.5F, (float)var2 + 0.5F, (float)var3 + 0.5F, (var6.stepSound.getVolume() + 1.0F) / 8.0F, var6.stepSound.getPitch() * 0.5F);
+			}
+
+			++this.stepSoundTickCounter;
+			if(this.curBlockDamageMP >= 1.0F) {
+				this.sendBlockRemoved(var1, var2, var3, var4);
 				this.curBlockDamageMP = 0.0F;
 				this.prevBlockDamageMP = 0.0F;
 				this.stepSoundTickCounter = 0.0F;
-				this.currentBlockX = var1;
-				this.currentBlockY = var2;
-				this.currentBlockZ = var3;
+				this.blockHitDelay = 5;
 			}
-
+		} else {
+			this.curBlockDamageMP = 0.0F;
+			this.prevBlockDamageMP = 0.0F;
+			this.stepSoundTickCounter = 0.0F;
+			this.currentBlockX = var1;
+			this.currentBlockY = var2;
+			this.currentBlockZ = var3;
 		}
+
 	}
 
 	public void setPartialTime(float var1) {
--- /dev/null
+++ net/minecraft/src/HandlerSetCheckpoint.java
@@ -1,0 +1,50 @@
+package net.minecraft.src;
+
+public class HandlerSetCheckpoint {
+	public XYZv[] field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f = new XYZv[4];
+	public int field_11162_6465Np8FUyVvv71JijLg8KaAXuAY3Se0jp88oUhnpanbitz08O9RoUCc28Ip = 0;
+
+	public void func_11161_878G68i7RK8cnFGe82HhotKR54i4CTCOFqIav8G900cC11I38cT2xY88v3Z8(int var1) {
+		if(var1 == 49) {
+			if(InputHandler.mc.objectMouseOver != null && InputHandler.mc.objectMouseOver.typeOfHit == 0) {
+				MovingObjectPosition var2 = InputHandler.mc.objectMouseOver;
+				InputHandler.mc.ingameGUI.addChatMessage("Set position " + this.field_11162_6465Np8FUyVvv71JijLg8KaAXuAY3Se0jp88oUhnpanbitz08O9RoUCc28Ip + " to " + var2.blockX + ":" + var2.blockY + ":" + var2.blockZ);
+				this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[this.field_11162_6465Np8FUyVvv71JijLg8KaAXuAY3Se0jp88oUhnpanbitz08O9RoUCc28Ip++] = new XYZv((long)var2.blockX, (long)var2.blockY, (long)var2.blockZ);
+				if(this.field_11162_6465Np8FUyVvv71JijLg8KaAXuAY3Se0jp88oUhnpanbitz08O9RoUCc28Ip == 4) {
+					for(int var3 = 0; var3 != 2; ++var3) {
+						long var4;
+						if(this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2].x > this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2 + 1].x) {
+							var4 = this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2 + 1].x;
+							this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2 + 1].x = this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2].x;
+							this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2].x = var4;
+						}
+
+						if(this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2].y > this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2 + 1].y) {
+							var4 = this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2 + 1].y;
+							this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2 + 1].y = this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2].y;
+							this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2].y = var4;
+						}
+
+						if(this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2].z > this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2 + 1].z) {
+							var4 = this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2 + 1].z;
+							this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2 + 1].z = this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2].z;
+							this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[var3 * 2].z = var4;
+						}
+					}
+
+					InputHandler.mc.theWorld.field_7498_65957fU9nGL5PA2e96ZOK3ePBveSt2ceA9Glj10PC2Jo5s0wI21ix69flng2.add(new HandlerSetCheckpointUnknownClass("---", this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[0], this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[1], this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[2], this.field_11163_58232jkx0P8BtIjcx9jyMynapa6HyGdBfgcQ0f07QW8ypD8JcSHQUr7A3f0f[3]));
+					InputHandler.mc.ingameGUI.addChatMessage("New portal section added.");
+					this.field_11162_6465Np8FUyVvv71JijLg8KaAXuAY3Se0jp88oUhnpanbitz08O9RoUCc28Ip = 0;
+				}
+			}
+		} else if(var1 == 50) {
+			--this.field_11162_6465Np8FUyVvv71JijLg8KaAXuAY3Se0jp88oUhnpanbitz08O9RoUCc28Ip;
+			if(this.field_11162_6465Np8FUyVvv71JijLg8KaAXuAY3Se0jp88oUhnpanbitz08O9RoUCc28Ip == -1) {
+				this.field_11162_6465Np8FUyVvv71JijLg8KaAXuAY3Se0jp88oUhnpanbitz08O9RoUCc28Ip = 0;
+			}
+
+			InputHandler.mc.ingameGUI.addChatMessage("section:" + this.field_11162_6465Np8FUyVvv71JijLg8KaAXuAY3Se0jp88oUhnpanbitz08O9RoUCc28Ip);
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/GuiBanned.java
@@ -1,0 +1,23 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+import org.lwjgl.opengl.GL11;
+
+public class GuiBanned extends GuiIngame {
+	public GuiBanned(Minecraft var1) {
+		super(var1);
+	}
+
+	public void renderGameOverlay(float var1, boolean var2, int var3, int var4) {
+		ScaledResolution var5 = new ScaledResolution(this.mc.displayWidth, this.mc.displayHeight);
+		int var6 = var5.getScaledWidth();
+		int var7 = var5.getScaledHeight();
+		FontRenderer var8 = this.mc.fontRenderer;
+		this.mc.entityRenderer.setupOverlayRendering();
+		GL11.glEnable(GL11.GL_BLEND);
+		this.drawCenteredString(this.mc.fontRenderer, "You have been banned for violating our Online Play Guidelines!", var6 / 2, 2, 14909708);
+		this.drawCenteredString(this.mc.fontRenderer, "Remaining suspension time: indefinite", var6 / 2, 12, 14909708);
+		GL11.glEnable(GL11.GL_ALPHA_TEST);
+		GL11.glDisable(GL11.GL_BLEND);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockGlowingCube.java
@@ -1,0 +1,88 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockGlowingCube extends Block {
+	int renderMode = 1;
+
+	public BlockGlowingCube(int var1, int var2, int var3) {
+		super(var1, var2, Material.rock);
+		this.setTickOnLoad(true);
+		this.renderMode = 0;
+	}
+
+	public BlockGlowingCube(int var1, int var2, Material var3) {
+		super(var1, var2, var3);
+		this.setTickOnLoad(true);
+		this.renderMode = 0;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return true;
+	}
+
+	public int getRenderType() {
+		return this.renderMode;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return true;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		super.updateTick(var1, var2, var3, var4, var5);
+		if(var1.getBlockMetadata(var2, var3, var4) == 0) {
+			this.onBlockAdded(var1, var2, var3, var4);
+		}
+
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		if(this.h(var1, var2, var3, var4)) {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			boolean var7 = false;
+			if(!var1.isBlockNormalCube(var2 - 1, var3, var4) && var6 == 1) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2 + 1, var3, var4) && var6 == 2) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3, var4 - 1) && var6 == 3) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3, var4 + 1) && var6 == 4) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3 - 1, var4) && var6 == 5) {
+				var7 = true;
+			}
+
+			if(var7) {
+				this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+				var1.setBlockWithNotify(var2, var3, var4, 0);
+			}
+		}
+
+	}
+
+	private boolean h(World var1, int var2, int var3, int var4) {
+		if(!this.canPlaceBlockAt(var1, var2, var3, var4)) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+	}
+}
--- /dev/null
+++ net/minecraft/src/HandlerSetCheckpointUnknownClass.java
@@ -1,0 +1,51 @@
+package net.minecraft.src;
+
+public class HandlerSetCheckpointUnknownClass {
+	public XYZv field_10093_41klyVs2CLSaqXti2PHc7KbJst4Q1nDst1o4iLj6BaTBzFuss9jc926LVo3Y;
+	public XYZv field_10092_7T6J0x9x8Olq6N9RF2N6H3mi3H4w5709ZMMCb850Fhazm6NU9068AFW6shHl;
+	public XYZv field_10089_4EqR2C4N6Be6qvcuc8XOsIuMr3V2jl7dxCt6OU2Iz5CXZ7BkjKL435C882wP;
+	public XYZv field_10091_6899v9cNo0GWz1ut5xqwbn7S4GZzi19V8D2JRLTZC837Z5T33xkgAt68ptow;
+	public String field_10090_5v540C4sk8Ke8C3282XWygqtOknzxtF0r5Vd1NaB0QsfgW9I05m88Cq1r6Iv = "---";
+
+	public HandlerSetCheckpointUnknownClass(String var1, XYZv var2, XYZv var3, XYZv var4, XYZv var5) {
+		this.field_10090_5v540C4sk8Ke8C3282XWygqtOknzxtF0r5Vd1NaB0QsfgW9I05m88Cq1r6Iv = var1;
+		this.field_10093_41klyVs2CLSaqXti2PHc7KbJst4Q1nDst1o4iLj6BaTBzFuss9jc926LVo3Y = var2;
+		this.field_10092_7T6J0x9x8Olq6N9RF2N6H3mi3H4w5709ZMMCb850Fhazm6NU9068AFW6shHl = var3;
+		this.field_10089_4EqR2C4N6Be6qvcuc8XOsIuMr3V2jl7dxCt6OU2Iz5CXZ7BkjKL435C882wP = var4;
+		this.field_10091_6899v9cNo0GWz1ut5xqwbn7S4GZzi19V8D2JRLTZC837Z5T33xkgAt68ptow = var5;
+	}
+
+	public boolean func_10085_7D2n8t3Lap70612qvby3qIC226DCKo8Nk73Nno70193Sp6c96td8erpx97bW(EntityPlayer var1) {
+		return (double)this.field_10093_41klyVs2CLSaqXti2PHc7KbJst4Q1nDst1o4iLj6BaTBzFuss9jc926LVo3Y.x <= var1.posX && var1.posX <= (double)this.field_10092_7T6J0x9x8Olq6N9RF2N6H3mi3H4w5709ZMMCb850Fhazm6NU9068AFW6shHl.x && (double)this.field_10093_41klyVs2CLSaqXti2PHc7KbJst4Q1nDst1o4iLj6BaTBzFuss9jc926LVo3Y.y <= var1.posY && var1.posY <= (double)this.field_10092_7T6J0x9x8Olq6N9RF2N6H3mi3H4w5709ZMMCb850Fhazm6NU9068AFW6shHl.y && (double)this.field_10093_41klyVs2CLSaqXti2PHc7KbJst4Q1nDst1o4iLj6BaTBzFuss9jc926LVo3Y.z <= var1.posZ && var1.posZ <= (double)this.field_10092_7T6J0x9x8Olq6N9RF2N6H3mi3H4w5709ZMMCb850Fhazm6NU9068AFW6shHl.z;
+	}
+
+	public void func_10086_40267dho6H9z8k685WY93RRJ940tPSUiFidSqaVzX0J37XEjJsK5jBgfy5k1(EntityPlayer var1) {
+		double var2 = (double)this.field_10089_4EqR2C4N6Be6qvcuc8XOsIuMr3V2jl7dxCt6OU2Iz5CXZ7BkjKL435C882wP.x + (var1.posX - (double)this.field_10093_41klyVs2CLSaqXti2PHc7KbJst4Q1nDst1o4iLj6BaTBzFuss9jc926LVo3Y.x);
+		double var4 = (double)this.field_10089_4EqR2C4N6Be6qvcuc8XOsIuMr3V2jl7dxCt6OU2Iz5CXZ7BkjKL435C882wP.y + (var1.posY - (double)this.field_10093_41klyVs2CLSaqXti2PHc7KbJst4Q1nDst1o4iLj6BaTBzFuss9jc926LVo3Y.y);
+		double var6 = (double)this.field_10089_4EqR2C4N6Be6qvcuc8XOsIuMr3V2jl7dxCt6OU2Iz5CXZ7BkjKL435C882wP.z + (var1.posZ - (double)this.field_10093_41klyVs2CLSaqXti2PHc7KbJst4Q1nDst1o4iLj6BaTBzFuss9jc926LVo3Y.z);
+		var1.posX = var2;
+		var1.posY = var4 + 0.001D;
+		var1.posZ = var6;
+		var1.setPosition(var2, var4, var6);
+	}
+
+	public HandlerSetCheckpointUnknownClass2 func_10088_1Srn1NO8VIG8sE99Jtv77t920erw08KpSDq49OsE7m757020A0FU0vxsGMvt(EntityPlayer var1) {
+		double var2 = (double)this.field_10089_4EqR2C4N6Be6qvcuc8XOsIuMr3V2jl7dxCt6OU2Iz5CXZ7BkjKL435C882wP.x + (var1.posX - (double)this.field_10093_41klyVs2CLSaqXti2PHc7KbJst4Q1nDst1o4iLj6BaTBzFuss9jc926LVo3Y.x);
+		double var4 = (double)this.field_10089_4EqR2C4N6Be6qvcuc8XOsIuMr3V2jl7dxCt6OU2Iz5CXZ7BkjKL435C882wP.y + (var1.posY - (double)this.field_10093_41klyVs2CLSaqXti2PHc7KbJst4Q1nDst1o4iLj6BaTBzFuss9jc926LVo3Y.y);
+		double var6 = (double)this.field_10089_4EqR2C4N6Be6qvcuc8XOsIuMr3V2jl7dxCt6OU2Iz5CXZ7BkjKL435C882wP.z + (var1.posZ - (double)this.field_10093_41klyVs2CLSaqXti2PHc7KbJst4Q1nDst1o4iLj6BaTBzFuss9jc926LVo3Y.z);
+		return new HandlerSetCheckpointUnknownClass2(var2, var4, var6);
+	}
+
+	public static HandlerSetCheckpointUnknownClass func_10084_6FAAVBx3XRV8rsU1z0770zreU3637zjNEWB3Z8B3V8CI5d1V47yA72wzHu01(NBTTagCompound var0, String var1) {
+		return new HandlerSetCheckpointUnknownClass(var1, XYZv.func_11874_7D7Ldwzfjq7N2h00fkA2p56PZg3G8WUWHZij3DQ7icA7D4681et2A8u9NXkk(var0, "AP1_1"), XYZv.func_11874_7D7Ldwzfjq7N2h00fkA2p56PZg3G8WUWHZij3DQ7icA7D4681et2A8u9NXkk(var0, "AP1_2"), XYZv.func_11874_7D7Ldwzfjq7N2h00fkA2p56PZg3G8WUWHZij3DQ7icA7D4681et2A8u9NXkk(var0, "AP2_1"), XYZv.func_11874_7D7Ldwzfjq7N2h00fkA2p56PZg3G8WUWHZij3DQ7icA7D4681et2A8u9NXkk(var0, "AP2_2"));
+	}
+
+	public NBTTagCompound func_10087_1y146m8JQy5RXz2ldm45tt2tSQj9U640VM27JQiN01nA79WhHvFRXlvxe84l() {
+		NBTTagCompound var1 = new NBTTagCompound();
+		this.field_10093_41klyVs2CLSaqXti2PHc7KbJst4Q1nDst1o4iLj6BaTBzFuss9jc926LVo3Y.func_11870_8PE2rM1Pz0ANK7KSirgdpIuY0x9S23IpHh64xjXM385ympB75xykX9x0C0cz(var1, "AP1_1");
+		this.field_10092_7T6J0x9x8Olq6N9RF2N6H3mi3H4w5709ZMMCb850Fhazm6NU9068AFW6shHl.func_11870_8PE2rM1Pz0ANK7KSirgdpIuY0x9S23IpHh64xjXM385ympB75xykX9x0C0cz(var1, "AP1_2");
+		this.field_10089_4EqR2C4N6Be6qvcuc8XOsIuMr3V2jl7dxCt6OU2Iz5CXZ7BkjKL435C882wP.func_11870_8PE2rM1Pz0ANK7KSirgdpIuY0x9S23IpHh64xjXM385ympB75xykX9x0C0cz(var1, "AP2_1");
+		this.field_10091_6899v9cNo0GWz1ut5xqwbn7S4GZzi19V8D2JRLTZC837Z5T33xkgAt68ptow.func_11870_8PE2rM1Pz0ANK7KSirgdpIuY0x9S23IpHh64xjXM385ympB75xykX9x0C0cz(var1, "AP2_2");
+		return var1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandConnect.java
@@ -1,0 +1,18 @@
+package net.minecraft.src;
+
+class CommandConnect extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8571_5LQP624ZQEOkZxy5u97DA1tj8C5hN47Nkq0aMY5iNEKAli5D4uhvE5014BuQ;
+    
+    CommandConnect(final CommandManager abb) {
+        this.field_8571_5LQP624ZQEOkZxy5u97DA1tj8C5hN47Nkq0aMY5iNEKAli5D4uhvE5014BuQ = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- net/minecraft/src/EntityClientPlayerMP.java
+++ net/minecraft/src/EntityClientPlayerMP.java
@@ -12,6 +12,7 @@
 	private float oldRotationYaw;
 	private float oldRotationPitch;
 	private InventoryPlayer serverSideInventory = new InventoryPlayer((EntityPlayer)null);
+	private boolean skinRqSent = false;
 
 	public EntityClientPlayerMP(Minecraft var1, World var2, Session var3, NetClientHandler var4) {
 		super(var1, var2, var3);
@@ -20,6 +21,11 @@
 
 	public void onUpdate() {
 		super.onUpdate();
+		if(!this.skinRqSent) {
+			this.sendQueue.addToSendQueue(new Packet7SendSkinRequest(this.username));
+			this.skinRqSent = true;
+		}
+
 		this.sendMotionUpdates();
 	}
 
@@ -84,7 +90,12 @@
 	}
 
 	public void sendChatMessage(String var1) {
-		this.sendQueue.addToSendQueue(new Packet3Chat(var1));
+		if(CertUtils.loadedPrivKey == null) {
+			this.sendQueue.addToSendQueue(new Packet3Chat(var1));
+		} else {
+			this.sendQueue.addToSendQueue(new Packet201SecureChat(var1, this.sendQueue.secureID));
+		}
+
 	}
 
 	public void swingItem() {
--- net/minecraft/src/BlockRedstoneTorch.java
+++ net/minecraft/src/BlockRedstoneTorch.java
@@ -6,7 +6,7 @@
 
 public class BlockRedstoneTorch extends BlockTorch {
 	private boolean torchActive = false;
-	private static List torchUpdates = new ArrayList();
+	private static List<RedstoneUpdateInfo> torchUpdates = new ArrayList();
 
 	public int getBlockTextureFromSideAndMetadata(int var1, int var2) {
 		return var1 == 1 ? Block.redstoneWire.getBlockTextureFromSideAndMetadata(var1, var2) : super.getBlockTextureFromSideAndMetadata(var1, var2);
@@ -147,7 +147,7 @@
 			} else {
 				var1.spawnParticle("reddust", var7, var9, var11, 0.0D, 0.0D, 0.0D);
 			}
-
 		}
+
 	}
 }
--- net/minecraft/src/NetHandler.java
+++ net/minecraft/src/NetHandler.java
@@ -18,6 +18,10 @@
 		this.registerPacket(var1);
 	}
 
+	public void handleSecureLogin(Packet200SecureLogin var1) {
+		this.registerPacket(var1);
+	}
+
 	public void handleFlying(Packet10Flying var1) {
 		this.registerPacket(var1);
 	}
@@ -107,6 +111,14 @@
 	}
 
 	public void handleSpawnPosition(Packet6SpawnPosition var1) {
+		this.registerPacket(var1);
+	}
+
+	public void handleRemoteEntityData(Packet210RemoteEntityData var1) {
+		this.registerPacket(var1);
+	}
+
+	public void func_9533_25tX06Rn1x8M23UU2H9zV6jXRvKnHTUhNF2dQmklMdj7A1h0k1f98dr4AwsU(Packet211 var1) {
 		this.registerPacket(var1);
 	}
 }
--- /dev/null
+++ net/minecraft/src/CommandPass.java
@@ -1,0 +1,60 @@
+package net.minecraft.src;
+
+class CommandPass extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8548_63h7728PhQFr6rOT1k6tViR0P9s4mH56399sbwPz9e6y6CA3T1PZ7J9fd7sq;
+    
+    CommandPass(final CommandManager abb) {
+        this.field_8548_63h7728PhQFr6rOT1k6tViR0P9s4mH56399sbwPz9e6y6CA3T1PZ7J9fd7sq = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        switch ((int)arr[0]) {
+            case 7: {
+                InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("Is the number", 10000);
+                break;
+            }
+            case 9: {
+                InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("Wrong place, Raven.", 10000);
+                break;
+            }
+            case 810116: {
+                InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("Help what with?", 10000);
+                break;
+            }
+            case 1: {
+                InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("Welcome back, dear friend", 10000);
+                break;
+            }
+            case 77: {
+                InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("You won't find the candles here", 10000);
+                break;
+            }
+            case 1986: {
+                InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("It's dangerous to go alone!", 10000);
+                break;
+            }
+            case 1993: {
+                InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("Lamp Oil? Rope? Bombs? We don't have that.", 10000);
+                break;
+            }
+            case 2011: {
+                InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("Wrong password screen, Zachary", 10000);
+                break;
+            }
+            case 1604: {
+                InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("3:8jWBk36GiUr3dV9dB8n6a47594GNQ4AHz1V3p5660O75oGy93l89Yu4vDhCgfMahmA67q60z01Nu3vgS", 10000);
+                break;
+            }
+            case 1605: {
+                InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("I guess this can be called an easter egg.\nThis was our first foray into working with a somewhat popular property\nThe prior branches, they were cut just because they weren't high enough quality\nor too drastic a change.\nThe workflow was surely quite different, But i can't really complain\nI'm glad this branch is as is.\nIt was our magnum opus.", 10000);
+                break;
+            }
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/DS5InstrTriggerUpdate.java
@@ -1,0 +1,26 @@
+package net.minecraft.src;
+
+public class DS5InstrTriggerUpdate implements DS5Instruction {
+	public int controllerIndex;
+	public TriggerIndex triggerIndex;
+	public TriggerMode triggerMode;
+	public int[] triggerModeVal;
+
+	public DS5InstrTriggerUpdate(int var1, TriggerIndex var2, TriggerMode var3, int... var4) {
+		this.controllerIndex = var1;
+		this.triggerIndex = var2;
+		this.triggerMode = var3;
+		this.triggerModeVal = var4;
+	}
+
+	public String GetJSON() {
+		String var1 = "{\"type\":1,\"parameters\":[" + this.controllerIndex + "," + this.triggerIndex.index + "," + this.triggerMode.index + ",";
+
+		for(int var2 = 0; var2 != this.triggerModeVal.length; ++var2) {
+			var1 = var1 + this.triggerModeVal[var2] + (var2 != this.triggerModeVal.length - 1 ? "," : "");
+		}
+
+		var1 = var1 + "]}";
+		return var1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/HubWorldUnknownClass.java
@@ -1,0 +1,10 @@
+package net.minecraft.src;
+
+public class HubWorldUnknownClass {
+	public HubWorldUnknownClass(HubWorld var1, int var2, int var3, int var4) {
+	}
+
+	public void func_11056_6le43T75qqWDp58m0mrEzmN4D8XIFDp49q0UpzT6b648itxkXf9xW730lX12() {
+		throw new UnsupportedOperationException("Not implemented yet");
+	}
+}
--- net/minecraft/src/ItemBoat.java
+++ net/minecraft/src/ItemBoat.java
@@ -19,18 +19,18 @@
 		float var16 = -MathHelper.cos(-var5 * ((float)Math.PI / 180.0F));
 		float var17 = MathHelper.sin(-var5 * ((float)Math.PI / 180.0F));
 		float var18 = var15 * var16;
-		float var20 = var14 * var16;
-		double var21 = 5.0D;
-		Vec3D var23 = var13.addVector((double)var18 * var21, (double)var17 * var21, (double)var20 * var21);
-		MovingObjectPosition var24 = var2.rayTraceBlocks_do(var13, var23, true);
-		if(var24 == null) {
+		float var19 = var14 * var16;
+		double var20 = 5.0D;
+		Vec3D var22 = var13.addVector((double)var18 * var20, (double)var17 * var20, (double)var19 * var20);
+		MovingObjectPosition var23 = var2.rayTraceBlocks_do(var13, var22, true);
+		if(var23 == null) {
 			return var1;
 		} else {
-			if(var24.typeOfHit == 0) {
-				int var25 = var24.blockX;
-				int var26 = var24.blockY;
-				int var27 = var24.blockZ;
-				var2.spawnEntityInWorld(new EntityBoat(var2, (double)((float)var25 + 0.5F), (double)((float)var26 + 1.5F), (double)((float)var27 + 0.5F)));
+			if(var23.typeOfHit == 0) {
+				int var24 = var23.blockX;
+				int var25 = var23.blockY;
+				int var26 = var23.blockZ;
+				var2.spawnEntityInWorld(new EntityBoat(var2, (double)((float)var24 + 0.5F), (double)((float)var25 + 1.5F), (double)((float)var26 + 0.5F)));
 				--var1.stackSize;
 			}
 
--- /dev/null
+++ net/minecraft/src/OverlayPaintingTitle.java
@@ -1,0 +1,22 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+
+public class OverlayPaintingTitle {
+	private Minecraft field_11633_2B86TRZ3P4524vBa1ifZ79TQhjgCR4Gjn6E91P5j9B2xgA7ud1Z8xbt2n5T2;
+
+	public OverlayPaintingTitle(Minecraft var1) {
+		this.field_11633_2B86TRZ3P4524vBa1ifZ79TQhjgCR4Gjn6E91P5j9B2xgA7ud1Z8xbt2n5T2 = var1;
+	}
+
+	public void RenderOverlay(GuiIngame var1, int var2, int var3) {
+		if(InputHandler.mc.objectMouseOver != null && InputHandler.mc.objectMouseOver.typeOfHit == 1 && InputHandler.mc.objectMouseOver.entityHit instanceof EntityPainting) {
+			FontRenderer var4 = this.field_11633_2B86TRZ3P4524vBa1ifZ79TQhjgCR4Gjn6E91P5j9B2xgA7ud1Z8xbt2n5T2.fontRenderer;
+			String var5 = ((EntityPainting)InputHandler.mc.objectMouseOver.entityHit).art.title;
+			int var6 = var4.getStringWidth(var5);
+			GuiIngame.drawGradientRect(var2 / 2 - var6 / 2 - 2, var3 / 4, var2 / 2 + var6 / 2 + 2, var3 / 4 + 13, -1610612736, Integer.MIN_VALUE);
+			var1.drawCenteredString(var4, var5, var2 / 2, var3 / 4 + 2, -1);
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/CubeDeformation.java
@@ -1,0 +1,9 @@
+package net.minecraft.src;
+
+public class CubeDeformation {
+	public float v;
+
+	public CubeDeformation(float var1) {
+		this.v = var1;
+	}
+}
--- net/minecraft/src/NetworkWriterThread.java
+++ net/minecraft/src/NetworkWriterThread.java
@@ -10,33 +10,62 @@
 
 	public void run() {
 		Object var1 = NetworkManager.threadSyncObject;
-		synchronized(var1) {
+		Object var2 = NetworkManager.threadSyncObject;
+		synchronized(var2) {
 			++NetworkManager.numWriteThreads;
 		}
 
+		Object var3;
+		Object var4;
+		boolean var25;
 		while(true) {
-			boolean var11 = false;
+			var25 = false;
+			boolean var18 = false;
 
 			try {
-				var11 = true;
+				var18 = true;
+				var25 = true;
 				if(!NetworkManager.isRunning(this.netManager)) {
-					var11 = false;
+					var25 = false;
+					var18 = false;
 					break;
 				}
 
 				NetworkManager.sendNetworkPacket(this.netManager);
+				var18 = false;
 			} finally {
-				if(var11) {
-					Object var5 = NetworkManager.threadSyncObject;
-					synchronized(var5) {
-						--NetworkManager.numWriteThreads;
+				if(var18) {
+					if(var25) {
+						Object var8 = NetworkManager.threadSyncObject;
+						Object var9 = NetworkManager.threadSyncObject;
+						synchronized(var9) {
+							--NetworkManager.numWriteThreads;
+						}
 					}
-				}
+
+				}
+			}
+
+			if(var25) {
+				var3 = NetworkManager.threadSyncObject;
+				var4 = NetworkManager.threadSyncObject;
+				synchronized(var4) {
+					--NetworkManager.numWriteThreads;
+				}
+			}
+		}
+
+		if(var25) {
+			var3 = NetworkManager.threadSyncObject;
+			var4 = NetworkManager.threadSyncObject;
+			synchronized(var4) {
+				--NetworkManager.numWriteThreads;
 			}
 		}
 
 		var1 = NetworkManager.threadSyncObject;
-		synchronized(var1) {
+		var2 = NetworkManager.threadSyncObject;
+		synchronized(var2) {
 			--NetworkManager.numWriteThreads;
 		}
 	}
--- /dev/null
+++ net/minecraft/src/CommandBlockinfo.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+class CommandBlockinfo extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8593_15BAj0cnMWh93A96NBW4sLmc6g62th9D3veqibo5XF23q770Wk876k3ZkyUw;
+    
+    CommandBlockinfo(final CommandManager abb) {
+        this.field_8593_15BAj0cnMWh93A96NBW4sLmc6g62th9D3veqibo5XF23q770Wk876k3ZkyUw = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (InputHandler.mc.objectMouseOver != null && InputHandler.mc.objectMouseOver.typeOfHit == 0) {
+            InputHandler.mc.ingameGUI.addChatMessage("Block ID: " + InputHandler.mc.theWorld.getBlockId(InputHandler.mc.objectMouseOver.blockX, InputHandler.mc.objectMouseOver.blockY, InputHandler.mc.objectMouseOver.blockZ) + ", [" + InputHandler.mc.objectMouseOver.blockX + "," + InputHandler.mc.objectMouseOver.blockY + "," + InputHandler.mc.objectMouseOver.blockZ + "]");
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/EntitySpear.java
@@ -1,0 +1,225 @@
+package net.minecraft.src;
+
+import java.util.List;
+
+public class EntitySpear extends EntityFirable {
+	private int field_8871_608941W5fgI6s2x32s8TmN8Pqp1I2Z8x71oa6OkR14U4zPPVMF3xC9BIRDlJ = -1;
+	private int field_8868_3DLPx76j5E04a498y1RQW52Sb3Wg9153eA5r9F1bDZL6an48DY98Cwdn70S1 = -1;
+	private int field_8870_5RX6HJLT2GYsMzqLxb3M1549LjHiIlxi2wE5517n5v0Ec6OkK6r429E78WMt = -1;
+	private int field_8866_1z9z7x2ZMfQZ4u4aI84p6401ttI6UZQbti6666e4HgXvOB6X9Hll5JKDq0CI = 0;
+	private boolean field_8865_6hOnHT7l3R5ni9ccNeBDZKIcYZTeR773Q7eO0122TKr0JA0uV2s4uc02H9I9 = false;
+	public int field_8867_7caYZgQ3EvPcFOT813282a37X2sHr0psPvDj99PBcm2588z93rYCkidzv3gI = 0;
+	private EntityLiving field_8869_381h9T83DMXn2q7FfLFLpsu56Aue7Q3y7HNtXH2B8z7vTNQYhiGlkQk8g73Z;
+	private int field_8864_75Z193MxJXUsNy6zH723e2R41h3vr4Oby89XPA8Ui2O00i4LWnS5d0VSTQ8K;
+	private int field_8863_1Gi60KvZi082o3Lb38Af2U73gx1ygjA29DyNiHI67LJL32KByc1z5CQtrA2K = 0;
+
+	public String getTexture() {
+		return "/item/spearprojectile.png";
+	}
+
+	public EntitySpear(World var1) {
+		super(var1);
+		this.setSize(0.5F, 0.5F);
+	}
+
+	public EntitySpear(World var1, EntityLiving var2) {
+		super(var1);
+		this.field_8869_381h9T83DMXn2q7FfLFLpsu56Aue7Q3y7HNtXH2B8z7vTNQYhiGlkQk8g73Z = var2;
+		this.setSize(0.5F, 0.5F);
+		this.setLocationAndAngles(var2.posX, var2.posY, var2.posZ, var2.rotationYaw, var2.rotationPitch);
+		this.posX -= (double)(MathHelper.cos(this.rotationYaw / 180.0F * (float)Math.PI) * 0.16F);
+		this.posY -= (double)0.1F;
+		this.posZ -= (double)(MathHelper.sin(this.rotationYaw / 180.0F * (float)Math.PI) * 0.16F);
+		this.setPosition(this.posX, this.posY, this.posZ);
+		this.yOffset = 0.0F;
+		this.motionX = (double)(-MathHelper.sin(this.rotationYaw / 180.0F * (float)Math.PI) * MathHelper.cos(this.rotationPitch / 180.0F * (float)Math.PI));
+		this.motionZ = (double)(MathHelper.cos(this.rotationYaw / 180.0F * (float)Math.PI) * MathHelper.cos(this.rotationPitch / 180.0F * (float)Math.PI));
+		this.motionY = (double)(-MathHelper.sin(this.rotationPitch / 180.0F * (float)Math.PI));
+		this.func_8862_62fy3xag0c9z7TJjArJC90Lh4QqV7rKpSSg3hIM929UUP4Eg7q57g2p0SP6W(this.motionX, this.motionY, this.motionZ, 3.5F, 1.0F);
+	}
+
+	public void func_8862_62fy3xag0c9z7TJjArJC90Lh4QqV7rKpSSg3hIM929UUP4Eg7q57g2p0SP6W(double var1, double var3, double var5, float var7, float var8) {
+		float var9 = MathHelper.sqrt_double(var1 * var1 + var3 * var3 + var5 * var5);
+		var1 /= (double)var9;
+		var3 /= (double)var9;
+		var5 /= (double)var9;
+		var1 += this.rand.nextGaussian() * (double)0.0075F * (double)var8;
+		var3 += this.rand.nextGaussian() * (double)0.0075F * (double)var8;
+		var5 += this.rand.nextGaussian() * (double)0.0075F * (double)var8;
+		var1 *= (double)var7;
+		var3 *= (double)var7;
+		var5 *= (double)var7;
+		this.motionX = var1;
+		this.motionY = var3;
+		this.motionZ = var5;
+		float var10 = MathHelper.sqrt_double(var1 * var1 + var5 * var5);
+		this.prevRotationYaw = this.rotationYaw = (float)(Math.atan2(var1, var5) * 180.0D / (double)((float)Math.PI));
+		this.prevRotationPitch = this.rotationPitch = (float)(Math.atan2(var3, (double)var10) * 180.0D / (double)((float)Math.PI));
+		this.field_8864_75Z193MxJXUsNy6zH723e2R41h3vr4Oby89XPA8Ui2O00i4LWnS5d0VSTQ8K = 0;
+	}
+
+	public void onUpdate() {
+		super.onUpdate();
+		if(this.field_8867_7caYZgQ3EvPcFOT813282a37X2sHr0psPvDj99PBcm2588z93rYCkidzv3gI > 0) {
+			--this.field_8867_7caYZgQ3EvPcFOT813282a37X2sHr0psPvDj99PBcm2588z93rYCkidzv3gI;
+		}
+
+		if(this.field_8865_6hOnHT7l3R5ni9ccNeBDZKIcYZTeR773Q7eO0122TKr0JA0uV2s4uc02H9I9) {
+			int var1 = this.worldObj.getBlockId(this.field_8871_608941W5fgI6s2x32s8TmN8Pqp1I2Z8x71oa6OkR14U4zPPVMF3xC9BIRDlJ, this.field_8868_3DLPx76j5E04a498y1RQW52Sb3Wg9153eA5r9F1bDZL6an48DY98Cwdn70S1, this.field_8870_5RX6HJLT2GYsMzqLxb3M1549LjHiIlxi2wE5517n5v0Ec6OkK6r429E78WMt);
+			if(var1 == this.field_8866_1z9z7x2ZMfQZ4u4aI84p6401ttI6UZQbti6666e4HgXvOB6X9Hll5JKDq0CI) {
+				++this.field_8864_75Z193MxJXUsNy6zH723e2R41h3vr4Oby89XPA8Ui2O00i4LWnS5d0VSTQ8K;
+				if(this.field_8864_75Z193MxJXUsNy6zH723e2R41h3vr4Oby89XPA8Ui2O00i4LWnS5d0VSTQ8K == 1200) {
+					this.setEntityDead();
+				}
+
+				return;
+			}
+
+			this.field_8865_6hOnHT7l3R5ni9ccNeBDZKIcYZTeR773Q7eO0122TKr0JA0uV2s4uc02H9I9 = false;
+			this.motionX *= (double)(this.rand.nextFloat() * 0.2F);
+			this.motionY *= (double)(this.rand.nextFloat() * 0.2F);
+			this.motionZ *= (double)(this.rand.nextFloat() * 0.2F);
+			this.field_8864_75Z193MxJXUsNy6zH723e2R41h3vr4Oby89XPA8Ui2O00i4LWnS5d0VSTQ8K = 0;
+			this.field_8863_1Gi60KvZi082o3Lb38Af2U73gx1ygjA29DyNiHI67LJL32KByc1z5CQtrA2K = 0;
+		} else {
+			++this.field_8863_1Gi60KvZi082o3Lb38Af2U73gx1ygjA29DyNiHI67LJL32KByc1z5CQtrA2K;
+		}
+
+		Vec3D var15 = Vec3D.createVector(this.posX, this.posY, this.posZ);
+		Vec3D var2 = Vec3D.createVector(this.posX + this.motionX, this.posY + this.motionY, this.posZ + this.motionZ);
+		MovingObjectPosition var3 = this.worldObj.rayTraceBlocks(var15, var2);
+		var15 = Vec3D.createVector(this.posX, this.posY, this.posZ);
+		var2 = Vec3D.createVector(this.posX + this.motionX, this.posY + this.motionY, this.posZ + this.motionZ);
+		if(var3 != null) {
+			var2 = Vec3D.createVector(var3.hitVec.xCoord, var3.hitVec.yCoord, var3.hitVec.zCoord);
+		}
+
+		Entity var4 = null;
+		List var5 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox.addCoord(this.motionX, this.motionY, this.motionZ).expand(1.0D, 1.0D, 1.0D));
+		double var6 = 0.0D;
+
+		float var8;
+		for(int var9 = 0; var9 < var5.size(); ++var9) {
+			Entity var10 = (Entity)var5.get(var9);
+			if(var10.canBeCollidedWith() && (var10 != this.field_8869_381h9T83DMXn2q7FfLFLpsu56Aue7Q3y7HNtXH2B8z7vTNQYhiGlkQk8g73Z || this.field_8863_1Gi60KvZi082o3Lb38Af2U73gx1ygjA29DyNiHI67LJL32KByc1z5CQtrA2K >= 5)) {
+				var8 = 0.3F;
+				AxisAlignedBB var11 = var10.boundingBox.expand((double)var8, (double)var8, (double)var8);
+				MovingObjectPosition var12 = var11.calculateIntercept(var15, var2);
+				if(var12 != null) {
+					double var13 = var15.distanceTo(var12.hitVec);
+					if(var13 < var6 || var6 == 0.0D) {
+						var4 = var10;
+						var6 = var13;
+					}
+				}
+			}
+		}
+
+		if(var4 != null) {
+			var3 = new MovingObjectPosition(var4);
+		}
+
+		float var16;
+		if(var3 != null) {
+			if(var3.entityHit != null) {
+				if(var3.entityHit.attackEntityFrom(this.field_8869_381h9T83DMXn2q7FfLFLpsu56Aue7Q3y7HNtXH2B8z7vTNQYhiGlkQk8g73Z, 4)) {
+					this.worldObj.playSoundAtEntity(this, "random.drr", 1.0F, 1.2F / (this.rand.nextFloat() * 0.2F + 0.9F));
+					this.setEntityDead();
+				} else {
+					this.motionX *= (double)-0.1F;
+					this.motionY *= (double)-0.1F;
+					this.motionZ *= (double)-0.1F;
+					this.rotationYaw += 180.0F;
+					this.prevRotationYaw += 180.0F;
+					this.field_8863_1Gi60KvZi082o3Lb38Af2U73gx1ygjA29DyNiHI67LJL32KByc1z5CQtrA2K = 0;
+				}
+			} else {
+				this.field_8871_608941W5fgI6s2x32s8TmN8Pqp1I2Z8x71oa6OkR14U4zPPVMF3xC9BIRDlJ = var3.blockX;
+				this.field_8868_3DLPx76j5E04a498y1RQW52Sb3Wg9153eA5r9F1bDZL6an48DY98Cwdn70S1 = var3.blockY;
+				this.field_8870_5RX6HJLT2GYsMzqLxb3M1549LjHiIlxi2wE5517n5v0Ec6OkK6r429E78WMt = var3.blockZ;
+				this.field_8866_1z9z7x2ZMfQZ4u4aI84p6401ttI6UZQbti6666e4HgXvOB6X9Hll5JKDq0CI = this.worldObj.getBlockId(this.field_8871_608941W5fgI6s2x32s8TmN8Pqp1I2Z8x71oa6OkR14U4zPPVMF3xC9BIRDlJ, this.field_8868_3DLPx76j5E04a498y1RQW52Sb3Wg9153eA5r9F1bDZL6an48DY98Cwdn70S1, this.field_8870_5RX6HJLT2GYsMzqLxb3M1549LjHiIlxi2wE5517n5v0Ec6OkK6r429E78WMt);
+				this.motionX = (double)((float)(var3.hitVec.xCoord - this.posX));
+				this.motionY = (double)((float)(var3.hitVec.yCoord - this.posY));
+				this.motionZ = (double)((float)(var3.hitVec.zCoord - this.posZ));
+				var16 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionY * this.motionY + this.motionZ * this.motionZ);
+				this.posX -= this.motionX / (double)var16 * (double)0.05F;
+				this.posY -= this.motionY / (double)var16 * (double)0.05F;
+				this.posZ -= this.motionZ / (double)var16 * (double)0.05F;
+				this.worldObj.playSoundAtEntity(this, "random.drr", 1.0F, 1.2F / (this.rand.nextFloat() * 0.2F + 0.9F));
+				this.field_8865_6hOnHT7l3R5ni9ccNeBDZKIcYZTeR773Q7eO0122TKr0JA0uV2s4uc02H9I9 = true;
+				this.field_8867_7caYZgQ3EvPcFOT813282a37X2sHr0psPvDj99PBcm2588z93rYCkidzv3gI = 7;
+			}
+		}
+
+		this.posX += this.motionX;
+		this.posY += this.motionY;
+		this.posZ += this.motionZ;
+		var16 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
+		this.rotationYaw = (float)(Math.atan2(this.motionX, this.motionZ) * 180.0D / (double)((float)Math.PI));
+
+		for(this.rotationPitch = (float)(Math.atan2(this.motionY, (double)var16) * 180.0D / (double)((float)Math.PI)); this.rotationPitch - this.prevRotationPitch < -180.0F; this.prevRotationPitch -= 360.0F) {
+		}
+
+		while(this.rotationPitch - this.prevRotationPitch >= 180.0F) {
+			this.prevRotationPitch += 360.0F;
+		}
+
+		while(this.rotationYaw - this.prevRotationYaw < -180.0F) {
+			this.prevRotationYaw -= 360.0F;
+		}
+
+		while(this.rotationYaw - this.prevRotationYaw >= 180.0F) {
+			this.prevRotationYaw += 360.0F;
+		}
+
+		this.rotationPitch = this.prevRotationPitch + (this.rotationPitch - this.prevRotationPitch) * 0.2F;
+		this.rotationYaw = this.prevRotationYaw + (this.rotationYaw - this.prevRotationYaw) * 0.2F;
+		float var17 = 0.99F;
+		var8 = 0.03F;
+		if(this.handleWaterMovement()) {
+			for(int var18 = 0; var18 < 4; ++var18) {
+				float var19 = 0.25F;
+				this.worldObj.spawnParticle("bubble", this.posX - this.motionX * (double)var19, this.posY - this.motionY * (double)var19, this.posZ - this.motionZ * (double)var19, this.motionX, this.motionY, this.motionZ);
+			}
+
+			var17 = 0.8F;
+		}
+
+		this.motionX *= (double)var17;
+		this.motionY *= (double)var17;
+		this.motionZ *= (double)var17;
+		this.motionY -= (double)var8;
+		this.setPosition(this.posX, this.posY, this.posZ);
+	}
+
+	public void writeEntityToNBT(NBTTagCompound var1) {
+		var1.setShort("xTile", (short)this.field_8871_608941W5fgI6s2x32s8TmN8Pqp1I2Z8x71oa6OkR14U4zPPVMF3xC9BIRDlJ);
+		var1.setShort("yTile", (short)this.field_8868_3DLPx76j5E04a498y1RQW52Sb3Wg9153eA5r9F1bDZL6an48DY98Cwdn70S1);
+		var1.setShort("zTile", (short)this.field_8870_5RX6HJLT2GYsMzqLxb3M1549LjHiIlxi2wE5517n5v0Ec6OkK6r429E78WMt);
+		var1.setByte("inTile", (byte)this.field_8866_1z9z7x2ZMfQZ4u4aI84p6401ttI6UZQbti6666e4HgXvOB6X9Hll5JKDq0CI);
+		var1.setByte("shake", (byte)this.field_8867_7caYZgQ3EvPcFOT813282a37X2sHr0psPvDj99PBcm2588z93rYCkidzv3gI);
+		var1.setByte("inGround", (byte)(this.field_8865_6hOnHT7l3R5ni9ccNeBDZKIcYZTeR773Q7eO0122TKr0JA0uV2s4uc02H9I9 ? 1 : 0));
+	}
+
+	public void readEntityFromNBT(NBTTagCompound var1) {
+		this.field_8871_608941W5fgI6s2x32s8TmN8Pqp1I2Z8x71oa6OkR14U4zPPVMF3xC9BIRDlJ = var1.getShort("xTile");
+		this.field_8868_3DLPx76j5E04a498y1RQW52Sb3Wg9153eA5r9F1bDZL6an48DY98Cwdn70S1 = var1.getShort("yTile");
+		this.field_8870_5RX6HJLT2GYsMzqLxb3M1549LjHiIlxi2wE5517n5v0Ec6OkK6r429E78WMt = var1.getShort("zTile");
+		this.field_8866_1z9z7x2ZMfQZ4u4aI84p6401ttI6UZQbti6666e4HgXvOB6X9Hll5JKDq0CI = var1.getByte("inTile") & 255;
+		this.field_8867_7caYZgQ3EvPcFOT813282a37X2sHr0psPvDj99PBcm2588z93rYCkidzv3gI = var1.getByte("shake") & 255;
+		this.field_8865_6hOnHT7l3R5ni9ccNeBDZKIcYZTeR773Q7eO0122TKr0JA0uV2s4uc02H9I9 = var1.getByte("inGround") == 1;
+	}
+
+	public void onCollideWithPlayer(EntityPlayer var1) {
+		if(this.field_8865_6hOnHT7l3R5ni9ccNeBDZKIcYZTeR773Q7eO0122TKr0JA0uV2s4uc02H9I9 && this.field_8869_381h9T83DMXn2q7FfLFLpsu56Aue7Q3y7HNtXH2B8z7vTNQYhiGlkQk8g73Z == var1 && this.field_8867_7caYZgQ3EvPcFOT813282a37X2sHr0psPvDj99PBcm2588z93rYCkidzv3gI <= 0 && var1.inventory.addItemStackToInventory(new ItemStack(ExtItems.Spear.shiftedIndex, 1))) {
+			this.worldObj.playSoundAtEntity(this, "random.pop", 0.2F, ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.7F + 1.0F) * 2.0F);
+			var1.onItemPickup(this, 1);
+			this.setEntityDead();
+		}
+
+	}
+
+	public float getShadowSize() {
+		return 0.0F;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BiomeUnknownClass.java
@@ -1,0 +1,75 @@
+package net.minecraft.src;
+
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.Map.Entry;
+
+public class BiomeUnknownClass implements BiomeInterface {
+	private final HashMap<WorldGenHouseSmallUnknownClass2, float[]> field_10189_0jQxZ1dVC518Y32Z1425p2LEer8Ex9wWwb3RWTp79I88VOPE42N1kQ516HmO = new HashMap();
+
+	public void func_10188_7w1lB4c92lMJbh1WTsqK8RWVdY460iP4FuXe5pstl82DxM6koOm8O527VIZ9(WorldGenHouseSmallUnknownClass2 var1, float[] var2) {
+		if(var2.length != 1536) {
+			throw new IllegalArgumentException("Invalid biome map");
+		} else {
+			this.field_10189_0jQxZ1dVC518Y32Z1425p2LEer8Ex9wWwb3RWTp79I88VOPE42N1kQ516HmO.put(var1, var2);
+		}
+	}
+
+	public void func_10187_3AndXWge0Me8Q040iwfs6eu0O3Y09uh0xQI51Sv3WSs5ZG8n7t4xbP8BL96U(WorldGenHouseSmallUnknownClass2 var1) {
+		this.field_10189_0jQxZ1dVC518Y32Z1425p2LEer8Ex9wWwb3RWTp79I88VOPE42N1kQ516HmO.remove(var1);
+	}
+
+	public double func_10184_39mJVmq3bl4dbH51995p9tocRB43bFXruO32GkxVTy54fzIxdy5dt9OeTC2A(int var1, int var2, EnumWorldGenerator var3) {
+		int var4 = var1 % 16;
+		if(var4 < 0) {
+			var4 += 15;
+		}
+
+		int var5 = var2 % 16;
+		if(var5 < 0) {
+			var5 += 15;
+		}
+
+		Iterator var6 = this.field_10189_0jQxZ1dVC518Y32Z1425p2LEer8Ex9wWwb3RWTp79I88VOPE42N1kQ516HmO.entrySet().iterator();
+
+		Entry var7;
+		do {
+			if(!var6.hasNext()) {
+				return 0.0D;
+			}
+
+			var7 = (Entry)var6.next();
+		} while(((WorldGenHouseSmallUnknownClass2)var7.getKey()).field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM != var1 / 16 || ((WorldGenHouseSmallUnknownClass2)var7.getKey()).field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 != var2 / 16);
+
+		return (double)((float[])var7.getValue())[var3.ordinal() * 16 * 16 * 2 + var4 * 2 + var5 * 16 * 2];
+	}
+
+	public double func_10186_4hoZRS129yUan88AHp1ksCfja1h93mYKfFda82Qtd8pqKm7G4bgpnYsijiMu(int var1, int var2, EnumWorldGenerator var3) {
+		int var4 = var1 % 16;
+		if(var4 < 0) {
+			var4 += 16;
+		}
+
+		int var5 = var2 % 16;
+		if(var5 < 0) {
+			var5 += 16;
+		}
+
+		Iterator var6 = this.field_10189_0jQxZ1dVC518Y32Z1425p2LEer8Ex9wWwb3RWTp79I88VOPE42N1kQ516HmO.entrySet().iterator();
+
+		Entry var7;
+		do {
+			if(!var6.hasNext()) {
+				return 0.0D;
+			}
+
+			var7 = (Entry)var6.next();
+		} while(((WorldGenHouseSmallUnknownClass2)var7.getKey()).field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM != var1 / 16 || ((WorldGenHouseSmallUnknownClass2)var7.getKey()).field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 != var2 / 16);
+
+		return (double)((float[])var7.getValue())[var3.ordinal() * 16 * 16 * 2 + var4 * 2 + var5 * 16 * 2 + 1];
+	}
+
+	public WorldGenMyconUnknownClass func_10185_7j1lR4019pucW00n7wn38afjBd62vEMB6B6SVB9068f4kyPzw4E6wI65ufr8(int var1, int var2, EnumWorldGenerator var3) {
+		return WorldGenMyconUnknownClass.func_9978_2dCM22Pc7rV0IQo46JM3ja84x9AHCGNPeSCDVFoTi3969B8hv2sM7nr6o61r(this.func_10184_39mJVmq3bl4dbH51995p9tocRB43bFXruO32GkxVTy54fzIxdy5dt9OeTC2A(var1, var2, var3), this.func_10186_4hoZRS129yUan88AHp1ksCfja1h93mYKfFda82Qtd8pqKm7G4bgpnYsijiMu(var1, var2, var3), var3);
+	}
+}
--- net/minecraft/src/Vec3D.java
+++ net/minecraft/src/Vec3D.java
@@ -4,7 +4,7 @@
 import java.util.List;
 
 public class Vec3D {
-	private static List vectorList = new ArrayList();
+	private static List<Vec3D> vectorList = new ArrayList();
 	private static int nextVector = 0;
 	public double xCoord;
 	public double yCoord;
--- net/minecraft/src/RenderTNTPrimed.java
+++ net/minecraft/src/RenderTNTPrimed.java
@@ -30,7 +30,7 @@
 		}
 
 		var10 = (1.0F - ((float)var1.fuse - var9 + 1.0F) / 100.0F) * 0.8F;
-		this.loadTexture("/terrain.png");
+		this.loadTexture(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9796_62Ccm2XAR6JqSDTgV762x61j971DNgsIrMhaXZxPs0fQnBC7ymR2l1v1V22X));
 		this.blockRenderer.renderBlockOnInventory(Block.tnt);
 		if(var1.fuse / 5 % 2 == 0) {
 			GL11.glDisable(GL11.GL_TEXTURE_2D);
--- /dev/null
+++ net/minecraft/src/Packet70PlayGlobalMusic.java
@@ -1,0 +1,32 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+
+public class Packet70PlayGlobalMusic extends Packet {
+	public String audioName = "";
+
+	public Packet70PlayGlobalMusic() {
+	}
+
+	public Packet70PlayGlobalMusic(String var1) {
+		this.audioName = var1;
+	}
+
+	public void readPacketData(DataInputStream var1) throws IOException {
+		this.audioName = var1.readUTF();
+	}
+
+	public void writePacket(DataOutputStream var1) throws IOException {
+		var1.writeUTF(this.audioName);
+	}
+
+	public void processPacket(NetHandler var1) {
+		InputHandler.mc.sndManager.playMusic(this.audioName);
+	}
+
+	public int getPacketSize() {
+		return this.audioName.length() + 2;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockSafe.java
@@ -1,0 +1,15 @@
+package net.minecraft.src;
+
+public class BlockSafe extends BlockMultiSided {
+	public BlockSafe(int var1, int var2, int var3, int var4) {
+		super(var1, var2, var3, var4);
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		ItemStack var6 = var5.inventory.getCurrentItem();
+		if(var6 == null) {
+		}
+
+		return true;
+	}
+}
--- net/minecraft/src/Packet16BlockItemSwitch.java
+++ net/minecraft/src/Packet16BlockItemSwitch.java
@@ -18,7 +18,7 @@
 
 	public void readPacketData(DataInputStream var1) throws IOException {
 		this.entityId = var1.readInt();
-		this.id = var1.readShort();
+		this.id = var1.readShort() & '\uffff';
 	}
 
 	public void writePacket(DataOutputStream var1) throws IOException {
--- /dev/null
+++ net/minecraft/src/TextureFireFX.java
@@ -1,0 +1,81 @@
+package net.minecraft.src;
+
+public class TextureFireFX extends TextureFX {
+	protected float[] field_10724_1svNgOD7VwC79ql8Ab9UzfF8D46rA021y0ms1p8xU9T5zY3xw9ZpMO1y5l2o = new float[320];
+	protected float[] field_10723_9DRBfXVt5K7W37u6Ajl7cm67r78YQjAQ195BIs46746AC6b61UCABL0oy6eh = new float[320];
+
+	public TextureFireFX(int var1) {
+		super(Block.fire.blockIndexInTexture + var1 * 16);
+	}
+
+	public void onTick() {
+		if(InputHandler.mc.options.fancyGraphics != 2 || this.field_10713_88024hG6da4f4kcVfOqR8cTJ36RtCs13wB6V30Rs17vqAj14F4Cqz3neFg20) {
+			this.field_10713_88024hG6da4f4kcVfOqR8cTJ36RtCs13wB6V30Rs17vqAj14F4Cqz3neFg20 = false;
+
+			int var1;
+			float var2;
+			int var3;
+			int var4;
+			for(int var5 = 0; var5 < 16; ++var5) {
+				for(var1 = 0; var1 < 20; ++var1) {
+					int var6 = 18;
+					var2 = this.field_10724_1svNgOD7VwC79ql8Ab9UzfF8D46rA021y0ms1p8xU9T5zY3xw9ZpMO1y5l2o[var5 + (var1 + 1) % 20 * 16] * (float)var6;
+
+					for(var3 = var5 - 1; var3 <= var5 + 1; ++var3) {
+						for(var4 = var1; var4 <= var1 + 1; ++var4) {
+							if(var3 >= 0 && var4 >= 0 && var3 < 16 && var4 < 20) {
+								var2 += this.field_10724_1svNgOD7VwC79ql8Ab9UzfF8D46rA021y0ms1p8xU9T5zY3xw9ZpMO1y5l2o[var3 + var4 * 16];
+							}
+
+							++var6;
+						}
+					}
+
+					this.field_10723_9DRBfXVt5K7W37u6Ajl7cm67r78YQjAQ195BIs46746AC6b61UCABL0oy6eh[var5 + var1 * 16] = var2 / ((float)var6 * 1.06F);
+					if(var1 >= 19) {
+						this.field_10723_9DRBfXVt5K7W37u6Ajl7cm67r78YQjAQ195BIs46746AC6b61UCABL0oy6eh[var5 + var1 * 16] = (float)(Math.random() * Math.random() * Math.random() * 4.0D + Math.random() * (double)0.1F + (double)0.2F);
+					}
+				}
+			}
+
+			float[] var12 = this.field_10723_9DRBfXVt5K7W37u6Ajl7cm67r78YQjAQ195BIs46746AC6b61UCABL0oy6eh;
+			this.field_10723_9DRBfXVt5K7W37u6Ajl7cm67r78YQjAQ195BIs46746AC6b61UCABL0oy6eh = this.field_10724_1svNgOD7VwC79ql8Ab9UzfF8D46rA021y0ms1p8xU9T5zY3xw9ZpMO1y5l2o;
+			this.field_10724_1svNgOD7VwC79ql8Ab9UzfF8D46rA021y0ms1p8xU9T5zY3xw9ZpMO1y5l2o = var12;
+
+			for(var1 = 0; var1 < 256; ++var1) {
+				float var13 = this.field_10724_1svNgOD7VwC79ql8Ab9UzfF8D46rA021y0ms1p8xU9T5zY3xw9ZpMO1y5l2o[var1] * 1.8F;
+				if(var13 > 1.0F) {
+					var13 = 1.0F;
+				}
+
+				if(var13 < 0.0F) {
+					var13 = 0.0F;
+				}
+
+				var3 = (int)(10.0F * var13 + 75.0F);
+				var4 = (int)(5.0F * var13 * 225.0F);
+				int var7 = (int)(var13 * var13 * var13 * var13 * var13 * var13 * var13 * var13 * var13 * var13 * 255.0F);
+				short var8 = 255;
+				if(var13 < 0.5F) {
+					var8 = 0;
+				}
+
+				var2 = (var13 - 0.5F) * 2.0F;
+				if(this.anaglyphEnabled) {
+					int var9 = (var3 * 30 + var4 * 59 + var7 * 11) / 100;
+					int var10 = (var3 * 30 + var4 * 70) / 100;
+					int var11 = (var3 * 30 + var7 * 70) / 100;
+					var3 = var9;
+					var4 = var10;
+					var7 = var11;
+				}
+
+				this.imageData[var1 * 4 + 0] = (byte)var3;
+				this.imageData[var1 * 4 + 1] = (byte)var4;
+				this.imageData[var1 * 4 + 2] = (byte)var7;
+				this.imageData[var1 * 4 + 3] = (byte)var8;
+			}
+
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/HubServerDetector.java
@@ -1,0 +1,53 @@
+package net.minecraft.src;
+
+import java.io.IOException;
+import java.net.DatagramPacket;
+import java.net.InetAddress;
+import java.net.MulticastSocket;
+import java.net.SocketTimeoutException;
+import java.util.logging.Level;
+
+public class HubServerDetector extends Thread {
+	private final HubNetworkUnknownClass field_10570_5K3sbQn5X6ulj0GQ3fhSzWEJld90E9S4eChV16qYUBMZ26x064s1ny2w4eON;
+	private final InetAddress field_10569_5u8aht315N4kaG3o8hr41398KCm7udkU1m2nMTx4Qod98ZFnoF9V7Xr880gb;
+	private final MulticastSocket field_10568_9TIT1Oh03A2XA7jeuG3SzugWFnrI2oc818408ineX5q2lnc58swhho8Ca7m8;
+	private static final String field_10571_9Mny94npF0LbWrJ2fye1flUmV44PK9522l2S4ypZod7UyPxBvo30U6LTUkRW = "CL_00001135";
+
+	public HubServerDetector(HubNetworkUnknownClass var1) throws IOException {
+		super("LanServerDetector #" + HubServerDetectorUnknownClass.func_12078_8095QTr6V051pTOyEln290S3uDK3v65566PUXfys595pR5uPyLtaonH4p9jn().incrementAndGet());
+		this.field_10570_5K3sbQn5X6ulj0GQ3fhSzWEJld90E9S4eChV16qYUBMZ26x064s1ny2w4eON = var1;
+		this.setDaemon(true);
+		this.field_10568_9TIT1Oh03A2XA7jeuG3SzugWFnrI2oc818408ineX5q2lnc58swhho8Ca7m8 = new MulticastSocket(4445);
+		this.field_10569_5u8aht315N4kaG3o8hr41398KCm7udkU1m2nMTx4Qod98ZFnoF9V7Xr880gb = InetAddress.getByName("224.0.2.60");
+		this.field_10568_9TIT1Oh03A2XA7jeuG3SzugWFnrI2oc818408ineX5q2lnc58swhho8Ca7m8.setSoTimeout(5000);
+		this.field_10568_9TIT1Oh03A2XA7jeuG3SzugWFnrI2oc818408ineX5q2lnc58swhho8Ca7m8.joinGroup(this.field_10569_5u8aht315N4kaG3o8hr41398KCm7udkU1m2nMTx4Qod98ZFnoF9V7Xr880gb);
+	}
+
+	public void run() {
+		byte[] var1 = new byte[1024];
+
+		while(!this.isInterrupted()) {
+			DatagramPacket var2 = new DatagramPacket(var1, var1.length);
+
+			try {
+				this.field_10568_9TIT1Oh03A2XA7jeuG3SzugWFnrI2oc818408ineX5q2lnc58swhho8Ca7m8.receive(var2);
+			} catch (SocketTimeoutException var5) {
+				continue;
+			} catch (IOException var6) {
+				HubServerDetectorUnknownClass.func_12077_9aCES4xVN044Nl6kBDM97r4haJIM3J7NY0D1z5IeNMU9oucd80P32kO8d8h5().log(Level.SEVERE, "Couldn\'t ping server", var6);
+				break;
+			}
+
+			String var3 = new String(var2.getData(), var2.getOffset(), var2.getLength());
+			HubServerDetectorUnknownClass.func_12077_9aCES4xVN044Nl6kBDM97r4haJIM3J7NY0D1z5IeNMU9oucd80P32kO8d8h5().log(Level.FINEST, var2.getAddress() + ": " + var3);
+			this.field_10570_5K3sbQn5X6ulj0GQ3fhSzWEJld90E9S4eChV16qYUBMZ26x064s1ny2w4eON.func_11076_6JWlo5oTbj6698u3MxWj43m8jjLW826DJsk9l6DW0z4oK6cxa991XuVMtgSV(var3, var2.getAddress());
+		}
+
+		try {
+			this.field_10568_9TIT1Oh03A2XA7jeuG3SzugWFnrI2oc818408ineX5q2lnc58swhho8Ca7m8.leaveGroup(this.field_10569_5u8aht315N4kaG3o8hr41398KCm7udkU1m2nMTx4Qod98ZFnoF9V7Xr880gb);
+		} catch (IOException var4) {
+		}
+
+		this.field_10568_9TIT1Oh03A2XA7jeuG3SzugWFnrI2oc818408ineX5q2lnc58swhho8Ca7m8.close();
+	}
+}
--- /dev/null
+++ net/minecraft/src/GenLowRiver.java
@@ -1,0 +1,71 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class GenLowRiver extends WorldGenerator {
+	private int a;
+	int chunkBeginX;
+	int chunkBeginZ;
+	int chCoordX;
+	int chCoordZ;
+	Random rng;
+
+	public GenLowRiver(int var1, int var2, int var3) {
+		this.a = var1;
+		this.chunkBeginX = var2;
+		this.chunkBeginZ = var3;
+		this.chCoordX = var2 / 16;
+		this.chCoordZ = var3 / 16;
+	}
+
+	public void DigSphere(World var1, int var2, int var3, int var4, int var5) {
+		if(var5 != 0) {
+			for(int var6 = -var5; var6 <= var5; ++var6) {
+				for(int var7 = -var5; var7 <= var5; ++var7) {
+					for(int var8 = -var5; var8 <= var5; ++var8) {
+						if(var6 * var6 + var7 * var7 + var8 * var8 <= var5 * var5 && (var2 + var6) / 16 - (this.chCoordX < 0 ? 1 : 0) == this.chCoordX && (var4 + var8) / 16 - (this.chCoordZ < 0 ? 1 : 0) == this.chCoordZ && var3 + var7 >= 1 && var1.getBlockId(var2 + var6, var3 + var7, var4 + var8) != ExtBlocks.LowGlowingFlower.blockID) {
+							boolean var9 = var1.getBlockId(var2 + var6, var3 + var7, var4 + var8) != Block.bedrock.blockID;
+							if(var3 + var7 > 3 || var9 || !var9 && this.rng.nextInt(4) < 3) {
+								if(var3 + var7 > 3) {
+									var1.setBlock(var2 + var6, var3 + var7, var4 + var8, 0);
+								} else {
+									var1.setBlock(var2 + var6, var3 + var7, var4 + var8, Block.waterStill.blockID);
+
+									for(int var10 = -1; var10 <= 1; ++var10) {
+										for(int var11 = -1; var11 <= 1; ++var11) {
+											for(int var12 = -1; var12 <= 1; ++var12) {
+												if(var1.getBlockId(var2 + var6 + var10, var3 + var7 + var12, var4 + var8 + var11) == Block.stone.blockID) {
+													var1.setBlock(var2 + var6 + var10, var3 + var7 + var12, var4 + var8 + var11, ExtBlocks.LowRiverbed.blockID);
+												} else if(var1.getBlockId(var2 + var6 + var10, var3 + var7 + var12, var4 + var8 + var11) == Block.dirt.blockID) {
+													var1.setBlock(var2 + var6 + var10, var3 + var7 + var12, var4 + var8 + var11, ExtBlocks.LowGlowingBlock.blockID);
+												}
+											}
+										}
+									}
+
+									if(var3 + var7 == 3 && this.rng.nextInt(80) == 0) {
+										var1.setBlock(var2 + var6, var3 + var7 + 1, var4 + var8, ExtBlocks.LowGlowingFlower.blockID);
+									}
+								}
+							}
+						}
+					}
+				}
+			}
+
+		}
+	}
+
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		this.rng = var2;
+		if(var4 < 10) {
+			try {
+				this.DigSphere(var1, var3, var4, var5, this.a);
+			} catch (StackOverflowError var7) {
+				System.out.println("StackOverflowError at " + var3 + " " + var4 + " " + var5 + ", " + this.a);
+			}
+		}
+
+		return true;
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandManager.java
@@ -1,0 +1,944 @@
+package net.minecraft.src;
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileReader;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import net.minecraft.client.Minecraft;
+import org.lwjgl.LWJGLException;
+import org.lwjgl.opengl.Display;
+
+public class CommandManager {
+	public ArrayList<CommandManagerUnknownClass> field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf = new ArrayList();
+	public String field_12074_59H713eWwMqHt2BkXfmtU7Gw1Ed2yJ84RRj5r8Os9hXCRrICXE2XfeV2i7Jm = "";
+	public HashMap<Integer, String> field_12072_57Pslv03tR1GVO6rfR7Myg6SJ9Dfi77KWF699D8Zy703Dh2cM61HfFA0VmYd = new HashMap();
+	boolean field_12071_8Mn4tj13vIyC6B4sKvgNU753iaUwsGLVW462dSPrK3Q6u34DDVgN8g4gP3Sg = false;
+	boolean field_12075_28FdWuxC13fShF99oFUZRa9Zk8Ur8d7gsfw157Cj6qaqjdwi8sD2yQP7IySf = true;
+
+	public CommandManager() {
+		this.func_12060_2N8lggB3Ex84Toh6NAyZR3Jnms86ir0MO35KZ66K1G6RzeQubR99KXYq62k0();
+		this.func_12068_4rc9DN1jWH38BaKK48Mt6971xRupd1bIwtx41dL4x6s0W0LFEFHHipCs5mmI();
+		this.func_12070_5fc36Njx84NPQ80UYRTm0H3y3FdowxJygPG7D9Ooyv63oOGKn8xN4A8U7pN9();
+	}
+
+	public void func_12068_4rc9DN1jWH38BaKK48Mt6971xRupd1bIwtx41dL4x6s0W0LFEFHHipCs5mmI() {
+		this.field_12072_57Pslv03tR1GVO6rfR7Myg6SJ9Dfi77KWF699D8Zy703Dh2cM61HfFA0VmYd.put(Integer.valueOf(53), "blockinfo");
+		this.field_12072_57Pslv03tR1GVO6rfR7Myg6SJ9Dfi77KWF699D8Zy703Dh2cM61HfFA0VmYd.put(Integer.valueOf(51), "+worldedit_setpos1");
+		this.field_12072_57Pslv03tR1GVO6rfR7Myg6SJ9Dfi77KWF699D8Zy703Dh2cM61HfFA0VmYd.put(Integer.valueOf(52), "+worldedit_setpos2");
+		this.field_12072_57Pslv03tR1GVO6rfR7Myg6SJ9Dfi77KWF699D8Zy703Dh2cM61HfFA0VmYd.put(Integer.valueOf(47), "+mc_creatmenu");
+	}
+
+	public void func_12070_5fc36Njx84NPQ80UYRTm0H3y3FdowxJygPG7D9Ooyv63oOGKn8xN4A8U7pN9() {
+		File var1 = new File(Minecraft.getMinecraftDir() + "/autoexec.cfg");
+		if(var1.exists()) {
+			try {
+				BufferedReader var2 = new BufferedReader(new FileReader(var1));
+
+				try {
+					while(true) {
+						String var3 = var2.readLine();
+						if(var3 == null) {
+							break;
+						}
+
+						try {
+							this.func_12062_0t842hU0v5526eutHbG997y2Nv04t2F2gXt64U0tN25Eoja8W099icp26853(var3);
+						} catch (Exception var6) {
+							ExtLogger.w("TCON Exception: " + var6.getMessage());
+						}
+					}
+				} catch (Throwable var7) {
+					try {
+						var2.close();
+					} catch (Throwable var5) {
+						var7.addSuppressed(var5);
+					}
+
+					throw var7;
+				}
+
+				var2.close();
+			} catch (IOException var8) {
+			}
+		}
+
+		this.field_12075_28FdWuxC13fShF99oFUZRa9Zk8Ur8d7gsfw157Cj6qaqjdwi8sD2yQP7IySf = false;
+	}
+
+	public void func_12063_192DBW3rWeWbZy26TpK5rt1Ak36TmR6Dn90BSf6Z5oNr7Q5wXRqyph3fgy8S(int var1) {
+		if(this.field_12072_57Pslv03tR1GVO6rfR7Myg6SJ9Dfi77KWF699D8Zy703Dh2cM61HfFA0VmYd.containsKey(Integer.valueOf(var1))) {
+			try {
+				this.func_12062_0t842hU0v5526eutHbG997y2Nv04t2F2gXt64U0tN25Eoja8W099icp26853((String)this.field_12072_57Pslv03tR1GVO6rfR7Myg6SJ9Dfi77KWF699D8Zy703Dh2cM61HfFA0VmYd.get(Integer.valueOf(var1)));
+			} catch (Exception var3) {
+			}
+		}
+
+	}
+
+	public void func_12060_2N8lggB3Ex84Toh6NAyZR3Jnms86ir0MO35KZ66K1G6RzeQubR99KXYq62k0() {
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("bind", new Class[]{Integer.class, String.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				CommandManager.this.field_12072_57Pslv03tR1GVO6rfR7Myg6SJ9Dfi77KWF699D8Zy703Dh2cM61HfFA0VmYd.put(Integer.valueOf(((Integer)var1[0]).intValue()), (String)var1[1]);
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("unbind", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(CommandManager.this.field_12072_57Pslv03tR1GVO6rfR7Myg6SJ9Dfi77KWF699D8Zy703Dh2cM61HfFA0VmYd.containsKey(Integer.valueOf(((Integer)var1[0]).intValue()))) {
+					CommandManager.this.field_12072_57Pslv03tR1GVO6rfR7Myg6SJ9Dfi77KWF699D8Zy703Dh2cM61HfFA0VmYd.remove(Integer.valueOf(((Integer)var1[0]).intValue()));
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("con_refresh", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				CommandManager.this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.clear();
+				CommandManager.this.func_12060_2N8lggB3Ex84Toh6NAyZR3Jnms86ir0MO35KZ66K1G6RzeQubR99KXYq62k0();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("name", new Class[]{String.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.session.username = (String)var1[0];
+				InputHandler.mc.func_7251_0aCQ3QUtAn82t0f1z3JQKRAg5aNB155g64AWf0ztqf7j603OA1tsJsAwlFrq();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return InputHandler.mc.session.username;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("gpu", new Class[]{String.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.field_7289_3R5t255Q5D6KY19uD068Mkk1B6OU9sWGPdWh8cCMUgE3jA5I39fu26h80483 = (String)var1[0];
+				InputHandler.mc.func_7251_0aCQ3QUtAn82t0f1z3JQKRAg5aNB155g64AWf0ztqf7j603OA1tsJsAwlFrq();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return InputHandler.mc.func_7236_2E4BZaw4wUzRdqs6H26gijBXYV2x4keaA5V5idykFk39ETvee94J18B7nBcD();
+			}
+
+			public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+				return false;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("perfclass", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				Minecraft.field_7277_2ap75bw7uWpJs9xa2VRa8p40l51ptv8B02tkt5OcOFM8BeYBB08G54gDjTCY = ((Integer)var1[0]).intValue();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return Minecraft.field_7277_2ap75bw7uWpJs9xa2VRa8p40l51ptv8B02tkt5OcOFM8BeYBB08G54gDjTCY + "";
+			}
+
+			public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+				return false;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("title+", new Class[]{String.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.func_7248_2y5vE7Yn817r5Knu79o4Aj1C8zSXCZv983MY0Ng8eMzo5U95JWt5FIuSSHqv((String)var1[0]);
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("connect", new Class[]{String.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("disconnect", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(InputHandler.mc.theWorld != null) {
+					if(InputHandler.mc.isMultiplayerWorld()) {
+						InputHandler.mc.theWorld.sendQuittingDisconnectingPacket();
+					}
+
+					InputHandler.mc.changeWorld1((World)null);
+					InputHandler.mc.displayGuiScreen(new GuiMainMenu());
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("map", new Class[]{String.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.displayGuiScreen((GuiScreen)null);
+				InputHandler.mc.playerController = new PlayerControllerSP(InputHandler.mc);
+				InputHandler.mc.startWorld((String)var1[0]);
+				InputHandler.mc.displayGuiScreen((GuiScreen)null);
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("mc_minimap", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.InputOpenMinimap();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("mc_redl", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				try {
+					ThreadDownloadResources.finished = false;
+					InputHandler.mc.downloadResourcesThread = new ThreadDownloadResources(InputHandler.mc.mcDataDir, InputHandler.mc);
+					InputHandler.mc.downloadResourcesThread.start();
+				} catch (Exception var3) {
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("mc_viewbarrier", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				try {
+					((BlockHidable)ExtBlocks.BarrierBlock).render = ((Integer)var1[0]).intValue() == 1;
+				} catch (Exception var3) {
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return ((BlockHidable)ExtBlocks.BarrierBlock).render ? "1" : "0";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("mc_termconn", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				ScreenDebugMenu.field_7955_2x00ovR61G2n6Zj5nN9jd9FAdV8H3Cz32KtPOCpcvM363cbIQ5o5vSMN7x7B = ((Integer)var1[0]).intValue() == 1;
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "" + (ScreenDebugMenu.field_7955_2x00ovR61G2n6Zj5nN9jd9FAdV8H3Cz32KtPOCpcvM363cbIQ5o5vSMN7x7B ? 1 : 0);
+			}
+
+			public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+				return false;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("mc_diff", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.options.difficulty = ((Integer)var1[0]).intValue();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "" + InputHandler.mc.options.difficulty;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("mc_creat", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.field_9759_4OT0vPMcJ68s5EU822c0Y9Asw74Su111s3rRCw8OSGMsYM8lx153p73RBtj3 = ((Integer)var1[0]).intValue() == 1;
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "" + InputHandler.field_9759_4OT0vPMcJ68s5EU822c0Y9Asw74Su111s3rRCw8OSGMsYM8lx153p73RBtj3;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("mc_winterlevel", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.theWorld.snowCovered = ((Integer)var1[0]).intValue() == 1;
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return InputHandler.mc.theWorld.snowCovered ? "1" : "0";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("mc_sandlevel", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.theWorld.sandCovered = ((Integer)var1[0]).intValue() == 1;
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return InputHandler.mc.theWorld.sandCovered ? "1" : "0";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("mc_renderdistance", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.options.renderDistance = Math.max(Math.min(((Integer)var1[0]).intValue(), 5), 0);
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "" + InputHandler.mc.options.renderDistance;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("mc_posthint", new Class[]{Integer.class, String.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw((String)var1[1], ((Integer)var1[0]).intValue());
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("mc_playmus", new Class[]{String.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.sndManager.playMusic((String)var1[0]);
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("pass", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				int var2 = ((Integer)var1[0]).intValue();
+				switch(var2) {
+				case 1:
+					InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("Welcome back, dear friend", 10000);
+					break;
+				case 7:
+					InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("Is the number", 10000);
+					break;
+				case 9:
+					InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("Wrong place, Raven.", 10000);
+					break;
+				case 77:
+					InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("You won\'t find the candles here", 10000);
+					break;
+				case 1604:
+					InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("3:8jWBk36GiUr3dV9dB8n6a47594GNQ4AHz1V3p5660O75oGy93l89Yu4vDhCgfMahmA67q60z01Nu3vgS", 10000);
+					break;
+				case 1605:
+					InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("I guess this can be called an easter egg.\nThis was our first foray into working with a somewhat popular property\nThe prior branches, they were cut just because they weren\'t high enough quality\nor too drastic a change.\nThe workflow was surely quite different, But i can\'t really complain\nI\'m glad this branch is as is.\nIt was our magnum opus.", 10000);
+					break;
+				case 1986:
+					InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("It\'s dangerous to go alone!", 10000);
+					break;
+				case 1993:
+					InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("Lamp Oil? Rope? Bombs? We don\'t have that.", 10000);
+					break;
+				case 2011:
+					InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("Wrong password screen, Zachary", 10000);
+					break;
+				case 810116:
+					InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("Help what with?", 10000);
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("mc_gencitysize", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				WorldGenHouseSmall.field_9665_9HHBzQ2wG84LFbc45tMzL7mAlvvdO1k855mGGSfk3FfJP80LupQs710X4K6J = Math.max(((Integer)var1[0]).intValue(), 0);
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "" + WorldGenHouseSmall.field_9665_9HHBzQ2wG84LFbc45tMzL7mAlvvdO1k855mGGSfk3FfJP80LupQs710X4K6J;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("+mc_creatmenu", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.func_9723_0s53bwug7AIh7wok927NkfC491OTVIE9w7Ze8dTW9h9VOaC74c60EkiUo90l();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("cg_fovmod", new Class[]{Float.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.options.fovModifier = ((Float)var1[0]).floatValue();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "" + InputHandler.mc.options.fovModifier;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("sv_cheats", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				ScreenDebugMenu.dbg_conf_enableCheats = ((Integer)var1[0]).intValue() != 0;
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return ScreenDebugMenu.dbg_conf_enableCheats ? "1" : "0";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("sv_leveltime", new Class[]{Long.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(ScreenDebugMenu.dbg_conf_enableCheats) {
+					InputHandler.mc.theWorld.worldTime = ((Long)var1[0]).longValue();
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "" + InputHandler.mc.theWorld.worldTime;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("sv_rainworld", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(ScreenDebugMenu.dbg_conf_enableCheats) {
+					InputHandler.mc.isRaining = ((Integer)var1[0]).intValue() == 1;
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "" + InputHandler.mc.isRaining;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("sv_allowrnet", new Class[]{Long.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(InputHandler.mc.thePlayer.rand.nextBoolean()) {
+					ScreenDebugMenu.dbg_conf_spawnShadowPlayers = !ScreenDebugMenu.dbg_conf_spawnShadowPlayers;
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return ScreenDebugMenu.dbg_conf_spawnShadowPlayers ? "1" : "0";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("fly", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(ScreenDebugMenu.dbg_conf_enableCheats) {
+					ScreenDebugMenu.dbg_conf_fly = !ScreenDebugMenu.dbg_conf_fly;
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return ScreenDebugMenu.dbg_conf_fly ? "1" : "0";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("noclip", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(ScreenDebugMenu.dbg_conf_enableCheats) {
+					InputHandler.mc.thePlayer.noClip = !InputHandler.mc.thePlayer.noClip;
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return InputHandler.mc.thePlayer.noClip ? "1" : "0";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("summon_spaceman", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				EntityAmoung var2 = new EntityAmoung(InputHandler.mc.theWorld);
+				var2.setPosition(InputHandler.mc.thePlayer.posX, InputHandler.mc.thePlayer.posY, InputHandler.mc.thePlayer.posZ);
+				InputHandler.mc.theWorld.spawnEntityInWorld(var2);
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+
+			public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+				return false;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("summon_spearmaster", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				EntitySpearmaster var2 = new EntitySpearmaster(InputHandler.mc.theWorld);
+				var2.setPosition(InputHandler.mc.thePlayer.posX, InputHandler.mc.thePlayer.posY, InputHandler.mc.thePlayer.posZ);
+				InputHandler.mc.theWorld.spawnEntityInWorld(var2);
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+
+			public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+				return false;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("summon_spacemen", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				for(int var2 = 0; var2 < ((Integer)var1[0]).intValue(); ++var2) {
+					EntityAmoung var3 = new EntityAmoung(InputHandler.mc.theWorld);
+					var3.setPosition(InputHandler.mc.thePlayer.posX, InputHandler.mc.thePlayer.posY, InputHandler.mc.thePlayer.posZ);
+					InputHandler.mc.theWorld.spawnEntityInWorld(var3);
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+
+			public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+				return false;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("impulse", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(ScreenDebugMenu.dbg_conf_enableCheats) {
+					switch(((Integer)var1[0]).intValue()) {
+					case 102:
+						for(int var4 = 0; var4 < 4; ++var4) {
+							EntitySkeleton var3 = new EntitySkeleton(InputHandler.mc.theWorld);
+							var3.setPosition(InputHandler.mc.thePlayer.posX, InputHandler.mc.thePlayer.posY, InputHandler.mc.thePlayer.posZ);
+							InputHandler.mc.theWorld.spawnEntityInWorld(var3);
+						}
+
+						return;
+					case 300:
+						ExtEvents.Spawn(InputHandler.mc.thePlayer, InputHandler.mc.theWorld);
+						break;
+					case 320:
+						ExtEvents.func_11856_0t7OQN0wYClKPyfCdKW9g3t0MW94ScRD4ffzAB4MaIwS6K3mB51a67GSmU0B(InputHandler.mc.thePlayer, InputHandler.mc.theWorld);
+						break;
+					case 400:
+						EntityCatbomb var2 = new EntityCatbomb(InputHandler.mc.theWorld);
+						var2.setPosition(InputHandler.mc.thePlayer.posX, InputHandler.mc.thePlayer.posY, InputHandler.mc.thePlayer.posZ);
+						InputHandler.mc.theWorld.spawnEntityInWorld(var2);
+						break;
+					case 3900:
+						InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10945_6iX357SpWthupUbWNfLRO87UU7xQ8Prgh5bU4EX2jBlYJ3DWToctpI0eQj4u.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+						InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10943_4P6yLgfnvnO6y89XpVE5PS5Hjo62bm3kdr4eGy8mOs9dKTZu5L8RqEHy2P44.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+						InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10948_0K9Wvp8r1YnOA5010xZpl66lyNUt78N6SfQ197bg85kafTuYvONKR77OoXDq.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+						InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10942_7xLO64tuZWfUPmt15N4O95hJ0176qp03d5mSW8trXS890yqputsco88a0dk3.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+						InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10946_7AR6ItAen3fx05Vncef3s63538b5wb97oi4kfrKpN1xXa92ennAR19lcPgfJ.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+						InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10947_9AnvDYT3tcTSS9Cz1srJAOWX62V5Gqyb2ubqdcRVgP303Y40U8Ke6dGNVv08.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+						InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10944_2EWN3F9cOeZLc1s1Wh3Y3X5G88vSKS70wXa1x0jY361oZ36mAnvM2vYHm7oe.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+						InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10949_90L26at7gGnz0J8Af23lCTpFsYX1JLxXD3R7KOPeOnNw65r9paK3i34TuD8w.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+					}
+
+				}
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("mat_fullbright", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				ScreenDebugMenu.field_7960_2AJG81m1pl0O5bhn2XiQ37CD76Uoi3M5l8gTKvm6mx16vAu3Ik5oCR8W6P15 = ((Integer)var1[0]).intValue() == 1;
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "" + (ScreenDebugMenu.field_7960_2AJG81m1pl0O5bhn2XiQ37CD76Uoi3M5l8gTKvm6mx16vAu3Ik5oCR8W6P15 ? 1 : 0);
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("r_remodel", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.renderEngine.refreshTextures();
+				Minecraft.field_7326_55yB6jYtSi94r555184CYoXDQ1YhyBnoS1lJaCCAbdj3rDu1RNzU8Gp4C3g5 = true;
+				InputHandler.mc.field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo.func_11380_9r1511Jp0jE144f4MQc4NK82XBZn9UtKQ9T0m3371572UnC4jS4YM9eJUhB9();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("r_clouds", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.field_7316_28K4517FJT58jN9ucjj3zE1jE410Ltpi330vH7516f19B006E4Wco5x4Y0w5 = ((Integer)var1[0]).intValue() == 1;
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return InputHandler.mc.field_7316_28K4517FJT58jN9ucjj3zE1jE410Ltpi330vH7516f19B006E4Wco5x4Y0w5 ? "1" : "0";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("r_nobiome", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				ScreenDebugMenu.field_7964_8G80Kimsj2t150ZuEHxk97V3fSV455qzurOOVWgX8oTDDCEH9YV34z9vRAoC = ((Integer)var1[0]).intValue() == 1;
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return ScreenDebugMenu.field_7964_8G80Kimsj2t150ZuEHxk97V3fSV455qzurOOVWgX8oTDDCEH9YV34z9vRAoC ? "1" : "0";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("r_texfilter", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				ScreenDebugMenu.field_7956_48H3fYB8k2jE5s5HC81S9Sm600nFD73Lb4N90Pl1F0LSIx70mF1gldgvzgRz = ((Integer)var1[0]).intValue() == 1;
+				InputHandler.mc.renderEngine.refreshTextures();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "" + (ScreenDebugMenu.field_7956_48H3fYB8k2jE5s5HC81S9Sm600nFD73Lb4N90Pl1F0LSIx70mF1gldgvzgRz ? 1 : 0);
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("r_fullscreen", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.fullscreen = ((Integer)var1[0]).intValue() == 1;
+
+				try {
+					Display.setFullscreen(((Integer)var1[0]).intValue() == 1);
+				} catch (LWJGLException var3) {
+					var3.printStackTrace();
+				}
+
+				Display.update();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "" + (InputHandler.mc.fullscreen ? 1 : 0);
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("r_mode", new Class[]{Integer.class, Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.resize(((Integer)var1[0]).intValue(), ((Integer)var1[1]).intValue());
+				Display.update();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return InputHandler.mc.displayWidth + " " + InputHandler.mc.displayHeight;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("r_texfx", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				Minecraft.field_7307_8AX67fsnsj54328J9e6FiY9333555Xj726t2182u3TBB948QMZsZX2iz02iv = ((Integer)var1[0]).intValue() == 1;
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return Minecraft.field_7307_8AX67fsnsj54328J9e6FiY9333555Xj726t2182u3TBB948QMZsZX2iz02iv ? "1" : "0";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("gui_versionstring", new Class[]{String.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				GuiIngame.field_7848_69F5OIYAc4x6RX395dAQNvnAE6gbvlYWUWFq5k519dDHt6V3lS7NcP1YaM1d = (String)var1[0];
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return GuiIngame.field_7848_69F5OIYAc4x6RX395dAQNvnAE6gbvlYWUWFq5k519dDHt6V3lS7NcP1YaM1d;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("zm_givepoints", new Class[]{Integer.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(ScreenDebugMenu.dbg_conf_enableCheats) {
+					((EntityPlayerZombieModeClient)InputHandler.mc.thePlayer).field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.func_8688_6DmcXOP1jZRKDasP2440t8904Ry66MRC3K00nwd8iGDlPgYii5d1f50QVICF((long)((Integer)var1[0]).intValue());
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("INTERLOPE", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				throw new RuntimeException("Unable to connect to s0.fsky.org:27015");
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+
+			public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+				return false;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("mason", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				throw new RuntimeException("Unable to find numeric definition.");
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+
+			public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+				return false;
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("record", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.func_12202_16f5qR4S63G9o02Iv9q3fI2EBSIV7xO6D6qHK36vkX5ETh2rQeDp7rBKoju0(InputHandler.mc.thePlayer);
+				System.out.println("Demo record started");
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("stopdemo", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.func_12204_8r9RTHlpJjIj8rv8a68Pq9g6006yw2MZ4W4u9N9p23i9532c8WU7ByApxh50();
+				System.out.println("Demo record finished, " + InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.field_12210_1g5X6A25jcG50Z3d47g1ufx5qZuFNya14hd6OpQ6a42pd2RKbHZAqAO16G5P.size() + " frames");
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("savedemo", new Class[]{String.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.func_12199_0T1EBqlwN0r6zrh3Sg0XWHZ8YGwKZ7S93cTMLKw1r2Y6V9Bl9qyCtXn0g300((String)var1[0]);
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("frrn_savedemo", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(InputHandler.mc.thePlayer instanceof EntityPlayerFreerunClient) {
+					Calendar var2 = Calendar.getInstance();
+					((EntityPlayerFreerunClient)InputHandler.mc.thePlayer).field_9077_6828xUDuW4HE2czdD77Ktkps1BKQr55aauI7IbsAkcX5iy1397o0JfVUA615.func_12199_0T1EBqlwN0r6zrh3Sg0XWHZ8YGwKZ7S93cTMLKw1r2Y6V9Bl9qyCtXn0g300(Minecraft.getMinecraftDir() + "/freeerundemo-" + ((FreerunWorld)InputHandler.mc.theWorld).levelName.replace('\\', '_').replace('/', '_') + "-" + var2.get(5) + "-" + (var2.get(2) + 1) + "-" + var2.get(1) + "@" + var2.get(11) + "-" + var2.get(12) + "-" + var2.get(13) + ".mcdem");
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("+frrn_reset", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(InputHandler.mc.thePlayer instanceof EntityPlayerFreerunClient) {
+					((EntityPlayerFreerunClient)InputHandler.mc.thePlayer).ResetFreerun();
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("+frrn_lastcheckpoint", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(InputHandler.mc.thePlayer instanceof EntityPlayerFreerunClient) {
+					((EntityPlayerFreerunClient)InputHandler.mc.thePlayer).ResetLastCheckpoint();
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("playdemo", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.func_12200_2zuKLzAjc8o3T9KVZ7ZY36o6qOp5e1FG836622Br32SKguF06W9W1437p52T();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("playdemofile", new Class[]{String.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.func_12205_6ZOj2zwwjPk9f604twAF89u12c3MGns9EqJD4l3jZR2R6cy50aEWBthikzOk((String)var1[0]);
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("blockinfo", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(InputHandler.mc.objectMouseOver != null && InputHandler.mc.objectMouseOver.typeOfHit == 0) {
+					InputHandler.mc.ingameGUI.addChatMessage("Block ID: " + InputHandler.mc.theWorld.getBlockId(InputHandler.mc.objectMouseOver.blockX, InputHandler.mc.objectMouseOver.blockY, InputHandler.mc.objectMouseOver.blockZ) + ", [" + InputHandler.mc.objectMouseOver.blockX + "," + InputHandler.mc.objectMouseOver.blockY + "," + InputHandler.mc.objectMouseOver.blockZ + "]");
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("placeonme", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				World var2 = InputHandler.mc.theWorld;
+				EntityPlayerSP var3 = InputHandler.mc.thePlayer;
+				var2.setBlock((int)var3.posX, (int)var3.posY, (int)var3.posZ, 1);
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("invclear", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.thePlayer.inventory.func_8655_2030zy05r8P1HRnaOEgnBoKr1OC1y9FA0RMNRU6eq535ylSExX5MmN7p6vst();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("+worldedit_setpos1", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.ingameGUI.weditOverlay.func_11896_21hxskjoCalSdNwCUtCH797a5Bv6x17Si7L3X48r8FIf14LJZL110IOeH5JV();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("+worldedit_setpos2", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.ingameGUI.weditOverlay.func_11901_4GX3NWZYNNxs7759a7f8764Sjs8mN8d0w06o2vq3vJdsHhi1084359oRzOm3();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("+worldedit_accept", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				InputHandler.mc.ingameGUI.weditOverlay.Next();
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("sysexec", new Class[]{String.class}, new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(CommandManager.this.field_12071_8Mn4tj13vIyC6B4sKvgNU753iaUwsGLVW462dSPrK3Q6u34DDVgN8g4gP3Sg) {
+					try {
+						Runtime.getRuntime().exec((String)var1[0]);
+					} catch (IOException var3) {
+						var3.printStackTrace();
+					}
+				} else {
+					ExtLogger.i("System execute is currently locked. This command will execute a system command.\n To confirm that you know what you\'re doing, add \"sysexec_unlock\" to autoexec.cfg and restart the game.");
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "Executable command. " + (CommandManager.this.field_12071_8Mn4tj13vIyC6B4sKvgNU753iaUwsGLVW462dSPrK3Q6u34DDVgN8g4gP3Sg ? "WARNING: This command may be dangerous!" : "Currently locked.");
+			}
+		}));
+		this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.add(new CommandManagerUnknownClass("sysexec_unlock", new Class[0], new CommandUnknownClass() {
+			public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(Object... var1) {
+				if(CommandManager.this.field_12075_28FdWuxC13fShF99oFUZRa9Zk8Ur8d7gsfw157Cj6qaqjdwi8sD2yQP7IySf) {
+					CommandManager.this.field_12071_8Mn4tj13vIyC6B4sKvgNU753iaUwsGLVW462dSPrK3Q6u34DDVgN8g4gP3Sg = true;
+				}
+
+			}
+
+			public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+				return "~exec";
+			}
+
+			public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+				return false;
+			}
+		}));
+	}
+
+	public void func_12061_7rTYs2NQ25PEKTb5TGv3QZrl94uj1H72t7FJlO1Nqj2OJ7I32X7wEQO1BzbG(String var1) {
+	}
+
+	public List<CommandManagerUnknownClass> func_12065_70o5m3y9gbwr3PpxBbyXBPCTq6zSby60p7fwgFYI1mH6IJ8DJMrZAt2f87KR(String var1) {
+		ArrayList var2 = new ArrayList();
+		if(var1.equals("")) {
+			return var2;
+		} else {
+			Iterator var3 = this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.iterator();
+
+			while(var3.hasNext()) {
+				CommandManagerUnknownClass var4 = (CommandManagerUnknownClass)var3.next();
+				if(var4.field_12024_1q5eqd4V75vh5r0RkoHJF19l4S347yEp0rA4sR70sQOr8jdcCj1Z12u5PSx9.contains(var1) && var4.field_12023_4a6hGbi1yf1wisYXW788UpKE9grOBLI6J908Opcn8Zv63ROZKy49K6Z3M3gz.func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd()) {
+					var2.add(var4);
+				}
+			}
+
+			return var2;
+		}
+	}
+
+	public CommandManagerUnknownClass func_12064_066qvw8i8VJk9r8W9zey0qBl7l4RI0SeVtY38i356k7OodNhLGt3200y64s6(String var1) {
+		Iterator var2 = this.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.iterator();
+
+		CommandManagerUnknownClass var3;
+		do {
+			if(!var2.hasNext()) {
+				return null;
+			}
+
+			var3 = (CommandManagerUnknownClass)var2.next();
+		} while(!var3.field_12024_1q5eqd4V75vh5r0RkoHJF19l4S347yEp0rA4sR70sQOr8jdcCj1Z12u5PSx9.equals(var1));
+
+		return var3;
+	}
+
+	public void func_12062_0t842hU0v5526eutHbG997y2Nv04t2F2gXt64U0tN25Eoja8W099icp26853(String var1) {
+		String[] var2 = var1.split(" ");
+		if(var2.length > 0) {
+			CommandManagerUnknownClass var3 = this.func_12064_066qvw8i8VJk9r8W9zey0qBl7l4RI0SeVtY38i356k7OodNhLGt3200y64s6(var2[0]);
+			if(var3 != null && (var3.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640.length == 0 || var2.length == 1 + var3.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640.length || var2.length >= 1 + var3.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640.length && var3.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640[var3.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640.length - 1] == String.class)) {
+				Object[] var4 = new Object[var3.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640.length];
+
+				try {
+					int var5 = 0;
+
+					while(true) {
+						if(var5 == var4.length) {
+							var3.field_12023_4a6hGbi1yf1wisYXW788UpKE9grOBLI6J908Opcn8Zv63ROZKy49K6Z3M3gz.func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(var4);
+							break;
+						}
+
+						if(var3.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640[var5] == Integer.class) {
+							var4[var5] = Integer.valueOf(Integer.parseInt(var2[1 + var5]));
+						} else if(var3.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640[var5] == Float.class) {
+							var4[var5] = Float.valueOf(Float.parseFloat(var2[1 + var5]));
+						} else if(var3.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640[var5] == Long.class) {
+							var4[var5] = Long.valueOf(Long.parseLong(var2[1 + var5]));
+						} else if(var3.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640[var5] == String.class) {
+							var4[var5] = var2[1 + var5];
+							if(var5 == var4.length - 1) {
+								for(int var6 = var5 + 1; var6 < var2.length - 1; ++var6) {
+									var4[var5] = var4[var5] + " " + var2[1 + var6];
+								}
+							}
+						} else {
+							ExtLogger.w("[3ECONSOLE] Type invalid");
+						}
+
+						++var5;
+					}
+				} catch (Exception var7) {
+					if(var7 instanceof RuntimeException) {
+						throw var7;
+					}
+
+					ExtLogger.w("[3ECONSOLE] Failed to parse argument: " + var7.getClass().getSimpleName());
+					var7.printStackTrace();
+				}
+			} else {
+				ExtLogger.w("[3ECONSOLE] Command not found or args wrong");
+			}
+		}
+
+		this.field_12074_59H713eWwMqHt2BkXfmtU7Gw1Ed2yJ84RRj5r8Os9hXCRrICXE2XfeV2i7Jm = "";
+	}
+
+	public void func_12066_3G1KR5Cj4Oc1UWW3nROs4iPJarSF633X338OpM3D85527J342we9BwJP271F(char var1, int var2) {
+		if(var1 != 0) {
+			if(InputHandler.IsKeyDown(29) && var2 != 29) {
+				this.field_12074_59H713eWwMqHt2BkXfmtU7Gw1Ed2yJ84RRj5r8Os9hXCRrICXE2XfeV2i7Jm = this.field_12074_59H713eWwMqHt2BkXfmtU7Gw1Ed2yJ84RRj5r8Os9hXCRrICXE2XfeV2i7Jm + var2 + "";
+			} else if(var1 != 9) {
+				this.field_12074_59H713eWwMqHt2BkXfmtU7Gw1Ed2yJ84RRj5r8Os9hXCRrICXE2XfeV2i7Jm = this.field_12074_59H713eWwMqHt2BkXfmtU7Gw1Ed2yJ84RRj5r8Os9hXCRrICXE2XfeV2i7Jm + var1;
+			}
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/ExtLogger.java
@@ -1,0 +1,91 @@
+package net.minecraft.src;
+
+import java.io.FileWriter;
+import java.io.IOException;
+import org.lwjgl.opengl.GL11;
+
+public class ExtLogger {
+	static FileWriter fw;
+
+	public static void InitLogger() {
+		r("MINECRAFT EXTENSION 16.05 (MODIFICATION) GAME LOG");
+		r("This is the file you need to send to the bug tracker.");
+		r("Please add it as an attachment, do not copy it into a comment");
+		r("");
+		r("Game version:");
+		r("  -base: 1.1.2_01");
+		r("  -extension: 16.05 R4");
+		r("");
+		String var0 = System.getProperty("os.arch");
+		if(var0.contains("64")) {
+			var0 = var0 + "(64-bit)";
+		}
+
+		r("OS: " + System.getProperty("os.name") + " (" + var0 + ") [" + System.getProperty("os.version") + "]");
+		r("JVM: " + System.getProperty("java.version"));
+		r("");
+		r("Technical specification:");
+		r("CPU: <unsupported>");
+		r("GPU: " + GL11.glGetString(GL11.GL_RENDERER));
+		r("    - compatible API:");
+		r("      - OpenGL: " + GL11.glGetString(GL11.GL_VERSION));
+		r("      - Direct3D: <unsupported>");
+		r("Memory: " + Runtime.getRuntime().maxMemory() / 1024L / 1024L + " MB");
+		r("");
+		r("");
+		r("###################################");
+		r("");
+		i("Extension 16.05 init");
+		i("Compilation mode:");
+		i("  - debug output: MINIMAL");
+		i("  - hub connections: DISABLED");
+		i("Build without Direct3D support, launching in legacy OpenGL mode");
+		i("Connection timed out");
+
+		for(int var1 = 1; var1 != 6; ++var1) {
+			i("Reconnection attempt " + var1);
+		}
+
+		i("Connection failed. Launching in offline mode.");
+		i("Unable to authenticate. You will only be able to play on local servers.");
+	}
+
+	public static void i(String var0) {
+		try {
+			if(fw != null) {
+				fw.write("[INFO] " + var0 + "\n");
+			}
+
+			System.out.println("[INFO] " + var0);
+		} catch (IOException var2) {
+			var2.printStackTrace();
+		}
+
+	}
+
+	public static void w(String var0) {
+		try {
+			if(fw != null) {
+				fw.write("[WARN] " + var0 + "\n");
+			}
+
+			System.out.println("[WARN] " + var0);
+		} catch (IOException var2) {
+			var2.printStackTrace();
+		}
+
+	}
+
+	public static void r(String var0) {
+		try {
+			if(fw != null) {
+				fw.write(var0 + "\n");
+			}
+
+			System.out.println(var0);
+		} catch (IOException var2) {
+			var2.printStackTrace();
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockGravelOld.java
@@ -1,0 +1,13 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockGravelOld extends BlockSandOld {
+	public BlockGravelOld(int var1, int var2) {
+		super(var1, var2);
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return var2.nextInt(10) == 0 ? Item.flint.shiftedIndex : this.blockID;
+	}
+}
--- /dev/null
+++ net/minecraft/src/HubWorld.java
@@ -1,0 +1,34 @@
+package net.minecraft.src;
+
+import java.io.File;
+
+public class HubWorld extends World {
+	public HubWorld(File var1, long var2) {
+		super(var1, "hub", var2);
+		this.spawnY = 1;
+		this.snowCovered = false;
+		this.fogColor = 1567L;
+	}
+
+	protected IChunkProvider getChunkProvider(File var1) {
+		return new HubChunkProviderLoadOrGenerate(this, new ChunkLoader(var1, true), new HubChunkProviderGenerate(this));
+	}
+
+	protected boolean findSpawn(int var1, int var2) {
+		boolean var3 = false;
+
+		for(int var4 = 0; var4 < 128; ++var4) {
+			var3 = this.getBlockId(var1, var4, var2) != 0;
+		}
+
+		return var3;
+	}
+
+	public void spawnPlayerWithLoadedChunks(EntityPlayer var1) {
+		super.spawnPlayerWithLoadedChunks(var1);
+	}
+
+	public boolean func_7543_8eqo515dTkd08uE6VZt7E90969pNXPyr50tqh4WFlpod3J41K71rd9eZA84p(HubWorld var1, int var2, int var3, int var4, RemoteWorld var5) {
+		return var1.setBlockAndMetadataWithNotify(var2, var3, var4, ExtBlocks.BlockFlameWoodDoor.blockID, var5.func_7541_2R3b24Cp7xDHr78U056N76Op70FJ85s7dEtYz9pBRZWqC0G4g9SZxX0Lg07H().func_9816_2x0acOjuTTpK4OJWkVSraAOSw60K40SH908itmm7PawcvTN8Ic7280XzUhVj());
+	}
+}
--- /dev/null
+++ net/minecraft/src/EntitySnowflakeFX.java
@@ -1,0 +1,56 @@
+package net.minecraft.src;
+
+public class EntitySnowflakeFX extends EntityFX {
+	private final float snowflakeParticleScale;
+
+	public EntitySnowflakeFX(World var1, double var2, double var4, double var6, double var8, double var10, double var12, int var14) {
+		super(var1, var2, var4, var6, var8, var10, var12);
+		this.motionX = this.motionX * (double)0.01F + var8;
+		this.motionY = this.motionY * (double)0.01F + var10;
+		this.motionZ = this.motionZ * (double)0.01F + var12;
+		this.snowflakeParticleScale = this.particleScale;
+		this.particleRed = this.particleGreen = this.particleBlue = 1.0F;
+		this.noClip = false;
+		this.particleTextureIndex = 63 + var14;
+		this.particleMaxAge += 2;
+	}
+
+	public void renderParticle(Tessellator var1, float var2, float var3, float var4, float var5, float var6, float var7) {
+		float var8 = ((float)this.particleAge + var2) / (float)this.particleMaxAge;
+		this.particleScale = this.snowflakeParticleScale * (1.0F - var8 * var8 * 0.5F);
+		super.renderParticle(var1, var2, var3, var4, var5, var6, var7);
+	}
+
+	public float getBrightness(float var1) {
+		float var2 = ((float)this.particleAge + var1) / (float)this.particleMaxAge;
+		if(var2 < 0.0F) {
+			var2 = 0.0F;
+		}
+
+		if(var2 > 1.0F) {
+			var2 = 1.0F;
+		}
+
+		float var3 = super.getBrightness(var1);
+		return var3 * var2 + (1.0F - var2);
+	}
+
+	public void onUpdate() {
+		this.prevPosX = this.posX;
+		this.prevPosY = this.posY;
+		this.prevPosZ = this.posZ;
+		if(this.particleAge++ >= this.particleMaxAge) {
+			this.setEntityDead();
+		}
+
+		this.moveEntity(this.motionX, this.motionY, this.motionZ);
+		this.motionX *= (double)0.96F;
+		this.motionY *= (double)0.96F;
+		this.motionZ *= (double)0.96F;
+		if(this.onGround) {
+			this.motionX *= (double)0.7F;
+			this.motionZ *= (double)0.7F;
+		}
+
+	}
+}
--- net/minecraft/src/Block.java
+++ net/minecraft/src/Block.java
@@ -4,42 +4,45 @@
 import java.util.Random;
 
 public class Block {
+	public static final int BLOCK_LIST_SIZE = 32767;
 	public static final StepSound soundPowderFootstep = new StepSound("stone", 1.0F, 1.0F);
 	public static final StepSound soundWoodFootstep = new StepSound("wood", 1.0F, 1.0F);
 	public static final StepSound soundGravelFootstep = new StepSound("gravel", 1.0F, 1.0F);
 	public static final StepSound soundGrassFootstep = new StepSound("grass", 1.0F, 1.0F);
 	public static final StepSound soundStoneFootstep = new StepSound("stone", 1.0F, 1.0F);
 	public static final StepSound soundMetalFootstep = new StepSound("stone", 1.0F, 1.5F);
-	public static final StepSound soundGlassFootstep = new StepSoundGlass("stone", 1.0F, 1.0F);
+	public static final StepSound soundGlassFootstep = new StepSoundGlass("glass", 1.0F, 1.0F);
 	public static final StepSound soundClothFootstep = new StepSound("cloth", 1.0F, 1.0F);
 	public static final StepSound soundSandFootstep = new StepSoundSand("sand", 1.0F, 1.0F);
-	public static final Block[] blocksList = new Block[256];
-	public static final boolean[] tickOnLoad = new boolean[256];
-	public static final boolean[] opaqueCubeLookup = new boolean[256];
-	public static final boolean[] isBlockContainer = new boolean[256];
-	public static final int[] lightOpacity = new int[256];
-	public static final boolean[] canBlockGrass = new boolean[256];
-	public static final int[] lightValue = new int[256];
-	public static final Block stone = (new BlockStone(1, 1)).setHardness(1.5F).setResistance(10.0F).setStepSound(soundStoneFootstep);
-	public static final BlockGrass grass = (BlockGrass)(new BlockGrass(2)).setHardness(0.6F).setStepSound(soundGrassFootstep);
-	public static final Block dirt = (new BlockDirt(3, 2)).setHardness(0.5F).setStepSound(soundGravelFootstep);
-	public static final Block cobblestone = (new Block(4, 16, Material.rock)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep);
-	public static final Block planks = (new Block(5, 4, Material.wood)).setHardness(2.0F).setResistance(5.0F).setStepSound(soundWoodFootstep);
-	public static final Block sapling = (new BlockSapling(6, 15)).setHardness(0.0F).setStepSound(soundGrassFootstep);
-	public static final Block bedrock = (new Block(7, 17, Material.rock)).setHardness(-1.0F).setResistance(6000000.0F).setStepSound(soundStoneFootstep);
-	public static final Block waterMoving = (new BlockFlowing(8, Material.water)).setHardness(100.0F).setLightOpacity(3);
-	public static final Block waterStill = (new BlockStationary(9, Material.water)).setHardness(100.0F).setLightOpacity(3);
-	public static final Block lavaMoving = (new BlockFlowing(10, Material.lava)).setHardness(0.0F).setLightValue(1.0F).setLightOpacity(255);
-	public static final Block lavaStill = (new BlockStationary(11, Material.lava)).setHardness(100.0F).setLightValue(1.0F).setLightOpacity(255);
-	public static final Block sand = (new BlockSand(12, 18)).setHardness(0.5F).setStepSound(soundSandFootstep);
-	public static final Block gravel = (new BlockGravel(13, 19)).setHardness(0.6F).setStepSound(soundGravelFootstep);
-	public static final Block oreGold = (new BlockOre(14, 32)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep);
-	public static final Block oreIron = (new BlockOre(15, 33)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep);
-	public static final Block oreCoal = (new BlockOre(16, 34)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep);
-	public static final Block wood = (new BlockLog(17)).setHardness(2.0F).setStepSound(soundWoodFootstep);
-	public static final BlockLeaves leaves = (BlockLeaves)(new BlockLeaves(18, 52)).setHardness(0.2F).setLightOpacity(1).setStepSound(soundGrassFootstep);
-	public static final Block sponge = (new BlockSponge(19)).setHardness(0.6F).setStepSound(soundGrassFootstep);
-	public static final Block glass = (new BlockGlass(20, 49, Material.glass, false)).setHardness(0.3F).setStepSound(soundGlassFootstep);
+	public static final StepSound soundElderFootstep = new StepSound("elder", 1.0F, 1.0F);
+	public static final StepSound soundSpecialFootstep = new StepSound("special", 1.0F, 1.0F);
+	public static final Block[] blocksList = new Block[Short.MAX_VALUE];
+	public static final boolean[] tickOnLoad = new boolean[Short.MAX_VALUE];
+	public static final boolean[] opaqueCubeLookup = new boolean[Short.MAX_VALUE];
+	public static final boolean[] isBlockContainer = new boolean[Short.MAX_VALUE];
+	public static final int[] lightOpacity = new int[Short.MAX_VALUE];
+	public static final boolean[] canBlockGrass = new boolean[Short.MAX_VALUE];
+	public static final int[] lightValue = new int[Short.MAX_VALUE];
+	public static final Block stone = (new BlockStone(1, 1)).setHardness(1.5F).setResistance(10.0F).setStepSound(soundStoneFootstep).setEssValue(2).setName("Stone");
+	public static final BlockGrass grass = (BlockGrass)(new BlockGrass(2)).setHardness(0.6F).setStepSound(soundGrassFootstep).setName("Grass Block").setEssValue(1);
+	public static final Block dirt = (new BlockDirt(3, 2)).setHardness(0.5F).setStepSound(soundGravelFootstep).setEssValue(1).setName("Dirt");
+	public static final Block cobblestone = (new Block(4, 16, Material.rock)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setEssValue(1).setName("Cobblestone");
+	public static final Block planks = (new Block(5, 4, Material.wood)).setHardness(2.0F).setResistance(5.0F).setStepSound(soundWoodFootstep).setEssValue(2).setName("Wooden Planks");
+	public static final Block sapling = (new BlockSapling(6, 15)).setHardness(0.0F).setStepSound(soundGrassFootstep).setName("Sapling").setEssValue(4);
+	public static final Block bedrock = (new Block(7, 17, Material.rock)).setHardness(-1.0F).setResistance(6000000.0F).setStepSound(soundElderFootstep).setName("Elderstone").setEssValue(1);
+	public static final Block waterMoving = (new BlockFlowing(8, Material.water)).setHardness(100.0F).setLightOpacity(3).setName("Water").setEssValue(1);
+	public static final Block waterStill = (new BlockStationary(9, Material.water)).setHardness(100.0F).setLightOpacity(3).setName("Water").setEssValue(1);
+	public static final Block lavaMoving = (new BlockFlowing(10, Material.lava)).setHardness(0.0F).setLightValue(1.0F).setLightOpacity(255).setName("Lava").setEssValue(1);
+	public static final Block lavaStill = (new BlockStationary(11, Material.lava)).setHardness(100.0F).setLightValue(1.0F).setLightOpacity(255).setName("Lava").setEssValue(1);
+	public static final Block sand = (new BlockSand(12, 18)).setHardness(0.5F).setStepSound(soundSandFootstep).setName("Sand").setEssValue(1);
+	public static final Block gravel = (new BlockGravel(13, 19)).setHardness(0.6F).setStepSound(soundGravelFootstep).setName("Gravel").setEssValue(2);
+	public static final Block oreGold = (new BlockOre(14, 32)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setEssValue(32).setName("Gold Ore");
+	public static final Block oreIron = (new BlockOre(15, 33)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setEssValue(16).setName("Iron Ore");
+	public static final Block oreCoal = (new BlockOre(16, 34)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setName("Coal Ore").setEssValue(8);
+	public static final Block wood = (new BlockLog(17)).setHardness(2.0F).setStepSound(soundWoodFootstep).setEssValue(4).setName("Wood");
+	public static final BlockLeaves leaves = (BlockLeaves)(new BlockLeaves(18, 52)).setHardness(0.2F).setLightOpacity(1).setStepSound(soundGrassFootstep).setName("Leaves").setEssValue(1);
+	public static final Block sponge = (new BlockSponge(19)).setHardness(0.6F).setStepSound(soundGrassFootstep).setName("Sponge").setEssValue(1);
+	public static final Block glass = (new BlockGlass(20, 49, Material.glass, false)).setHardness(0.3F).setStepSound(soundGlassFootstep).setEssValue(4).setName("Glass");
 	public static final Block clothRed = null;
 	public static final Block clothOrange = null;
 	public static final Block clothYellow = null;
@@ -54,57 +57,57 @@
 	public static final Block clothMagenta = null;
 	public static final Block clothRose = null;
 	public static final Block clothDarkGray = null;
-	public static final Block cloth = (new Block(35, 64, Material.cloth)).setHardness(0.8F).setStepSound(soundClothFootstep);
+	public static final Block cloth = (new Block(35, 64, Material.cloth)).setHardness(0.8F).setStepSound(soundClothFootstep).setEssValue(16).setName("Cloth");
 	public static final Block clothWhite = null;
-	public static final BlockFlower plantYellow = (BlockFlower)(new BlockFlower(37, 13)).setHardness(0.0F).setStepSound(soundGrassFootstep);
-	public static final BlockFlower plantRed = (BlockFlower)(new BlockFlower(38, 12)).setHardness(0.0F).setStepSound(soundGrassFootstep);
-	public static final BlockFlower mushroomBrown = (BlockFlower)(new BlockMushroom(39, 29)).setHardness(0.0F).setStepSound(soundGrassFootstep).setLightValue(2.0F / 16.0F);
-	public static final BlockFlower mushroomRed = (BlockFlower)(new BlockMushroom(40, 28)).setHardness(0.0F).setStepSound(soundGrassFootstep);
-	public static final Block blockGold = (new BlockOreBlock(41, 39)).setHardness(3.0F).setResistance(10.0F).setStepSound(soundMetalFootstep);
-	public static final Block blockSteel = (new BlockOreBlock(42, 38)).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep);
-	public static final Block stairDouble = (new BlockStep(43, true)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep);
-	public static final Block stairSingle = (new BlockStep(44, false)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep);
-	public static final Block brick = (new Block(45, 7, Material.rock)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep);
-	public static final Block tnt = (new BlockTNT(46, 8)).setHardness(0.0F).setStepSound(soundGrassFootstep);
-	public static final Block bookshelf = (new BlockBookshelf(47, 35)).setHardness(1.5F).setStepSound(soundWoodFootstep);
-	public static final Block cobblestoneMossy = (new Block(48, 36, Material.rock)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep);
-	public static final Block obsidian = (new BlockObsidian(49, 37)).setHardness(10.0F).setResistance(2000.0F).setStepSound(soundStoneFootstep);
-	public static final Block torch = (new BlockTorch(50, 80)).setHardness(0.0F).setLightValue(15.0F / 16.0F).setStepSound(soundWoodFootstep);
-	public static final BlockFire fire = (BlockFire)((BlockFire)(new BlockFire(51, 31)).setHardness(0.0F).setLightValue(1.0F).setStepSound(soundWoodFootstep));
-	public static final Block mobSpawner = (new BlockMobSpawner(52, 65)).setHardness(5.0F).setStepSound(soundMetalFootstep);
-	public static final Block stairCompactWood = new BlockStairs(53, planks);
-	public static final Block chest = (new BlockChest(54)).setHardness(2.5F).setStepSound(soundWoodFootstep);
-	public static final Block redstoneWire = (new BlockRedstoneWire(55, 84)).setHardness(0.0F).setStepSound(soundPowderFootstep);
-	public static final Block oreDiamond = (new BlockOre(56, 50)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep);
-	public static final Block blockDiamond = (new BlockOreBlock(57, 40)).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep);
-	public static final Block workbench = (new BlockWorkbench(58)).setHardness(2.5F).setStepSound(soundWoodFootstep);
-	public static final Block crops = (new BlockCrops(59, 88)).setHardness(0.0F).setStepSound(soundGrassFootstep);
-	public static final Block tilledField = (new BlockFarmland(60)).setHardness(0.6F).setStepSound(soundGravelFootstep);
-	public static final Block stoneOvenIdle = (new BlockFurnace(61, false)).setHardness(3.5F).setStepSound(soundStoneFootstep);
-	public static final Block stoneOvenActive = (new BlockFurnace(62, true)).setHardness(3.5F).setStepSound(soundStoneFootstep).setLightValue(14.0F / 16.0F);
-	public static final Block signStanding = (new BlockSign(63, TileEntitySign.class, true)).setHardness(1.0F).setStepSound(soundWoodFootstep);
-	public static final Block doorWood = (new BlockDoor(64, Material.wood)).setHardness(3.0F).setStepSound(soundWoodFootstep);
-	public static final Block ladder = (new BlockLadder(65, 83)).setHardness(0.4F).setStepSound(soundWoodFootstep);
-	public static final Block minecartTrack = (new BlockMinecartTrack(66, 128)).setHardness(0.7F).setStepSound(soundMetalFootstep);
-	public static final Block stairCompactStone = new BlockStairs(67, cobblestone);
-	public static final Block signWall = (new BlockSign(68, TileEntitySign.class, false)).setHardness(1.0F).setStepSound(soundWoodFootstep);
-	public static final Block lever = (new BlockLever(69, 96)).setHardness(0.5F).setStepSound(soundWoodFootstep);
-	public static final Block pressurePlateStone = (new BlockPressurePlate(70, stone.blockIndexInTexture, EnumMobType.mobs)).setHardness(0.5F).setStepSound(soundStoneFootstep);
-	public static final Block doorSteel = (new BlockDoor(71, Material.iron)).setHardness(5.0F).setStepSound(soundMetalFootstep);
-	public static final Block pressurePlateWood = (new BlockPressurePlate(72, planks.blockIndexInTexture, EnumMobType.everything)).setHardness(0.5F).setStepSound(soundWoodFootstep);
-	public static final Block oreRedstone = (new BlockRedstoneOre(73, 51, false)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep);
-	public static final Block oreRedstoneGlowing = (new BlockRedstoneOre(74, 51, true)).setLightValue(10.0F / 16.0F).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep);
-	public static final Block torchRedstoneIdle = (new BlockRedstoneTorch(75, 115, false)).setHardness(0.0F).setStepSound(soundWoodFootstep);
-	public static final Block torchRedstoneActive = (new BlockRedstoneTorch(76, 99, true)).setHardness(0.0F).setLightValue(0.5F).setStepSound(soundWoodFootstep);
-	public static final Block button = (new BlockButton(77, stone.blockIndexInTexture)).setHardness(0.5F).setStepSound(soundStoneFootstep);
-	public static final Block snow = (new BlockSnow(78, 66)).setHardness(0.1F).setStepSound(soundClothFootstep);
-	public static final Block ice = (new BlockIce(79, 67)).setHardness(0.5F).setLightOpacity(3).setStepSound(soundGlassFootstep);
-	public static final Block blockSnow = (new BlockSnowBlock(80, 66)).setHardness(0.2F).setStepSound(soundClothFootstep);
-	public static final Block cactus = (new BlockCactus(81, 70)).setHardness(0.4F).setStepSound(soundClothFootstep);
-	public static final Block blockClay = (new BlockClay(82, 72)).setHardness(0.6F).setStepSound(soundGravelFootstep);
-	public static final Block reed = (new BlockReed(83, 73)).setHardness(0.0F).setStepSound(soundGrassFootstep);
-	public static final Block jukebox = (new BlockJukeBox(84, 74)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep);
-	public static final Block fence = (new BlockFence(85, 4)).setHardness(2.0F).setResistance(5.0F).setStepSound(soundWoodFootstep);
+	public static final BlockFlower plantYellow = (BlockFlower)(new BlockFlower(37, 13)).setHardness(0.0F).setStepSound(soundGrassFootstep).setName("Rose").setEssValue(4);
+	public static final BlockFlower plantRed = (BlockFlower)(new BlockFlower(38, 12)).setHardness(0.0F).setStepSound(soundGrassFootstep).setName("Dandelion").setEssValue(4);
+	public static final BlockFlower mushroomBrown = (BlockFlower)(new BlockMushroom(39, 29)).setHardness(0.0F).setStepSound(soundGrassFootstep).setLightValue(2.0F / 16.0F).setEssValue(10).setName("Mushroom");
+	public static final BlockFlower mushroomRed = (BlockFlower)(new BlockMushroom(40, 28)).setHardness(0.0F).setStepSound(soundGrassFootstep).setEssValue(10).setName("Red Mushroom");
+	public static final Block blockGold = (new BlockOreBlock(41, 39)).setHardness(3.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setEssValue(432).setName("Gold Block");
+	public static final Block blockSteel = (new BlockOreBlock(42, 38)).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setEssValue(180).setName("Iron Block");
+	public static final Block stairDouble = (new BlockStep(43, 5, true)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setName("Stone Slab").setEssValue(4);
+	public static final Block stairSingle = (new BlockStep(44, 5, false)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setName("Stone Slab").setEssValue(8);
+	public static final Block brick = (new Block(45, 7, Material.rock)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setName("Bricks").setEssValue(16);
+	public static final Block tnt = (new BlockTNT(46, 8)).setHardness(0.0F).setStepSound(soundGrassFootstep).setName("TNT").setEssValue(20);
+	public static final Block bookshelf = (new BlockBookshelf(47, 35)).setHardness(1.5F).setStepSound(soundWoodFootstep).setName("Cloth Panel").setEssValue(8);
+	public static final Block cobblestoneMossy = (new Block(48, 36, Material.rock)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setName("Lichen Cobblestone").setEssValue(16);
+	public static final Block obsidian = (new BlockObsidian(49, 37)).setHardness(10.0F).setResistance(2000.0F).setStepSound(soundStoneFootstep).setName("Obsidian").setEssValue(24);
+	public static final Block torch = (new BlockTorch(50, 80)).setHardness(0.0F).setLightValue(15.0F / 16.0F).setStepSound(soundWoodFootstep).setName("Torch").setEssValue(2);
+	public static final BlockFire fire = (BlockFire)((BlockFire)(new BlockFire(51, 349)).setHardness(0.0F).setLightValue(1.0F).setStepSound(soundWoodFootstep)).setName("Fire").setEssValue(2);
+	public static final Block mobSpawner = (new BlockMobSpawner(52, 65)).setHardness(5.0F).setStepSound(soundMetalFootstep).setName("Mob Creator").setEssValue(1);
+	public static final Block stairCompactWood = (new BlockStairs(53, planks)).setName("Wooden Stairs").setEssValue(2);
+	public static final Block chest = (new BlockChest(54)).setHardness(2.5F).setStepSound(soundWoodFootstep).setName("Chest").setEssValue(4);
+	public static final Block redstoneWire = (new BlockRedstoneWire(55, 84)).setHardness(0.0F).setStepSound(soundPowderFootstep).setName("Greenstone Wire").setEssValue(1);
+	public static final Block oreDiamond = (new BlockOre(56, 50)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setName("Diamond Ore").setEssValue(28);
+	public static final Block blockDiamond = (new BlockOreBlock(57, 40)).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setEssValue(504).setName("Diamond Block");
+	public static final Block workbench = (new BlockWorkbench(58)).setHardness(2.5F).setStepSound(soundWoodFootstep).setName("Workbench").setEssValue(8);
+	public static final Block crops = (new BlockCrops(59, 88)).setHardness(0.0F).setStepSound(soundGrassFootstep).setName("Crops").setEssValue(8);
+	public static final Block tilledField = (new BlockFarmland(60)).setHardness(0.6F).setStepSound(soundGravelFootstep).setName("Tilled Field").setEssValue(9);
+	public static final Block stoneOvenIdle = (new BlockFurnace(61, false)).setHardness(3.5F).setStepSound(soundStoneFootstep).setName("Furnace").setEssValue(8);
+	public static final Block stoneOvenActive = (new BlockFurnace(62, true)).setHardness(3.5F).setStepSound(soundStoneFootstep).setLightValue(14.0F / 16.0F).setName("Furnace").setEssValue(8);
+	public static final Block signStanding = (new BlockSign(63, TileEntitySign.class, true)).setHardness(1.0F).setStepSound(soundWoodFootstep).setName("Sign").setEssValue(1);
+	public static final Block doorWood = (new BlockDoor(64, Material.wood)).setHardness(3.0F).setStepSound(soundWoodFootstep).setName("Wooden Door").setEssValue(4);
+	public static final Block ladder = (new BlockLadder(65, 83)).setHardness(0.4F).setStepSound(soundWoodFootstep).setName("Ladder").setEssValue(1);
+	public static final Block minecartTrack = (new BlockMinecartTrack(66, 128)).setHardness(0.7F).setStepSound(soundMetalFootstep).setName("Rail").setEssValue(11);
+	public static final Block stairCompactStone = (new BlockStairs(67, cobblestone)).setName("Cobblestone Stairs").setEssValue(12);
+	public static final Block signWall = (new BlockSign(68, TileEntitySign.class, false)).setHardness(1.0F).setStepSound(soundWoodFootstep).setName("Sign").setEssValue(1);
+	public static final Block lever = (new BlockLever(69, 96)).setHardness(0.5F).setStepSound(soundWoodFootstep).setName("Lever").setEssValue(11);
+	public static final Block pressurePlateStone = (new BlockPressurePlate(70, stone.blockIndexInTexture, EnumMobType.mobs)).setHardness(0.5F).setStepSound(soundStoneFootstep).setName("Stone Pressure Plate").setEssValue(11);
+	public static final Block doorSteel = (new BlockDoor(71, Material.iron)).setHardness(5.0F).setStepSound(soundMetalFootstep).setName("Iron Door").setEssValue(32);
+	public static final Block pressurePlateWood = (new BlockPressurePlate(72, wood.blockIndexInTexture, EnumMobType.everything)).setHardness(0.5F).setStepSound(soundWoodFootstep).setName("Wooden Pressure Plate").setEssValue(1);
+	public static final Block oreRedstone = (new BlockRedstoneOre(73, 51, false)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setName("Greenstone Ore").setEssValue(12);
+	public static final Block oreRedstoneGlowing = (new BlockRedstoneOre(74, 51, true)).setLightValue(10.0F / 16.0F).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setName("Greenstone Ore").setEssValue(12);
+	public static final Block torchRedstoneIdle = (new BlockRedstoneTorch(75, 115, false)).setHardness(0.0F).setStepSound(soundWoodFootstep).setName("Greenstone Torch").setEssValue(8);
+	public static final Block torchRedstoneActive = (new BlockRedstoneTorch(76, 99, true)).setHardness(0.0F).setLightValue(0.5F).setStepSound(soundWoodFootstep).setName("Greenstone Torch").setEssValue(8);
+	public static final Block button = (new BlockButton(77, stone.blockIndexInTexture)).setHardness(0.5F).setStepSound(soundStoneFootstep).setName("Stone Button").setEssValue(2);
+	public static final Block snow = (new BlockSnow(78, 66)).setHardness(0.1F).setStepSound(soundClothFootstep).setName("Snow").setEssValue(4);
+	public static final Block ice = (new BlockIce(79, 67)).setHardness(0.5F).setLightOpacity(3).setStepSound(soundGlassFootstep).setName("Ice").setEssValue(4);
+	public static final Block blockSnow = (new BlockSnowBlock(80, 66)).setHardness(0.2F).setStepSound(soundClothFootstep).setName("Snow Block").setEssValue(2);
+	public static final Block cactus = (new BlockCactus(81, 70)).setHardness(0.4F).setStepSound(soundClothFootstep).setName("Cactus").setEssValue(1);
+	public static final Block blockClay = (new BlockClay(82, 72)).setHardness(0.6F).setStepSound(soundGravelFootstep).setName("Clay Block").setEssValue(8);
+	public static final Block reed = (new BlockReed(83, 73)).setHardness(0.0F).setStepSound(soundGrassFootstep).setName("Reed").setEssValue(4);
+	public static final Block jukebox = (new BlockJukeBox(84, 74)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setName("Jukebox").setEssValue(32);
+	public static final Block fence = (new BlockFence(85, 4)).setHardness(2.0F).setResistance(5.0F).setStepSound(soundWoodFootstep).setName("Fence").setEssValue(1);
 	public int blockIndexInTexture;
 	public final int blockID;
 	protected float hardness;
@@ -119,8 +122,22 @@
 	public float blockParticleGravity;
 	public final Material material;
 	public float slipperiness;
+	public boolean field_8144_72Oqw3429TI8hzf27v89Z538VRbsgF2pj0D81SJ8382HK8gS4P4A3E30873e;
+	public float field_8147_0302QNNy7BWr9fvSg53bo3h52Yd0s3sBK659JxLqc53AIWmi10i9E0y4Y008;
+	public boolean pickaxeEffective;
+	public int essenceValue;
+	public String blockName;
+	public boolean breakableInZM;
+	public boolean field_8232_4k8w3e5f26ugs937dSokGDXxBmWPP88K3JA1GT907Fv1DTkFL8dM2vt8hknU;
 
 	protected Block(int var1, Material var2) {
+		this.field_8144_72Oqw3429TI8hzf27v89Z538VRbsgF2pj0D81SJ8382HK8gS4P4A3E30873e = false;
+		this.field_8147_0302QNNy7BWr9fvSg53bo3h52Yd0s3sBK659JxLqc53AIWmi10i9E0y4Y008 = 0.0F;
+		this.pickaxeEffective = false;
+		this.essenceValue = 1;
+		this.blockName = "";
+		this.breakableInZM = false;
+		this.field_8232_4k8w3e5f26ugs937dSokGDXxBmWPP88K3JA1GT907Fv1DTkFL8dM2vt8hknU = false;
 		this.stepSound = soundPowderFootstep;
 		this.blockParticleGravity = 1.0F;
 		this.slipperiness = 0.6F;
@@ -138,31 +155,47 @@
 		}
 	}
 
-	protected Block(int var1, int var2, Material var3) {
+	public Block(int var1, int var2, Material var3) {
 		this(var1, var3);
 		this.blockIndexInTexture = var2;
 	}
 
-	protected Block setStepSound(StepSound var1) {
+	public Block setStepSound(StepSound var1) {
 		this.stepSound = var1;
 		return this;
 	}
 
-	protected Block setLightOpacity(int var1) {
+	public Block setLightOpacity(int var1) {
 		lightOpacity[this.blockID] = var1;
 		return this;
 	}
 
-	protected Block setLightValue(float var1) {
+	public Block setLightValue(float var1) {
 		lightValue[this.blockID] = (int)(15.0F * var1);
 		return this;
 	}
 
-	protected Block setResistance(float var1) {
+	public Block func_8119_1b5dH1WWcMpF1V68H8m8EZc7fRK8e3hz5O7Wug712q7QVU8915w75pQ4IeWl(float var1) {
+		this.field_8144_72Oqw3429TI8hzf27v89Z538VRbsgF2pj0D81SJ8382HK8gS4P4A3E30873e = true;
+		this.field_8147_0302QNNy7BWr9fvSg53bo3h52Yd0s3sBK659JxLqc53AIWmi10i9E0y4Y008 = var1;
+		return this;
+	}
+
+	public Block setResistance(float var1) {
 		this.resistance = var1 * 3.0F;
 		return this;
 	}
 
+	public Block setPickaxeEffective(boolean var1) {
+		this.pickaxeEffective = var1;
+		return this;
+	}
+
+	public Block setEssValue(int var1) {
+		this.essenceValue = var1;
+		return this;
+	}
+
 	private boolean getCanBlockGrass() {
 		return false;
 	}
@@ -175,7 +208,7 @@
 		return 0;
 	}
 
-	protected Block setHardness(float var1) {
+	public Block setHardness(float var1) {
 		this.hardness = var1;
 		if(this.resistance < var1 * 5.0F) {
 			this.resistance = var1 * 5.0F;
@@ -197,6 +230,10 @@
 		this.maxZ = (double)var6;
 	}
 
+	public float getRenderSideBrightness(IBlockAccess var1, int var2, int var3, int var4) {
+		return this.field_8144_72Oqw3429TI8hzf27v89Z538VRbsgF2pj0D81SJ8382HK8gS4P4A3E30873e ? this.field_8147_0302QNNy7BWr9fvSg53bo3h52Yd0s3sBK659JxLqc53AIWmi10i9E0y4Y008 : var1.getRenderSideBrightness(var2, var3, var4);
+	}
+
 	public float getBlockBrightness(IBlockAccess var1, int var2, int var3, int var4) {
 		return var1.getBrightness(var2, var3, var4);
 	}
@@ -209,6 +246,10 @@
 		return this.getBlockTextureFromSideAndMetadata(var5, var1.getBlockMetadata(var2, var3, var4));
 	}
 
+	public int func_8086_562a2lhwZKvA2q1SYRkk6a3ib277RkRI785Nc3EOo7NAF01ZLdp6C8534NoH(IBlockAccess var1, int var2, int var3, double var4, double var6, double var8) {
+		return this.getBlockTextureFromSide(var2);
+	}
+
 	public int getBlockTextureFromSideAndMetadata(int var1, int var2) {
 		return this.getBlockTextureFromSide(var1);
 	}
@@ -221,10 +262,10 @@
 		return AxisAlignedBB.getBoundingBoxFromPool((double)var2 + this.minX, (double)var3 + this.minY, (double)var4 + this.minZ, (double)var2 + this.maxX, (double)var3 + this.maxY, (double)var4 + this.maxZ);
 	}
 
-	public void getCollidingBoundingBoxes(World var1, int var2, int var3, int var4, AxisAlignedBB var5, ArrayList var6) {
-		AxisAlignedBB var7 = this.getCollisionBoundingBoxFromPool(var1, var2, var3, var4);
-		if(var7 != null && var5.intersectsWith(var7)) {
-			var6.add(var7);
+	public void getCollidingBoundingBoxes(World var1, int var2, int var3, int var4, AxisAlignedBB var5, ArrayList<AxisAlignedBB> var6, Entity var7) {
+		AxisAlignedBB var8 = this.getCollisionBoundingBoxFromPool(var1, var2, var3, var4);
+		if(var8 != null && var5.intersectsWith(var8)) {
+			var6.add(var8);
 		}
 
 	}
@@ -276,7 +317,7 @@
 	}
 
 	public float blockStrength(EntityPlayer var1) {
-		return this.hardness < 0.0F ? 0.0F : (!var1.canHarvestBlock(this) ? 1.0F / this.hardness / 100.0F : var1.getCurrentPlayerStrVsBlock(this) / this.hardness / 30.0F);
+		return this.hardness >= 0.0F ? (!var1.canHarvestBlock(this) ? 1.0F / this.hardness / 100.0F : var1.getCurrentPlayerStrVsBlock(this) / this.hardness / 30.0F) : (var1.inventory.getCurrentItem() == null || var1.inventory.getCurrentItem().getItem() != ExtItems.obsidianPick && var1.inventory.getCurrentItem().getItem() != ExtItems.eraser ? 0.0F : var1.getCurrentPlayerStrVsBlock(this) / 2.0F / 30.0F);
 	}
 
 	public void dropBlockAsItem(World var1, int var2, int var3, int var4, int var5) {
@@ -301,8 +342,8 @@
 					}
 				}
 			}
-
 		}
+
 	}
 
 	public float getExplosionResistance(Entity var1) {
@@ -473,10 +514,22 @@
 		return true;
 	}
 
+	public Block func_8091_6nAmgshv12CC9DlDC27iSsr36CH5syW1ChRUHTQWG3h8BFOoZHb76nu7wbgg(boolean var1) {
+		this.field_8232_4k8w3e5f26ugs937dSokGDXxBmWPP88K3JA1GT907Fv1DTkFL8dM2vt8hknU = var1;
+		return this;
+	}
+
+	public Block setName(String var1) {
+		this.blockName = var1;
+		return this;
+	}
+
 	static {
-		for(int var0 = 0; var0 < 256; ++var0) {
+		ExtBlocks.Register();
+
+		for(int var0 = 0; var0 < Short.MAX_VALUE; ++var0) {
 			if(blocksList[var0] != null) {
-				Item.itemsList[var0] = new ItemBlock(var0 - 256);
+				Item.itemsList[var0] = new ItemBlock(var0 - Short.MAX_VALUE);
 			}
 		}
 
--- /dev/null
+++ net/minecraft/src/BlockFlamingCube.java
@@ -1,0 +1,100 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockFlamingCube extends Block {
+	int renderMode = 1;
+
+	public BlockFlamingCube(int var1, int var2, int var3) {
+		super(var1, var2, Material.rock);
+		this.setTickOnLoad(true);
+		this.renderMode = 0;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return true;
+	}
+
+	public int getRenderType() {
+		return this.renderMode;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return true;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		super.updateTick(var1, var2, var3, var4, var5);
+		if(var1.getBlockMetadata(var2, var3, var4) == 0) {
+			this.onBlockAdded(var1, var2, var3, var4);
+		}
+
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		float var5 = 1.0F / 16.0F;
+		return AxisAlignedBB.getBoundingBoxFromPool((double)((float)var2 + var5), (double)var3, (double)((float)var4 + var5), (double)((float)(var2 + 1) - var5), (double)((float)(var3 + 1) - var5), (double)((float)(var4 + 1) - var5));
+	}
+
+	public AxisAlignedBB getSelectedBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		float var5 = 1.0F / 16.0F;
+		return AxisAlignedBB.getBoundingBoxFromPool((double)((float)var2 + var5), (double)var3, (double)((float)var4 + var5), (double)((float)(var2 + 1) - var5), (double)(var3 + 1), (double)((float)(var4 + 1) - var5));
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		if(this.h(var1, var2, var3, var4)) {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			boolean var7 = false;
+			if(!var1.isBlockNormalCube(var2 - 1, var3, var4) && var6 == 1) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2 + 1, var3, var4) && var6 == 2) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3, var4 - 1) && var6 == 3) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3, var4 + 1) && var6 == 4) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3 - 1, var4) && var6 == 5) {
+				var7 = true;
+			}
+
+			if(var7) {
+				this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+				var1.setBlockWithNotify(var2, var3, var4, 0);
+			}
+		}
+
+	}
+
+	private boolean h(World var1, int var2, int var3, int var4) {
+		if(!this.canPlaceBlockAt(var1, var2, var3, var4)) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+	}
+
+	public void onEntityCollidedWithBlock(World var1, int var2, int var3, int var4, Entity var5) {
+		if(!(var5 instanceof EntityItem)) {
+			var5.attackEntityFrom((Entity)null, 5);
+			var5.fire = 300;
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/HubChunkProviderGenerate.java
@@ -1,0 +1,35 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class HubChunkProviderGenerate extends ChunkProviderGenerate {
+	HubWorld worldObj;
+	Random random;
+
+	public HubChunkProviderGenerate(HubWorld var1) {
+		super(var1, var1.randomSeed);
+		this.worldObj = var1;
+		this.random = new Random(this.worldObj.randomSeed);
+	}
+
+	public Chunk provideChunk(int var1, int var2) {
+		Chunk var3 = new Chunk(this.worldObj, new byte[-Short.MIN_VALUE], var1, var2);
+		var3.isChunkRendered = true;
+
+		for(int var4 = 0; var4 < 16; ++var4) {
+			for(int var5 = 0; var5 < 16; ++var5) {
+				var3.blocks[Ext1605Utils.func_12140_8Oq1I57w9nMV4xcg8IUTb31D6Wumtz10kJJWyh9ORMW4uP8Zr0oyd0bFHQ1k(var4, 0, var5)] = (byte)ExtBlocks.dbgBlock.blockID;
+			}
+		}
+
+		var3.generateSkylightMap();
+		return var3;
+	}
+
+	public void populate(IChunkProvider var1, int var2, int var3) {
+		ThreadChunkPopulator.AddPopulateOperation(new ChunkProviderPopulateOperation(this, var1, var2, var3), this);
+	}
+
+	public void actualPopulate(IChunkProvider var1, int var2, int var3) {
+	}
+}
--- net/minecraft/src/CraftingInventoryCB.java
+++ net/minecraft/src/CraftingInventoryCB.java
@@ -3,7 +3,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-public class CraftingInventoryCB {
+public class CraftingInventoryCB extends InventoryCB {
 	protected List list = new ArrayList();
 
 	public void onCraftGuiClosed(EntityPlayer var1) {
@@ -14,6 +14,6 @@
 
 	}
 
-	public void onCraftMatrixChanged(IInventory var1) {
+	public void a(IInventory var1) {
 	}
 }
--- /dev/null
+++ net/minecraft/src/GuiInGameUnknownClass.java
@@ -1,0 +1,80 @@
+package net.minecraft.src;
+
+import java.util.ArrayDeque;
+import java.util.Queue;
+
+public class GuiInGameUnknownClass {
+	public boolean field_11178_8APKy72u19hOIaE2Z4Xvukph7W65JE3ad6i99NnTv27c0psoIZ64k98qwjAc = false;
+	public Queue<GuiInGameUnknownClass2> field_11177_7Zksb7i503i87T27QXh6g1K1pS0mrm03cH6J60Ws3B3hciqhuD9PIOw861xp = new ArrayDeque();
+
+	public static int func_11175_8my6U1vRYPACx6FVFgY5SF8R2AeWMyp28Qb3f5B97E8nPn67nnwq5B031eCj(GuiIngame var0, String var1) {
+		return var1.split("\n").length;
+	}
+
+	public static int func_11174_14kV142Ta558F2E46DP6LwA4XW2b3fOGmLXaa14a3n7mirTuNtZ4KPCPUkwP(GuiIngame var0, String var1, int var2) {
+		int var3 = var2;
+		String[] var4 = var1.split("\n");
+		String[] var5 = var4;
+		int var6 = var4.length;
+
+		for(int var7 = 0; var7 < var6; ++var7) {
+			String var8;
+			for(var8 = var5[var7]; var8.startsWith(" "); var8 = var8.substring(1)) {
+			}
+
+			int var9 = var0.mc.fontRenderer.getStringWidth(var8);
+			if(var9 > var3) {
+				var3 = var9;
+			}
+		}
+
+		return var3;
+	}
+
+	public void func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw(String var1, int var2) {
+		this.func_11171_604vK63ksNcNlyaekc36K9YTmY8326K6noo7h77989I2TsYQ61KM5M25Nii9(var1, var2, -1);
+	}
+
+	public void func_11171_604vK63ksNcNlyaekc36K9YTmY8326K6noo7h77989I2TsYQ61KM5M25Nii9(String var1, int var2, int var3) {
+		this.field_11177_7Zksb7i503i87T27QXh6g1K1pS0mrm03cH6J60Ws3B3hciqhuD9PIOw861xp.add(new GuiInGameUnknownClass2(var1, var2, var3));
+	}
+
+	public void func_11172_2QP80BU03R4UHdT475J8ac4cMi96bVM8m9S2H1g9E6TZY4f0OO33N6Bi3Rqm() {
+		if(!this.field_11177_7Zksb7i503i87T27QXh6g1K1pS0mrm03cH6J60Ws3B3hciqhuD9PIOw861xp.isEmpty()) {
+			GuiInGameUnknownClass2 var1 = (GuiInGameUnknownClass2)this.field_11177_7Zksb7i503i87T27QXh6g1K1pS0mrm03cH6J60Ws3B3hciqhuD9PIOw861xp.peek();
+			if(var1.field_8628_5D60yv253cRcGA1p2c559jzTJvqGE369RAfPv6g62Q8uXkc617ON6RdFwLZq == -1L) {
+				var1.field_8628_5D60yv253cRcGA1p2c559jzTJvqGE369RAfPv6g62Q8uXkc617ON6RdFwLZq = System.currentTimeMillis();
+			} else if(System.currentTimeMillis() > var1.field_8628_5D60yv253cRcGA1p2c559jzTJvqGE369RAfPv6g62Q8uXkc617ON6RdFwLZq + (long)var1.field_8630_3VXD2Ebm4sq1Ua61nY0XjjdZz4zX5u1B4NPjzd6i9nYHZZV1Z4rOO6r4NkAR) {
+				this.field_11177_7Zksb7i503i87T27QXh6g1K1pS0mrm03cH6J60Ws3B3hciqhuD9PIOw861xp.poll();
+			}
+		}
+
+	}
+
+	public void func_11173_66q8fr6Ip48GXz9oYC8o3XM5Qm0c28Ie4sSA6167vMMhs7iZl0ACYc6sz6VL(GuiIngame var1, int var2, int var3) {
+		this.func_11172_2QP80BU03R4UHdT475J8ac4cMi96bVM8m9S2H1g9E6TZY4f0OO33N6Bi3Rqm();
+		if(!this.field_11177_7Zksb7i503i87T27QXh6g1K1pS0mrm03cH6J60Ws3B3hciqhuD9PIOw861xp.isEmpty()) {
+			GuiInGameUnknownClass2 var4 = (GuiInGameUnknownClass2)this.field_11177_7Zksb7i503i87T27QXh6g1K1pS0mrm03cH6J60Ws3B3hciqhuD9PIOw861xp.peek();
+			byte var5 = 20;
+			byte var6 = 30;
+			byte var7 = 20;
+			int var15 = var7 + func_11175_8my6U1vRYPACx6FVFgY5SF8R2AeWMyp28Qb3f5B97E8nPn67nnwq5B031eCj(var1, var4.field_8629_38yXZ5dFY9GgxhmHS221M01TS31EN5EQ169OUGe5B07fwQaCd3Y2DMP0SnB5) * 10;
+			int var8 = var5 + func_11174_14kV142Ta558F2E46DP6LwA4XW2b3fOGmLXaa14a3n7mirTuNtZ4KPCPUkwP(var1, var4.field_8629_38yXZ5dFY9GgxhmHS221M01TS31EN5EQ169OUGe5B07fwQaCd3Y2DMP0SnB5, var5 - var2 / 2) + 20;
+			Gui.drawGradientRect(var5, var6, var8, var6 + var15, -1610612736, 1879048192);
+			String[] var9 = var4.field_8629_38yXZ5dFY9GgxhmHS221M01TS31EN5EQ169OUGe5B07fwQaCd3Y2DMP0SnB5.split("\n");
+			int var10 = 0;
+			String[] var11 = var9;
+			int var12 = var9.length;
+
+			for(int var13 = 0; var13 < var12; ++var13) {
+				String var14;
+				for(var14 = var11[var13]; var14.startsWith(" "); var14 = var14.substring(1)) {
+				}
+
+				Gui.drawString(var1.mc.fontRenderer, var14, var5 + 10, var6 + 10 + 10 * var10, 16777215);
+				++var10;
+			}
+		}
+
+	}
+}
--- net/minecraft/src/GuiScreen.java
+++ net/minecraft/src/GuiScreen.java
@@ -11,10 +11,10 @@
 import org.lwjgl.opengl.GL11;
 
 public class GuiScreen extends Gui {
-	protected Minecraft mc;
+	public Minecraft mc;
 	public int width;
 	public int height;
-	protected List controlList = new ArrayList();
+	protected List<GuiButton> controlList = new ArrayList();
 	public boolean allowUserInput = false;
 	protected FontRenderer fontRenderer;
 	private GuiButton selectedButton = null;
@@ -85,11 +85,11 @@
 	}
 
 	public void handleInput() {
-		while(Mouse.next()) {
+		while(InputHandler.NextEvent()) {
 			this.handleMouseInput();
 		}
 
-		while(Keyboard.next()) {
+		while(InputHandler.NextKBEvent()) {
 			this.handleKeyboardInput();
 		}
 
@@ -125,35 +125,39 @@
 	public void updateScreen() {
 	}
 
+	public void onGuiOpen() {
+	}
+
 	public void onGuiClosed() {
 	}
 
 	public void drawDefaultBackground() {
-		this.drawWorldBackground(0);
+		float var1 = (float)(System.currentTimeMillis() - this.mc.field_7273_9A23in1uqW3pg13kj4pOda0YD2W2B8toO2Xk31j7y1F2q5nDP0ompj85iXQC) / 10000.0F;
+		this.drawWorldBackground(var1);
 	}
 
-	public void drawWorldBackground(int var1) {
+	public void drawWorldBackground(float var1) {
 		if(this.mc.theWorld != null) {
-			this.drawGradientRect(0, 0, this.width, this.height, -1072689136, -804253680);
+			Gui.drawGradientRect(0, 0, this.width, this.height, -1072689136, -804253680);
 		} else {
 			this.drawBackground(var1);
 		}
 
 	}
 
-	public void drawBackground(int var1) {
+	public void drawBackground(float var1) {
 		GL11.glDisable(GL11.GL_LIGHTING);
 		GL11.glDisable(GL11.GL_FOG);
 		Tessellator var2 = Tessellator.instance;
 		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/dirt.png"));
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		float var3 = 32.0F;
-		var2.startDrawingQuads();
-		var2.setColorOpaque_I(4210752);
-		var2.addVertexWithUV(0.0D, (double)this.height, 0.0D, 0.0D, (double)((float)this.height / var3 + (float)var1));
-		var2.addVertexWithUV((double)this.width, (double)this.height, 0.0D, (double)((float)this.width / var3), (double)((float)this.height / var3 + (float)var1));
-		var2.addVertexWithUV((double)this.width, 0.0D, 0.0D, (double)((float)this.width / var3), (double)(0 + var1));
-		var2.addVertexWithUV(0.0D, 0.0D, 0.0D, 0.0D, (double)(0 + var1));
+		var2.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+		var2.setColorOpaque_I(3815994);
+		var2.addVertexWithUV(0.0D, (double)this.height, 0.0D, 0.0D, (double)((float)this.height / var3 + var1));
+		var2.addVertexWithUV((double)this.width, (double)this.height, 0.0D, (double)((float)this.width / var3), (double)((float)this.height / var3 + var1));
+		var2.addVertexWithUV((double)this.width, 0.0D, 0.0D, (double)((float)this.width / var3), (double)(0.0F + var1));
+		var2.addVertexWithUV(0.0D, 0.0D, 0.0D, 0.0D, (double)(0.0F + var1));
 		var2.draw();
 	}
 
@@ -162,5 +166,8 @@
 	}
 
 	public void deleteWorld(boolean var1, int var2) {
+	}
+
+	public void sliderReleasedOn1() {
 	}
 }
--- /dev/null
+++ net/minecraft/src/CommandMcMinimap.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandMcMinimap extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8579_4U10tcewRSy8yXOV77q13xjeMTd61uK6Me54PpxK9WL9XDV7E61214UPxA9H;
+    
+    CommandMcMinimap(final CommandManager abb) {
+        this.field_8579_4U10tcewRSy8yXOV77q13xjeMTd61uK6Me54PpxK9WL9XDV7E61214UPxA9H = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.InputOpenMinimap();
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/Refl.java
@@ -1,0 +1,68 @@
+package net.minecraft.src;
+
+import java.lang.reflect.Constructor;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+
+public class Refl {
+	public static boolean classExists(String var0) {
+		try {
+			Class.forName(var0);
+			return true;
+		} catch (ClassNotFoundException var2) {
+			return false;
+		}
+	}
+
+	public static Object invoke(Object var0, String var1, Class[] var2, Object var3) {
+		try {
+			Method var4 = (var0 instanceof Class ? (Class)var0 : var0.getClass()).getMethod(var1, var2);
+			return var4.invoke(var0 instanceof Class ? null : var0, new Object[]{var3});
+		} catch (IllegalAccessException var5) {
+			var5.printStackTrace();
+		} catch (IllegalArgumentException var6) {
+			var6.printStackTrace();
+		} catch (InvocationTargetException var7) {
+			var7.printStackTrace();
+		} catch (NoSuchMethodException var8) {
+			var8.printStackTrace();
+		} catch (SecurityException var9) {
+			var9.printStackTrace();
+		}
+
+		return null;
+	}
+
+	public static Object getField(Object var0, String var1, Class var2) {
+		try {
+			return var0.getClass().getField(var1).get(var0);
+		} catch (IllegalAccessException | NoSuchFieldException | SecurityException | IllegalArgumentException var4) {
+			var4.printStackTrace();
+			return null;
+		}
+	}
+
+	public static Object instantiate(String var0, Class[] var1, Object... var2) {
+		try {
+			Class var3 = Class.forName(var0);
+			Constructor var4 = var3.getConstructor(var1);
+			return var4.newInstance(var2);
+		} catch (NoSuchMethodException | SecurityException | InstantiationException | IllegalAccessException | IllegalArgumentException | InvocationTargetException | ClassNotFoundException var5) {
+			var5.printStackTrace();
+			return null;
+		}
+	}
+
+	public static String func_9784_71s752so86DwU77rXlw1cHR51hpLewQ9ESrHcQon430rMgQXErcroRxA09ph(Object var0) {
+		return var0.getClass().getName();
+	}
+
+	public static Class func_9786_8Ehd0r9aAHEF32cGHok0smD4vA0B3N9Qx96zs8VmDa6dhPs1YF2JWfDn7x46(String var0) {
+		try {
+			return Class.forName(var0);
+		} catch (ClassNotFoundException var2) {
+			var2.printStackTrace();
+			return null;
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockWireframeBlock2.java
@@ -1,0 +1,70 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import org.lwjgl.input.Keyboard;
+
+public class BlockWireframeBlock2 extends BlockGlass implements BlockUnknownInterface {
+	public BlockWireframeBlock2(int var1, int var2, Material var3) {
+		super(var1, var2, var3, false);
+	}
+
+	public void func_8297_77HIWfELdva1mN9P09GxJcvD9xKJmd9Fnpldg7zWs7fFI31aYjkvgAve3sf2(ZMWorld var1, XYZv var2) {
+		var1.setBlock((int)var2.x, (int)var2.y, (int)var2.z, 0);
+
+		int var3;
+		for(var3 = -1; var3 <= 1; var3 += 2) {
+			if(var1.getBlockId((int)var2.x + var3, (int)var2.y, (int)var2.z) == this.blockID) {
+				this.func_8297_77HIWfELdva1mN9P09GxJcvD9xKJmd9Fnpldg7zWs7fFI31aYjkvgAve3sf2(var1, var2.add((long)var3, 0L, 0L));
+			}
+		}
+
+		for(var3 = -1; var3 <= 1; var3 += 2) {
+			if(var1.getBlockId((int)var2.x, (int)var2.y + var3, (int)var2.z) == this.blockID) {
+				this.func_8297_77HIWfELdva1mN9P09GxJcvD9xKJmd9Fnpldg7zWs7fFI31aYjkvgAve3sf2(var1, var2.add(0L, (long)var3, 0L));
+			}
+		}
+
+		for(var3 = -1; var3 <= 1; var3 += 2) {
+			if(var1.getBlockId((int)var2.x, (int)var2.y, (int)var2.z + var3) == this.blockID) {
+				this.func_8297_77HIWfELdva1mN9P09GxJcvD9xKJmd9Fnpldg7zWs7fFI31aYjkvgAve3sf2(var1, var2.add(0L, 0L, (long)var3));
+			}
+		}
+
+	}
+
+	public void func_8286_2f84KM1xKjK9eBj4915qo36L405Hm9W3JZ41244r918IGv3BpYiut0G1VBGw(EntityPlayerZombieModeClient var1, XYZv var2) {
+		int var3 = var1.worldIn.func_7547_7wmn1Zcw5XkXB713A8pO6G393j0dbhaxkUpdvto5V7Th2f9uwaIY1qagv9mW(var2);
+		if(var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.func_8686_3fQ4Zvl6ZGZtMHz8BDhx9ci7pQP8EhDqu7Ri4ywsZ3854I2e4ev3W4B3R3iy() >= (long)var3) {
+			var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.func_8688_6DmcXOP1jZRKDasP2440t8904Ry66MRC3K00nwd8iGDlPgYii5d1f50QVICF((long)(-var3));
+			var1.field_9097_867sEKNEsa45Xq4Etlk5s449h7UUOWVcX6nYd2PGjFy373Y2PXcol521PBg2 = null;
+			this.func_8297_77HIWfELdva1mN9P09GxJcvD9xKJmd9Fnpldg7zWs7fFI31aYjkvgAve3sf2(var1.worldIn, var2);
+		} else {
+			InputHandler.mc.ingameGUI.addChatMessage("Not enough points!");
+		}
+
+	}
+
+	public String func_8287_3t2cX22yD5J55Zh6G33szTT1PY525wnemKTHp3jQ2r2jhLod41nugOV5rhqI(EntityPlayerZombieModeClient var1, XYZv var2) {
+		String var3 = Keyboard.getKeyName(InputHandler.mc.options.keyBindInventory.keyCode);
+		return "[" + var3 + "] Open [" + var1.worldIn.func_7547_7wmn1Zcw5XkXB713A8pO6G393j0dbhaxkUpdvto5V7Th2f9uwaIY1qagv9mW(var2) + " points]";
+	}
+
+	public int func_8288_98t8S89tFW42rGL9ALNhVV7sJ5qB3j8Z10bg69FoU68e30R380Rp4L4Dn5kC() {
+		return 11;
+	}
+
+	public void getCollidingBoundingBoxes(World var1, int var2, int var3, int var4, AxisAlignedBB var5, ArrayList<AxisAlignedBB> var6, Entity var7) {
+		if(!(var1 instanceof ZMWorld) || !(var7 instanceof EntityZombie) && !(var7 instanceof EntityEssenceProjectile)) {
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6, var7);
+		}
+
+	}
+
+	public void velocityToAddToEntity(World var1, int var2, int var3, int var4, Entity var5, Vec3D var6) {
+		if(var1 instanceof ZMWorld && var5 instanceof EntityZombie) {
+			var6.xCoord += var5.motionX * 2.0D;
+			var6.zCoord += var5.motionZ * 2.0D;
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/CubeListElement.java
@@ -1,0 +1,29 @@
+package net.minecraft.src;
+
+public class CubeListElement {
+	public int texOffX;
+	public int texOffY;
+	public float offsetX;
+	public float offsetY;
+	public float offsetZ;
+	public int widthX;
+	public int height;
+	public int widthZ;
+	public boolean mirror = false;
+
+	public CubeListElement(int var1, int var2, float var3, float var4, float var5, int var6, int var7, int var8) {
+		this.texOffX = var1;
+		this.texOffY = var2;
+		this.offsetX = var3;
+		this.offsetY = var4;
+		this.offsetZ = var5;
+		this.widthX = var6;
+		this.height = var7;
+		this.widthZ = var8;
+	}
+
+	public CubeListElement(int var1, int var2) {
+		this.texOffX = var1;
+		this.texOffY = var2;
+	}
+}
--- net/minecraft/src/EntityZombie.java
+++ net/minecraft/src/EntityZombie.java
@@ -1,8 +1,21 @@
 package net.minecraft.src;
 
 public class EntityZombie extends EntityMob {
+	public boolean field_9125_1El4crnUetNgXSg7SKknZ3Xrp3gsWZDYE4H3O0PK0rXkIR7u7tRB3Mk2D66I;
+	public HandlerSetCheckpointUnknownClass2 field_9124_4tH5o01tS5v858g45IUmtS5yD0VBrCu75xP0sp51kFpd4DMdwEBUTO9F2jYg;
+	public boolean field_9123_9I0lZoUovDGeve5cJx6Oj7LWM19fChsy14XQ1T0l4iJ7xsy2w4VcEy1Ct8xc;
+	public int field_9126_8303N9lSB88n8wLU2F4D0UiDwdf83IeH7345Q51R43R5J8Bd14BvXn73d0RC;
+
+	public EntityZombie(World var1, HandlerSetCheckpointUnknownClass2 var2) {
+		this(var1);
+		this.field_9124_4tH5o01tS5v858g45IUmtS5yD0VBrCu75xP0sp51kFpd4DMdwEBUTO9F2jYg = var2;
+	}
+
 	public EntityZombie(World var1) {
 		super(var1);
+		this.field_9125_1El4crnUetNgXSg7SKknZ3Xrp3gsWZDYE4H3O0PK0rXkIR7u7tRB3Mk2D66I = false;
+		this.field_9123_9I0lZoUovDGeve5cJx6Oj7LWM19fChsy14XQ1T0l4iJ7xsy2w4VcEy1Ct8xc = false;
+		this.field_9126_8303N9lSB88n8wLU2F4D0UiDwdf83IeH7345Q51R43R5J8Bd14BvXn73d0RC = 0;
 		this.texture = "/mob/zombie.png";
 		this.moveSpeed = 0.5F;
 		this.attackStrength = 5;
@@ -16,6 +29,22 @@
 			}
 		}
 
+		if(this.worldObj instanceof ZMWorld) {
+			if(this.posY < (double)(this.worldObj instanceof WorldZMSpawnWorld1 ? 64 : (this.worldObj instanceof WorldZMSpawnWorld2 ? 71 : 64))) {
+				((ZMWorld)this.worldObj).func_7554_0I283audif5iacL5K5Ui88QGwr47fu94TPZL1hdjcTpUe0ULL4h3e2jdjO8b(this);
+			}
+
+			if(this.field_9124_4tH5o01tS5v858g45IUmtS5yD0VBrCu75xP0sp51kFpd4DMdwEBUTO9F2jYg != null && !this.field_9123_9I0lZoUovDGeve5cJx6Oj7LWM19fChsy14XQ1T0l4iJ7xsy2w4VcEy1Ct8xc) {
+				this.field_9123_9I0lZoUovDGeve5cJx6Oj7LWM19fChsy14XQ1T0l4iJ7xsy2w4VcEy1Ct8xc = this.field_9124_4tH5o01tS5v858g45IUmtS5yD0VBrCu75xP0sp51kFpd4DMdwEBUTO9F2jYg.func_12185_77E7ly6r5p8AgeD7j1MC3wrd4wUdbSPPEtyupBLDu5J7c0z302AEf633qiD9(this.posX, this.posZ) < 3.0D;
+				if(!this.field_9123_9I0lZoUovDGeve5cJx6Oj7LWM19fChsy14XQ1T0l4iJ7xsy2w4VcEy1Ct8xc) {
+					++this.field_9126_8303N9lSB88n8wLU2F4D0UiDwdf83IeH7345Q51R43R5J8Bd14BvXn73d0RC;
+					if(this.field_9126_8303N9lSB88n8wLU2F4D0UiDwdf83IeH7345Q51R43R5J8Bd14BvXn73d0RC > 120 && ((ZMWorld)this.worldObj).func_7554_0I283audif5iacL5K5Ui88QGwr47fu94TPZL1hdjcTpUe0ULL4h3e2jdjO8b(this)) {
+						this.field_9126_8303N9lSB88n8wLU2F4D0UiDwdf83IeH7345Q51R43R5J8Bd14BvXn73d0RC = 0;
+					}
+				}
+			}
+		}
+
 		super.onLivingUpdate();
 	}
 
@@ -32,6 +61,88 @@
 	}
 
 	protected int getDropItemId() {
-		return Item.feather.shiftedIndex;
+		return this.worldObj instanceof ZMWorld ? -1 : Item.feather.shiftedIndex;
+	}
+
+	public int getEssenceDroppedOnKill() {
+		return 4 + this.rand.nextInt(6);
+	}
+
+	public float maxPathFindingDistance() {
+		return this.worldObj instanceof ZMWorld ? 64.0F : 16.0F;
+	}
+
+	protected Entity findPlayerToAttack() {
+		EntityPlayer var1 = this.worldObj.getClosestPlayerToEntity(this, 18.0D);
+		return var1 != null && this.canEntityBeSeen(var1) ? var1 : null;
+	}
+
+	public boolean attackEntityFrom(Entity var1, int var2) {
+		int var3 = this.health;
+		super.attackEntityFrom(var1, var2);
+		if(var3 > 0 && this.health <= 0 && this.worldObj instanceof ZMWorld) {
+			this.field_9125_1El4crnUetNgXSg7SKknZ3Xrp3gsWZDYE4H3O0PK0rXkIR7u7tRB3Mk2D66I = true;
+			if(var1 instanceof EntityPlayerZombieModeClient) {
+				((InventoryVendingMachine)((EntityPlayerZombieModeClient)var1).inventory).func_8688_6DmcXOP1jZRKDasP2440t8904Ry66MRC3K00nwd8iGDlPgYii5d1f50QVICF(120L);
+			}
+
+			((ZMWorld)this.worldObj).func_7552_036DW72WL0cd7Vw9IwUIgji0lq5c1Ohi97waHrW37UV3X1L0uWXa6RqT45zH(this);
+		}
+
+		return super.attackEntityFrom(var1, var2);
+	}
+
+	protected void attackEntity(Entity var1, float var2) {
+		if((double)var2 < 2.5D && var1.boundingBox.maxY > this.boundingBox.minY && var1.boundingBox.minY < this.boundingBox.maxY) {
+			this.attackTime = 20;
+			this.func_9122_32wo4zf7J8f8iCDk8p7I4yFwMi1AYyUTD75Qm44x1RATC7tC65oa39Qk1z36(var1, var2);
+			var1.attackEntityFrom(this, this.attackStrength);
+		}
+
+	}
+
+	void func_9122_32wo4zf7J8f8iCDk8p7I4yFwMi1AYyUTD75Qm44x1RATC7tC65oa39Qk1z36(Entity var1, float var2) {
+		if(this.onGround) {
+			double var3;
+			double var5;
+			float var7;
+			if(var2 > 2.0F && var2 < 12.0F && this.rand.nextInt(50) == 0 && this.onGround) {
+				var3 = var1.posX - this.posX;
+				var5 = var1.posZ - this.posZ;
+				var7 = MathHelper.sqrt_double(var3 * var3 + var5 * var5);
+				this.motionX = var3 / (double)var7 * 0.5D * (double)0.8F + this.motionX * (double)0.2F;
+				this.motionZ = var5 / (double)var7 * 0.5D * (double)0.8F + this.motionZ * (double)0.2F;
+			}
+
+			if(var2 > 2.0F && var2 < 6.0F && this.rand.nextInt(35) == 0 && this.onGround) {
+				var3 = var1.posX - this.posX;
+				var5 = var1.posZ + this.posZ;
+				var7 = MathHelper.sqrt_double(var3 * var3 + var5 * var5);
+				this.motionX = var3 / (double)var7 * 0.5D * (double)0.8F + this.motionX * (double)0.2F;
+				this.motionZ = var5 / (double)var7 * 0.5D * (double)0.8F + this.motionZ * (double)0.2F;
+				this.motionY = (double)0.2F;
+			}
+
+			if(var2 > 2.0F && var2 < 6.0F && this.rand.nextInt(35) == 0 && this.onGround) {
+				var3 = var1.posX + this.posX;
+				var5 = var1.posZ - this.posZ;
+				var7 = MathHelper.sqrt_double(var3 * var3 + var5 * var5);
+				this.motionX = var3 / (double)var7 * 0.5D * (double)0.8F + this.motionX * (double)0.2F;
+				this.motionZ = var5 / (double)var7 * 0.5D * (double)0.8F + this.motionZ * (double)0.2F;
+				this.motionY = (double)0.2F;
+			}
+
+			if(var2 == 6.0F && this.rand.nextInt(70) == 0 && this.onGround) {
+				var3 = var1.posX + this.posX;
+				var5 = var1.posZ + this.posZ;
+				var7 = MathHelper.sqrt_double(var3 * var3 + var5 * var5);
+				this.motionX = var3 / (double)var7 * 0.5D * (double)0.8F + this.motionX * (double)0.2F;
+				this.motionZ = var5 / (double)var7 * 0.5D * (double)0.8F + this.motionZ * (double)0.2F;
+				this.motionY = (double)0.4F;
+			}
+		} else {
+			super.attackEntity(var1, var2);
+		}
+
 	}
 }
--- net/minecraft/src/BlockLeaves.java
+++ net/minecraft/src/BlockLeaves.java
@@ -6,7 +6,7 @@
 	private int leafTexIndex;
 	private int decayCounter = 0;
 
-	protected BlockLeaves(int var1, int var2) {
+	public BlockLeaves(int var1, int var2) {
 		super(var1, var2, Material.leaves, false);
 		this.leafTexIndex = var2;
 		this.setTickOnLoad(true);
@@ -25,6 +25,7 @@
 				this.updateCurrentLeaves(var1, var2, var3, var4);
 			}
 		}
+
 	}
 
 	public void updateCurrentLeaves(World var1, int var2, int var3, int var4) {
@@ -55,15 +56,13 @@
 				this.updateConnectedLeaves(var1, var2 - 1, var3, var4, var6);
 				this.updateConnectedLeaves(var1, var2 + 1, var3, var4, var6);
 			}
-
 		}
+
 	}
 
 	private int getConnectionStrength(World var1, int var2, int var3, int var4, int var5) {
 		int var6 = var1.getBlockId(var2, var3, var4);
-		if(var6 == Block.wood.blockID) {
-			return 16;
-		} else {
+		if(var6 != Block.wood.blockID && var6 != ExtBlocks.FireSkyLeaves.blockID && var6 != ExtBlocks.AncientWood.blockID && var6 != ExtBlocks.TeaBush.blockID) {
 			if(var6 == this.blockID) {
 				int var7 = var1.getBlockMetadata(var2, var3, var4);
 				if(var7 != 0 && var7 > var5) {
@@ -72,11 +71,19 @@
 			}
 
 			return var5;
+		} else {
+			return 16;
 		}
 	}
 
 	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
 		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		if(var5.nextBoolean()) {
+			double var7 = (var5.nextDouble() - 0.5D) * 0.1D;
+			double var9 = (var5.nextDouble() - 0.5D) * 0.1D;
+			var1.spawnParticle("leaf", (double)var2, (double)var3, (double)var4, var7, -0.1D, var9);
+		}
+
 		if(var6 == 0) {
 			this.decayCounter = 0;
 			this.updateCurrentLeaves(var1, var2, var3, var4);
@@ -98,7 +105,7 @@
 	}
 
 	public int idDropped(int var1, Random var2) {
-		return Block.sapling.blockID;
+		return this.blockID == ExtBlocks.TeaBush.blockID ? (var2.nextBoolean() ? Block.sapling.blockID : ExtItems.TeaLeaf.shiftedIndex) : (var2.nextBoolean() ? Block.sapling.blockID : (var2.nextBoolean() ? Item.appleRed.shiftedIndex : (var2.nextBoolean() ? ExtItems.Pear.shiftedIndex : ExtItems.RokkubitoruTune.shiftedIndex)));
 	}
 
 	public boolean isOpaqueCube() {
--- net/minecraft/src/TileEntityMobSpawnerRenderer.java
+++ net/minecraft/src/TileEntityMobSpawnerRenderer.java
@@ -5,7 +5,7 @@
 import org.lwjgl.opengl.GL11;
 
 public class TileEntityMobSpawnerRenderer extends TileEntitySpecialRenderer {
-	private Map entityHashMap = new HashMap();
+	private Map<String, Entity> entityHashMap = new HashMap();
 
 	public void renderTileEntityMobSpawner(TileEntityMobSpawner var1, double var2, double var4, double var6, float var8) {
 		GL11.glPushMatrix();
--- /dev/null
+++ net/minecraft/src/WorldGenHouseBig.java
@@ -1,0 +1,521 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class WorldGenHouseBig implements IHouseBig {
+	private final NoiseGeneratorPerlin field_9896_01Q1s81DUx467KLo2kQqjfIuiCC55M9Jh6q0VrbdGe64M7g8UGdHGUv6e8po;
+	private final NoiseGeneratorPerlin field_9898_214v7j53QG02jhmR6FG45dcc8P97KCHkC3qqCzWL7RuZFSkVJR9WS01m1420;
+	private final NoiseGeneratorPerlin field_9897_8ztr5uZa0264BA160Bdg24e6wPVIaNKr9wuJ56FsQ40wc64L5Q5w3s87OK08;
+
+	public WorldGenHouseBig(Random var1) {
+		this.field_9896_01Q1s81DUx467KLo2kQqjfIuiCC55M9Jh6q0VrbdGe64M7g8UGdHGUv6e8po = new NoiseGeneratorPerlin(var1);
+		this.field_9898_214v7j53QG02jhmR6FG45dcc8P97KCHkC3qqCzWL7RuZFSkVJR9WS01m1420 = new NoiseGeneratorPerlin(var1);
+		this.field_9897_8ztr5uZa0264BA160Bdg24e6wPVIaNKr9wuJ56FsQ40wc64L5Q5w3s87OK08 = new NoiseGeneratorPerlin(var1);
+	}
+
+	public float func_9883_913vTZx6no47397W6wG95Q5uB254nJBZ27osnW242XcA9M93Alb1ry5oPyVe() {
+		return 1.0F;
+	}
+
+	private EnumHouseBig func_9889_6V9M1y0rD66IzESBhbtaW530L5zr7MXWWxju10Ibed9N0Yq7r7jZ01hE282X(int var1, int var2, int var3, int var4) {
+		int var5 = var1 * 5436345 + var2 * -12416265;
+		int var6 = var3 * 4256285 + var4 * -82344232;
+		double var7 = this.field_9898_214v7j53QG02jhmR6FG45dcc8P97KCHkC3qqCzWL7RuZFSkVJR9WS01m1420.generateNoise((double)var5 / 634.0D, (double)var6 / 634.0D);
+		if(var7 < 0.0D) {
+			var7 = -var7;
+		}
+
+		if(var7 > 1.0D) {
+			var7 %= 1.0D;
+		}
+
+		return var7 < 0.3D ? EnumHouseBig.Door : (var7 < 0.4D ? EnumHouseBig.BlackGlass : (var7 < 0.5D ? EnumHouseBig.WhiteGlass : (var7 < 0.6D ? EnumHouseBig.BlueGlass : (var7 < 0.7D ? EnumHouseBig.LimeGlass : (var7 < 0.8D ? EnumHouseBig.PlateDecor : (var7 < 0.9D ? EnumHouseBig.Doorless : EnumHouseBig.Door))))));
+	}
+
+	private void func_9894_1X8Miaez5C7C4Stve4NvGnN1qCVG3CsBzj36x6U4HV52nY6HeXJq0BcxGyYm() {
+	}
+
+	private EnumHouseBig[] func_9886_8ZH5qLYxNz467u1uJMUDJalqGg1WFDGTR9GCMu99tnz5ZT7AKQ9Roo86275S(int var1, int var2, int var3) {
+		return new EnumHouseBig[]{this.func_9889_6V9M1y0rD66IzESBhbtaW530L5zr7MXWWxju10Ibed9N0Yq7r7jZ01hE282X(var1, var2, var3, 0), this.func_9889_6V9M1y0rD66IzESBhbtaW530L5zr7MXWWxju10Ibed9N0Yq7r7jZ01hE282X(var1, var2, var3, 1), this.func_9889_6V9M1y0rD66IzESBhbtaW530L5zr7MXWWxju10Ibed9N0Yq7r7jZ01hE282X(var1, var2, var3, 2), this.func_9889_6V9M1y0rD66IzESBhbtaW530L5zr7MXWWxju10Ibed9N0Yq7r7jZ01hE282X(var1, var2, var3, 3)};
+	}
+
+	private boolean func_9887_222reZAc4tQC2IipCEZax67PG0WkcvUJGGzDPQ79N2ThadrSzs8v18glXqA7(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockId(var2, var3, var4);
+		return var5 != 0 && Block.blocksList[var5].isOpaqueCube() && Block.blocksList[var5].isCollidable() && Block.blocksList[var5].renderAsNormalBlock();
+	}
+
+	private boolean func_9895_64EF8cC2FppVMJU2QNG1K3esZ0sOSbsYZrKxu7wCZWa489iFH4s610HxG600(World var1, int var2, int var3, int var4) {
+		int var5 = 256;
+
+		for(int var6 = 0; var6 < 8; ++var6) {
+			for(int var7 = 0; var7 < 15; ++var7) {
+				for(int var8 = 0; var8 < 15; ++var8) {
+					if(this.func_9887_222reZAc4tQC2IipCEZax67PG0WkcvUJGGzDPQ79N2ThadrSzs8v18glXqA7(var1, var2 * 16 + var7, var3 + var6, var4 * 16 + var8)) {
+						--var5;
+						if(var5 == 0) {
+							return false;
+						}
+					}
+				}
+			}
+		}
+
+		return true;
+	}
+
+	private void func_9891_7jRn6QF8j7SHbcNzXW806SpN34AM1N24Y7CPdJI866WCP1JJ13ryLsQ154pY(World var1, int var2, int var3, int var4, int var5) {
+		for(int var6 = var4; var6 >= 0; --var6) {
+			if(this.func_9887_222reZAc4tQC2IipCEZax67PG0WkcvUJGGzDPQ79N2ThadrSzs8v18glXqA7(var1, var3, var6, var5)) {
+				return;
+			}
+
+			var1.setBlock(var3, var6, var5, var2);
+		}
+
+	}
+
+	private void func_9888_96i39bh95up2Yb8Yr4Q9w6Vx88D9gjQbyaAVr1LRMqsqkEvV8suQKH360cb2(World var1, int var2, int var3, int var4, int var5, int var6, int var7, Block var8, int var9, int var10) {
+		switch(var9) {
+		case 0:
+			var2 += 11;
+			++var3;
+			var4 += 7;
+			var2 += var5;
+			var3 += var6;
+			var4 += var7;
+			break;
+		case 1:
+			var2 += 8;
+			++var3;
+			var4 += 11;
+			var2 -= var7;
+			var3 += var6;
+			var4 += var5;
+			break;
+		case 2:
+			var2 += 7;
+			++var3;
+			var4 += 4;
+			var2 += var7;
+			var3 += var6;
+			var4 -= var5;
+			break;
+		case 3:
+			var2 += 4;
+			++var3;
+			var4 += 8;
+			var2 -= var5;
+			var3 += var6;
+			var4 -= var7;
+		}
+
+		var1.setBlockAndMetadata(var2, var3, var4, var8.blockID, var9);
+		var1.setBlockAndMetadata(var2, var3 + 1, var4, var8.blockID, var9 + 8 + var10);
+	}
+
+	private void func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(World var1, int var2, int var3, int var4, int var5, int var6, int var7, Block var8, int var9) {
+		switch(var9) {
+		case 0:
+			var2 += 11;
+			++var3;
+			var4 += 7;
+			var2 += var5;
+			var3 += var6;
+			var4 += var7;
+			break;
+		case 1:
+			var2 += 8;
+			++var3;
+			var4 += 11;
+			var2 -= var7;
+			var3 += var6;
+			var4 += var5;
+			break;
+		case 2:
+			var2 += 7;
+			++var3;
+			var4 += 4;
+			var2 += var7;
+			var3 += var6;
+			var4 -= var5;
+			break;
+		case 3:
+			var2 += 4;
+			++var3;
+			var4 += 8;
+			var2 -= var5;
+			var3 += var6;
+			var4 -= var7;
+		}
+
+		var1.setBlock(var2, var3, var4, var8.blockID);
+	}
+
+	private void func_9885_1L9Ls7B6F25a90S6Izh91tZ09Cs2reys4i6eRTG1i56p88AUU5809f3N6iTL(World var1, int var2, int var3, int var4, WorldGenHouseBigInterior var5) {
+		if(!var5.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBig.class, var2, var4)) {
+		}
+
+		int var6 = var2 * 16;
+		int var7 = var4 * 16;
+
+		int var8;
+		int var9;
+		int var10;
+		for(var8 = 7; var8 > 0; --var8) {
+			var1.setBlock(var6 + 2, var3 + var8, var7 + 2, ExtBlocks.SlatePillar.blockID);
+			var1.setBlock(var6 + 2, var3 + var8, var7 + 13, ExtBlocks.SlatePillar.blockID);
+			var1.setBlock(var6 + 13, var3 + var8, var7 + 2, ExtBlocks.SlatePillar.blockID);
+			var1.setBlock(var6 + 13, var3 + var8, var7 + 13, ExtBlocks.SlatePillar.blockID);
+			if(var8 != 7) {
+				for(var9 = 3; var9 <= 12; ++var9) {
+					var10 = var9 >= 6 && var9 <= 9 ? 1 : 0;
+					if(var10 != 0 || var8 < 5) {
+						var1.setBlock(var6 + var9, var3 + var8, var7 + 3 + var10, ExtBlocks.SlateBricks.blockID);
+						var1.setBlock(var6 + var9, var3 + var8, var7 + 12 - var10, ExtBlocks.SlateBricks.blockID);
+					}
+				}
+
+				for(var9 = 4; var9 <= 11; ++var9) {
+					var10 = var9 >= 6 && var9 <= 9 ? 1 : 0;
+					if(var10 != 0 || var8 < 5) {
+						var1.setBlock(var6 + 3 + var10, var3 + var8, var7 + var9, ExtBlocks.SlateBricks.blockID);
+						var1.setBlock(var6 + 12 - var10, var3 + var8, var7 + var9, ExtBlocks.SlateBricks.blockID);
+					}
+				}
+			}
+		}
+
+		for(var8 = 2; var8 <= 13; ++var8) {
+			for(var9 = 2; var9 <= 13; ++var9) {
+				var1.setBlock(var6 + var8, var3, var7 + var9, ExtBlocks.SmoothStone.blockID);
+			}
+		}
+
+		for(var8 = 1; var8 < 15; ++var8) {
+			for(var9 = 7; var9 <= 8; ++var9) {
+				var1.setBlock(var6 + var8, var3 + 7, var7 + var9, ExtBlocks.FlamewoodPillar.blockID);
+				var1.setBlock(var6 + var9, var3 + 7, var7 + var8, ExtBlocks.FlamewoodPillar.blockID);
+			}
+		}
+
+		for(var8 = 5; var8 <= 10; ++var8) {
+			for(var9 = 5; var9 <= 10; ++var9) {
+				var1.setBlock(var6 + var8, var3 + 7, var7 + var9, ExtBlocks.FlamewoodPillar.blockID);
+			}
+		}
+
+		for(var8 = 0; var8 < 4; ++var8) {
+			var1.setBlock(var6 + 4 - var8, var3 + 6, var7 + 6, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 4 - var8, var3 + 6, var7 + 9, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 11 + var8, var3 + 6, var7 + 6, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 11 + var8, var3 + 6, var7 + 9, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 6, var3 + 6, var7 + 4 - var8, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 9, var3 + 6, var7 + 4 - var8, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 6, var3 + 6, var7 + 11 + var8, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 9, var3 + 6, var7 + 11 + var8, ExtBlocks.FlamewoodPillar.blockID);
+		}
+
+		var1.setBlock(var6 + 4, var3 + 6, var7 + 4, ExtBlocks.FlamewoodPillar.blockID);
+		var1.setBlock(var6 + 4, var3 + 6, var7 + 5, ExtBlocks.FlamewoodPillar.blockID);
+		var1.setBlock(var6 + 5, var3 + 6, var7 + 4, ExtBlocks.FlamewoodPillar.blockID);
+		var1.setBlock(var6 + 11, var3 + 6, var7 + 11, ExtBlocks.FlamewoodPillar.blockID);
+		var1.setBlock(var6 + 10, var3 + 6, var7 + 11, ExtBlocks.FlamewoodPillar.blockID);
+		var1.setBlock(var6 + 11, var3 + 6, var7 + 10, ExtBlocks.FlamewoodPillar.blockID);
+		var1.setBlock(var6 + 11, var3 + 6, var7 + 4, ExtBlocks.FlamewoodPillar.blockID);
+		var1.setBlock(var6 + 10, var3 + 6, var7 + 4, ExtBlocks.FlamewoodPillar.blockID);
+		var1.setBlock(var6 + 11, var3 + 6, var7 + 5, ExtBlocks.FlamewoodPillar.blockID);
+		var1.setBlock(var6 + 4, var3 + 6, var7 + 11, ExtBlocks.FlamewoodPillar.blockID);
+		var1.setBlock(var6 + 5, var3 + 6, var7 + 11, ExtBlocks.FlamewoodPillar.blockID);
+		var1.setBlock(var6 + 4, var3 + 6, var7 + 10, ExtBlocks.FlamewoodPillar.blockID);
+
+		for(var8 = 0; var8 < 3; ++var8) {
+			var1.setBlock(var6 + 3 - var8, var3 + 5, var7 + 5, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 3 - var8, var3 + 5, var7 + 10, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 12 + var8, var3 + 5, var7 + 5, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 12 + var8, var3 + 5, var7 + 10, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 5, var3 + 5, var7 + 3 - var8, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 10, var3 + 5, var7 + 3 - var8, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 5, var3 + 5, var7 + 12 + var8, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 10, var3 + 5, var7 + 12 + var8, ExtBlocks.FlamewoodPillar.blockID);
+		}
+
+		for(var8 = 0; var8 < 2; ++var8) {
+			var1.setBlock(var6 + 4, var3 + 5, var7 + 3 - var8, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 3, var3 + 5, var7 + 3 - var8, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 3 - var8, var3 + 5, var7 + 4, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 3 - var8, var3 + 5, var7 + 3, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 11, var3 + 5, var7 + 12 + var8, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 12, var3 + 5, var7 + 12 + var8, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 12 + var8, var3 + 5, var7 + 11, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 12 + var8, var3 + 5, var7 + 12, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 4, var3 + 5, var7 + 12 + var8, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 3, var3 + 5, var7 + 12 + var8, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 3 - var8, var3 + 5, var7 + 11, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 3 - var8, var3 + 5, var7 + 12, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 11, var3 + 5, var7 + 3 - var8, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 12, var3 + 5, var7 + 3 - var8, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 12 + var8, var3 + 5, var7 + 4, ExtBlocks.FlamewoodPillar.blockID);
+			var1.setBlock(var6 + 12 + var8, var3 + 5, var7 + 3, ExtBlocks.FlamewoodPillar.blockID);
+		}
+
+		var8 = var3 / 8;
+		EnumHouseBig[] var13 = this.func_9886_8ZH5qLYxNz467u1uJMUDJalqGg1WFDGTR9GCMu99tnz5ZT7AKQ9Roo86275S(var2, var8, var4);
+
+		for(var10 = 0; var10 < 4; ++var10) {
+			int var11;
+			int var12;
+			switch(EnumHouseBigUnknownClass.field_10860_6445xGvFiQrxwB6B3Jv6E6Y2wuWtLZ480V96b43GE0f1Xis2uZL9xrGn6JSw[var13[var10].ordinal()]) {
+			case 1:
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 1, 0, Block.glass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 2, 0, Block.glass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 3, 0, Block.glass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 1, 1, Block.glass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 2, 1, Block.glass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 3, 1, Block.glass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, -1, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 0, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 1, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 2, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, -2, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, -1, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 0, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 1, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 2, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 3, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 1, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 2, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 3, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 1, -2, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 2, -2, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 3, -2, ExtBlocks.FlamewoodPillar, var10);
+				break;
+			case 2:
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 1, 0, ExtBlocks.GlassBlue, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 2, 0, ExtBlocks.GlassBlue, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 3, 0, ExtBlocks.GlassBlue, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 1, 1, ExtBlocks.GlassBlue, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 2, 1, ExtBlocks.GlassBlue, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 3, 1, ExtBlocks.GlassBlue, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, -1, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 0, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 1, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 2, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, -2, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, -1, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 0, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 1, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 2, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 3, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 1, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 2, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 3, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 1, -2, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 2, -2, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 3, -2, ExtBlocks.FlamewoodPillar, var10);
+				break;
+			case 3:
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 1, 0, ExtBlocks.GlassMagenta, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 2, 0, ExtBlocks.GlassMagenta, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 3, 0, ExtBlocks.GlassMagenta, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 1, 1, ExtBlocks.GlassMagenta, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 2, 1, ExtBlocks.GlassMagenta, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 3, 1, ExtBlocks.GlassMagenta, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, -1, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 0, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 1, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 2, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, -2, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, -1, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 0, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 1, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 2, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 3, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 1, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 2, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 3, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 1, -2, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 2, -2, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 3, -2, ExtBlocks.FlamewoodPillar, var10);
+				break;
+			case 4:
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 1, 0, ExtBlocks.SmoothStone, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 2, 0, ExtBlocks.SmoothStone, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 3, 0, ExtBlocks.SmoothStone, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 1, 1, ExtBlocks.SmoothStone, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 2, 1, ExtBlocks.SmoothStone, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 3, 1, ExtBlocks.SmoothStone, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 1, 0, ExtBlocks.SolarPlate, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 2, 0, ExtBlocks.DenialPlate, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 3, 0, ExtBlocks.SwitchPlate, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 1, 1, ExtBlocks.LoopPlate, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 2, 1, ExtBlocks.PartPlate, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 3, 1, ExtBlocks.AssociationPlate, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, -1, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 0, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 1, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 2, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, -2, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, -1, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 0, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 1, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 2, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 3, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 1, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 2, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 3, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 1, -2, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 2, -2, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 3, -2, ExtBlocks.FlamewoodPillar, var10);
+				break;
+			case 5:
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 1, 0, ExtBlocks.GlassGreen, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 2, 0, ExtBlocks.GlassGreen, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 3, 0, ExtBlocks.GlassGreen, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 1, 1, ExtBlocks.GlassGreen, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 2, 1, ExtBlocks.GlassGreen, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 3, 1, ExtBlocks.GlassGreen, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, -1, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 0, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 1, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 2, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, -2, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, -1, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 0, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 1, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 2, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 3, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 1, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 2, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 3, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 1, -2, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 2, -2, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 3, -2, ExtBlocks.FlamewoodPillar, var10);
+				break;
+			case 6:
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 1, 0, ExtBlocks.GlassBlack, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 2, 0, ExtBlocks.GlassBlack, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 3, 0, ExtBlocks.GlassBlack, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 1, 1, ExtBlocks.GlassBlack, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 2, 1, ExtBlocks.GlassBlack, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 3, 1, ExtBlocks.GlassBlack, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, -1, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 0, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 1, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 1, 0, 2, Block.grass, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, -2, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, -1, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 0, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 1, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 2, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 0, 3, ExtBlocks.SlatePillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 1, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 2, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 3, 3, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 1, -2, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 2, -2, ExtBlocks.FlamewoodPillar, var10);
+				this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 2, 3, -2, ExtBlocks.FlamewoodPillar, var10);
+				break;
+			case 7:
+				var11 = var10 == 0 ? 1 : (var10 == 2 ? -1 : 0);
+				var12 = var10 == 1 ? 1 : (var10 == 3 ? -1 : 0);
+				var11 += var2;
+				var12 += var4;
+				if(this.func_9889_6V9M1y0rD66IzESBhbtaW530L5zr7MXWWxju10Ibed9N0Yq7r7jZ01hE282X(var11, var8, var12, (var10 + 2) % 4) == EnumHouseBig.Door && var5.func_10702_96UC4VBn6u965CnKc5uafY87yvjBZ6tGq8l4AZ6h876hH5k4586FgF30zZVW(var11, var12) instanceof WorldGenHouseBig) {
+					this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 0, 0, ExtBlocks.WireframeBlock, var10);
+					this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 0, 1, ExtBlocks.WireframeBlock, var10);
+					this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 1, 0, ExtBlocks.WireframeBlock, var10);
+					this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 0, 1, 1, ExtBlocks.WireframeBlock, var10);
+					this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 3, -1, 0, ExtBlocks.SmoothStone, var10);
+					this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 3, -1, 1, ExtBlocks.SmoothStone, var10);
+					this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 4, -1, 0, ExtBlocks.SmoothStone, var10);
+					this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 4, -1, 1, ExtBlocks.SmoothStone, var10);
+				}
+			case 8:
+				var11 = var10 == 0 ? 1 : (var10 == 2 ? -1 : 0);
+				var12 = var10 == 1 ? 1 : (var10 == 3 ? -1 : 0);
+				var11 += var2;
+				var12 += var4;
+				if(this.func_9889_6V9M1y0rD66IzESBhbtaW530L5zr7MXWWxju10Ibed9N0Yq7r7jZ01hE282X(var11, var8, var12, (var10 + 2) % 4) == EnumHouseBig.Door && var5.func_10702_96UC4VBn6u965CnKc5uafY87yvjBZ6tGq8l4AZ6h876hH5k4586FgF30zZVW(var11, var12) instanceof WorldGenHouseBig) {
+					this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 3, -1, 0, ExtBlocks.SmoothStone, var10);
+					this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 3, -1, 1, ExtBlocks.SmoothStone, var10);
+					this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 4, -1, 0, ExtBlocks.SmoothStone, var10);
+					this.func_9892_77b9EYVuP52H0l6NhBVIN108hk94iZ0RbsMHh6sqIXrXYH5KdJ05A5pfml0k(var1, var6, var3, var7, 4, -1, 1, ExtBlocks.SmoothStone, var10);
+				}
+			}
+		}
+
+		this.func_9890_40anu2kvL0nHOy6LSv2lHT9m038haRlWFvl3sDCOBTG3vGl4uZZtpcL2Enmf(var1, var6 + 4, var3 + 1, var7 + 4);
+		this.func_9890_40anu2kvL0nHOy6LSv2lHT9m038haRlWFvl3sDCOBTG3vGl4uZZtpcL2Enmf(var1, var6 + 11, var3 + 1, var7 + 4);
+		this.func_9890_40anu2kvL0nHOy6LSv2lHT9m038haRlWFvl3sDCOBTG3vGl4uZZtpcL2Enmf(var1, var6 + 4, var3 + 1, var7 + 11);
+		this.func_9890_40anu2kvL0nHOy6LSv2lHT9m038haRlWFvl3sDCOBTG3vGl4uZZtpcL2Enmf(var1, var6 + 11, var3 + 1, var7 + 11);
+	}
+
+	private void func_9890_40anu2kvL0nHOy6LSv2lHT9m038haRlWFvl3sDCOBTG3vGl4uZZtpcL2Enmf(World var1, int var2, int var3, int var4) {
+		Random var5 = new Random((long)var2 * 456856235L - (long)var3 * 184761862L + (long)var4 * 4618624L + 18162412L);
+		if(var5.nextInt(127) == 0) {
+			var1.setBlock(var2, var3, var4, Block.chest.blockID);
+			TileEntityChest var6 = new TileEntityChest();
+			var1.setBlockTileEntity(var2, var3, var4, var6);
+
+			for(int var7 = 0; var7 < var6.getSizeInventory(); ++var7) {
+				int var8 = var5.nextInt(30);
+				if(var8 < 1) {
+					var6.setInventorySlotContents(var7, new ItemStack(Item.ingotGold));
+				} else if(var8 < 6) {
+					var6.setInventorySlotContents(var7, new ItemStack(ExtBlocks.SolarPlate.blockID + var8 - 1, var5.nextInt(15) + 1));
+				} else if(var8 < 11) {
+					var6.setInventorySlotContents(var7, new ItemStack(ExtBlocks.TrinityPlate.blockID + var8 - 6, var5.nextInt(15) + 1));
+				} else if(var8 < 12) {
+					var6.setInventorySlotContents(var7, new ItemStack(Item.appleRed));
+				} else if(var8 < 13) {
+					var6.setInventorySlotContents(var7, new ItemStack(Item.bread));
+				} else if(var8 < 14) {
+					var6.setInventorySlotContents(var7, new ItemStack(ExtItems.Pear));
+				} else if(var8 < 15) {
+					var6.setInventorySlotContents(var7, new ItemStack(ExtItems.HoursLongPastIII));
+				} else if(var8 < 16) {
+					var6.setInventorySlotContents(var7, new ItemStack(ExtItems.HoursLongPastVI));
+				}
+			}
+
+		}
+	}
+
+	private void func_9893_9pFTVlPhK8P59xUw19Tn4YO43NMA5FTPzPaeGlDQDOekAk89FW3B7c25kR6T(World var1, int var2, int var3, int var4) {
+		int var5;
+		int var6;
+		for(var5 = 2; var5 <= 13; ++var5) {
+			for(var6 = 2; var6 <= 13; ++var6) {
+				for(int var7 = 5; var7 < 8; ++var7) {
+					if(!this.func_9887_222reZAc4tQC2IipCEZax67PG0WkcvUJGGzDPQ79N2ThadrSzs8v18glXqA7(var1, var2 * 16 + var5, var3 + var7, var4 * 16 + var6)) {
+						var1.setBlock(var2 * 16 + var5, var3 + var7, var4 * 16 + var6, ExtBlocks.SmoothStone.blockID);
+					}
+				}
+			}
+		}
+
+		for(var5 = 3; var5 <= 12; ++var5) {
+			for(var6 = 3; var6 <= 12; ++var6) {
+				this.func_9891_7jRn6QF8j7SHbcNzXW806SpN34AM1N24Y7CPdJI866WCP1JJ13ryLsQ154pY(var1, ExtBlocks.CrudePillar.blockID, var2 * 16 + var5, var3 + 4, var4 * 16 + var6);
+			}
+		}
+
+	}
+
+	public void func_9884_61qP7q8deV5ospnX8sW5XUMxMcV5ssOU68863452kQ9H403L5ScR3DEa98qO(World var1, int var2, int var3, WorldGenHouseBigInterior var4) {
+		int var5 = (int)((this.field_9896_01Q1s81DUx467KLo2kQqjfIuiCC55M9Jh6q0VrbdGe64M7g8UGdHGUv6e8po.generateNoise((double)var2, (double)var3) / 2.0D + 1.0D) * 8.0D);
+
+		for(int var6 = var5; var6 >= 0; --var6) {
+			int var7 = 30 + var6 * 8;
+			if(!this.func_9895_64EF8cC2FppVMJU2QNG1K3esZ0sOSbsYZrKxu7wCZWa489iFH4s610HxG600(var1, var2, var7, var3)) {
+				if(var5 != var6) {
+					this.func_9893_9pFTVlPhK8P59xUw19Tn4YO43NMA5FTPzPaeGlDQDOekAk89FW3B7c25kR6T(var1, var2, var7, var3);
+				}
+				break;
+			}
+
+			this.func_9885_1L9Ls7B6F25a90S6Izh91tZ09Cs2reys4i6eRTG1i56p88AUU5809f3N6iTL(var1, var2, var7, var3, var4);
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/ThreadChunkPopulator.java
@@ -1,0 +1,76 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+public class ThreadChunkPopulator extends Thread {
+	List<QueuedChange> qChanges = new ArrayList();
+	public List<ChunkProviderPopulateOperation> queuedPopulateOperations = new ArrayList();
+	public static boolean useAsyncGen = false;
+	public static ThreadChunkPopulator instance = null;
+	public volatile boolean writingToList = false;
+
+	public static boolean OpListHasOperation(ChunkProviderPopulateOperation var0) {
+		Iterator var1 = instance.queuedPopulateOperations.iterator();
+
+		ChunkProviderPopulateOperation var2;
+		do {
+			if(!var1.hasNext()) {
+				return false;
+			}
+
+			var2 = (ChunkProviderPopulateOperation)var1.next();
+		} while(var2.x != var0.x || var2.y != var0.y);
+
+		return true;
+	}
+
+	public static void AddPopulateOperation(ChunkProviderPopulateOperation var0, ChunkProviderGenerate var1) {
+		if(useAsyncGen) {
+			if(instance == null) {
+				instance = new ThreadChunkPopulator();
+			}
+
+			if(!instance.isAlive()) {
+				instance.start();
+			}
+
+			instance.writingToList = true;
+			if(!OpListHasOperation(var0)) {
+				instance.queuedPopulateOperations.add(var0);
+			}
+
+			instance.writingToList = false;
+		} else {
+			var0.caller.actualPopulate(var0.a, var0.x, var0.y);
+		}
+
+	}
+
+	public void run() {
+		while(true) {
+			if(this.queuedPopulateOperations.size() > 0) {
+				while(true) {
+					if(!this.writingToList) {
+						ChunkProviderPopulateOperation var1 = (ChunkProviderPopulateOperation)this.queuedPopulateOperations.get(0);
+
+						try {
+							var1.caller.actualPopulate(var1.a, var1.x, var1.y);
+						} catch (Exception var4) {
+						}
+
+						this.queuedPopulateOperations.remove(0);
+						break;
+					}
+				}
+			}
+
+			try {
+				Thread.sleep(16L);
+			} catch (InterruptedException var3) {
+				var3.printStackTrace();
+			}
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/GenPillar.java
@@ -1,0 +1,33 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class GenPillar extends WorldGenerator {
+	private int a;
+
+	public GenPillar(int var1) {
+		this.a = var1;
+	}
+
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		for(int var6 = 0; var6 < 64; ++var6) {
+			int var9 = var3 + var2.nextInt(8) - var2.nextInt(8);
+			int var8 = var4 + var2.nextInt(4) - var2.nextInt(4);
+			int var10002 = var8 - 1;
+			int var7 = var5 + var2.nextInt(8) - var2.nextInt(8);
+			int var10 = var1.getBlockId(var9, var10002, var7);
+			boolean var11 = var10 != 0 && var10 != 9 && var10 != 116 && var10 != 18 && var10 != ExtBlocks.glowingFlower.blockID && var10 != ExtBlocks.blueFireIdk.blockID;
+			if(var1.getBlockId(var9, var8, var7) == 0 && var11) {
+				var1.setBlock(var9, var8, var7, this.a);
+				if(var2.nextInt(100) > 50) {
+					var1.setBlock(var9, var8 + 1, var7, this.a);
+					if(var2.nextInt(100) > 50) {
+						var1.setBlock(var9, var8 + 2, var7, this.a);
+					}
+				}
+			}
+		}
+
+		return true;
+	}
+}
--- /dev/null
+++ net/minecraft/src/TriggerIndex.java
@@ -1,0 +1,31 @@
+package net.minecraft.src;
+
+public enum TriggerIndex {
+	Invalid(0),
+	Left(1),
+	Right(2);
+
+	int index;
+
+    private static final /* synthetic */ TriggerIndex[] field_11014_38uHwFwC2G7nIfaHER5W7paxX34a2i2G0DlAyp8IDFGyE83x7r3aXZa4arho;
+
+	public static TriggerIndex[] func_11010_83dO0Li6AtsBrc9SeaTfBlK6z8078A8Vv2lfqLm1s8mqwqxNLn265793zvnh() {
+		return (TriggerIndex[])field_11014_38uHwFwC2G7nIfaHER5W7paxX34a2i2G0DlAyp8IDFGyE83x7r3aXZa4arho.clone();
+	}
+
+	public static TriggerIndex func_11009_19uvZS16nzgBQ8jK7rTv8z29Dtno1sfX06SPMaNMpTwe57HqaG4RXdiIKBzj(String var0) {
+		return (TriggerIndex)Enum.valueOf(TriggerIndex.class, var0);
+	}
+
+	private TriggerIndex(int var3) {
+		this.index = var3;
+	}
+
+	private static TriggerIndex[] func_11008_1x08Zh970e308T504bTd7DvFfeZ1PkvWJ73V2t7yaI6t72YI0TE507Q3087w() {
+		return new TriggerIndex[]{Invalid, Left, Right};
+	}
+
+    static {
+        field_11014_38uHwFwC2G7nIfaHER5W7paxX34a2i2G0DlAyp8IDFGyE83x7r3aXZa4arho = TriggerIndex.func_11008_1x08Zh970e308T504bTd7DvFfeZ1PkvWJ73V2t7yaI6t72YI0TE507Q3087w();
+    }
+}
--- /dev/null
+++ net/minecraft/src/ItemEraser.java
@@ -1,0 +1,27 @@
+package net.minecraft.src;
+
+public class ItemEraser extends ItemPickaxe {
+	public ItemEraser(int var1, int var2) {
+		super(var1, var2);
+	}
+
+	public boolean canHarvestBlock(Block var1) {
+		return true;
+	}
+
+	public int getMaxDamage() {
+		return Integer.MAX_VALUE;
+	}
+
+	public int getDamageVsEntity(Entity var1) {
+		return Integer.MAX_VALUE;
+	}
+
+	public float getStrVsBlock(ItemStack var1, Block var2) {
+		return Float.POSITIVE_INFINITY;
+	}
+
+	public boolean isFull3D() {
+		return false;
+	}
+}
--- net/minecraft/src/MapGenCaves.java
+++ net/minecraft/src/MapGenCaves.java
@@ -18,10 +18,10 @@
 			var14 = var24 - var23.nextInt(var24 / 4);
 		}
 
-		boolean var52 = false;
+		boolean var60 = false;
 		if(var13 == -1) {
 			var13 = var14 / 2;
-			var52 = true;
+			var60 = true;
 		}
 
 		int var25 = var23.nextInt(var14 / 2) + var14 / 4;
@@ -46,13 +46,13 @@
 			var21 *= 12.0F / 16.0F;
 			var22 += (var23.nextFloat() - var23.nextFloat()) * var23.nextFloat() * 2.0F;
 			var21 += (var23.nextFloat() - var23.nextFloat()) * var23.nextFloat() * 4.0F;
-			if(!var52 && var13 == var25 && var10 > 1.0F) {
+			if(!var60 && var13 == var25 && var10 > 1.0F) {
 				this.generateCaveNode(var1, var2, var3, var4, var6, var8, var23.nextFloat() * 0.5F + 0.5F, var11 - (float)Math.PI * 0.5F, var12 / 3.0F, var13, var14, 1.0D);
 				this.generateCaveNode(var1, var2, var3, var4, var6, var8, var23.nextFloat() * 0.5F + 0.5F, var11 + (float)Math.PI * 0.5F, var12 / 3.0F, var13, var14, 1.0D);
 				return;
 			}
 
-			if(var52 || var23.nextInt(4) != 0) {
+			if(var60 || var23.nextInt(4) != 0) {
 				double var33 = var4 - var17;
 				double var35 = var8 - var19;
 				double var37 = (double)(var14 - var13);
@@ -62,92 +62,92 @@
 				}
 
 				if(var4 >= var17 - 16.0D - var27 * 2.0D && var8 >= var19 - 16.0D - var27 * 2.0D && var4 <= var17 + 16.0D + var27 * 2.0D && var8 <= var19 + 16.0D + var27 * 2.0D) {
-					int var53 = MathHelper.floor_double(var4 - var27) - var1 * 16 - 1;
-					int var34 = MathHelper.floor_double(var4 + var27) - var1 * 16 + 1;
-					int var54 = MathHelper.floor_double(var6 - var29) - 1;
-					int var36 = MathHelper.floor_double(var6 + var29) + 1;
-					int var55 = MathHelper.floor_double(var8 - var27) - var2 * 16 - 1;
-					int var38 = MathHelper.floor_double(var8 + var27) - var2 * 16 + 1;
-					if(var53 < 0) {
-						var53 = 0;
-					}
-
-					if(var34 > 16) {
-						var34 = 16;
-					}
-
-					if(var54 < 1) {
-						var54 = 1;
-					}
-
-					if(var36 > 120) {
-						var36 = 120;
-					}
-
-					if(var55 < 0) {
-						var55 = 0;
-					}
-
-					if(var38 > 16) {
-						var38 = 16;
-					}
-
-					boolean var56 = false;
-
-					int var40;
-					int var43;
-					for(var40 = var53; !var56 && var40 < var34; ++var40) {
-						for(int var41 = var55; !var56 && var41 < var38; ++var41) {
-							for(int var42 = var36 + 1; !var56 && var42 >= var54 - 1; --var42) {
-								var43 = (var40 * 16 + var41) * 128 + var42;
-								if(var42 >= 0 && var42 < 128) {
-									if(var3[var43] == Block.waterMoving.blockID || var3[var43] == Block.waterStill.blockID) {
-										var56 = true;
+					int var41 = MathHelper.floor_double(var4 - var27) - var1 * 16 - 1;
+					int var42 = MathHelper.floor_double(var4 + var27) - var1 * 16 + 1;
+					int var43 = MathHelper.floor_double(var6 - var29) - 1;
+					int var44 = MathHelper.floor_double(var6 + var29) + 1;
+					int var45 = MathHelper.floor_double(var8 - var27) - var2 * 16 - 1;
+					int var46 = MathHelper.floor_double(var8 + var27) - var2 * 16 + 1;
+					if(var41 < 0) {
+						var41 = 0;
+					}
+
+					if(var42 > 16) {
+						var42 = 16;
+					}
+
+					if(var43 < 1) {
+						var43 = 1;
+					}
+
+					if(var44 > 120) {
+						var44 = 120;
+					}
+
+					if(var45 < 0) {
+						var45 = 0;
+					}
+
+					if(var46 > 16) {
+						var46 = 16;
+					}
+
+					boolean var47 = false;
+
+					int var48;
+					int var49;
+					for(var48 = var41; !var47 && var48 < var42; ++var48) {
+						for(int var50 = var45; !var47 && var50 < var46; ++var50) {
+							for(int var51 = var44 + 1; !var47 && var51 >= var43 - 1; --var51) {
+								var49 = (var48 * 16 + var50) * 128 + var51;
+								if(var51 >= 0 && var51 < 128) {
+									if(var3[var49] == Block.waterMoving.blockID || var3[var49] == Block.waterStill.blockID) {
+										var47 = true;
 									}
 
-									if(var42 != var54 - 1 && var40 != var53 && var40 != var34 - 1 && var41 != var55 && var41 != var38 - 1) {
-										var42 = var54;
+									if(var51 != var43 - 1 && var48 != var41 && var48 != var42 - 1 && var50 != var45 && var50 != var46 - 1) {
+										var51 = var43;
 									}
 								}
 							}
 						}
 					}
 
-					if(!var56) {
-						for(var40 = var53; var40 < var34; ++var40) {
-							double var57 = ((double)(var40 + var1 * 16) + 0.5D - var4) / var27;
-
-							for(var43 = var55; var43 < var38; ++var43) {
-								double var44 = ((double)(var43 + var2 * 16) + 0.5D - var8) / var27;
-								int var46 = (var40 * 16 + var43) * 128 + var36;
-								boolean var47 = false;
-
-								for(int var48 = var36 - 1; var48 >= var54; --var48) {
-									double var49 = ((double)var48 + 0.5D - var6) / var29;
-									if(var49 > -0.7D && var57 * var57 + var49 * var49 + var44 * var44 < 1.0D) {
-										byte var51 = var3[var46];
-										if(var51 == Block.grass.blockID) {
-											var47 = true;
+					if(!var47) {
+						for(var48 = var41; var48 < var42; ++var48) {
+							double var61 = ((double)(var48 + var1 * 16) + 0.5D - var4) / var27;
+
+							for(var49 = var45; var49 < var46; ++var49) {
+								double var52 = ((double)(var49 + var2 * 16) + 0.5D - var8) / var27;
+								int var54 = (var48 * 16 + var49) * 128 + var44;
+								boolean var55 = false;
+
+								for(int var56 = var44 - 1; var56 >= var43; --var56) {
+									double var57 = ((double)var56 + 0.5D - var6) / var29;
+									if(var57 > -0.7D && var61 * var61 + var57 * var57 + var52 * var52 < 1.0D) {
+										byte var59 = var3[var54];
+										if(var59 == Block.grass.blockID) {
+											var55 = true;
 										}
 
-										if(var51 == Block.stone.blockID || var51 == Block.dirt.blockID || var51 == Block.grass.blockID) {
-											if(var48 < 10) {
-												var3[var46] = (byte)Block.lavaMoving.blockID;
+										if(var59 == Block.stone.blockID || var59 == Block.dirt.blockID || var59 == Block.grass.blockID) {
+											if(var56 < 10) {
+												var3[var54] = (byte)Block.lavaMoving.blockID;
 											} else {
-												var3[var46] = 0;
-												if(var47 && var3[var46 - 1] == Block.dirt.blockID) {
-													var3[var46 - 1] = (byte)Block.grass.blockID;
+												var3[var54] = 0;
+												if(var55 && var3[var54 - 1] == Block.dirt.blockID) {
+													var3[var54 - 1] = (byte)Block.grass.blockID;
 												}
 											}
 										}
 									}
 
-									--var46;
+									--var54;
 								}
 							}
 						}
 
-						if(var52) {
+						if(var60) {
 							break;
 						}
 					}
--- /dev/null
+++ net/minecraft/src/PlayerControllerZombieMode.java
@@ -1,0 +1,127 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+import org.lwjgl.input.Keyboard;
+
+public class PlayerControllerZombieMode extends PlayerController {
+	private int curBlockX = -1;
+	private int curBlockY = -1;
+	private int curBlockZ = -1;
+	private float curBlockDamage = 0.0F;
+	private float prevBlockDamage = 0.0F;
+	private float blockDestroySoundCounter = 0.0F;
+	private int blockHitWait = 0;
+
+	public PlayerControllerZombieMode(Minecraft var1) {
+		super(var1);
+	}
+
+	public void flipPlayer(EntityPlayer var1) {
+		var1.rotationYaw = -180.0F;
+	}
+
+	public boolean sendBlockRemoved(int var1, int var2, int var3, int var4) {
+		if(!Keyboard.isKeyDown(Keyboard.KEY_RSHIFT)) {
+			return false;
+		} else {
+			int var5 = this.mc.theWorld.getBlockId(var1, var2, var3);
+			int var6 = this.mc.theWorld.getBlockMetadata(var1, var2, var3);
+			boolean var7 = super.sendBlockRemoved(var1, var2, var3, var4);
+			ItemStack var8 = this.mc.thePlayer.getCurrentEquippedItem();
+			boolean var9 = this.mc.thePlayer.canHarvestBlock(Block.blocksList[var5]);
+			if(var8 != null) {
+				var8.onDestroyBlock(var5, var1, var2, var3);
+				if(var8.stackSize == 0) {
+					var8.onItemDestroyedByUse(this.mc.thePlayer);
+					this.mc.thePlayer.destroyCurrentEquippedItem();
+				}
+			}
+
+			if(var7 && var9) {
+				Block.blocksList[var5].harvestBlock(this.mc.theWorld, var1, var2, var3, var6);
+			}
+
+			return var7;
+		}
+	}
+
+	public void clickBlock(int var1, int var2, int var3, int var4) {
+		int var5 = this.mc.theWorld.getBlockId(var1, var2, var3);
+		if(var5 > 0 && this.curBlockDamage == 0.0F) {
+			Block.blocksList[var5].onBlockClicked(this.mc.theWorld, var1, var2, var3, this.mc.thePlayer);
+		}
+
+		if(var5 > 0 && Block.blocksList[var5].blockStrength(this.mc.thePlayer) >= 1.0F && Keyboard.isKeyDown(Keyboard.KEY_RSHIFT)) {
+			this.sendBlockRemoved(var1, var2, var3, var4);
+		}
+
+	}
+
+	public void resetBlockRemoving() {
+		this.curBlockDamage = 0.0F;
+		this.blockHitWait = 0;
+	}
+
+	public void sendBlockRemoving(int var1, int var2, int var3, int var4) {
+		if(this.blockHitWait > 0) {
+			--this.blockHitWait;
+		} else if(var1 == this.curBlockX && var2 == this.curBlockY && var3 == this.curBlockZ) {
+			int var5 = this.mc.theWorld.getBlockId(var1, var2, var3);
+			if(var5 == 0) {
+				return;
+			}
+
+			Block var6 = Block.blocksList[var5];
+			if(!var6.breakableInZM) {
+				this.curBlockDamage = 0.0F;
+				return;
+			}
+
+			this.curBlockDamage += var6.blockStrength(this.mc.thePlayer);
+			if(this.blockDestroySoundCounter % 4.0F == 0.0F && var6 != null) {
+				this.mc.sndManager.playSound(var6.stepSound.getStepSound(), (float)var1 + 0.5F, (float)var2 + 0.5F, (float)var3 + 0.5F, (var6.stepSound.getVolume() + 1.0F) / 8.0F, var6.stepSound.getPitch() * 0.5F);
+			}
+
+			++this.blockDestroySoundCounter;
+			if(this.curBlockDamage >= 1.0F) {
+				this.sendBlockRemoved(var1, var2, var3, var4);
+				this.curBlockDamage = 0.0F;
+				this.prevBlockDamage = 0.0F;
+				this.blockDestroySoundCounter = 0.0F;
+				this.blockHitWait = 5;
+			}
+		} else {
+			this.curBlockDamage = 0.0F;
+			this.prevBlockDamage = 0.0F;
+			this.blockDestroySoundCounter = 0.0F;
+			this.curBlockX = var1;
+			this.curBlockY = var2;
+			this.curBlockZ = var3;
+		}
+
+	}
+
+	public void setPartialTime(float var1) {
+		if(this.curBlockDamage <= 0.0F) {
+			this.mc.ingameGUI.damageGuiPartialTime = 0.0F;
+			this.mc.renderGlobal.damagePartialTime = 0.0F;
+		} else {
+			float var2 = this.prevBlockDamage + (this.curBlockDamage - this.prevBlockDamage) * var1;
+			this.mc.ingameGUI.damageGuiPartialTime = var2;
+			this.mc.renderGlobal.damagePartialTime = var2;
+		}
+
+	}
+
+	public float getBlockReachDistance() {
+		return 4.0F;
+	}
+
+	public void onWorldChange(World var1) {
+		super.onWorldChange(var1);
+	}
+
+	public void onUpdate() {
+		this.prevBlockDamage = this.curBlockDamage;
+	}
+}
--- net/minecraft/src/Packet5PlayerInventory.java
+++ net/minecraft/src/Packet5PlayerInventory.java
@@ -27,7 +27,7 @@
 		this.inventory = new ItemStack[var2];
 
 		for(int var3 = 0; var3 < var2; ++var3) {
-			short var4 = var1.readShort();
+			int var4 = var1.readInt();
 			if(var4 >= 0) {
 				byte var5 = var1.readByte();
 				short var6 = var1.readShort();
@@ -43,9 +43,9 @@
 
 		for(int var2 = 0; var2 < this.inventory.length; ++var2) {
 			if(this.inventory[var2] == null) {
-				var1.writeShort(-1);
+				var1.writeInt(-1);
 			} else {
-				var1.writeShort((short)this.inventory[var2].itemID);
+				var1.writeInt(this.inventory[var2].itemID);
 				var1.writeByte((byte)this.inventory[var2].stackSize);
 				var1.writeShort((short)this.inventory[var2].itemDmg);
 			}
@@ -58,6 +58,6 @@
 	}
 
 	public int getPacketSize() {
-		return 6 + this.inventory.length * 5;
+		return 6 + this.inventory.length * 7;
 	}
 }
--- net/minecraft/src/EnumOS.java
+++ net/minecraft/src/EnumOS.java
@@ -6,4 +6,12 @@
 	windows,
 	macos,
 	unknown;
+
+	public static EnumOS func_12176_0kK8ejRcI1TDI8EKf5I5MlMt660u5fn5R8A861cd5zfFy8WGgo291s3TF7n0(String var0) {
+		return (EnumOS)Enum.valueOf(EnumOS.class, var0);
+	}
+
+	private static EnumOS[] func_12177_0EMv5186A6vi9i3Sg3qaZ9wTSGYjG7TnA27NWu2HEFkz4P06j21J2DGcJ3sf() {
+		return new EnumOS[]{linux, solaris, windows, macos, unknown};
+	}
 }
--- /dev/null
+++ net/minecraft/src/CommandPlaydemo.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandPlaydemo extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8562_52fLf3lgrmlFsBi92jzoYI4QS2IKAIHz5eJ4OK0D18Nx3tQDD2I2Vg2ltY5H;
+    
+    CommandPlaydemo(final CommandManager abb) {
+        this.field_8562_52fLf3lgrmlFsBi92jzoYI4QS2IKAIHz5eJ4OK0D18Nx3tQDD2I2Vg2ltY5H = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.func_12200_2zuKLzAjc8o3T9KVZ7ZY36o6qOp5e1FG836622Br32SKguF06W9W1437p52T();
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/WorldGenHub.java
@@ -1,0 +1,30 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Random;
+
+public class WorldGenHub extends WorldGenerator {
+	List<BlockHubDoor> field_9603_89nMga116eHH0Cz7qWE0DC32KW7xCG8zMHKVZAK007oujTd05Q77n3l18670 = new ArrayList();
+	List<BlockHubDoor> field_9602_1LyU83q3Hz6C78Ai50PWBSiv34LkVAODYWOxOZoHWwP3v5F9BDzX2NL23988 = new ArrayList();
+
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		if(var1 instanceof HubWorld) {
+			Object var6;
+			switch(var2.nextInt()) {
+			case 0:
+				var6 = new HubFragment1((HubWorld)var1, var3, var4, var5);
+				break;
+			case 1:
+				var6 = new HubFragment2((HubWorld)var1, var3, var4, var5);
+				break;
+			default:
+				var6 = new HubFragment3((HubWorld)var1, var3, var4, var5);
+			}
+
+			((HubWorldUnknownClass2)var6).func_9822_96pkMbVA643Z1Y78zU1zOHbm0WbR47PCGp9q1ZyTK64G0pr0ViUREK2TCos1();
+		}
+
+		return false;
+	}
+}
--- /dev/null
+++ net/minecraft/src/HubChunkProviderLoadOrGenerate.java
@@ -1,0 +1,47 @@
+package net.minecraft.src;
+
+public class HubChunkProviderLoadOrGenerate extends ChunkProviderLoadOrGenerate {
+	public HubChunkProviderLoadOrGenerate(HubWorld var1, IChunkLoader var2, IChunkProvider var3) {
+		super(var1, var2, var3);
+	}
+
+	public Chunk provideChunk(int var1, int var2) {
+		if(var1 == this.lastQueriedChunkXPos && var2 == this.lastQueriedChunkZPos && this.lastQueriedChunk != null) {
+			return this.lastQueriedChunk;
+		} else {
+			int var3 = var1 & 31;
+			int var4 = var2 & 31;
+			int var5 = var3 + var4 * 32;
+			if(!this.chunkExists(var1, var2)) {
+				if(this.chunks[var5] != null) {
+					this.chunks[var5].onChunkUnload();
+					this.saveChunk(this.chunks[var5]);
+					this.saveExtraChunkData(this.chunks[var5]);
+				}
+
+				Chunk var6 = this.getChunkAt(var1, var2);
+				if(var6 == null) {
+					if(this.chunkProvider == null) {
+						var6 = this.blankChunk;
+					} else {
+						var6 = this.chunkProvider.provideChunk(var1, var2);
+					}
+				}
+
+				this.chunks[var5] = var6;
+				if(this.chunks[var5] != null) {
+					this.chunks[var5].onChunkLoad();
+				}
+			}
+
+			this.lastQueriedChunkXPos = var1;
+			this.lastQueriedChunkZPos = var2;
+			this.lastQueriedChunk = this.chunks[var5];
+			return this.chunks[var5];
+		}
+	}
+
+	public void populate(IChunkProvider var1, int var2, int var3) {
+		this.provideChunk(var2, var3).setChunkModified();
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockRedstoneTorchOld.java
@@ -1,0 +1,153 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Random;
+
+public class BlockRedstoneTorchOld extends BlockTorchOld {
+	private boolean torchActive = false;
+	private static List torchUpdates = new ArrayList();
+
+	public int getBlockTextureFromSideAndMetadata(int var1, int var2) {
+		return var1 == 1 ? BlockOld.redstoneWire.getBlockTextureFromSideAndMetadata(var1, var2) : super.getBlockTextureFromSideAndMetadata(var1, var2);
+	}
+
+	private boolean checkForBurnout(World var1, int var2, int var3, int var4, boolean var5) {
+		if(var5) {
+			torchUpdates.add(new RedstoneUpdateInfo(var2, var3, var4, var1.worldTime));
+		}
+
+		int var6 = 0;
+
+		for(int var7 = 0; var7 < torchUpdates.size(); ++var7) {
+			RedstoneUpdateInfo var8 = (RedstoneUpdateInfo)torchUpdates.get(var7);
+			if(var8.x == var2 && var8.y == var3 && var8.z == var4) {
+				++var6;
+				if(var6 >= 8) {
+					return true;
+				}
+			}
+		}
+
+		return false;
+	}
+
+	protected BlockRedstoneTorchOld(int var1, int var2, boolean var3) {
+		super(var1, var2);
+		this.torchActive = var3;
+		this.setTickOnLoad(true);
+	}
+
+	public int tickRate() {
+		return 2;
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		if(var1.getBlockMetadata(var2, var3, var4) == 0) {
+			super.onBlockAdded(var1, var2, var3, var4);
+		}
+
+		if(this.torchActive) {
+			var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2, var3 + 1, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2 - 1, var3, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2 + 1, var3, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4 - 1, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4 + 1, this.blockID);
+		}
+
+	}
+
+	public void onBlockRemoval(World var1, int var2, int var3, int var4) {
+		if(this.torchActive) {
+			var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2, var3 + 1, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2 - 1, var3, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2 + 1, var3, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4 - 1, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4 + 1, this.blockID);
+		}
+
+	}
+
+	public boolean isPoweringTo(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		if(!this.torchActive) {
+			return false;
+		} else {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			return var6 == 5 && var5 == 1 ? false : (var6 == 3 && var5 == 3 ? false : (var6 == 4 && var5 == 2 ? false : (var6 == 1 && var5 == 5 ? false : var6 != 2 || var5 != 4)));
+		}
+	}
+
+	private boolean isIndirectlyPowered(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		return var5 == 5 && var1.isBlockIndirectlyProvidingPowerTo(var2, var3 - 1, var4, 0) ? true : (var5 == 3 && var1.isBlockIndirectlyProvidingPowerTo(var2, var3, var4 - 1, 2) ? true : (var5 == 4 && var1.isBlockIndirectlyProvidingPowerTo(var2, var3, var4 + 1, 3) ? true : (var5 == 1 && var1.isBlockIndirectlyProvidingPowerTo(var2 - 1, var3, var4, 4) ? true : var5 == 2 && var1.isBlockIndirectlyProvidingPowerTo(var2 + 1, var3, var4, 5))));
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		boolean var6 = this.isIndirectlyPowered(var1, var2, var3, var4);
+
+		while(torchUpdates.size() > 0 && var1.worldTime - ((RedstoneUpdateInfo)torchUpdates.get(0)).updateTime > 100L) {
+			torchUpdates.remove(0);
+		}
+
+		if(this.torchActive) {
+			if(var6) {
+				var1.setBlockAndMetadataWithNotify(var2, var3, var4, BlockOld.torchRedstoneIdle.blockID, var1.getBlockMetadata(var2, var3, var4));
+				if(this.checkForBurnout(var1, var2, var3, var4, true)) {
+					var1.playSoundEffect((double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F), "random.fizz", 0.5F, 2.6F + (var1.rand.nextFloat() - var1.rand.nextFloat()) * 0.8F);
+
+					for(int var7 = 0; var7 < 5; ++var7) {
+						double var8 = (double)var2 + var5.nextDouble() * 0.6D + 0.2D;
+						double var10 = (double)var3 + var5.nextDouble() * 0.6D + 0.2D;
+						double var12 = (double)var4 + var5.nextDouble() * 0.6D + 0.2D;
+						var1.spawnParticle("smoke", var8, var10, var12, 0.0D, 0.0D, 0.0D);
+					}
+				}
+			}
+		} else if(!var6 && !this.checkForBurnout(var1, var2, var3, var4, false)) {
+			var1.setBlockAndMetadataWithNotify(var2, var3, var4, BlockOld.torchRedstoneActive.blockID, var1.getBlockMetadata(var2, var3, var4));
+		}
+
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		super.onNeighborBlockChange(var1, var2, var3, var4, var5);
+		var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
+	}
+
+	public boolean isIndirectlyPoweringTo(World var1, int var2, int var3, int var4, int var5) {
+		return var5 == 0 ? this.isPoweringTo(var1, var2, var3, var4, var5) : false;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return BlockOld.torchRedstoneActive.blockID;
+	}
+
+	public boolean canProvidePower() {
+		return true;
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(this.torchActive) {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			double var7 = (double)((float)var2 + 0.5F) + (double)(var5.nextFloat() - 0.5F) * 0.2D;
+			double var9 = (double)((float)var3 + 0.7F) + (double)(var5.nextFloat() - 0.5F) * 0.2D;
+			double var11 = (double)((float)var4 + 0.5F) + (double)(var5.nextFloat() - 0.5F) * 0.2D;
+			double var13 = (double)0.22F;
+			double var15 = (double)0.27F;
+			if(var6 == 1) {
+				var1.spawnParticle("reddust", var7 - var15, var9 + var13, var11, 0.0D, 0.0D, 0.0D);
+			} else if(var6 == 2) {
+				var1.spawnParticle("reddust", var7 + var15, var9 + var13, var11, 0.0D, 0.0D, 0.0D);
+			} else if(var6 == 3) {
+				var1.spawnParticle("reddust", var7, var9 + var13, var11 - var15, 0.0D, 0.0D, 0.0D);
+			} else if(var6 == 4) {
+				var1.spawnParticle("reddust", var7, var9 + var13, var11 + var15, 0.0D, 0.0D, 0.0D);
+			} else {
+				var1.spawnParticle("reddust", var7, var9, var11, 0.0D, 0.0D, 0.0D);
+			}
+
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/ItemSpear.java
@@ -1,0 +1,17 @@
+package net.minecraft.src;
+
+public class ItemSpear extends Item {
+	public ItemSpear(int var1) {
+		super(var1);
+		this.maxStackSize = 8;
+	}
+
+	public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+		if(var3.inventory.consumeInventoryItem(ExtItems.Spear.shiftedIndex)) {
+			var2.playSoundAtEntity(var3, "random.bow", 1.0F, 1.0F / (rand.nextFloat() * 0.4F + 0.8F));
+			var2.spawnEntityInWorld(new EntitySpear(var2, var3));
+		}
+
+		return var1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/PlayerControllerSPUnknownClass2.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+import org.lwjgl.input.Keyboard;
+
+public class PlayerControllerSPUnknownClass2 extends PlayerControllerSP {
+	public PlayerControllerSPUnknownClass2(Minecraft var1) {
+		super(var1);
+	}
+
+	public boolean sendBlockRemoved(int var1, int var2, int var3, int var4) {
+		return !Keyboard.isKeyDown(Keyboard.KEY_RSHIFT) ? false : super.sendBlockRemoved(var1, var2, var3, var4);
+	}
+
+	public void sendBlockRemoving(int var1, int var2, int var3, int var4) {
+		if(Keyboard.isKeyDown(Keyboard.KEY_RSHIFT)) {
+			super.sendBlockRemoving(var1, var2, var3, var4);
+		}
+	}
+}
--- net/minecraft/src/FontRenderer.java
+++ net/minecraft/src/FontRenderer.java
@@ -15,7 +15,7 @@
 	public FontRenderer(GameSettings var1, String var2, RenderEngine var3) {
 		BufferedImage var4;
 		try {
-			var4 = ImageIO.read(RenderEngine.class.getResourceAsStream(var2));
+			var4 = ImageIO.read(var3.field_12279_8nB09v2wL31LD7473aXNMbJrX47AX71iPMP6yPX544heeDvxj78y5qTJYk68.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0.getResourceAsStream(var2));
 		} catch (IOException var18) {
 			throw new RuntimeException(var18);
 		}
@@ -25,88 +25,88 @@
 		int[] var7 = new int[var5 * var6];
 		var4.getRGB(0, 0, var5, var6, var7, 0, var5);
 
+		int var8;
 		int var9;
 		int var10;
 		int var11;
 		int var12;
-		int var15;
-		int var16;
-		for(int var8 = 0; var8 < 256; ++var8) {
-			var9 = var8 % 16;
-			var10 = var8 / 16;
-
-			for(var11 = 7; var11 >= 0; --var11) {
-				var12 = var9 * 8 + var11;
-				boolean var13 = true;
-
-				for(int var14 = 0; var14 < 8 && var13; ++var14) {
-					var15 = (var10 * 8 + var14) * var5;
-					var16 = var7[var12 + var15] & 255;
-					if(var16 > 0) {
-						var13 = false;
+		int var13;
+		for(int var14 = 0; var14 < 256; ++var14) {
+			var8 = var14 % 16;
+			var9 = var14 / 16;
+
+			for(var10 = 7; var10 >= 0; --var10) {
+				var11 = var8 * 8 + var10;
+				boolean var15 = true;
+
+				for(int var16 = 0; var16 < 8 && var15; ++var16) {
+					var12 = (var9 * 8 + var16) * var5;
+					var13 = var7[var11 + var12] & 255;
+					if(var13 > 0) {
+						var15 = false;
 					}
 				}
 
-				if(!var13) {
+				if(!var15) {
 					break;
 				}
 			}
 
-			if(var8 == 32) {
-				var11 = 2;
+			if(var14 == 32) {
+				var10 = 2;
 			}
 
-			this.charWidth[var8] = var11 + 2;
+			this.charWidth[var14] = var10 + 2;
 		}
 
 		this.fontTextureName = var3.allocateAndSetupTexture(var4);
 		this.fontDisplayLists = GLAllocation.generateDisplayLists(288);
 		Tessellator var19 = Tessellator.instance;
 
-		for(var9 = 0; var9 < 256; ++var9) {
-			GL11.glNewList(this.fontDisplayLists + var9, GL11.GL_COMPILE);
-			var19.startDrawingQuads();
-			var10 = var9 % 16 * 8;
-			var11 = var9 / 16 * 8;
+		for(var8 = 0; var8 < 256; ++var8) {
+			GL11.glNewList(this.fontDisplayLists + var8, GL11.GL_COMPILE);
+			var19.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var9 = var8 % 16 * 8;
+			var10 = var8 / 16 * 8;
 			float var20 = 7.99F;
-			float var21 = 0.0F;
-			float var23 = 0.0F;
-			var19.addVertexWithUV(0.0D, (double)(0.0F + var20), 0.0D, (double)((float)var10 / 128.0F + var21), (double)(((float)var11 + var20) / 128.0F + var23));
-			var19.addVertexWithUV((double)(0.0F + var20), (double)(0.0F + var20), 0.0D, (double)(((float)var10 + var20) / 128.0F + var21), (double)(((float)var11 + var20) / 128.0F + var23));
-			var19.addVertexWithUV((double)(0.0F + var20), 0.0D, 0.0D, (double)(((float)var10 + var20) / 128.0F + var21), (double)((float)var11 / 128.0F + var23));
-			var19.addVertexWithUV(0.0D, 0.0D, 0.0D, (double)((float)var10 / 128.0F + var21), (double)((float)var11 / 128.0F + var23));
+			float var22 = 0.0F;
+			float var17 = 0.0F;
+			var19.addVertexWithUV(0.0D, (double)(0.0F + var20), 0.0D, (double)((float)var9 / 128.0F + var22), (double)(((float)var10 + var20) / 128.0F + var17));
+			var19.addVertexWithUV((double)(0.0F + var20), (double)(0.0F + var20), 0.0D, (double)(((float)var9 + var20) / 128.0F + var22), (double)(((float)var10 + var20) / 128.0F + var17));
+			var19.addVertexWithUV((double)(0.0F + var20), 0.0D, 0.0D, (double)(((float)var9 + var20) / 128.0F + var22), (double)((float)var10 / 128.0F + var17));
+			var19.addVertexWithUV(0.0D, 0.0D, 0.0D, (double)((float)var9 / 128.0F + var22), (double)((float)var10 / 128.0F + var17));
 			var19.draw();
-			GL11.glTranslatef((float)this.charWidth[var9], 0.0F, 0.0F);
+			GL11.glTranslatef((float)this.charWidth[var8], 0.0F, 0.0F);
 			GL11.glEndList();
 		}
 
-		for(var9 = 0; var9 < 32; ++var9) {
-			var10 = (var9 >> 3 & 1) * 85;
-			var11 = (var9 >> 2 & 1) * 170 + var10;
-			var12 = (var9 >> 1 & 1) * 170 + var10;
-			int var22 = (var9 >> 0 & 1) * 170 + var10;
-			if(var9 == 6) {
-				var11 += 85;
+		for(var8 = 0; var8 < 32; ++var8) {
+			var9 = (var8 >> 3 & 1) * 85;
+			var10 = (var8 >> 2 & 1) * 170 + var9;
+			var11 = (var8 >> 1 & 1) * 170 + var9;
+			int var21 = (var8 >> 0 & 1) * 170 + var9;
+			if(var8 == 6) {
+				var10 += 85;
 			}
 
-			boolean var24 = var9 >= 16;
+			boolean var23 = var8 >= 16;
 			if(var1.anaglyph) {
-				var15 = (var11 * 30 + var12 * 59 + var22 * 11) / 100;
-				var16 = (var11 * 30 + var12 * 70) / 100;
-				int var17 = (var11 * 30 + var22 * 70) / 100;
-				var11 = var15;
-				var12 = var16;
-				var22 = var17;
+				var12 = (var10 * 30 + var11 * 59 + var21 * 11) / 100;
+				var13 = (var10 * 30 + var11 * 70) / 100;
+				int var24 = (var10 * 30 + var21 * 70) / 100;
+				var10 = var12;
+				var11 = var13;
+				var21 = var24;
 			}
 
-			if(var24) {
+			if(var23) {
+				var10 /= 4;
 				var11 /= 4;
-				var12 /= 4;
-				var22 /= 4;
+				var21 /= 4;
 			}
 
-			GL11.glNewList(this.fontDisplayLists + 256 + var9, GL11.GL_COMPILE);
-			GL11.glColor3f((float)var11 / 255.0F, (float)var12 / 255.0F, (float)var22 / 255.0F);
+			GL11.glNewList(this.fontDisplayLists + 256 + var8, GL11.GL_COMPILE);
+			GL11.glColor3f((float)var10 / 255.0F, (float)var11 / 255.0F, (float)var21 / 255.0F);
 			GL11.glEndList();
 		}
 
@@ -128,18 +128,30 @@
 				var6 = var4 & -16777216;
 				var4 = (var4 & 16579836) >> 2;
 				var4 += var6;
+				int var10000;
+				if(var6 != 255 && var6 != 0) {
+					var4 |= var6 / 2 << 24;
+					var10000 = var4;
+				} else {
+					var4 |= -16777216;
+					var10000 = var4;
+				}
+
+				var4 = var10000;
 			}
 
+			GL11.glEnable(GL11.GL_BLEND);
+			GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.fontTextureName);
-			float var10 = (float)(var4 >> 16 & 255) / 255.0F;
-			float var7 = (float)(var4 >> 8 & 255) / 255.0F;
-			float var8 = (float)(var4 & 255) / 255.0F;
-			float var9 = (float)(var4 >> 24 & 255) / 255.0F;
-			if(var9 == 0.0F) {
-				var9 = 1.0F;
+			float var7 = (float)(var4 >> 16 & 255) / 255.0F;
+			float var8 = (float)(var4 >> 8 & 255) / 255.0F;
+			float var9 = (float)(var4 & 255) / 255.0F;
+			float var10 = (float)(var4 >> 24 & 255) / 255.0F;
+			if(var10 == 0.0F) {
+				var10 = 1.0F;
 			}
 
-			GL11.glColor4f(var10, var7, var8, var9);
+			GL11.glColor4f(var7, var8, var9, var10);
 			this.buffer.clear();
 			GL11.glPushMatrix();
 			GL11.glTranslatef((float)var2, (float)var3, 0.0F);
@@ -176,6 +188,7 @@
 			GL11.glCallLists(this.buffer);
 			GL11.glPopMatrix();
 		}
+
 	}
 
 	public int getStringWidth(String var1) {
--- /dev/null
+++ net/minecraft/src/WorldGenHouseSmall.java
@@ -1,0 +1,361 @@
+package net.minecraft.src;
+
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.Random;
+import java.util.Map.Entry;
+
+public class WorldGenHouseSmall extends WorldGenerator {
+	public static int field_9665_9HHBzQ2wG84LFbc45tMzL7mAlvvdO1k855mGGSfk3FfJP80LupQs710X4K6J = 25;
+	private final Map<WorldGenHouseSmallUnknownClass2, WorldGenHouseSmallUnknownClass5> field_9667_9IWUn864qx5IO5om711HK5Sftm12yv0GK3QrtVY84g747HU1IztC3G1RDFZ6 = new HashMap();
+	private final HashMap<WorldGenHouseSmallUnknownClass2, WorldGenHouseSmallUnknownClass> field_9666_6A95w6TCKMljjJy1nntH1rW395Pix9TTxJ3jQYOCs5ip238cYFQFYZLOL6xM = new HashMap();
+
+	private WorldGenHouseSmallUnknownClass5 func_9664_4bSggIjY4Y8PdaaH85z1zIqMCNm5aG4TqjidsQP1lxcesP15aXOIcvtKAyC8(World var1, Random var2, int var3, int var4, int var5, WorldGenHouseSmallUnknownClass2 var6, int var7) {
+		return this.func_9663_9pTy4yiDSYYiMgi1p82kZR862lr5vjJNqdi8KePH7dH2wrISOg522L69fb4R(var1, var2, var3, var4, var5, var6, var7, new WorldUnknownClass3(Integer.valueOf(0)));
+	}
+
+	private WorldGenHouseSmallUnknownClass5 func_9663_9pTy4yiDSYYiMgi1p82kZR862lr5vjJNqdi8KePH7dH2wrISOg522L69fb4R(World var1, Random var2, int var3, int var4, int var5, WorldGenHouseSmallUnknownClass2 var6, int var7, WorldUnknownClass3<Integer> var8) {
+		if(this.field_9667_9IWUn864qx5IO5om711HK5Sftm12yv0GK3QrtVY84g747HU1IztC3G1RDFZ6.containsKey(var6)) {
+			return null;
+		} else {
+			this.field_9667_9IWUn864qx5IO5om711HK5Sftm12yv0GK3QrtVY84g747HU1IztC3G1RDFZ6.put(var6, (WorldGenHouseSmallUnknownClass5)null);
+			if(var1.getBlockId(var3, var4, var5) != 0) {
+				return null;
+			} else {
+				while(var1.getBlockId(var3, var4, var5) == 0) {
+					--var4;
+					if(var4 <= 0) {
+						return null;
+					}
+				}
+
+				if(var4 > 104) {
+					return null;
+				} else {
+					var4 /= 4;
+					++var4;
+					var4 *= 4;
+					int var9 = 3 + var2.nextInt(3);
+					int var10 = (116 - var4) / 4 - 2;
+					if(var10 <= 0) {
+						return null;
+					} else {
+						int var11 = 2 + var2.nextInt(var10);
+						WorldGenHouseSmallUnknownClass5 var12 = new WorldGenHouseSmallUnknownClass5(var9, var11, var3, var4, var5);
+
+						int var13;
+						int var14;
+						int var15;
+						for(var13 = -var9 + 1; var13 <= var9 - 1; ++var13) {
+							for(var14 = 1; var14 <= 3; ++var14) {
+								for(var15 = 0; var15 <= var11; ++var15) {
+									var1.setBlock(var13 + var3, var4 + 4 * var15 + var14, -var9 + 1 + var5, ExtBlocks.SlateBricks.blockID);
+									var1.setBlock(var13 + var3, var4 + 4 * var15 + var14, var9 - 1 + var5, ExtBlocks.SlateBricks.blockID);
+									var1.setBlock(-var9 + 1 + var3, var4 + 4 * var15 + var14, var13 + var5, ExtBlocks.SlateBricks.blockID);
+									var1.setBlock(var9 - 1 + var3, var4 + 4 * var15 + var14, var13 + var5, ExtBlocks.SlateBricks.blockID);
+								}
+							}
+						}
+
+						for(var13 = -var9; var13 <= var9; ++var13) {
+							for(var14 = -var9; var14 <= var9; ++var14) {
+								for(var15 = 0; var15 <= var11 + 1; ++var15) {
+									var1.setBlock(var13 + var3, var4 + 4 * var15, var14 + var5, ExtBlocks.SmoothStone.blockID);
+								}
+							}
+						}
+
+						for(var13 = 1; var13 <= 3; ++var13) {
+							for(var14 = 0; var14 <= var11; ++var14) {
+								var1.setBlock(var9 + var3, var4 + 4 * var14 + var13, -var9 + var5, ExtBlocks.FlamewoodPillar.blockID);
+								var1.setBlock(-var9 + var3, var4 + 4 * var14 + var13, var9 + var5, ExtBlocks.FlamewoodPillar.blockID);
+								var1.setBlock(-var9 + var3, var4 + 4 * var14 + var13, -var9 + var5, ExtBlocks.FlamewoodPillar.blockID);
+								var1.setBlock(var9 + var3, var4 + 4 * var14 + var13, var9 + var5, ExtBlocks.FlamewoodPillar.blockID);
+							}
+						}
+
+						for(var13 = -var9 + 1; var13 <= var9 - 1; ++var13) {
+							for(var14 = -var9 + 1; var14 <= var9 - 1; ++var14) {
+								for(var15 = var4 - 1; var15 > 0 && var1.getBlockId(var13 + var3, var15, var14 + var5) == 0; --var15) {
+									var1.setBlock(var13 + var3, var15, var14 + var5, ExtBlocks.FlamewoodPillar.blockID);
+								}
+							}
+						}
+
+						int var16;
+						int var17;
+						int var18;
+						for(var13 = 0; var13 < var11; ++var13) {
+							var14 = var4 + 1 + 4 * var13;
+							EnumHouseSmall[] var28 = new EnumHouseSmall[4];
+							var12.field_12172_7EQ6jd3x88fSv4M9BHi7s57Y778Lr34WSc98fXK3YndnTY5T4cO73NCZv1zn.add(var28);
+
+							for(var16 = 0; var16 < 4; ++var16) {
+								var28[var16] = EnumHouseSmall.NORMAL;
+							}
+
+							for(var16 = 0; var16 < 4; ++var16) {
+								var17 = 0;
+								var18 = (var16 & 2) - 1;
+								if(var16 % 2 == 1) {
+									var17 = var18;
+									var18 = 0;
+								}
+
+								int var19 = var17 * (var9 - 1) + var3;
+								int var20 = var18 * (var9 - 1) + var5;
+								switch(var2.nextInt(5)) {
+								case 1:
+									var1.setBlock(var19, var14 + 1, var20, ExtBlocks.WireframeBlock.blockID);
+									var28[var16] = EnumHouseSmall.WINDOW;
+									break;
+								case 2:
+									WorldGenHouseSmallUnknownClass2 var21 = new WorldGenHouseSmallUnknownClass2(var6.func_11105_5ZR6ielH0gxIT8YmA1m4F65rkWUs4cP2723lV4Hy6tl6rO7opLrvOyTWthww() + var17, var6.func_11106_47IAru15P2DzBMMdHFDJNZXRKMMGzW0ZSLEGX87l25z9CdPzg63Pq5T04vvr() + var18);
+									if(!this.field_9667_9IWUn864qx5IO5om711HK5Sftm12yv0GK3QrtVY84g747HU1IztC3G1RDFZ6.containsKey(var21)) {
+										var28[var16] = EnumHouseSmall.DOOR;
+
+										for(int var22 = 0; var22 <= var7 / 2 + 1; ++var22) {
+											if(var2.nextInt(var7 + 1) == 0 && ((Integer)var8.field_12076_0yKQEI9scMQYs2U79FTz0taKE8d93C90G8erLBZDQ88O3Q6XJ3zC1l0lXK1q).intValue() < field_9665_9HHBzQ2wG84LFbc45tMzL7mAlvvdO1k855mGGSfk3FfJP80LupQs710X4K6J) {
+												Integer var24 = (Integer)var8.field_12076_0yKQEI9scMQYs2U79FTz0taKE8d93C90G8erLBZDQ88O3Q6XJ3zC1l0lXK1q;
+												var8.field_12076_0yKQEI9scMQYs2U79FTz0taKE8d93C90G8erLBZDQ88O3Q6XJ3zC1l0lXK1q = Integer.valueOf(((Integer)var8.field_12076_0yKQEI9scMQYs2U79FTz0taKE8d93C90G8erLBZDQ88O3Q6XJ3zC1l0lXK1q).intValue() + 1);
+												int var23 = var9 + 8 + var2.nextInt(3);
+												WorldGenHouseSmallUnknownClass5 var29 = this.func_9663_9pTy4yiDSYYiMgi1p82kZR862lr5vjJNqdi8KePH7dH2wrISOg522L69fb4R(var1, var2, var3 + var17 * var23, 128, var5 + var18 * var23, var21, var7 + 1, var8);
+												if(var29 == null || var29.field_12175_2H1YgXg1iR1kd9fC2ubGim1KGwSPUAnw9qg68y5mGH12kgO6dN8w61caMKO3 + (var29.field_12173_7fAKjHW1LE847OSwtPxt16L6WGEi68u7u6fWOmkZTpO3ZbiE0TR39wTva1vJ + 1) * 4 < var14) {
+													break;
+												}
+
+												var1.setBlock(var19, var14, var20, 0);
+												var1.setBlock(var19, var14 + 1, var20, 0);
+
+												for(int var25 = var9; var25 < var23 - var29.field_12171_5UJO83Sal8307YLDFyzIt779v5qD6812ur6y32x891iN95OgW8FOAZDB1pNG + 1; ++var25) {
+													var19 += var17;
+													var20 += var18;
+
+													for(int var26 = -1; var26 <= 1; ++var26) {
+														for(int var27 = -1; var27 <= 1; ++var27) {
+															if(var1.getBlockId(var19 + var26, var14 - 1, var20 + var27) == 0) {
+																var1.setBlock(var19 + var26, var14 - 1, var20 + var27, ExtBlocks.SlatePillar.blockID);
+															}
+														}
+													}
+												}
+
+												var19 += var17;
+												var20 += var18;
+												var1.setBlock(var19, var14, var20, 0);
+												var1.setBlock(var19, var14 + 1, var20, 0);
+												break;
+											}
+										}
+									}
+								}
+							}
+						}
+
+						var13 = var4 + (var11 + 1) * 4 + 1;
+
+						for(var14 = 0; var14 <= 1; ++var14) {
+							var1.setBlock(var9 + var3, var13 + var14, -var9 + var5, ExtBlocks.FlamewoodPillar.blockID);
+							var1.setBlock(-var9 + var3, var13 + var14, var9 + var5, ExtBlocks.FlamewoodPillar.blockID);
+							var1.setBlock(-var9 + var3, var13 + var14, -var9 + var5, ExtBlocks.FlamewoodPillar.blockID);
+							var1.setBlock(var9 + var3, var13 + var14, var9 + var5, ExtBlocks.FlamewoodPillar.blockID);
+						}
+
+						if(var2.nextInt(10) == 0) {
+							var1.setBlock(var3, var13 + var9, var5, ExtBlocks.essenceFountain.blockID);
+							var1.setBlock(var3, var13 + var9 - 1, var5, ExtBlocks.FlamewoodPillar.blockID);
+
+							for(var14 = 0; var14 < var9 - 1; ++var14) {
+								for(var15 = -var9 + 1 + var14; var15 <= var9 - 1 - var14; ++var15) {
+									for(var16 = -var9 + 1 + var14; var16 <= var9 - 1 - var14; ++var16) {
+										var1.setBlock(var3 + var15, var13 + var14, var5 + var16, ExtBlocks.SlateBeacon.blockID);
+									}
+								}
+							}
+						} else {
+							for(var14 = 0; var14 <= 1; ++var14) {
+								var1.setBlock(var9 - 1 + var3, var13 + var14, -var9 + 1 + var5, ExtBlocks.SlateBricks.blockID);
+								var1.setBlock(-var9 + 1 + var3, var13 + var14, var9 - 1 + var5, ExtBlocks.SlateBricks.blockID);
+								var1.setBlock(-var9 + 1 + var3, var13 + var14, -var9 + 1 + var5, ExtBlocks.SlateBricks.blockID);
+								var1.setBlock(var9 - 1 + var3, var13 + var14, var9 - 1 + var5, ExtBlocks.SlateBricks.blockID);
+							}
+
+							var1.setBlock(var9 - 2 + var3, var13, -var9 + 1 + var5, ExtBlocks.SlateBricks.blockID);
+							var1.setBlock(-var9 + 2 + var3, var13, var9 - 1 + var5, ExtBlocks.SlateBricks.blockID);
+							var1.setBlock(-var9 + 2 + var3, var13, -var9 + 1 + var5, ExtBlocks.SlateBricks.blockID);
+							var1.setBlock(var9 - 2 + var3, var13, var9 - 1 + var5, ExtBlocks.SlateBricks.blockID);
+							var1.setBlock(var9 - 1 + var3, var13, -var9 + 2 + var5, ExtBlocks.SlateBricks.blockID);
+							var1.setBlock(-var9 + 1 + var3, var13, var9 - 2 + var5, ExtBlocks.SlateBricks.blockID);
+							var1.setBlock(-var9 + 1 + var3, var13, -var9 + 2 + var5, ExtBlocks.SlateBricks.blockID);
+							var1.setBlock(var9 - 1 + var3, var13, var9 - 2 + var5, ExtBlocks.SlateBricks.blockID);
+						}
+
+						for(var13 = 0; var13 <= var11; ++var13) {
+							if(var11 != var13) {
+								var14 = var2.nextInt(4);
+								var15 = (1 + var2.nextInt(var9 - 2)) * (var2.nextInt(2) * 2 - 1);
+								var16 = 0;
+								var17 = 0;
+								switch(var14) {
+								case 0:
+									var16 = var3 + var15;
+									var17 = var5 + var9 - 2;
+									break;
+								case 1:
+									var16 = var3 + var15;
+									var17 = var5 - var9 + 2;
+									break;
+								case 2:
+									var16 = var3 + var9 - 2;
+									var17 = var5 + var15;
+									break;
+								case 3:
+									var16 = var3 - var9 + 2;
+									var17 = var5 + var15;
+								}
+
+								for(var18 = 1; var18 <= 4; ++var18) {
+									var1.setBlock(var16, var4 + var18 + var13 * 4, var17, Block.ladder.blockID);
+									var1.setBlockMetadata(var16, var4 + var18 + var13 * 4, var17, var14 + 2);
+								}
+							}
+						}
+
+						this.field_9667_9IWUn864qx5IO5om711HK5Sftm12yv0GK3QrtVY84g747HU1IztC3G1RDFZ6.put(var6, var12);
+						return var12;
+					}
+				}
+			}
+		}
+	}
+
+	private void func_9661_00EILg3OmCfJhYO3i3J4ybeenZj4OZ0JmTbQvREppfrHT8BnI9Z3yfR0OsE4(World var1, Random var2) {
+		Iterator var3 = this.field_9667_9IWUn864qx5IO5om711HK5Sftm12yv0GK3QrtVY84g747HU1IztC3G1RDFZ6.entrySet().iterator();
+
+		while(true) {
+			label115:
+			while(true) {
+				Entry var4;
+				do {
+					do {
+						if(!var3.hasNext()) {
+							return;
+						}
+
+						var4 = (Entry)var3.next();
+					} while(var4.getValue() == null);
+				} while(((WorldGenHouseSmallUnknownClass5)var4.getValue()).field_12173_7fAKjHW1LE847OSwtPxt16L6WGEi68u7u6fWOmkZTpO3ZbiE0TR39wTva1vJ < 8);
+
+				WorldGenHouseSmallUnknownClass5 var5 = (WorldGenHouseSmallUnknownClass5)var4.getValue();
+
+				for(int var6 = 4; var6 < var5.field_12173_7fAKjHW1LE847OSwtPxt16L6WGEi68u7u6fWOmkZTpO3ZbiE0TR39wTva1vJ - 3; ++var6) {
+					label110:
+					for(int var7 = 0; var7 < 4; ++var7) {
+						int var8;
+						for(var8 = 0; var8 < 3; ++var8) {
+							if(((EnumHouseSmall[])var5.field_12172_7EQ6jd3x88fSv4M9BHi7s57Y778Lr34WSc98fXK3YndnTY5T4cO73NCZv1zn.get(var6 + var8))[var7] != EnumHouseSmall.NORMAL) {
+								continue label110;
+							}
+						}
+
+						var8 = 0;
+						int var9 = (var7 & 2) - 1;
+						if(var7 % 2 == 1) {
+							var8 = var9;
+							var9 = 0;
+						}
+
+						WorldGenHouseSmallUnknownClass2 var10 = new WorldGenHouseSmallUnknownClass2((WorldGenHouseSmallUnknownClass2)var4.getKey());
+						var10.func_11104_0t72uE0X6e9X1lk504mMn0Usl2040LLyJIqoCM5A8QY4qQ7Bui0LPvUn4qLg(var8, var9);
+						WorldGenHouseSmallUnknownClass5 var11 = (WorldGenHouseSmallUnknownClass5)this.field_9667_9IWUn864qx5IO5om711HK5Sftm12yv0GK3QrtVY84g747HU1IztC3G1RDFZ6.get(var10);
+						int var12;
+						if(var11 != null) {
+							var12 = Math.max(Math.abs(var11.field_12170_8ceUXPOD34dVCWOlpGT5Do01b84rla5c3oO5uc195z07QUJ9oHb4k9hRdKb9 - var5.field_12170_8ceUXPOD34dVCWOlpGT5Do01b84rla5c3oO5uc195z07QUJ9oHb4k9hRdKb9), Math.abs(var11.field_12170_8ceUXPOD34dVCWOlpGT5Do01b84rla5c3oO5uc195z07QUJ9oHb4k9hRdKb9 - var5.field_12170_8ceUXPOD34dVCWOlpGT5Do01b84rla5c3oO5uc195z07QUJ9oHb4k9hRdKb9));
+							if(var12 - var11.field_12171_5UJO83Sal8307YLDFyzIt779v5qD6812ur6y32x891iN95OgW8FOAZDB1pNG - var5.field_12171_5UJO83Sal8307YLDFyzIt779v5qD6812ur6y32x891iN95OgW8FOAZDB1pNG < 5) {
+								continue;
+							}
+						}
+
+						if(var2.nextInt(10) == 0) {
+							int var22 = var8 * var5.field_12171_5UJO83Sal8307YLDFyzIt779v5qD6812ur6y32x891iN95OgW8FOAZDB1pNG + var5.field_12170_8ceUXPOD34dVCWOlpGT5Do01b84rla5c3oO5uc195z07QUJ9oHb4k9hRdKb9;
+							int var23 = var9 * var5.field_12171_5UJO83Sal8307YLDFyzIt779v5qD6812ur6y32x891iN95OgW8FOAZDB1pNG + var5.field_12174_2QgdUt39i2D2kz0DVgEK57x7SbqDO3VF01u5FKjDkJE4E2TM9g1sTnjxdetP;
+							var12 = var9;
+							int var13 = var8;
+							var1.setBlock(var22, var5.field_12175_2H1YgXg1iR1kd9fC2ubGim1KGwSPUAnw9qg68y5mGH12kgO6dN8w61caMKO3 + var6 * 4 + 2, var23, ExtBlocks.ElderPillar.blockID);
+							var1.setBlock(var22, var5.field_12175_2H1YgXg1iR1kd9fC2ubGim1KGwSPUAnw9qg68y5mGH12kgO6dN8w61caMKO3 + var6 * 4 + 8, var23, ExtBlocks.ElderPillar.blockID);
+							var1.setBlock(var22 + var8, var5.field_12175_2H1YgXg1iR1kd9fC2ubGim1KGwSPUAnw9qg68y5mGH12kgO6dN8w61caMKO3 + var6 * 4 + 2, var23 + var9, ExtBlocks.ElderPillar.blockID);
+							var1.setBlock(var22 + var8, var5.field_12175_2H1YgXg1iR1kd9fC2ubGim1KGwSPUAnw9qg68y5mGH12kgO6dN8w61caMKO3 + var6 * 4 + 8, var23 + var9, ExtBlocks.ElderPillar.blockID);
+
+							int[] var14;
+							for(var14 = new int[]{var2.nextInt(5) + 1, var2.nextInt(5) + 1, var2.nextInt(5) + 1, var2.nextInt(5) + 1}; Math.abs(var14[0] - var14[2]) == 1; var14[2] = var2.nextInt(5) + 1) {
+								var14[0] = var2.nextInt(5) + 1;
+							}
+
+							while(Math.abs(var14[1] - var14[3]) == 1) {
+								var14[1] = var2.nextInt(5) + 1;
+								var14[3] = var2.nextInt(5) + 1;
+							}
+
+							for(int var15 = var5.field_12175_2H1YgXg1iR1kd9fC2ubGim1KGwSPUAnw9qg68y5mGH12kgO6dN8w61caMKO3 + var6 * 4 + 1; var15 <= var5.field_12175_2H1YgXg1iR1kd9fC2ubGim1KGwSPUAnw9qg68y5mGH12kgO6dN8w61caMKO3 + var6 * 4 + 9; ++var15) {
+								for(int var16 = 0; var16 < 3; ++var16) {
+									boolean var17 = var16 == 1 && var15 != var5.field_12175_2H1YgXg1iR1kd9fC2ubGim1KGwSPUAnw9qg68y5mGH12kgO6dN8w61caMKO3 + var6 * 4 + 1 && var15 != var5.field_12175_2H1YgXg1iR1kd9fC2ubGim1KGwSPUAnw9qg68y5mGH12kgO6dN8w61caMKO3 + var6 * 4 + 9;
+									var1.setBlock(var22 + var8 * (2 + var16), var15, var23 + var9 * (2 + var16), !var17 ? ExtBlocks.ElderSmoothStone.blockID : ExtBlocks.ElderDecoratedStone.blockID);
+									if(var17) {
+										for(int var18 = -1; var18 <= 1; var18 += 2) {
+											byte var19 = 0;
+											var12 *= var18;
+											var13 *= var18;
+											if(var12 == 1) {
+												var19 = 5;
+											} else if(var12 == -1) {
+												var19 = 4;
+											} else if(var13 == 1) {
+												var19 = 3;
+											} else if(var13 == -1) {
+												var19 = 2;
+											}
+
+											var12 *= var18;
+											var13 *= var18;
+											int var20 = var15 - (var5.field_12175_2H1YgXg1iR1kd9fC2ubGim1KGwSPUAnw9qg68y5mGH12kgO6dN8w61caMKO3 + var6 * 4 + 1);
+											if(var20 != var14[var18 + 1] && var20 != var14[var18 + 2]) {
+												int var21 = var2.nextBoolean() ? ExtBlocks.SolarPlate.blockID : ExtBlocks.TrinityPlate.blockID;
+												var1.setBlockAndMetadataWithNotify(var22 + var8 * (2 + var16) + var12 * var18, var15, var23 + var9 * (2 + var16) + var13 * var18, var21 + var2.nextInt(5), var19);
+											}
+										}
+									}
+								}
+							}
+							continue label115;
+						}
+					}
+				}
+			}
+		}
+	}
+
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		if(Math.abs(var3) < 64 && Math.abs(var5) < 64) {
+			return false;
+		} else {
+			this.func_9664_4bSggIjY4Y8PdaaH85z1zIqMCNm5aG4TqjidsQP1lxcesP15aXOIcvtKAyC8(var1, var2, var3, var4, var5, new WorldGenHouseSmallUnknownClass2(Ext1605Utils.func_12155_8Hz7yQrbpttYl62r56lFe782dI9GJEm7d3W4768d4S2Iay7QH2DbzVf66DGe(var3, 196), Ext1605Utils.func_12155_8Hz7yQrbpttYl62r56lFe782dI9GJEm7d3W4768d4S2Iay7QH2DbzVf66DGe(var5, 196)), 0);
+			this.func_9661_00EILg3OmCfJhYO3i3J4ybeenZj4OZ0JmTbQvREppfrHT8BnI9Z3yfR0OsE4(var1, var2);
+			return true;
+		}
+	}
+
+	private WorldGenHouseSmallUnknownClass func_9662_6dKE8W4m3r1pcJ4AkaSl4NNeJjf9Xu15ce9m1bEB2krev7jJONoh6b6cnMkv(int var1, int var2, Random var3) {
+		WorldGenHouseSmallUnknownClass2 var4 = new WorldGenHouseSmallUnknownClass2(var1 / 1000, var2 / 1000);
+		if(this.field_9666_6A95w6TCKMljjJy1nntH1rW395Pix9TTxJ3jQYOCs5ip238cYFQFYZLOL6xM.containsKey(var4)) {
+			return (WorldGenHouseSmallUnknownClass)this.field_9666_6A95w6TCKMljjJy1nntH1rW395Pix9TTxJ3jQYOCs5ip238cYFQFYZLOL6xM.get(var4);
+		} else {
+			WorldGenHouseSmallUnknownClass var5 = new WorldGenHouseSmallUnknownClass(var3, var4);
+			this.field_9666_6A95w6TCKMljjJy1nntH1rW395Pix9TTxJ3jQYOCs5ip238cYFQFYZLOL6xM.put(var4, var5);
+			return var5;
+		}
+	}
+
+	public WorldGenHouseSmall(Random var1) {
+	}
+}
--- /dev/null
+++ net/minecraft/src/Visuals1604Extended.java
@@ -1,0 +1,38 @@
+package net.minecraft.src;
+
+class Visuals1604Extended extends Visuals {
+    final /* synthetic */ VisualsManager field_10076_027pvF1VLyNnJ8M484tjyXEaC151mdIM8Iq4A554pQ0f0Of4vrbqqb3AElG4;
+    
+    Visuals1604Extended(final VisualsManager la) {
+        this.field_10076_027pvF1VLyNnJ8M484tjyXEaC151mdIM8Iq4A554pQ0f0Of4vrbqqb3AElG4 = la;
+    }
+    
+    @Override
+    public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+        return "/unl/8db7811c-71de-11ee-b962-0242ac120002.xAL";
+    }
+    
+    @Override
+    public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(final Object... arr) {
+        if (arr[0] instanceof WorldZMSpawnWorld2 && (int)arr[1] == 5) {
+            this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+            return true;
+        }
+        return false;
+    }
+    
+    @Override
+    public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+        return "unlock--v1604tex";
+    }
+    
+    @Override
+    public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+        return "16.04 Extended Visuals";
+    }
+    
+    @Override
+    public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+        return "Survive 5 rounds on [ZM]Metsan Talo";
+    }
+}
--- /dev/null
+++ net/minecraft/src/WorldGenMycon.java
@@ -1,0 +1,118 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public final class WorldGenMycon extends WorldGenMyconUnknownClass {
+	private NoiseGeneratorOctaves field_9992_4Oh17DH0kQy6z545RnvgS7UF6zFCyrZ4Bjc306x63zC74kLLs4t4Vi87bGgD = null;
+
+	public WorldGenMycon(double var1, double var3, EnumWorldGenerator var5) {
+		super(var1, var3, var5);
+	}
+
+	private void func_9990_0o1yP502fmHSvq4K13FdssA7ty6n72SWOuYo16DO8L6QnP4Bmd24CH16BP30(World var1, int var2, int var3, int var4) {
+		var1.setBlockWithNotify(var2, var3, var4, ExtBlocks.GlowingMyconCap.blockID);
+		if(var1.getBlockId(var2 - 1, var3, var4) == 0) {
+			var1.setBlockWithNotify(var2 - 1, var3, var4, ExtBlocks.MyconCap.blockID);
+		}
+
+		if(var1.getBlockId(var2, var3, var4 - 1) == 0) {
+			var1.setBlockWithNotify(var2, var3, var4 - 1, ExtBlocks.MyconCap.blockID);
+		}
+
+		if(var1.getBlockId(var2 + 1, var3, var4) == 0) {
+			var1.setBlockWithNotify(var2 + 1, var3, var4, ExtBlocks.MyconCap.blockID);
+		}
+
+		if(var1.getBlockId(var2, var3, var4 + 1) == 0) {
+			var1.setBlockWithNotify(var2, var3, var4 + 1, ExtBlocks.MyconCap.blockID);
+		}
+
+		if(var1.getBlockId(var2, var3 + 1, var4) == 0) {
+			var1.setBlockWithNotify(var2, var3 + 1, var4, ExtBlocks.MyconCap.blockID);
+		}
+
+	}
+
+	private void func_9991_5M4z7jt1f08Pg16kEgU3bE3U01936aPTL2B349KOSZhQ04YOpCW29o187Aa1(Random var1, World var2, int var3, int var4) {
+		int var5;
+		int var6;
+		int var7;
+		for(var5 = -1; var5 <= 1; ++var5) {
+			for(var6 = -1; var6 <= 1; ++var6) {
+				for(var7 = 0; var7 <= 1; ++var7) {
+					this.func_9990_0o1yP502fmHSvq4K13FdssA7ty6n72SWOuYo16DO8L6QnP4Bmd24CH16BP30(var2, var3 + var5, 7 + var7, var4 + var6);
+				}
+			}
+		}
+
+		int var8;
+		for(var5 = 0; var5 < 3; ++var5) {
+			var6 = var1.nextInt(2) * 2 - 1;
+			var7 = var1.nextInt(2) * 2 - 1;
+			var8 = var1.nextInt(2) + 2;
+			int var9 = var1.nextInt(2) + 2;
+
+			for(int var10 = 0; var10 < var8; ++var10) {
+				for(int var11 = 0; var11 < var9; ++var11) {
+					this.func_9990_0o1yP502fmHSvq4K13FdssA7ty6n72SWOuYo16DO8L6QnP4Bmd24CH16BP30(var2, var3 + var10 * var6, 7, var4 + var11 * var7);
+				}
+			}
+		}
+
+		for(var5 = -2; var5 <= 2; ++var5) {
+			if(var2.getBlockId(var3 + var5, 7, var4 + 2) == ExtBlocks.GlowingMyconCap.blockID && var1.nextInt(6) == 0) {
+				this.func_9990_0o1yP502fmHSvq4K13FdssA7ty6n72SWOuYo16DO8L6QnP4Bmd24CH16BP30(var2, var3 + var5, 8, var4 + 2);
+			}
+
+			if(var2.getBlockId(var3 + var5, 7, var4 - 2) == ExtBlocks.GlowingMyconCap.blockID && var1.nextInt(6) == 0) {
+				this.func_9990_0o1yP502fmHSvq4K13FdssA7ty6n72SWOuYo16DO8L6QnP4Bmd24CH16BP30(var2, var3 + var5, 8, var4 - 2);
+			}
+
+			if(var2.getBlockId(var3 + 2, 7, var4 + var5) == ExtBlocks.GlowingMyconCap.blockID && var1.nextInt(6) == 0) {
+				this.func_9990_0o1yP502fmHSvq4K13FdssA7ty6n72SWOuYo16DO8L6QnP4Bmd24CH16BP30(var2, var3 + 2, 8, var4 + var5);
+			}
+
+			if(var2.getBlockId(var3 - 2, 7, var4 + var5) == ExtBlocks.GlowingMyconCap.blockID && var1.nextInt(6) == 0) {
+				this.func_9990_0o1yP502fmHSvq4K13FdssA7ty6n72SWOuYo16DO8L6QnP4Bmd24CH16BP30(var2, var3 - 2, 8, var4 + var5);
+			}
+		}
+
+		var5 = -var1.nextInt(2);
+		var6 = -var1.nextInt(2);
+
+		for(var7 = var5; var7 < 2 + var5; ++var7) {
+			for(var8 = var6; var8 < 2 + var6; ++var8) {
+				this.func_9990_0o1yP502fmHSvq4K13FdssA7ty6n72SWOuYo16DO8L6QnP4Bmd24CH16BP30(var2, var3 + var7, 9, var4 + var8);
+			}
+		}
+
+		for(var5 = 4; var5 < 10; ++var5) {
+			var2.setBlock(var3, var5, var4, ExtBlocks.MyconStem.blockID);
+		}
+
+	}
+
+	public boolean func_9982_84EZjwmgfVpn5brk96GnU3Eit81Yc6Xxm4lTPdVKUWyphKxl38Uh4dg8VF3T(Random var1, World var2, int var3, int var4) {
+		boolean var5 = false;
+
+		for(int var6 = 0; var6 < 16; ++var6) {
+			for(int var7 = 0; var7 < 16; ++var7) {
+				if(this.field_9992_4Oh17DH0kQy6z545RnvgS7UF6zFCyrZ4Bjc306x63zC74kLLs4t4Vi87bGgD.generateNoiseOctaves((double)(var3 * 16 + var6), (double)(var4 * 16 + var7)) > 0.1D) {
+					var2.setBlock(var3 * 16 + var6, 3, var4 * 16 + var7, ExtBlocks.LowMycon.blockID);
+					if(var1.nextInt(400) == 0 && !var5) {
+						this.func_9991_5M4z7jt1f08Pg16kEgU3bE3U01936aPTL2B349KOSZhQ04YOpCW29o187Aa1(var1, var2, var3 * 16 + var6, var4 * 16 + var7);
+						var5 = true;
+					} else if(var1.nextInt(120) == 0 && var2.getBlockId(var3 * 16 + var6, 4, var4 * 16 + var7) == 0) {
+						var2.setBlockWithNotify(var3 * 16 + var6, 4, var4 * 16 + var7, ExtBlocks.LowGlowingVine.blockID);
+					}
+				}
+			}
+		}
+
+		return false;
+	}
+
+	public void func_9977_0C8cKMHZGkSA22DGYztFv5857z0O34nRumUNAm59CrgBrFnKV5bq3guXEYB5(Random var1) {
+		this.field_9992_4Oh17DH0kQy6z545RnvgS7UF6zFCyrZ4Bjc306x63zC74kLLs4t4Vi87bGgD = new NoiseGeneratorOctaves(var1, 6);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockGlassOld.java
@@ -1,0 +1,13 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockGlassOld extends BlockBreakableOld {
+	public BlockGlassOld(int var1, int var2, Material var3, boolean var4) {
+		super(var1, var2, var3, var4);
+	}
+
+	public int quantityDropped(Random var1) {
+		return 0;
+	}
+}
--- /dev/null
+++ net/minecraft/src/EntitySpearmaster.java
@@ -1,0 +1,71 @@
+package net.minecraft.src;
+
+public class EntitySpearmaster extends EntityMob {
+	public EntitySpearmaster(World var1) {
+		super(var1);
+		this.texture = "/mob/spearmaster.png";
+	}
+
+	protected String getLivingSound() {
+		return "mob.skeleton";
+	}
+
+	protected String getHurtSound() {
+		return "mob.skeletonhurt";
+	}
+
+	protected String getDeathSound() {
+		return "mob.skeletonhurt";
+	}
+
+	public void onLivingUpdate() {
+		if(this.worldObj.isDaytime()) {
+			float var1 = this.getBrightness(1.0F);
+			if(var1 > 0.5F && this.worldObj.canBlockSeeTheSky(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY), MathHelper.floor_double(this.posZ)) && this.rand.nextFloat() * 30.0F < (var1 - 0.4F) * 2.0F) {
+				this.fire = 150;
+			}
+		}
+
+		super.onLivingUpdate();
+	}
+
+	protected void attackEntity(Entity var1, float var2) {
+		if(var2 < 12.0F) {
+			double var3 = var1.posX;
+			double var5 = var1.posZ;
+			double var7 = var1.posY;
+			if(this.attackTime == 0) {
+				EntitySpear var9 = new EntitySpear(this.worldObj, this);
+				++var9.posY;
+				double var10 = var1.posY - (double)0.2F - var9.posY;
+				float var12 = MathHelper.sqrt_double(var3 * var3 + var5 * var5) * 0.2F;
+				this.worldObj.playSoundAtEntity(this, "random.bow", 1.0F, 1.0F / (this.rand.nextFloat() * 0.4F + 0.8F));
+				this.worldObj.spawnEntityInWorld(var9);
+				var9.func_8862_62fy3xag0c9z7TJjArJC90Lh4QqV7rKpSSg3hIM929UUP4Eg7q57g2p0SP6W(var3, var10 + (double)var12, var5, 0.6F, 12.0F);
+				this.worldObj.spawnEntityInWorld(var9);
+				var9.func_8862_62fy3xag0c9z7TJjArJC90Lh4QqV7rKpSSg3hIM929UUP4Eg7q57g2p0SP6W(var3, var10 + (double)var12, var5, 0.8F, 15.0F);
+				this.attackTime = 25;
+			}
+
+			this.rotationYaw = (float)(Math.atan2(var5, var3) * 180.0D / (double)((float)Math.PI)) - 90.0F;
+			this.hasAttacked = true;
+		}
+
+	}
+
+	public void writeEntityToNBT(NBTTagCompound var1) {
+		super.writeEntityToNBT(var1);
+	}
+
+	public void readEntityFromNBT(NBTTagCompound var1) {
+		super.readEntityFromNBT(var1);
+	}
+
+	protected int getDropItemId() {
+		return ExtItems.Spear.shiftedIndex;
+	}
+
+	public int getEssenceDroppedOnKill() {
+		return 12 + this.rand.nextInt(6);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockStationaryOld.java
@@ -1,0 +1,57 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockStationaryOld extends BlockFluidOld {
+	protected BlockStationaryOld(int var1, Material var2) {
+		super(var1, var2);
+		this.setTickOnLoad(false);
+		if(var2 == Material.lava) {
+			this.setTickOnLoad(true);
+		}
+
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		super.onNeighborBlockChange(var1, var2, var3, var4, var5);
+		if(var1.getBlockId(var2, var3, var4) == this.blockID) {
+			this.setNotStationary(var1, var2, var3, var4);
+		}
+
+	}
+
+	private void setNotStationary(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		var1.editingBlocks = true;
+		var1.setBlockAndMetadata(var2, var3, var4, this.blockID - 1, var5);
+		var1.markBlocksDirty(var2, var3, var4, var2, var3, var4);
+		var1.scheduleBlockUpdate(var2, var3, var4, this.blockID - 1);
+		var1.editingBlocks = false;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(this.material == Material.lava) {
+			int var6 = var5.nextInt(3);
+
+			for(int var7 = 0; var7 < var6; ++var7) {
+				var2 += var5.nextInt(3) - 1;
+				++var3;
+				var4 += var5.nextInt(3) - 1;
+				int var8 = var1.getBlockId(var2, var3, var4);
+				if(var8 == 0) {
+					if(this.isFlammable(var1, var2 - 1, var3, var4) || this.isFlammable(var1, var2 + 1, var3, var4) || this.isFlammable(var1, var2, var3, var4 - 1) || this.isFlammable(var1, var2, var3, var4 + 1) || this.isFlammable(var1, var2, var3 - 1, var4) || this.isFlammable(var1, var2, var3 + 1, var4)) {
+						var1.setBlockWithNotify(var2, var3, var4, BlockOld.fire.blockID);
+						return;
+					}
+				} else if(BlockOld.blocksList[var8].material.getIsSolid()) {
+					return;
+				}
+			}
+		}
+
+	}
+
+	private boolean isFlammable(World var1, int var2, int var3, int var4) {
+		return var1.getBlockMaterial(var2, var3, var4).getCanBurn();
+	}
+}
--- /dev/null
+++ net/minecraft/src/GuiExtensions.java
@@ -1,0 +1,35 @@
+package net.minecraft.src;
+
+public class GuiExtensions extends GuiScreen {
+	private GuiScreen field_7985_0aA04xDJHl9kB9QyHOKYg9nrlzIQ18z87W3Of1PZ2e2Ea6JqDKn777Sxnymn;
+
+	public GuiExtensions(GuiScreen var1) {
+		this.field_7985_0aA04xDJHl9kB9QyHOKYg9nrlzIQ18z87W3Of1PZ2e2Ea6JqDKn777Sxnymn = var1;
+	}
+
+	public void initGui() {
+		super.initGui();
+		this.controlList.clear();
+		this.controlList.add(new GuiButton(0, this.width / 2 - 100, this.height / 4 + 120 + 12, "Done"));
+	}
+
+	protected void actionPerformed(GuiButton var1) {
+		if(var1.id == 0) {
+			this.mc.displayGuiScreen(this.field_7985_0aA04xDJHl9kB9QyHOKYg9nrlzIQ18z87W3Of1PZ2e2Ea6JqDKn777Sxnymn);
+		}
+
+	}
+
+	public void drawScreen(int var1, int var2, float var3) {
+		this.drawDefaultBackground();
+		String var4 = "ExtensionLoader 16.05_20#";
+		Gui.drawString(this.fontRenderer, var4, (new ScaledResolution(this.mc.displayWidth, this.mc.displayHeight)).getScaledWidth() - this.fontRenderer.getStringWidth(var4) - 2, 2, 14737632);
+		this.drawCenteredString(this.fontRenderer, "Extensions loaded:", this.width / 2, 20, 16777215);
+
+		for(int var5 = 0; var5 < ModLoader.func_11264_7AT2q764kBM4UAhX20130C3Jh6LT7Y5snv3wxjh9e5VP43467B37csjDd1NC().size(); ++var5) {
+			this.fontRenderer.drawString("- " + ((BaseMod)ModLoader.func_11264_7AT2q764kBM4UAhX20130C3Jh6LT7Y5snv3wxjh9e5VP43467B37csjDd1NC().get(var5)).toString(), 20, 60 + var5 * 16, 16777215);
+		}
+
+		super.drawScreen(var1, var2, var3);
+	}
+}
--- net/minecraft/src/GuiSelectWorld.java
+++ net/minecraft/src/GuiSelectWorld.java
@@ -7,27 +7,47 @@
 	protected GuiScreen parentScreen;
 	protected String screenTitle = "Select world";
 	private boolean selected = false;
+	public int worldSelBeginX = 0;
 
 	public GuiSelectWorld(GuiScreen var1) {
 		this.parentScreen = var1;
 	}
 
-	public void initGui() {
-		File var1 = Minecraft.getMinecraftDir();
-
-		for(int var2 = 0; var2 < 5; ++var2) {
-			NBTTagCompound var3 = World.getLevelData(var1, "World" + (var2 + 1));
-			if(var3 == null) {
-				this.controlList.add(new GuiButton(var2, this.width / 2 - 100, this.height / 6 + 24 * var2, "- empty -"));
+	public void CreateWorldButtons() {
+		while(this.controlList.size() > 2) {
+			this.controlList.remove(2);
+		}
+
+		this.controlList.add(new ButtonSel(-3, this.width / 2 - 160, this.height / 6 + 80, "<"));
+		int var1 = this.controlList.size() - 1;
+		this.controlList.add(new ButtonSel(-4, this.width / 2 + 110, this.height / 6 + 80, ">"));
+		if(this.worldSelBeginX == 0) {
+			((GuiButton)this.controlList.get(var1)).enabled = false;
+		}
+
+		File var2 = Minecraft.getMinecraftDir();
+
+		for(int var3 = this.worldSelBeginX; var3 < this.worldSelBeginX + 5; ++var3) {
+			NBTTagCompound var4 = World.getLevelData(var2, "World" + (var3 + 1));
+			int var5 = var3 - this.worldSelBeginX;
+			if(var4 == null) {
+				this.controlList.add(new GuiButton(var3, this.width / 2 - 100, this.height / 6 + 24 * var5, "- empty [World " + (var3 + 1) + "] -"));
 			} else {
-				String var4 = "World " + (var2 + 1);
-				long var5 = var3.getLong("SizeOnDisk");
-				var4 = var4 + " (" + (float)(var5 / 1024L * 100L / 1024L) / 100.0F + " MB)";
-				this.controlList.add(new GuiButton(var2, this.width / 2 - 100, this.height / 6 + 24 * var2, var4));
+				File var6 = new File(var2, "/saves/World" + (var3 + 1) + "/excl_frail");
+				boolean var7 = var6.exists();
+				String var8 = "World " + (var3 + 1) + (var7 ? "\u00ac" : "");
+				long var9 = var4.getLong("SizeOnDisk");
+				var8 = var8 + " (" + (float)(var9 / 1024L * 100L / 1024L) / 100.0F + " MB)";
+				this.controlList.add((new GuiButton(var3, this.width / 2 - 100, this.height / 6 + 24 * var5, var8)).SetTextColors(var7 ? 16728128 : 16777120, var7 ? 16552080 : 14737632));
 			}
 		}
 
+	}
+
+	public void initGui() {
+		this.controlList.clear();
 		this.initButtons();
+		this.CreateWorldButtons();
 	}
 
 	protected String getSaveName(int var1) {
@@ -36,21 +56,29 @@
 	}
 
 	public void initButtons() {
-		this.controlList.add(new GuiButton(5, this.width / 2 - 100, this.height / 6 + 120 + 12, "Delete world..."));
-		this.controlList.add(new GuiButton(6, this.width / 2 - 100, this.height / 6 + 168, "Cancel"));
+		this.controlList.add(new GuiButton(-1, this.width / 2 - 100, this.height / 6 + 120 + 12, "Delete world..."));
+		this.controlList.add(new GuiButton(-2, this.width / 2 - 100, this.height / 6 + 168, "Cancel"));
 	}
 
 	protected void actionPerformed(GuiButton var1) {
 		if(var1.enabled) {
-			if(var1.id < 5) {
+			if(var1.id > -1) {
 				this.selectWorld(var1.id + 1);
-			} else if(var1.id == 5) {
+			} else if(var1.id == -1) {
 				this.mc.displayGuiScreen(new GuiDeleteWorld(this));
-			} else if(var1.id == 6) {
+			} else if(var1.id == -2) {
 				this.mc.displayGuiScreen(this.parentScreen);
+			} else if(var1.id == -3) {
+				if(this.worldSelBeginX != 0) {
+					this.worldSelBeginX -= 5;
+					this.CreateWorldButtons();
+				}
+			} else if(var1.id == -4) {
+				this.worldSelBeginX += 5;
+				this.CreateWorldButtons();
 			}
-
 		}
+
 	}
 
 	public void selectWorld(int var1) {
@@ -61,6 +89,7 @@
 			this.mc.startWorld("World" + var1);
 			this.mc.displayGuiScreen((GuiScreen)null);
 		}
+
 	}
 
 	public void drawScreen(int var1, int var2, float var3) {
--- net/minecraft/src/GuiChest.java
+++ net/minecraft/src/GuiChest.java
@@ -38,8 +38,8 @@
 	}
 
 	protected void drawGuiContainerForegroundLayer() {
-		this.fontRenderer.drawString(this.lowerChestInventory.getInvName(), 8, 6, 4210752);
-		this.fontRenderer.drawString(this.upperChestInventory.getInvName(), 8, this.ySize - 96 + 2, 4210752);
+		this.fontRenderer.drawString(this.lowerChestInventory.getInvName(), 8, 6, 16777215);
+		this.fontRenderer.drawString(this.upperChestInventory.getInvName(), 8, this.ySize - 96 + 2, 16777215);
 	}
 
 	protected void drawGuiContainerBackgroundLayer(float var1) {
--- /dev/null
+++ net/minecraft/src/CommandRMode.java
@@ -1,0 +1,22 @@
+package net.minecraft.src;
+
+import org.lwjgl.opengl.Display;
+
+class CommandRMode extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8599_44YRDy00KIMlVCL4hSOgy016KLqJZzleree8A8pNL6N1c5KX5zNRjLqOjG8z;
+    
+    CommandRMode(final CommandManager abb) {
+        this.field_8599_44YRDy00KIMlVCL4hSOgy016KLqJZzleree8A8pNL6N1c5KX5zNRjLqOjG8z = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.resize((int)arr[0], (int)arr[1]);
+        Display.update();
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return InputHandler.mc.displayWidth + " " + InputHandler.mc.displayHeight;
+    }
+}
--- net/minecraft/src/PlayerController.java
+++ net/minecraft/src/PlayerController.java
@@ -63,6 +63,6 @@
 	}
 
 	public EntityPlayer createPlayer(World var1) {
-		return new EntityPlayerSP(this.mc, var1, this.mc.session);
+		return (EntityPlayer)(var1 instanceof FreerunWorld ? new EntityPlayerFreerunClient(this.mc, (FreerunWorld)var1, this.mc.session) : (var1 instanceof ZMWorld ? new EntityPlayerZombieModeClient(this.mc, (ZMWorld)var1, this.mc.session) : (Minecraft.field_7272_4vZ36FKx2I9PxzXyWH4290I55Q6yd6FI668q2Ylv62ISy2u1yh710qJ4Q0Yo ? new EntityPlayerBanned(this.mc, var1, this.mc.session) : new EntityPlayerSP(this.mc, var1, this.mc.session))));
 	}
 }
--- /dev/null
+++ net/minecraft/src/WorldGenFrigidHighwood.java
@@ -1,0 +1,218 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.Random;
+import net.minecraft.client.Minecraft;
+
+public class WorldGenFrigidHighwood extends WorldGenerator {
+	private Boolean field_9601_14W2tr76fRFVwxt8UMKtXBST5QgZfZd76Kd60D0ecLT6rj2651p1OIw3Okl7 = null;
+
+	public WorldGenFrigidHighwood func_9599_6t2D748Z7amgg6374qlf449x2Q0OB9B0wDPgUi1O77x30fiK30LU69tit5K7(boolean var1) {
+		this.field_9601_14W2tr76fRFVwxt8UMKtXBST5QgZfZd76Kd60D0ecLT6rj2651p1OIw3Okl7 = Boolean.valueOf(var1);
+		return this;
+	}
+
+	private boolean func_9597_8ybc3aO2T6MgY1TYT8ss066o6JU57Xmb5te89rUZiY5oFY9rdx2bLb5U8vu3(World var1, Random var2, int var3, int var4, int var5) {
+		int var6 = ExtBlocks.FrigidTrunk.blockID;
+		int var7 = ExtBlocks.FrigidLeaves.blockID;
+		int var8 = var2.nextInt(4) + 4;
+		boolean var9 = true;
+		if(var4 >= 1 && var4 + var8 + 1 <= 128) {
+			int var10;
+			int var11;
+			int var13;
+			for(var10 = var4; var10 <= var4 + 1 + var8; ++var10) {
+				byte var14 = 1;
+				if(var10 == var4) {
+					var14 = 0;
+				}
+
+				if(var10 >= var4 + 1 + var8 - 2) {
+					var14 = 2;
+				}
+
+				for(var11 = var3 - var14; var11 <= var3 + var14 && var9; ++var11) {
+					for(int var12 = var5 - var14; var12 <= var5 + var14 && var9; ++var12) {
+						if(var10 >= 0 && var10 < 128) {
+							var13 = var1.getBlockId(var11, var10, var12);
+							if(var13 != 0 && var13 != var7) {
+								var9 = false;
+							}
+						} else {
+							var9 = false;
+						}
+					}
+				}
+			}
+
+			if(!var9) {
+				return false;
+			} else {
+				var10 = var1.getBlockId(var3, var4 - 1, var5);
+				if((var10 == Block.blockSnow.blockID || var10 == Block.blockSnow.blockID) && var4 < 128 - var8 - 1) {
+					var1.setBlock(var3, var4 - 1, var5, Block.blockSnow.blockID);
+
+					int var20;
+					for(var20 = var4 - 1 + var8; var20 <= var4 + var8; ++var20) {
+						boolean var18 = true;
+						byte var19 = 1;
+
+						for(var13 = var3 - var19; var13 <= var3 - var19; ++var13) {
+							int var10000 = var13 - var3;
+
+							for(int var16 = var5 - var19; var16 <= var5 - var19; ++var16) {
+								var10000 = var16 - var5;
+								if(!Block.opaqueCubeLookup[var1.getBlockId(var13, var20, var16)]) {
+									var1.setBlock(var13 + 1, var20, var16 + 1, var7);
+								}
+							}
+						}
+					}
+
+					for(var20 = 0; var20 < var8; ++var20) {
+						var11 = var1.getBlockId(var3, var4 + var20, var5);
+						if(var11 == 0 || var11 == var7) {
+							var1.setBlock(var3, var4 + var20, var5, var6);
+						}
+					}
+
+					return true;
+				} else {
+					return false;
+				}
+			}
+		} else {
+			return false;
+		}
+	}
+
+	private void func_9598_8Q6sVEAF0181r05kCUEta3Mj47k1jnf88657Pv2Q38U9H8M6EAlf2G7PEzYb(World var1, Random var2, int var3, int var4, int var5) {
+		int var6 = ExtBlocks.AncientWood.blockID;
+		int var7 = ExtBlocks.AncientLeaves.blockID;
+		float var8 = 0.0F;
+		float var9 = var2.nextFloat() * (float)Math.PI * 2.0F;
+		int var10 = var2.nextInt(8) + 7;
+		float var11 = (float)var4;
+
+		float var13;
+		for(int var12 = 0; var12 < var10; ++var12) {
+			var9 = (float)((double)var9 + ((double)var2.nextFloat() - 0.5D) * 0.1D);
+			++var8;
+			var13 = var8 / (float)var10;
+			var3 = (int)((float)var3 + MathHelper.cos(var9) * (1.0F - var13));
+			var11 += var13;
+			var5 = (int)((float)var5 + MathHelper.sin(var9) * (1.0F - var13));
+			var4 = Math.round(var11);
+			var1.setBlock(var3, var4, var5, var6);
+		}
+
+		var4 += var2.nextInt(2) + 1;
+		int var15 = var2.nextInt(2) + 2;
+
+		for(int var16 = 0; var16 < var15; ++var16) {
+			var1.setBlock(var3, var4, var5, var7);
+
+			for(float var17 = 0.0F; (double)var17 < Math.PI * 2.0D; var17 = (float)((double)var17 + Math.PI * 0.2D)) {
+				int var18 = var2.nextInt(var16 + 2) + var16 + 2;
+				float var19 = (float)var3;
+				var13 = (float)var5;
+
+				for(int var14 = 0; var14 < var18; ++var14) {
+					var13 += MathHelper.sin(var17);
+					var19 += MathHelper.cos(var17);
+					if(!var1.getBlockMaterial(Math.round(var19), var4 - var16, Math.round(var13)).getIsSolid()) {
+						var1.setBlock(Math.round(var19), var4 - var16, Math.round(var13), var7);
+					}
+				}
+			}
+		}
+
+	}
+
+	private void func_9600_57JnQz29BeV8zgzsGl3J1kp08qjYLG4ixDPE5NIopzS8Rx361W9D19x2164N(World var1, Random var2, int var3, int var4, int var5) {
+		int var6 = ExtBlocks.AncientRoots.blockID;
+		int var7 = var2.nextInt(3);
+
+		for(int var8 = 0; var8 < var7; ++var8) {
+			int var9 = var2.nextInt(4) + 2;
+			int var10 = var3;
+			int var11 = var4;
+			int var12 = var5;
+
+			for(int var13 = 0; var13 < var9; ++var13) {
+				var10 += var2.nextInt(3) - 1;
+				--var11;
+				var12 += var2.nextInt(3) - 1;
+				if(var1.getBlockId(var10, var11, var12) != Block.bedrock.blockID) {
+					var1.setBlock(var10, var11, var12, var6);
+				}
+			}
+		}
+
+	}
+
+	private boolean func_9596_207WU7S6UShx2dKMu834lJM1ofWd2fa8azp67F0oht39izalOwX18EZ268Y8(World var1, Random var2, int var3, int var4, int var5) {
+		int var6 = ExtBlocks.AncientWood.blockID;
+		int var7 = ExtBlocks.AncientLeaves.blockID;
+		if(var1.getBlockId(var3, var4 - 1, var5) != Block.grass.blockID && var1.getBlockId(var3, var4 - 1, var5) != Block.dirt.blockID) {
+			return true;
+		} else {
+			Random var8 = new Random(var2.nextLong() + (long)var3 + (long)var4 + (long)var5 + var1.randomSeed);
+			ArrayList var9 = new ArrayList();
+			int var10 = 7 + var8.nextInt(10);
+			var9.add(Vec3D.createVector((double)var3, (double)(var4 + var10), (double)var5));
+
+			label71:
+			for(int var11 = 0; var9.size() > 0; ++var11) {
+				Iterator var12 = (new ArrayList(var9)).iterator();
+
+				while(true) {
+					while(true) {
+						if(!var12.hasNext()) {
+							continue label71;
+						}
+
+						Vec3D var13 = (Vec3D)var12.next();
+						int var14 = (int)Math.round(var13.xCoord);
+						int var15 = (int)Math.round(var13.yCoord);
+						int var16 = (int)Math.round(var13.zCoord);
+						if((!var1.getBlockMaterial(var14, var15, var16).getIsSolid() || var1.getBlockId(var14, var15, var16) != var7) && var15 >= 0 && (var8.nextInt(3) != 0 || var9.size() <= 3)) {
+							var1.setBlock(var14, var15, var16, var6);
+							int var17 = 0;
+
+							while(var8.nextInt(var9.size() / 30 + 2) <= 1 && var9.size() <= 10000) {
+								++var17;
+								if(var17 >= 4) {
+									break;
+								}
+
+								Vec3D var18 = var13.addVector((double)(var8.nextInt(3) - 1), -1.0D, (double)(var8.nextInt(3) - 1));
+								var9.add(var18);
+							}
+
+							if(var11 > 2 && var8.nextInt(Math.max(40, 78 - var11)) == 3) {
+								this.func_9598_8Q6sVEAF0181r05kCUEta3Mj47k1jnf88657Pv2Q38U9H8M6EAlf2G7PEzYb(var1, var2, var14, var15, var16);
+							}
+
+							var9.remove(var13);
+							var9.add(var13.addVector(0.0D, -1.0D, 0.0D));
+						} else {
+							var9.remove(var13);
+							if(var1.getBlockId(var14, var15, var16) == Block.blockSnow.blockID || var1.getBlockId(var14, var15, var16) == Block.blockSnow.blockID) {
+								this.func_9600_57JnQz29BeV8zgzsGl3J1kp08qjYLG4ixDPE5NIopzS8Rx361W9D19x2164N(var1, var8, var14, var15, var16);
+							}
+						}
+					}
+				}
+			}
+
+			return true;
+		}
+	}
+
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		Random var6 = new Random(var2.nextLong() + (long)var3 + (long)var4 + (long)var5 + var1.randomSeed);
+		return Minecraft.field_7272_4vZ36FKx2I9PxzXyWH4290I55Q6yd6FI668q2Ylv62ISy2u1yh710qJ4Q0Yo || this.field_9601_14W2tr76fRFVwxt8UMKtXBST5QgZfZd76Kd60D0ecLT6rj2651p1OIw3Okl7 == null || var6.nextInt(150) != 0 && !this.field_9601_14W2tr76fRFVwxt8UMKtXBST5QgZfZd76Kd60D0ecLT6rj2651p1OIw3Okl7.booleanValue() ? this.func_9597_8ybc3aO2T6MgY1TYT8ss066o6JU57Xmb5te89rUZiY5oFY9rdx2bLb5U8vu3(var1, var2, var3, var4, var5) : this.func_9596_207WU7S6UShx2dKMu834lJM1ofWd2fa8azp67F0oht39izalOwX18EZ268Y8(var1, var2, var3, var4, var5);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockIceOld.java
@@ -1,0 +1,39 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockIceOld extends BlockBreakableOld {
+	public BlockIceOld(int var1, int var2) {
+		super(var1, var2, Material.ice, false);
+		this.slipperiness = 0.98F;
+		this.setTickOnLoad(true);
+	}
+
+	public int getRenderBlockPass() {
+		return 1;
+	}
+
+	public boolean shouldSideBeRendered(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		return super.shouldSideBeRendered(var1, var2, var3, var4, 1 - var5);
+	}
+
+	public void onBlockRemoval(World var1, int var2, int var3, int var4) {
+		Material var5 = var1.getBlockMaterial(var2, var3 - 1, var4);
+		if(var5.getIsSolid() || var5.getIsLiquid()) {
+			var1.setBlockWithNotify(var2, var3, var4, BlockOld.waterMoving.blockID);
+		}
+
+	}
+
+	public int quantityDropped(Random var1) {
+		return 0;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(var1.getSavedLightValue(EnumSkyBlock.Block, var2, var3, var4) > 11 - BlockOld.lightOpacity[this.blockID]) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, BlockOld.waterStill.blockID);
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandNoclip.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+class CommandNoclip extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8565_7G0JQg0t57TYw233FG3RFxyZXGBge6wInqe8JWK2gby4h8FhSCj0cs7Op3Zs;
+    
+    CommandNoclip(final CommandManager abb) {
+        this.field_8565_7G0JQg0t57TYw233FG3RFxyZXGBge6wInqe8JWK2gby4h8FhSCj0cs7Op3Zs = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (ScreenDebugMenu.dbg_conf_enableCheats) {
+            InputHandler.mc.thePlayer.noClip = !InputHandler.mc.thePlayer.noClip;
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return InputHandler.mc.thePlayer.noClip ? "1" : "0";
+    }
+}
--- /dev/null
+++ net/minecraft/src/ItemSwordFlameberge.java
@@ -1,0 +1,43 @@
+package net.minecraft.src;
+
+public class ItemSwordFlameberge extends ItemSword {
+	int[] v2s = new int[]{3, 0, 3, 1, 2, 2, 1, 3, 0, 3, -1, 3, -2, 2, -3, 1, -3, 0, -3, -1, -2, -2, -1, -3, 0, -3, 1, -3, 2, -2, 3, -1};
+
+	public ItemSwordFlameberge(int var1) {
+		super(var1, 2);
+	}
+
+	public boolean BlockIDFirable(int var1) {
+		return var1 == 0 || var1 == 78;
+	}
+
+	public void SetBlockFire(World var1, int var2, int var3, int var4, int var5) {
+		if(var5 != 6) {
+			int var6 = var1.getBlockId(var2, var3, var4);
+			int var7 = var1.getBlockId(var2, var3 - 1, var4);
+			if(this.BlockIDFirable(var6)) {
+				if(!this.BlockIDFirable(var7)) {
+					Ext1605Utils.setBlock(var1, (long)var2, (long)var3, (long)var4, Block.fire.blockID);
+				} else {
+					this.SetBlockFire(var1, var2, var3 - 1, var4, var5 + 1);
+				}
+			} else {
+				this.SetBlockFire(var1, var2, var3 + 1, var4, var5 + 1);
+			}
+
+		}
+	}
+
+	public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+		int var4 = (int)var3.posX;
+		int var5 = (int)var3.posY;
+		int var6 = (int)var3.posZ;
+		var2.playSoundEffect((double)((float)var3.posX), (double)((float)var3.posY + 0.5F), (double)((float)var3.posZ), "ext.useflame", 0.4F, rand.nextFloat() * 0.3F + 0.7F);
+
+		for(int var7 = 0; var7 != this.v2s.length / 2; ++var7) {
+			this.SetBlockFire(var2, var4 + this.v2s[var7 * 2], var5, var6 + this.v2s[var7 * 2 + 1], 0);
+		}
+
+		return var1;
+	}
+}
--- net/minecraft/src/Tessellator.java
+++ net/minecraft/src/Tessellator.java
@@ -37,6 +37,8 @@
 	private int vboIndex = 0;
 	private int vboCount = 10;
 	private int bufferSize;
+	public int field_10304_0MROVDArlUltRNep2c82Yjn0c1YV0K6TX18zu3ch3eo466SKujDB70HFNvjW = 0;
+	public final int field_10293_3MB0Qm9645l05CgxH9Qp56vd457542UnkuBZPjHcpx7w5Fg2FpWDJ5149EH8 = 150;
 
 	private Tessellator(int var1) {
 		this.bufferSize = var1;
@@ -53,9 +55,7 @@
 	}
 
 	public void draw() {
-		if(!this.isDrawing) {
-			throw new IllegalStateException("Not tesselating!");
-		} else {
+		if(this.isDrawing) {
 			this.isDrawing = false;
 			if(this.vertexCount > 0) {
 				this.intBuffer.clear();
@@ -131,6 +131,7 @@
 
 			this.reset();
 		}
+
 	}
 
 	private void reset() {
@@ -141,13 +142,24 @@
 	}
 
 	public void startDrawingQuads() {
-		this.startDrawing(7);
+		this.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(false);
+	}
+
+	public void func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(boolean var1) {
+		this.func_10268_3G1to8O20W0e2IAxPtN5nia9CixxL69I1Ao9c5u7G19MPeSOCku1IA8g8iV3(7, var1);
 	}
 
 	public void startDrawing(int var1) {
-		if(this.isDrawing) {
-			throw new IllegalStateException("Already tesselating!");
-		} else {
+		this.func_10268_3G1to8O20W0e2IAxPtN5nia9CixxL69I1Ao9c5u7G19MPeSOCku1IA8g8iV3(var1, false);
+	}
+
+	public void func_10268_3G1to8O20W0e2IAxPtN5nia9CixxL69I1Ao9c5u7G19MPeSOCku1IA8g8iV3(int var1, boolean var2) {
+		++this.field_10304_0MROVDArlUltRNep2c82Yjn0c1YV0K6TX18zu3ch3eo466SKujDB70HFNvjW;
+		if(var2 || InputHandler.mc.options.fancyGraphics != 2 || this.field_10304_0MROVDArlUltRNep2c82Yjn0c1YV0K6TX18zu3ch3eo466SKujDB70HFNvjW < 150) {
+			if(this.isDrawing) {
+				throw new IllegalStateException("Already tesselating!");
+			}
+
 			this.isDrawing = true;
 			this.reset();
 			this.drawMode = var1;
@@ -156,6 +168,7 @@
 			this.hasTexture = false;
 			this.isColorDisabled = false;
 		}
+
 	}
 
 	public void setTextureUV(double var1, double var3) {
@@ -213,58 +226,63 @@
 			this.hasColor = true;
 			this.color = var4 << 24 | var3 << 16 | var2 << 8 | var1;
 		}
+
 	}
 
 	public void addVertexWithUV(double var1, double var3, double var5, double var7, double var9) {
-		this.setTextureUV(var7, var9);
-		this.addVertex(var1, var3, var5);
+		if(this.isDrawing) {
+			this.setTextureUV(var7, var9);
+			this.addVertex(var1, var3, var5);
+		}
 	}
 
 	public void addVertex(double var1, double var3, double var5) {
-		++this.addedVertices;
-		if(this.drawMode == 7 && convertQuadsToTriangles && this.addedVertices % 4 == 0) {
-			for(int var7 = 0; var7 < 2; ++var7) {
-				int var8 = 8 * (3 - var7);
-				if(this.hasTexture) {
-					this.rawBuffer[this.rawBufferIndex + 3] = this.rawBuffer[this.rawBufferIndex - var8 + 3];
-					this.rawBuffer[this.rawBufferIndex + 4] = this.rawBuffer[this.rawBufferIndex - var8 + 4];
-				}
-
-				if(this.hasColor) {
-					this.rawBuffer[this.rawBufferIndex + 5] = this.rawBuffer[this.rawBufferIndex - var8 + 5];
-				}
-
-				this.rawBuffer[this.rawBufferIndex + 0] = this.rawBuffer[this.rawBufferIndex - var8 + 0];
-				this.rawBuffer[this.rawBufferIndex + 1] = this.rawBuffer[this.rawBufferIndex - var8 + 1];
-				this.rawBuffer[this.rawBufferIndex + 2] = this.rawBuffer[this.rawBufferIndex - var8 + 2];
-				++this.vertexCount;
-				this.rawBufferIndex += 8;
-			}
-		}
-
-		if(this.hasTexture) {
-			this.rawBuffer[this.rawBufferIndex + 3] = Float.floatToRawIntBits((float)this.textureU);
-			this.rawBuffer[this.rawBufferIndex + 4] = Float.floatToRawIntBits((float)this.textureV);
-		}
-
-		if(this.hasColor) {
-			this.rawBuffer[this.rawBufferIndex + 5] = this.color;
-		}
-
-		if(this.hasNormals) {
-			this.rawBuffer[this.rawBufferIndex + 6] = this.normal;
-		}
-
-		this.rawBuffer[this.rawBufferIndex + 0] = Float.floatToRawIntBits((float)(var1 + this.xOffset));
-		this.rawBuffer[this.rawBufferIndex + 1] = Float.floatToRawIntBits((float)(var3 + this.yOffset));
-		this.rawBuffer[this.rawBufferIndex + 2] = Float.floatToRawIntBits((float)(var5 + this.zOffset));
-		this.rawBufferIndex += 8;
-		++this.vertexCount;
-		if(this.vertexCount % 4 == 0 && this.rawBufferIndex >= this.bufferSize - 32) {
-			this.draw();
-			this.isDrawing = true;
-		}
-
+		if(this.isDrawing) {
+			++this.addedVertices;
+			if(this.drawMode == 7 && convertQuadsToTriangles && this.addedVertices % 4 == 0) {
+				for(int var7 = 0; var7 < 2; ++var7) {
+					int var8 = 8 * (3 - var7);
+					if(this.hasTexture) {
+						this.rawBuffer[this.rawBufferIndex + 3] = this.rawBuffer[this.rawBufferIndex - var8 + 3];
+						this.rawBuffer[this.rawBufferIndex + 4] = this.rawBuffer[this.rawBufferIndex - var8 + 4];
+					}
+
+					if(this.hasColor) {
+						this.rawBuffer[this.rawBufferIndex + 5] = this.rawBuffer[this.rawBufferIndex - var8 + 5];
+					}
+
+					this.rawBuffer[this.rawBufferIndex + 0] = this.rawBuffer[this.rawBufferIndex - var8 + 0];
+					this.rawBuffer[this.rawBufferIndex + 1] = this.rawBuffer[this.rawBufferIndex - var8 + 1];
+					this.rawBuffer[this.rawBufferIndex + 2] = this.rawBuffer[this.rawBufferIndex - var8 + 2];
+					++this.vertexCount;
+					this.rawBufferIndex += 8;
+				}
+			}
+
+			if(this.hasTexture) {
+				this.rawBuffer[this.rawBufferIndex + 3] = Float.floatToRawIntBits((float)this.textureU);
+				this.rawBuffer[this.rawBufferIndex + 4] = Float.floatToRawIntBits((float)this.textureV);
+			}
+
+			if(this.hasColor) {
+				this.rawBuffer[this.rawBufferIndex + 5] = this.color;
+			}
+
+			if(this.hasNormals) {
+				this.rawBuffer[this.rawBufferIndex + 6] = this.normal;
+			}
+
+			this.rawBuffer[this.rawBufferIndex + 0] = Float.floatToRawIntBits((float)(var1 + this.xOffset));
+			this.rawBuffer[this.rawBufferIndex + 1] = Float.floatToRawIntBits((float)(var3 + this.yOffset));
+			this.rawBuffer[this.rawBufferIndex + 2] = Float.floatToRawIntBits((float)(var5 + this.zOffset));
+			this.rawBufferIndex += 8;
+			++this.vertexCount;
+			if(this.vertexCount % 4 == 0 && this.rawBufferIndex >= this.bufferSize - 32) {
+				this.draw();
+				this.isDrawing = true;
+			}
+
+		}
 	}
 
 	public void setColorOpaque_I(int var1) {
@@ -274,20 +292,25 @@
 		this.setColorOpaque(var2, var3, var4);
 	}
 
+	public void func_10264_9bHy7fL74IXD4UsqOd2Ex73M73ud0NIomc86hi8cp0K3zOYc25dWZ4o11NzU(int var1, int var2) {
+		int var3 = var1 >> 16 & 255;
+		int var4 = var1 >> 8 & 255;
+		int var5 = var1 & 255;
+		this.setColorRGBA(var3, var4, var5, var2);
+	}
+
 	public void disableColor() {
 		this.isColorDisabled = true;
 	}
 
 	public void setNormal(float var1, float var2, float var3) {
-		if(!this.isDrawing) {
-			System.out.println("But..");
+		if(this.isDrawing) {
+			this.hasNormals = true;
+			byte var4 = (byte)((int)(var1 * 128.0F));
+			byte var5 = (byte)((int)(var2 * 127.0F));
+			byte var6 = (byte)((int)(var3 * 127.0F));
+			this.normal = var4 | var5 << 8 | var6 << 16;
 		}
-
-		this.hasNormals = true;
-		byte var4 = (byte)((int)(var1 * 128.0F));
-		byte var5 = (byte)((int)(var2 * 127.0F));
-		byte var6 = (byte)((int)(var3 * 127.0F));
-		this.normal = var4 | var5 << 8 | var6 << 16;
 	}
 
 	public void setTranslationD(double var1, double var3, double var5) {
--- /dev/null
+++ net/minecraft/src/NetSplitImageDataHandler.java
@@ -1,0 +1,51 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+
+public class NetSplitImageDataHandler {
+	public static HashMap<String, NetSplitImageDataHandler> handlers = new HashMap();
+	public String targetName;
+	public byte[] imageData;
+	public int chunkSize = 1024;
+	public int wholeSize;
+	public int recvdSize = 0;
+	public List<Integer> receivedChunks = new ArrayList();
+
+	public NetSplitImageDataHandler(String var1, int var2) {
+		this.targetName = var1;
+		this.imageData = new byte[var2];
+		this.wholeSize = var2;
+	}
+
+	public static NetSplitImageDataHandler getHandler(String var0, int var1) {
+		if(!handlers.containsKey(var0)) {
+			handlers.put(var0, new NetSplitImageDataHandler(var0, var1));
+		}
+
+		return (NetSplitImageDataHandler)handlers.get(var0);
+	}
+
+	public void ReceiveChunk(byte[] var1, int var2) {
+		if(var2 >= 0 && var2 <= this.wholeSize / this.chunkSize) {
+			if(!this.receivedChunks.contains(Integer.valueOf(var2))) {
+				ExtLogger.i("Received data chunk n" + var2);
+				int var3 = var2 * this.chunkSize;
+				int var4 = 1024;
+				if(var3 + this.chunkSize > this.wholeSize) {
+					var4 = this.wholeSize - var3;
+				}
+
+				System.arraycopy(var1, 0, this.imageData, var2 * this.chunkSize, var4);
+				this.recvdSize += var1.length;
+			}
+		} else {
+			ExtLogger.w("Received invalid data chunk n" + var2);
+		}
+	}
+
+	public boolean IsComplete() {
+		return this.recvdSize >= this.wholeSize;
+	}
+}
--- net/minecraft/src/TextureWaterFlowFX.java
+++ net/minecraft/src/TextureWaterFlowFX.java
@@ -14,73 +14,76 @@
 
 	public void onTick() {
 		++this.tickCounter;
-
-		int var1;
-		int var2;
-		float var3;
-		int var5;
-		int var6;
-		for(var1 = 0; var1 < 16; ++var1) {
-			for(var2 = 0; var2 < 16; ++var2) {
-				var3 = 0.0F;
-
-				for(int var4 = var2 - 2; var4 <= var2; ++var4) {
-					var5 = var1 & 15;
-					var6 = var4 & 15;
-					var3 += this.red[var5 + var6 * 16];
-				}
-
-				this.green[var1 + var2 * 16] = var3 / 3.2F + this.blue[var1 + var2 * 16] * 0.8F;
-			}
-		}
-
-		for(var1 = 0; var1 < 16; ++var1) {
-			for(var2 = 0; var2 < 16; ++var2) {
-				this.blue[var1 + var2 * 16] += this.alpha[var1 + var2 * 16] * 0.05F;
-				if(this.blue[var1 + var2 * 16] < 0.0F) {
-					this.blue[var1 + var2 * 16] = 0.0F;
-				}
-
-				this.alpha[var1 + var2 * 16] -= 0.3F;
-				if(Math.random() < 0.2D) {
-					this.alpha[var1 + var2 * 16] = 0.5F;
-				}
-			}
-		}
-
-		float[] var12 = this.green;
-		this.green = this.red;
-		this.red = var12;
-
-		for(var2 = 0; var2 < 256; ++var2) {
-			var3 = this.red[var2 - this.tickCounter * 16 & 255];
-			if(var3 > 1.0F) {
-				var3 = 1.0F;
-			}
-
-			if(var3 < 0.0F) {
-				var3 = 0.0F;
-			}
-
-			float var13 = var3 * var3;
-			var5 = (int)(32.0F + var13 * 32.0F);
-			var6 = (int)(50.0F + var13 * 64.0F);
-			int var7 = 255;
-			int var8 = (int)(146.0F + var13 * 50.0F);
-			if(this.anaglyphEnabled) {
-				int var9 = (var5 * 30 + var6 * 59 + var7 * 11) / 100;
-				int var10 = (var5 * 30 + var6 * 70) / 100;
-				int var11 = (var5 * 30 + var7 * 70) / 100;
-				var5 = var9;
-				var6 = var10;
-				var7 = var11;
-			}
-
-			this.imageData[var2 * 4 + 0] = (byte)var5;
-			this.imageData[var2 * 4 + 1] = (byte)var6;
-			this.imageData[var2 * 4 + 2] = (byte)var7;
-			this.imageData[var2 * 4 + 3] = (byte)var8;
-		}
-
+		if(InputHandler.mc.options.fancyGraphics != 2 || this.field_10713_88024hG6da4f4kcVfOqR8cTJ36RtCs13wB6V30Rs17vqAj14F4Cqz3neFg20) {
+			this.field_10713_88024hG6da4f4kcVfOqR8cTJ36RtCs13wB6V30Rs17vqAj14F4Cqz3neFg20 = false;
+
+			int var1;
+			int var2;
+			float var3;
+			int var4;
+			int var5;
+			for(var1 = 0; var1 < 16; ++var1) {
+				for(var2 = 0; var2 < 16; ++var2) {
+					var3 = 0.0F;
+
+					for(int var6 = var2 - 2; var6 <= var2; ++var6) {
+						var4 = var1 & 15;
+						var5 = var6 & 15;
+						var3 += this.red[var4 + var5 * 16];
+					}
+
+					this.green[var1 + var2 * 16] = var3 / 3.2F + this.blue[var1 + var2 * 16] * 0.8F;
+				}
+			}
+
+			for(var1 = 0; var1 < 16; ++var1) {
+				for(var2 = 0; var2 < 16; ++var2) {
+					this.blue[var1 + var2 * 16] += this.alpha[var1 + var2 * 16] * 0.05F;
+					if(this.blue[var1 + var2 * 16] < 0.0F) {
+						this.blue[var1 + var2 * 16] = 0.0F;
+					}
+
+					this.alpha[var1 + var2 * 16] -= 0.3F;
+					if(Math.random() < 0.2D) {
+						this.alpha[var1 + var2 * 16] = 0.5F;
+					}
+				}
+			}
+
+			float[] var13 = this.green;
+			this.green = this.red;
+			this.red = var13;
+
+			for(var2 = 0; var2 < 256; ++var2) {
+				var3 = this.red[var2 - this.tickCounter * 16 & 255];
+				if(var3 > 1.0F) {
+					var3 = 1.0F;
+				}
+
+				if(var3 < 0.0F) {
+					var3 = 0.0F;
+				}
+
+				float var7 = var3 * var3;
+				var4 = (int)(32.0F + var7 * 32.0F);
+				var5 = (int)(50.0F + var7 * 64.0F);
+				int var8 = 255;
+				int var9 = (int)(146.0F + var7 * 50.0F);
+				if(this.anaglyphEnabled) {
+					int var10 = (var4 * 30 + var5 * 59 + var8 * 11) / 100;
+					int var11 = (var4 * 30 + var5 * 70) / 100;
+					int var12 = (var4 * 30 + var8 * 70) / 100;
+					var4 = var10;
+					var5 = var11;
+					var8 = var12;
+				}
+
+				this.imageData[var2 * 4 + 0] = (byte)var4;
+				this.imageData[var2 * 4 + 1] = (byte)var5;
+				this.imageData[var2 * 4 + 2] = (byte)var8;
+				this.imageData[var2 * 4 + 3] = (byte)var9;
+			}
+
+		}
 	}
 }
--- net/minecraft/src/EnumOSIsom.java
+++ net/minecraft/src/EnumOSIsom.java
@@ -6,4 +6,12 @@
 	windows,
 	macos,
 	unknown;
+
+	public static EnumOSIsom func_10689_7uK3J55m8yMkpQ2ydJ7CmNjp41V7WAqGMCdtAeg95xG2WvkchnYvtT54SmME(String var0) {
+		return (EnumOSIsom)Enum.valueOf(EnumOSIsom.class, var0);
+	}
+
+	private static EnumOSIsom[] func_10688_0p7id85Oby5ZE1XLbpA8uBM4t1x8vBpTbuK0R6320rlw9LfbkTCJG6492QTf() {
+		return new EnumOSIsom[]{linux, solaris, windows, macos, unknown};
+	}
 }
--- /dev/null
+++ net/minecraft/src/WorldGenHouseSmallUnknownClass4.java
@@ -1,0 +1,17 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public abstract class WorldGenHouseSmallUnknownClass4 {
+	public static final int field_11470_0Tuli76kpX0a412c0QXG7pzA13eN3qEY8w43UEEjdz6uFY96YtwB5tj02gDN = 14;
+
+	public abstract WorldGenHouseSmallUnknownClass2 func_11469_1XD49rMZ7tPLtP0CWc3LgGLFv6JSjO4Q2B8uBaPHCRWAe6cbTx3935ua6FcY();
+
+	public abstract WorldGenHouseSmallUnknownClass2 func_11466_770WwnPt75L6J8UguFyXX1ITRtqTVRYMUSrCy1V0cX98wO01Qc5EpwKsvcM9();
+
+	public abstract boolean func_11468_5FEqwXoAtY7AI1e7tv5jsIS2I33Pxp03S2iKy3TijST5d36Zh4iU6YGR536H(World var1, int var2, int var3);
+
+	public static WorldGenHouseSmallUnknownClass4 func_11467_510xxO0w79ZkBWq2cMUy7UUel9V7981Kqlz3lT2pU4RuFo2N2qx8G3dE8izE(Random var0, WorldGenHouseSmallUnknownClass2 var1) {
+		return new WorldGenHouseSmallUnknownClass3(var1);
+	}
+}
--- net/minecraft/src/ItemSword.java
+++ net/minecraft/src/ItemSword.java
@@ -19,7 +19,10 @@
 	}
 
 	public void hitEntity(ItemStack var1, EntityLiving var2) {
-		var1.damageItem(1);
+		if(!(var2.worldObj instanceof ZMWorld)) {
+			var1.damageItem(1);
+		}
+
 	}
 
 	public void onBlockDestroyed(ItemStack var1, int var2, int var3, int var4, int var5) {
--- net/minecraft/src/Packet17AddToInventory.java
+++ net/minecraft/src/Packet17AddToInventory.java
@@ -10,7 +10,7 @@
 	public int itemDamage;
 
 	public void readPacketData(DataInputStream var1) throws IOException {
-		this.itemID = var1.readShort();
+		this.itemID = var1.readShort() & '\uffff';
 		this.count = var1.readByte();
 		this.itemDamage = var1.readShort();
 	}
--- /dev/null
+++ net/minecraft/src/ModelLayerLocation.java
@@ -1,0 +1,6 @@
+package net.minecraft.src;
+
+public class ModelLayerLocation {
+	public ModelLayerLocation(ResourceLocation var1, String var2) {
+	}
+}
--- net/minecraft/src/TileEntityChest.java
+++ net/minecraft/src/TileEntityChest.java
@@ -33,6 +33,10 @@
 		}
 	}
 
+	public void onInventoryChanged() {
+		super.onInventoryChanged();
+	}
+
 	public void setInventorySlotContents(int var1, ItemStack var2) {
 		this.chestContents[var1] = var2;
 		if(var2 != null && var2.stackSize > this.getInventoryStackLimit()) {
@@ -78,6 +82,6 @@
 	}
 
 	public int getInventoryStackLimit() {
-		return 64;
+		return 10000;
 	}
 }
--- net/minecraft/src/BlockGrass.java
+++ net/minecraft/src/BlockGrass.java
@@ -10,13 +10,38 @@
 	}
 
 	public int getBlockTexture(IBlockAccess var1, int var2, int var3, int var4, int var5) {
-		if(var5 == 1) {
-			return 0;
-		} else if(var5 == 0) {
+		if(var5 == 0) {
 			return 2;
 		} else {
-			Material var6 = var1.getBlockMaterial(var2, var3 + 1, var4);
-			return var6 != Material.snow && var6 != Material.craftedSnow ? 3 : 68;
+			if(!ScreenDebugMenu.field_7964_8G80Kimsj2t150ZuEHxk97V3fSV455qzurOOVWgX8oTDDCEH9YV34z9vRAoC) {
+				WorldGenMyconUnknownClass var6 = var1.func_7342_9805301CWs03An9555qIw883P54dcq9802DkM5DuquNweM1NH26RH6oP02mr().func_10185_7j1lR4019pucW00n7wn38afjBd62vEMB6B6SVB9068f4kyPzw4E6wI65ufr8(var2, var4, EnumWorldGenerator.SURFACE);
+				if(var6 != null) {
+					Material var7;
+					switch(var6.func_9983_8WfOXonA2bRS7hUpHd7sbe7k20yqj7N6OH13GX3XXy71V13Eva115wQwe47C()) {
+					case 1:
+						if(var5 == 1) {
+							return 320;
+						}
+
+						var7 = var1.getBlockMaterial(var2, var3 + 1, var4);
+						return var7 != Material.snow && var7 != Material.craftedSnow ? 321 : 68;
+					case 2:
+						if(var5 == 1) {
+							return 215;
+						}
+
+						var7 = var1.getBlockMaterial(var2, var3 + 1, var4);
+						return var7 != Material.snow && var7 != Material.craftedSnow ? 214 : 68;
+					}
+				}
+			}
+
+			if(var5 == 1) {
+				return 0;
+			} else {
+				Material var8 = var1.getBlockMaterial(var2, var3 + 1, var4);
+				return var8 != Material.snow && var8 != Material.craftedSnow ? 3 : 68;
+			}
 		}
 	}
 
@@ -32,7 +57,7 @@
 			int var7 = var3 + var5.nextInt(5) - 3;
 			int var8 = var4 + var5.nextInt(3) - 1;
 			if(var1.getBlockId(var6, var7, var8) == Block.dirt.blockID && var1.getBlockLightValue(var6, var7 + 1, var8) >= 4 && !var1.getBlockMaterial(var6, var7 + 1, var8).getCanBlockGrass()) {
-				var1.setBlockWithNotify(var6, var7, var8, Block.grass.blockID);
+				var1.setBlockWithNotify(var6, var7, var8, this.blockID);
 			}
 		}
 
--- /dev/null
+++ net/minecraft/src/ItemRokkubitoruTune.java
@@ -1,0 +1,13 @@
+package net.minecraft.src;
+
+import org.lwjgl.input.Keyboard;
+
+public class ItemRokkubitoruTune extends ItemRecord {
+	public ItemRokkubitoruTune(int var1, String var2) {
+		super(var1, var2);
+	}
+
+	public String itemName() {
+		return Keyboard.isKeyDown(Keyboard.KEY_RSHIFT) ? "LA CREATURA MAGNIFICA" : this.itemName;
+	}
+}
--- /dev/null
+++ net/minecraft/src/RPacketA0Ping.java
@@ -1,0 +1,27 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+
+public class RPacketA0Ping implements RPacket {
+	public byte GetPacketID() {
+		return (byte)-96;
+	}
+
+	public void Send(DataOutputStream var1) throws IOException {
+		var1.writeByte(17);
+	}
+
+	public void Receive(DataInputStream var1) throws IOException {
+		byte var2 = var1.readByte();
+		System.out.println("Ping request received: " + var2);
+	}
+
+	public void Respond(DataOutputStream var1) throws IOException {
+	}
+
+	public int GetResponseSize() {
+		return 1;
+	}
+}
--- net/minecraft/src/SoundPool.java
+++ net/minecraft/src/SoundPool.java
@@ -10,8 +10,8 @@
 
 public class SoundPool {
 	private Random rand = new Random();
-	private Map nameToSoundPoolEntriesMapping = new HashMap();
-	private List allSoundPoolEntries = new ArrayList();
+	public Map<String, List<SoundPoolEntry>> nameToSoundPoolEntriesMapping = new HashMap();
+	private List<SoundPoolEntry> allSoundPoolEntries = new ArrayList();
 	public int numberOfSoundPoolEntries = 0;
 	public boolean isGetRandomSound = true;
 
@@ -47,6 +47,19 @@
 	}
 
 	public SoundPoolEntry getRandomSound() {
-		return this.allSoundPoolEntries.size() == 0 ? null : (SoundPoolEntry)this.allSoundPoolEntries.get(this.rand.nextInt(this.allSoundPoolEntries.size()));
+		return this.getRandomSound((List)null);
+	}
+
+	public SoundPoolEntry getRandomSound(List<String> var1) {
+		if(this.allSoundPoolEntries.size() == 0) {
+			return null;
+		} else {
+			int var2;
+			for(var2 = this.rand.nextInt(this.allSoundPoolEntries.size()); var1 != null && var1.contains(((SoundPoolEntry)this.allSoundPoolEntries.get(var2)).soundName); var2 %= this.allSoundPoolEntries.size()) {
+				++var2;
+			}
+
+			return (SoundPoolEntry)this.allSoundPoolEntries.get(var2);
+		}
 	}
 }
--- net/minecraft/src/RenderFallingSand.java
+++ net/minecraft/src/RenderFallingSand.java
@@ -12,7 +12,7 @@
 	public void doRenderFallingSand(EntityFallingSand var1, double var2, double var4, double var6, float var8, float var9) {
 		GL11.glPushMatrix();
 		GL11.glTranslatef((float)var2, (float)var4, (float)var6);
-		this.loadTexture("/terrain.png");
+		this.loadTexture(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9796_62Ccm2XAR6JqSDTgV762x61j971DNgsIrMhaXZxPs0fQnBC7ymR2l1v1V22X));
 		Block var10 = Block.blocksList[var1.blockID];
 		World var11 = var1.getWorld();
 		GL11.glDisable(GL11.GL_LIGHTING);
--- /dev/null
+++ net/minecraft/src/HandlerPlayDemoUnknownClass2.java
@@ -1,0 +1,25 @@
+package net.minecraft.src;
+
+public class HandlerPlayDemoUnknownClass2 {
+	long field_11240_47ME2ux1w9JD07OmK1KWlC2l36wjp9k5rk5C91EqYYR6gjOY4kb42895Ml2n;
+	double field_11238_06ia42Crh5k64k27yg1rkw01iek6FWqXq038Nz5xCsr1186gZTb5QrQC9Ee6;
+	double field_11239_27ngU1sJjzhN2F1lwIlqzdWsQU09NIv1oOAETINS9vPghD0aR3wNidfKbmq8;
+	double field_11242_70hhZNfPCn7F2A43sUn292vmU47FJ2Xqf8wxmaj0Jvht0gJ3JZdg1B11ZIS4;
+	double field_11241_1pBNhz72hG0DM4M2G197Aq7qWjMeY65Hl12oPon7Y3795IIGRLKfWH6264yk;
+	double field_11243_366213Kygu44q4VZJiDT5dY5qsS8R35a4wMyFfwM8f9lEhNH41knI2ixxw3K;
+	double field_11235_9PuH3jWZ0MDG4rg08sntk93kjfDv2P6b59Q9soX01Ey3WsujUs200QhUHLp9;
+	double field_11237_979Vt94Ikeubje8aq02QS2ct4vv1F2xoYEYcud7ff1548HLvX33CvjHHnP0K;
+	double field_11236_73B65S5lxs1r7B0z1M2S4uMTH4ZE43GT5xQV19C44T08jAeG7ae4e6V605K6;
+
+	public HandlerPlayDemoUnknownClass2(long var1, double var3, double var5, double var7, double var9, double var11, double var13, double var15, double var17) {
+		this.field_11240_47ME2ux1w9JD07OmK1KWlC2l36wjp9k5rk5C91EqYYR6gjOY4kb42895Ml2n = var1;
+		this.field_11238_06ia42Crh5k64k27yg1rkw01iek6FWqXq038Nz5xCsr1186gZTb5QrQC9Ee6 = var3;
+		this.field_11239_27ngU1sJjzhN2F1lwIlqzdWsQU09NIv1oOAETINS9vPghD0aR3wNidfKbmq8 = var5;
+		this.field_11242_70hhZNfPCn7F2A43sUn292vmU47FJ2Xqf8wxmaj0Jvht0gJ3JZdg1B11ZIS4 = var7;
+		this.field_11241_1pBNhz72hG0DM4M2G197Aq7qWjMeY65Hl12oPon7Y3795IIGRLKfWH6264yk = var9;
+		this.field_11243_366213Kygu44q4VZJiDT5dY5qsS8R35a4wMyFfwM8f9lEhNH41knI2ixxw3K = var11;
+		this.field_11235_9PuH3jWZ0MDG4rg08sntk93kjfDv2P6b59Q9soX01Ey3WsujUs200QhUHLp9 = var13;
+		this.field_11237_979Vt94Ikeubje8aq02QS2ct4vv1F2xoYEYcud7ff1548HLvX33CvjHHnP0K = var15;
+		this.field_11236_73B65S5lxs1r7B0z1M2S4uMTH4ZE43GT5xQV19C44T08jAeG7ae4e6V605K6 = var17;
+	}
+}
--- net/minecraft/src/BlockFurnace.java
+++ net/minecraft/src/BlockFurnace.java
@@ -3,7 +3,7 @@
 import java.util.Random;
 
 public class BlockFurnace extends BlockContainer {
-	private final boolean isActive;
+	protected final boolean isActive;
 
 	protected BlockFurnace(int var1, boolean var2) {
 		super(var1, Material.rock);
@@ -77,8 +77,8 @@
 				var1.spawnParticle("smoke", (double)(var7 + var11), (double)var8, (double)(var9 + var10), 0.0D, 0.0D, 0.0D);
 				var1.spawnParticle("flame", (double)(var7 + var11), (double)var8, (double)(var9 + var10), 0.0D, 0.0D, 0.0D);
 			}
-
 		}
+
 	}
 
 	public int getBlockTextureFromSide(int var1) {
--- /dev/null
+++ net/minecraft/src/NamedLoc.java
@@ -1,0 +1,38 @@
+package net.minecraft.src;
+
+public class NamedLoc {
+	public int bx1;
+	public int by1;
+	public int bz1;
+	public int bx2;
+	public int by2;
+	public int bz2;
+	boolean p2Invalid = false;
+	String name;
+
+	public NamedLoc(int var1, int var2, int var3, int var4, int var5, int var6, String var7) {
+		this.bx1 = var1;
+		this.by1 = var2;
+		this.bz1 = var3;
+		this.bx2 = var4;
+		this.by2 = var5;
+		this.bz2 = var6;
+		this.p2Invalid = false;
+		this.name = var7;
+	}
+
+	public NamedLoc(int var1, int var2, int var3, String var4) {
+		this.bx1 = var1;
+		this.by1 = var2;
+		this.bz1 = var3;
+		this.bx2 = var1;
+		this.by2 = var2;
+		this.bz2 = var3;
+		this.p2Invalid = true;
+		this.name = var4;
+	}
+
+	public HandlerSetCheckpointUnknownClass2 func_12096_2rdzFnI6r437tV8H4g4amO6c0UvbR1Bk63McJ9C8IuxrI5J07L0IocLF91rI() {
+		return new HandlerSetCheckpointUnknownClass2((double)this.bx1, (double)this.by1, (double)this.bz1);
+	}
+}
--- net/minecraft/src/SoundManager.java
+++ net/minecraft/src/SoundManager.java
@@ -1,15 +1,22 @@
 package net.minecraft.src;
 
+import paulscode.sound.codecs.CodecWav;
+import paulscode.sound.libraries.LibraryLWJGLOpenAL;
+import java.io.BufferedReader;
 import java.io.File;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.List;
 import java.util.Random;
 import paulscode.sound.SoundSystem;
 import paulscode.sound.SoundSystemConfig;
 import paulscode.sound.codecs.CodecJOrbis;
-import paulscode.sound.codecs.CodecWav;
-import paulscode.sound.libraries.LibraryLWJGLOpenAL;
 
 public class SoundManager {
-	private static SoundSystem sndSystem;
+	public static SoundSystem sndSystem;
 	private SoundPool soundPoolSounds = new SoundPool();
 	private SoundPool soundPoolStreaming = new SoundPool();
 	private SoundPool soundPoolMusic = new SoundPool();
@@ -18,6 +25,79 @@
 	private static boolean loaded = false;
 	private Random rand = new Random();
 	private int ticksBeforeMusic = this.rand.nextInt(12000);
+	private boolean field_12053_1QbQxlwTaKB4hm59YLHlvThzfq2YbJyVj7EmIiTd5zt1ECZBD89v107v1to6 = false;
+	private long field_12049_5zslk1kn2Jnm08H2254eL9Twk60RO5RMRmuOb58n56vf6KV7r5F1fnz9I6B7 = System.currentTimeMillis();
+	List<String> ignoreList = new ArrayList();
+	List<String> ignoreList_a = new ArrayList();
+	private String field_12054_0W6U3lHtBH2q8zjz4sb22pr3my27vTWdwd08101Z4gfY796USIv2PR2f955r = null;
+	private boolean field_12058_3pVFu51zt1z9rF631hpzqpI63FL08O13s3WkquN5BZaRkEP3wg3Lc967ZFs3 = false;
+	private float field_12046_2aw7ngKI3BxGf8nNnVac7ruGr530Wi8yv4y3bk1r8q8T0tt16Laaz7M16Zvg = 1.0F;
+
+	public SoundManager() {
+		try {
+			BufferedReader var1 = new BufferedReader(new InputStreamReader(Ext1605Utils.func_12150_5v4Cs6sI06e6Hjpg3rSI82gG008x14C2jag2OM7ADaW5U8a3DYSrf570CJm6("/aqueue_ignore.txt")));
+
+			while(true) {
+				String var2 = var1.readLine();
+				if(var2 == null) {
+					var1.close();
+					var1 = new BufferedReader(new InputStreamReader(Ext1605Utils.func_12150_5v4Cs6sI06e6Hjpg3rSI82gG008x14C2jag2OM7ADaW5U8a3DYSrf570CJm6("/aqueue_ignore_a.txt")));
+					var2 = null;
+
+					while(true) {
+						var2 = var1.readLine();
+						if(var2 == null) {
+							var1.close();
+							return;
+						}
+
+						this.ignoreList_a.add(var2);
+					}
+				}
+
+				this.ignoreList.add(var2);
+			}
+		} catch (IOException var3) {
+		}
+	}
+
+	public boolean func_12028_0Q48c7Q5B51VmKR6v879976kWbp8F737S8T15SyjAj664KVBIuoLfz0qRtAW() {
+		return !this.field_12053_1QbQxlwTaKB4hm59YLHlvThzfq2YbJyVj7EmIiTd5zt1ECZBD89v107v1to6;
+	}
+
+	public synchronized void func_12039_718z1OJ9VakHqRSuN9qHt03I9336Di6o7ObA2RkDlwQ9KQzNeZ53VZA8sC69() {
+		long var1 = System.currentTimeMillis();
+		float var3 = (float)(var1 - this.field_12049_5zslk1kn2Jnm08H2254eL9Twk60RO5RMRmuOb58n56vf6KV7r5F1fnz9I6B7) / 1000.0F;
+		if(this.field_12058_3pVFu51zt1z9rF631hpzqpI63FL08O13s3WkquN5BZaRkEP3wg3Lc967ZFs3) {
+			this.field_12046_2aw7ngKI3BxGf8nNnVac7ruGr530Wi8yv4y3bk1r8q8T0tt16Laaz7M16Zvg -= var3;
+			if(this.field_12046_2aw7ngKI3BxGf8nNnVac7ruGr530Wi8yv4y3bk1r8q8T0tt16Laaz7M16Zvg <= 0.0F) {
+				this.field_12046_2aw7ngKI3BxGf8nNnVac7ruGr530Wi8yv4y3bk1r8q8T0tt16Laaz7M16Zvg = 0.0F;
+				sndSystem.stop("BgMusic");
+				this.field_12058_3pVFu51zt1z9rF631hpzqpI63FL08O13s3WkquN5BZaRkEP3wg3Lc967ZFs3 = false;
+				if(this.field_12054_0W6U3lHtBH2q8zjz4sb22pr3my27vTWdwd08101Z4gfY796USIv2PR2f955r != null) {
+					SoundPoolEntry var4 = this.soundPoolMusic.getRandomSoundFromSoundPool(this.field_12054_0W6U3lHtBH2q8zjz4sb22pr3my27vTWdwd08101Z4gfY796USIv2PR2f955r);
+					if(var4 == null) {
+						var4 = this.soundPoolStreaming.getRandomSoundFromSoundPool(this.field_12054_0W6U3lHtBH2q8zjz4sb22pr3my27vTWdwd08101Z4gfY796USIv2PR2f955r);
+					}
+
+					if(var4 != null) {
+						this.ticksBeforeMusic = this.rand.nextInt(24000) + 24000;
+						sndSystem.backgroundMusic("BgMusic", var4.soundUrl, var4.soundName, true);
+						sndSystem.setVolume("BgMusic", this.options.musicVolume);
+						sndSystem.play("BgMusic");
+					}
+				}
+			}
+		} else if(this.field_12054_0W6U3lHtBH2q8zjz4sb22pr3my27vTWdwd08101Z4gfY796USIv2PR2f955r != null) {
+			this.field_12046_2aw7ngKI3BxGf8nNnVac7ruGr530Wi8yv4y3bk1r8q8T0tt16Laaz7M16Zvg += var3;
+			if(this.field_12046_2aw7ngKI3BxGf8nNnVac7ruGr530Wi8yv4y3bk1r8q8T0tt16Laaz7M16Zvg > 1.0F) {
+				this.field_12046_2aw7ngKI3BxGf8nNnVac7ruGr530Wi8yv4y3bk1r8q8T0tt16Laaz7M16Zvg = 1.0F;
+			}
+		}
+
+		sndSystem.setVolume("BgMusic", this.field_12046_2aw7ngKI3BxGf8nNnVac7ruGr530Wi8yv4y3bk1r8q8T0tt16Laaz7M16Zvg * this.options.musicVolume);
+		this.field_12049_5zslk1kn2Jnm08H2254eL9Twk60RO5RMRmuOb58n56vf6KV7r5F1fnz9I6B7 = var1;
+	}
 
 	public void loadSoundSettings(GameSettings var1) {
 		this.soundPoolStreaming.isGetRandomSound = false;
@@ -65,6 +145,7 @@
 	}
 
 	public void closeMinecraft() {
+		this.field_12053_1QbQxlwTaKB4hm59YLHlvThzfq2YbJyVj7EmIiTd5zt1ECZBD89v107v1to6 = true;
 		if(loaded) {
 			sndSystem.cleanup();
 		}
@@ -84,44 +165,52 @@
 	}
 
 	public void playRandomMusicIfReady() {
-		if(loaded && this.options.musicVolume != 0.0F) {
-			if(!sndSystem.playing("BgMusic") && !sndSystem.playing("streaming")) {
-				if(this.ticksBeforeMusic > 0) {
-					--this.ticksBeforeMusic;
-					return;
-				}
-
-				SoundPoolEntry var1 = this.soundPoolMusic.getRandomSound();
-				if(var1 != null) {
-					this.ticksBeforeMusic = this.rand.nextInt(24000) + 24000;
-					sndSystem.backgroundMusic("BgMusic", var1.soundUrl, var1.soundName, false);
-					sndSystem.setVolume("BgMusic", this.options.musicVolume);
-					sndSystem.play("BgMusic");
-				}
-			}
-
+		if(loaded && this.options.musicVolume != 0.0F && !sndSystem.playing("BgMusic") && !sndSystem.playing("streaming")) {
+			if(this.ticksBeforeMusic > 0) {
+				--this.ticksBeforeMusic;
+				return;
+			}
+
+			SoundPoolEntry var1;
+			if(InputHandler.mc.theWorld instanceof HubWorld) {
+				var1 = this.soundPoolMusic.getRandomSoundFromSoundPool("hub");
+			} else {
+				SimpleDateFormat var3 = new SimpleDateFormat("HH");
+				int var4 = Integer.parseInt(var3.format(Calendar.getInstance().getTime()));
+				List var2 = var4 <= 22 && var4 >= 5 ? this.ignoreList : this.ignoreList_a;
+				var1 = this.soundPoolMusic.getRandomSound(var2);
+			}
+
+			if(var1 != null) {
+				this.ticksBeforeMusic = this.rand.nextInt(24000) + 24000;
+				sndSystem.backgroundMusic("BgMusic", var1.soundUrl, var1.soundName, false);
+				sndSystem.setVolume("BgMusic", this.options.musicVolume);
+				sndSystem.play("BgMusic");
+				this.field_12058_3pVFu51zt1z9rF631hpzqpI63FL08O13s3WkquN5BZaRkEP3wg3Lc967ZFs3 = false;
+				this.field_12046_2aw7ngKI3BxGf8nNnVac7ruGr530Wi8yv4y3bk1r8q8T0tt16Laaz7M16Zvg = 1.0F;
+			}
 		}
+
 	}
 
 	public void setListener(EntityLiving var1, float var2) {
-		if(loaded && this.options.soundVolume != 0.0F) {
-			if(var1 != null) {
-				float var3 = var1.prevRotationYaw + (var1.rotationYaw - var1.prevRotationYaw) * var2;
-				double var4 = var1.prevPosX + (var1.posX - var1.prevPosX) * (double)var2;
-				double var6 = var1.prevPosY + (var1.posY - var1.prevPosY) * (double)var2;
-				double var8 = var1.prevPosZ + (var1.posZ - var1.prevPosZ) * (double)var2;
-				float var10 = MathHelper.cos(-var3 * ((float)Math.PI / 180.0F) - (float)Math.PI);
-				float var11 = MathHelper.sin(-var3 * ((float)Math.PI / 180.0F) - (float)Math.PI);
-				float var12 = -var11;
-				float var13 = 0.0F;
-				float var14 = -var10;
-				float var15 = 0.0F;
-				float var16 = 1.0F;
-				float var17 = 0.0F;
-				sndSystem.setListenerPosition((float)var4, (float)var6, (float)var8);
-				sndSystem.setListenerOrientation(var12, var13, var14, var15, var16, var17);
-			}
+		if(loaded && this.options.soundVolume != 0.0F && var1 != null) {
+			float var3 = var1.prevRotationYaw + (var1.rotationYaw - var1.prevRotationYaw) * var2;
+			double var4 = var1.prevPosX + (var1.posX - var1.prevPosX) * (double)var2;
+			double var6 = var1.prevPosY + (var1.posY - var1.prevPosY) * (double)var2;
+			double var8 = var1.prevPosZ + (var1.posZ - var1.prevPosZ) * (double)var2;
+			float var10 = MathHelper.cos(-var3 * ((float)Math.PI / 180.0F) - (float)Math.PI);
+			float var11 = MathHelper.sin(-var3 * ((float)Math.PI / 180.0F) - (float)Math.PI);
+			float var12 = -var11;
+			float var13 = 0.0F;
+			float var14 = -var10;
+			float var15 = 0.0F;
+			float var16 = 1.0F;
+			float var17 = 0.0F;
+			sndSystem.setListenerPosition((float)var4, (float)var6, (float)var8);
+			sndSystem.setListenerOrientation(var12, var13, var14, var15, var16, var17);
 		}
+
 	}
 
 	public void playStreaming(String var1, float var2, float var3, float var4, float var5, float var6) {
@@ -142,10 +231,44 @@
 					sndSystem.newStreamingSource(true, var7, var8.soundUrl, var8.soundName, false, var2, var3, var4, 2, var9 * 4.0F);
 					sndSystem.setVolume(var7, 0.5F * this.options.soundVolume);
 					sndSystem.play(var7);
-				}
-
-			}
-		}
+					this.field_12058_3pVFu51zt1z9rF631hpzqpI63FL08O13s3WkquN5BZaRkEP3wg3Lc967ZFs3 = false;
+					this.field_12046_2aw7ngKI3BxGf8nNnVac7ruGr530Wi8yv4y3bk1r8q8T0tt16Laaz7M16Zvg = 1.0F;
+				}
+			}
+		}
+
+	}
+
+	public void playMusic(String var1) {
+		this.func_12031_514dv3mYU7t95lOh23lLhBI10XBv07D8y61Goe1u7G926JNt2Y1WIoiHj5tm(var1, false);
+	}
+
+	public void func_12031_514dv3mYU7t95lOh23lLhBI10XBv07D8y61Goe1u7G926JNt2Y1WIoiHj5tm(String var1, boolean var2) {
+		if(loaded && this.options.musicVolume != 0.0F) {
+			if(var2) {
+				this.field_12054_0W6U3lHtBH2q8zjz4sb22pr3my27vTWdwd08101Z4gfY796USIv2PR2f955r = var1;
+				this.field_12058_3pVFu51zt1z9rF631hpzqpI63FL08O13s3WkquN5BZaRkEP3wg3Lc967ZFs3 = true;
+			} else {
+				this.field_12058_3pVFu51zt1z9rF631hpzqpI63FL08O13s3WkquN5BZaRkEP3wg3Lc967ZFs3 = false;
+				this.field_12046_2aw7ngKI3BxGf8nNnVac7ruGr530Wi8yv4y3bk1r8q8T0tt16Laaz7M16Zvg = 1.0F;
+				if(var1 != null) {
+					SoundPoolEntry var3 = this.soundPoolMusic.getRandomSoundFromSoundPool(var1);
+					if(var3 == null) {
+						var3 = this.soundPoolStreaming.getRandomSoundFromSoundPool(var1);
+					}
+
+					if(var3 != null) {
+						this.ticksBeforeMusic = this.rand.nextInt(24000) + 24000;
+						sndSystem.backgroundMusic("BgMusic", var3.soundUrl, var3.soundName, false);
+						sndSystem.setVolume("BgMusic", this.options.musicVolume);
+						sndSystem.play("BgMusic");
+					}
+				} else {
+					sndSystem.stop("BgMusic");
+				}
+			}
+		}
+
 	}
 
 	public void playSound(String var1, float var2, float var3, float var4, float var5, float var6) {
@@ -168,8 +291,8 @@
 				sndSystem.setVolume(var8, var5 * this.options.soundVolume);
 				sndSystem.play(var8);
 			}
-
 		}
+
 	}
 
 	public void playSoundFX(String var1, float var2, float var3) {
@@ -188,7 +311,7 @@
 				sndSystem.setVolume(var5, var2 * this.options.soundVolume);
 				sndSystem.play(var5);
 			}
-
 		}
+
 	}
 }
--- net/minecraft/src/GuiFurnace.java
+++ net/minecraft/src/GuiFurnace.java
@@ -25,8 +25,8 @@
 	}
 
 	protected void drawGuiContainerForegroundLayer() {
-		this.fontRenderer.drawString("Furnace", 60, 6, 4210752);
-		this.fontRenderer.drawString("Inventory", 8, this.ySize - 96 + 2, 4210752);
+		this.fontRenderer.drawString("Furnace", 60, 6, 16777215);
+		this.fontRenderer.drawString("Inventory", 8, this.ySize - 96 + 2, 16777215);
 	}
 
 	protected void drawGuiContainerBackgroundLayer(float var1) {
--- /dev/null
+++ net/minecraft/src/EnumVendingMachineUnknownClass3.java
@@ -1,0 +1,25 @@
+package net.minecraft.src;
+
+class EnumVendingMachineUnknownClass3 {
+    static final /* synthetic */ int[] field_9819_6Ecx7VuG87M4Qa2PJ40n23uvU73przk4v42MDHptW0m8xI7Wq9zqailKsgX8;
+
+    static {
+        field_9819_6Ecx7VuG87M4Qa2PJ40n23uvU73przk4v42MDHptW0m8xI7Wq9zqailKsgX8 = new int[EnumVendingMachine.func_8621_1A4K8JmwLTo1bRceY319ILcN68Kz1yddU8DZWKk5CMsNwnMN4Amc8gdj0Pfv().length];
+        try {
+            EnumVendingMachineUnknownClass3.field_9819_6Ecx7VuG87M4Qa2PJ40n23uvU73przk4v42MDHptW0m8xI7Wq9zqailKsgX8[EnumVendingMachine.Armor.ordinal()] = 1;
+        }
+        catch (final NoSuchFieldError noSuchFieldError) {}
+        try {
+            EnumVendingMachineUnknownClass3.field_9819_6Ecx7VuG87M4Qa2PJ40n23uvU73przk4v42MDHptW0m8xI7Wq9zqailKsgX8[EnumVendingMachine.Dash.ordinal()] = 2;
+        }
+        catch (final NoSuchFieldError noSuchFieldError2) {}
+        try {
+            EnumVendingMachineUnknownClass3.field_9819_6Ecx7VuG87M4Qa2PJ40n23uvU73przk4v42MDHptW0m8xI7Wq9zqailKsgX8[EnumVendingMachine.HealthBoost.ordinal()] = 3;
+        }
+        catch (final NoSuchFieldError noSuchFieldError3) {}
+        try {
+            EnumVendingMachineUnknownClass3.field_9819_6Ecx7VuG87M4Qa2PJ40n23uvU73przk4v42MDHptW0m8xI7Wq9zqailKsgX8[EnumVendingMachine.QuickRevive.ordinal()] = 4;
+        }
+        catch (final NoSuchFieldError noSuchFieldError4) {}
+    }
+}
--- /dev/null
+++ net/minecraft/src/RemoteWorld.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+import java.net.InetSocketAddress;
+
+public class RemoteWorld extends World {
+	private InetSocketAddress field_7542_3pr4P5SLvVdVSgykmyy0Xrx4D1Xh8mmt0ZCphNIMf8izs5rUsX3MrxE0lFVv;
+
+	public RemoteWorld(String var1, String var2) {
+		this(var1, var2.substring(0, var2.indexOf(":")), Integer.parseInt(var2.substring(var2.indexOf(":") + 1)));
+	}
+
+	public RemoteWorld(String var1, String var2, int var3) {
+		super(var1);
+		this.field_7542_3pr4P5SLvVdVSgykmyy0Xrx4D1Xh8mmt0ZCphNIMf8izs5rUsX3MrxE0lFVv = new InetSocketAddress(var2, var3);
+	}
+
+	public NetworkLocation func_7541_2R3b24Cp7xDHr78U056N76Op70FJ85s7dEtYz9pBRZWqC0G4g9SZxX0Lg07H() {
+		return new NetworkLocation(this.field_7542_3pr4P5SLvVdVSgykmyy0Xrx4D1Xh8mmt0ZCphNIMf8izs5rUsX3MrxE0lFVv);
+	}
+}
--- /dev/null
+++ net/minecraft/src/MinecraftUnknownClass3.java
@@ -1,0 +1,289 @@
+package net.minecraft.src;
+
+import java.io.BufferedReader;
+import java.io.InputStreamReader;
+import java.nio.ByteBuffer;
+import java.nio.IntBuffer;
+import java.util.Random;
+import net.minecraft.client.Minecraft;
+import org.lwjgl.BufferUtils;
+import org.lwjgl.opengl.ARBFragmentShader;
+import org.lwjgl.opengl.ARBMultitexture;
+import org.lwjgl.opengl.ARBShaderObjects;
+import org.lwjgl.opengl.ARBVertexShader;
+import org.lwjgl.opengl.GL11;
+import org.lwjgl.opengl.GL13;
+
+public class MinecraftUnknownClass3 {
+	public int field_11406_6hrv4v954Okb7obaj0yHtV3G5Pxi4HLBshp8pHZ6gBKLb8z38aC0Wl5J781Q = 0;
+	public int field_11404_6G238hzdz174ui01Kn7hC7aXG4OFtxgSTqd88RZTU29K01h2S9Ewl85O71ni = 0;
+	private int field_11398_2fk6kdaE94v3T9513Sk23R46mYaA5nqbbaE37TC85q0I8bC3Rul64T4PeL7t = 0;
+	private int field_11397_91wim1EVvh3KkuC0VI77xjt4EvJUg5K9i65b5GTg1PsB8Vv00h1Sje3KX91p = 0;
+	public int field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C = 0;
+	private int field_11391_0Jliadq6MiR90YwBX2EcyoC4q777p4ThxDrqTIN9pjcRGK23VU3JY7xA9v39 = 0;
+	private int field_11399_8q3NnYF395aMwM6JsGAH1dqDyCG6rgY7QK44W9yx8CEBc2hSTW4rcLdNgth0 = 0;
+	private int field_11402_0SSC84N8JG6dE09gQ6910N5N78f81K4E4ovsfRt5iRjZCSVdok9vRwTZuh1k = 0;
+	private int field_11395_385X644BXT9qBn6EF1gIbS63mT0B092Z2lynp6yudR6UJeSv1MPf63o296yR = 0;
+	private int field_11400_99QURSTWyu6T75EQj21pgtAS627wxwQ52Z8b7F8U3R81i613FC3SJLY2aTbs = 0;
+	private int field_11396_9441y1Y9T40FDCF9uuwkU1lmehM65hg8761b2m6X1BgG7auF90lDMvklrCeq = 0;
+	private int field_11392_6lfU3mNn3UomWZH8MfUGPg4LX59b1U18fabPV53p2u7ludbeYE1196g5rWX6 = 0;
+	private int field_11403_20GQz7zR34Tp693G3DSupFXBE66x7RUvn9JBul8RyCo5s50123NSbmOaYt5u = 0;
+	private int field_11407_2i7O7iJDFtoO2YSWX2e96Df4ACzXIrBwc2Khi70y062n1HJaqNA1njxwdt6o = 0;
+	private int field_11405_5OVC2g2d9zq6dP14qJsUlMx8ghzyNOS2n5hh0gcYmL4BF9KuER7SqHiYE809 = 0;
+	private int field_11401_3W20rY0C5sq1crIFTGspopkir94xT6ZbCJ2HfG0YdtAolGW79iW5ue93k9gj = 0;
+	public Random field_11408_2SsePNiNxSOe8T43T3RkxQkXltd0oPOKg7w710gmT1w1fVdSSd15fP0M69aI = new Random();
+	private Minecraft field_11393_6kPc5bsQEopw306pUZPVI78jGyAvqN5EXMDClw6q2Hy6z4n2X8f6EJIXw0Zs;
+
+	public MinecraftUnknownClass3(Minecraft var1) {
+		this.field_11393_6kPc5bsQEopw306pUZPVI78jGyAvqN5EXMDClw6q2Hy6z4n2X8f6EJIXw0Zs = var1;
+		this.func_11380_9r1511Jp0jE144f4MQc4NK82XBZn9UtKQ9T0m3371572UnC4jS4YM9eJUhB9();
+	}
+
+	public void func_11380_9r1511Jp0jE144f4MQc4NK82XBZn9UtKQ9T0m3371572UnC4jS4YM9eJUhB9() {
+		this.field_11404_6G238hzdz174ui01Kn7hC7aXG4OFtxgSTqd88RZTU29K01h2S9Ewl85O71ni = ARBShaderObjects.glCreateProgramObjectARB();
+		if(this.field_11404_6G238hzdz174ui01Kn7hC7aXG4OFtxgSTqd88RZTU29K01h2S9Ewl85O71ni != 0) {
+			this.field_11398_2fk6kdaE94v3T9513Sk23R46mYaA5nqbbaE37TC85q0I8bC3Rul64T4PeL7t = this.func_11389_0u1i79tq0P37AEqTW68P5h1i60IaZ9B5ZJcVyUU5cxE4ZBy70htlWd17uQle("/ext1605/shaders/default/base.vsh");
+			this.field_11397_91wim1EVvh3KkuC0VI77xjt4EvJUg5K9i65b5GTg1PsB8Vv00h1Sje3KX91p = this.func_11381_1z5mnRcFcRlTWBe1jp2xD0rCP4M4Y54xinN7y78Gku4p1Fs79CtzhXaAM43P("/ext1605/shaders/default/base.fsh");
+		}
+
+		if(this.field_11398_2fk6kdaE94v3T9513Sk23R46mYaA5nqbbaE37TC85q0I8bC3Rul64T4PeL7t != 0 && this.field_11397_91wim1EVvh3KkuC0VI77xjt4EvJUg5K9i65b5GTg1PsB8Vv00h1Sje3KX91p != 0) {
+			ARBShaderObjects.glAttachObjectARB(this.field_11404_6G238hzdz174ui01Kn7hC7aXG4OFtxgSTqd88RZTU29K01h2S9Ewl85O71ni, this.field_11398_2fk6kdaE94v3T9513Sk23R46mYaA5nqbbaE37TC85q0I8bC3Rul64T4PeL7t);
+			ARBShaderObjects.glAttachObjectARB(this.field_11404_6G238hzdz174ui01Kn7hC7aXG4OFtxgSTqd88RZTU29K01h2S9Ewl85O71ni, this.field_11397_91wim1EVvh3KkuC0VI77xjt4EvJUg5K9i65b5GTg1PsB8Vv00h1Sje3KX91p);
+			ARBShaderObjects.glLinkProgramARB(this.field_11404_6G238hzdz174ui01Kn7hC7aXG4OFtxgSTqd88RZTU29K01h2S9Ewl85O71ni);
+			ARBShaderObjects.glValidateProgramARB(this.field_11404_6G238hzdz174ui01Kn7hC7aXG4OFtxgSTqd88RZTU29K01h2S9Ewl85O71ni);
+			if(!func_11390_0Xl1zrDDJ6B7f1Ga59F3PLk9v9hZR3c4d9CJ6uv71JQVj2ByH42wT0OY43XH(this.field_11404_6G238hzdz174ui01Kn7hC7aXG4OFtxgSTqd88RZTU29K01h2S9Ewl85O71ni)) {
+				this.field_11404_6G238hzdz174ui01Kn7hC7aXG4OFtxgSTqd88RZTU29K01h2S9Ewl85O71ni = 0;
+			}
+		}
+
+		this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C = ARBShaderObjects.glCreateProgramObjectARB();
+		if(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C != 0) {
+			this.field_11391_0Jliadq6MiR90YwBX2EcyoC4q777p4ThxDrqTIN9pjcRGK23VU3JY7xA9v39 = this.func_11389_0u1i79tq0P37AEqTW68P5h1i60IaZ9B5ZJcVyUU5cxE4ZBy70htlWd17uQle("/ext1605/shaders/default/final.vsh");
+			this.field_11399_8q3NnYF395aMwM6JsGAH1dqDyCG6rgY7QK44W9yx8CEBc2hSTW4rcLdNgth0 = this.func_11381_1z5mnRcFcRlTWBe1jp2xD0rCP4M4Y54xinN7y78Gku4p1Fs79CtzhXaAM43P("/ext1605/shaders/custom/final.fsh");
+		}
+
+		if(this.field_11391_0Jliadq6MiR90YwBX2EcyoC4q777p4ThxDrqTIN9pjcRGK23VU3JY7xA9v39 != 0 && this.field_11399_8q3NnYF395aMwM6JsGAH1dqDyCG6rgY7QK44W9yx8CEBc2hSTW4rcLdNgth0 != 0) {
+			ARBShaderObjects.glAttachObjectARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, this.field_11391_0Jliadq6MiR90YwBX2EcyoC4q777p4ThxDrqTIN9pjcRGK23VU3JY7xA9v39);
+			ARBShaderObjects.glAttachObjectARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, this.field_11399_8q3NnYF395aMwM6JsGAH1dqDyCG6rgY7QK44W9yx8CEBc2hSTW4rcLdNgth0);
+			ARBShaderObjects.glLinkProgramARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C);
+			ARBShaderObjects.glValidateProgramARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C);
+			if(!func_11390_0Xl1zrDDJ6B7f1Ga59F3PLk9v9hZR3c4d9CJ6uv71JQVj2ByH42wT0OY43XH(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C)) {
+				this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C = 0;
+			}
+		}
+
+	}
+
+	public void func_11385_2aBrqFndfkzC8w9LabN9jT6nygQa1G113SE0F3xs21Ehzq80X8oVOnixaKXP(int var1) {
+		ARBShaderObjects.glUseProgramObjectARB(var1);
+		this.field_11406_6hrv4v954Okb7obaj0yHtV3G5Pxi4HLBshp8pHZ6gBKLb8z38aC0Wl5J781Q = var1;
+		if(var1 != 0) {
+			int var2 = ARBShaderObjects.glGetUniformLocationARB(var1, (CharSequence)"sampler0");
+			ARBShaderObjects.glUniform1iARB(var2, 0);
+		}
+
+	}
+
+	private int func_11389_0u1i79tq0P37AEqTW68P5h1i60IaZ9B5ZJcVyUU5cxE4ZBy70htlWd17uQle(String var1) {
+		int var2 = ARBShaderObjects.glCreateShaderObjectARB(ARBVertexShader.GL_VERTEX_SHADER_ARB);
+		if(var2 == 0) {
+			return 0;
+		} else {
+			String var3 = "";
+
+			try {
+				BufferedReader var5 = new BufferedReader(new InputStreamReader(Ext1605Utils.func_12150_5v4Cs6sI06e6Hjpg3rSI82gG008x14C2jag2OM7ADaW5U8a3DYSrf570CJm6(var1)));
+
+				while(true) {
+					String var4 = var5.readLine();
+					if(var4 == null) {
+						break;
+					}
+
+					var3 = var3 + var4 + "\n";
+				}
+			} catch (Exception var6) {
+				System.out.println("Failed reading vertex shading code.");
+				return 0;
+			}
+
+			ARBShaderObjects.glShaderSourceARB(var2, (CharSequence)var3);
+			ARBShaderObjects.glCompileShaderARB(var2);
+			if(!func_11390_0Xl1zrDDJ6B7f1Ga59F3PLk9v9hZR3c4d9CJ6uv71JQVj2ByH42wT0OY43XH(var2)) {
+				var2 = 0;
+			}
+
+			return var2;
+		}
+	}
+
+	private int func_11381_1z5mnRcFcRlTWBe1jp2xD0rCP4M4Y54xinN7y78Gku4p1Fs79CtzhXaAM43P(String var1) {
+		int var2 = ARBShaderObjects.glCreateShaderObjectARB(ARBFragmentShader.GL_FRAGMENT_SHADER_ARB);
+		if(var2 == 0) {
+			return 0;
+		} else {
+			String var3 = "#version 120\n";
+			var3 = var3 + this.field_11393_6kPc5bsQEopw306pUZPVI78jGyAvqN5EXMDClw6q2Hy6z4n2X8f6EJIXw0Zs.options.func_11736_4ZBw6818NpyygSj15g0tevwT2VRNee9iyV3HNltCy7o20mr67D74Di6czF41();
+
+			try {
+				BufferedReader var5 = new BufferedReader(new InputStreamReader(Ext1605Utils.func_12150_5v4Cs6sI06e6Hjpg3rSI82gG008x14C2jag2OM7ADaW5U8a3DYSrf570CJm6(var1)));
+
+				while(true) {
+					String var4 = var5.readLine();
+					if(var4 == null) {
+						break;
+					}
+
+					var3 = var3 + var4 + "\n";
+				}
+			} catch (Exception var6) {
+				System.out.println("Failed reading fragment shading code.");
+				return 0;
+			}
+
+			ARBShaderObjects.glShaderSourceARB(var2, (CharSequence)var3);
+			ARBShaderObjects.glCompileShaderARB(var2);
+			if(!func_11390_0Xl1zrDDJ6B7f1Ga59F3PLk9v9hZR3c4d9CJ6uv71JQVj2ByH42wT0OY43XH(var2)) {
+				var2 = 0;
+			}
+
+			return var2;
+		}
+	}
+
+	private static boolean func_11390_0Xl1zrDDJ6B7f1Ga59F3PLk9v9hZR3c4d9CJ6uv71JQVj2ByH42wT0OY43XH(int var0) {
+		IntBuffer var1 = BufferUtils.createIntBuffer(1);
+		ARBShaderObjects.glGetObjectParameterARB(var0, ARBShaderObjects.GL_OBJECT_INFO_LOG_LENGTH_ARB, var1);
+		int var2 = var1.get();
+		if(var2 > 1) {
+			ByteBuffer var3 = BufferUtils.createByteBuffer(var2);
+			var1.flip();
+			ARBShaderObjects.glGetInfoLogARB(var0, var1, var3);
+			byte[] var4 = new byte[var2];
+			var3.get(var4);
+			String var5 = new String(var4);
+			System.out.println("Info log:\n" + var5);
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	private int func_11387_6N3mcf0BGqjNK53qh26x8VQ4E61x3o39KsFng4ST42q2tOJc811a7A37Zu88(int var1, int var2, boolean var3) {
+		int var4 = GL11.glGenTextures();
+		GL11.glBindTexture(GL11.GL_TEXTURE_2D, var4);
+		ByteBuffer var5;
+		if(var3) {
+			var5 = ByteBuffer.allocateDirect(var1 * var2 * 4 * 4);
+			GL11.glTexImage2D(GL11.GL_TEXTURE_2D, 0, GL11.GL_DEPTH_COMPONENT, var1, var2, 0, GL11.GL_DEPTH_COMPONENT, GL11.GL_FLOAT, (ByteBuffer)var5);
+		} else {
+			var5 = ByteBuffer.allocateDirect(var1 * var2 * 4);
+			GL11.glTexImage2D(GL11.GL_TEXTURE_2D, 0, GL11.GL_RGBA, var1, var2, 0, GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, (ByteBuffer)var5);
+		}
+
+		GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MAG_FILTER, GL11.GL_LINEAR);
+		GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MIN_FILTER, GL11.GL_LINEAR);
+		return var4;
+	}
+
+	private void func_11386_70Z3u02f1Kr9285gO782wwmyAI50j816Mb433849317G7yhuZTqic1PYtnPe(int var1) {
+		GL11.glDeleteTextures(var1);
+	}
+
+	public int func_11388_8HzFSuQdA8hV11L03HqdJf3J6QnwTI3IL1K751k618F0KmXstFu981F5bdPq(Minecraft var1) {
+		if(this.field_11402_0SSC84N8JG6dE09gQ6910N5N78f81K4E4ovsfRt5iRjZCSVdok9vRwTZuh1k == 0 || this.field_11395_385X644BXT9qBn6EF1gIbS63mT0B092Z2lynp6yudR6UJeSv1MPf63o296yR != var1.displayWidth || this.field_11400_99QURSTWyu6T75EQj21pgtAS627wxwQ52Z8b7F8U3R81i613FC3SJLY2aTbs != var1.displayHeight) {
+			this.field_11402_0SSC84N8JG6dE09gQ6910N5N78f81K4E4ovsfRt5iRjZCSVdok9vRwTZuh1k = this.func_11387_6N3mcf0BGqjNK53qh26x8VQ4E61x3o39KsFng4ST42q2tOJc811a7A37Zu88(var1.displayWidth, var1.displayHeight, false);
+			this.field_11395_385X644BXT9qBn6EF1gIbS63mT0B092Z2lynp6yudR6UJeSv1MPf63o296yR = var1.displayWidth;
+			this.field_11400_99QURSTWyu6T75EQj21pgtAS627wxwQ52Z8b7F8U3R81i613FC3SJLY2aTbs = var1.displayHeight;
+		}
+
+		return this.field_11402_0SSC84N8JG6dE09gQ6910N5N78f81K4E4ovsfRt5iRjZCSVdok9vRwTZuh1k;
+	}
+
+	public int func_11384_35vk4IIhd8hao4F5HSR9jWpH6tem7rh9B886Pq7RYkf415WQC9hm6vShCua6(Minecraft var1) {
+		if(this.field_11396_9441y1Y9T40FDCF9uuwkU1lmehM65hg8761b2m6X1BgG7auF90lDMvklrCeq == 0 || this.field_11392_6lfU3mNn3UomWZH8MfUGPg4LX59b1U18fabPV53p2u7ludbeYE1196g5rWX6 != var1.displayWidth || this.field_11403_20GQz7zR34Tp693G3DSupFXBE66x7RUvn9JBul8RyCo5s50123NSbmOaYt5u != var1.displayHeight) {
+			this.field_11396_9441y1Y9T40FDCF9uuwkU1lmehM65hg8761b2m6X1BgG7auF90lDMvklrCeq = this.func_11387_6N3mcf0BGqjNK53qh26x8VQ4E61x3o39KsFng4ST42q2tOJc811a7A37Zu88(var1.displayWidth, var1.displayHeight, true);
+			this.field_11392_6lfU3mNn3UomWZH8MfUGPg4LX59b1U18fabPV53p2u7ludbeYE1196g5rWX6 = var1.displayWidth;
+			this.field_11403_20GQz7zR34Tp693G3DSupFXBE66x7RUvn9JBul8RyCo5s50123NSbmOaYt5u = var1.displayHeight;
+		}
+
+		return this.field_11396_9441y1Y9T40FDCF9uuwkU1lmehM65hg8761b2m6X1BgG7auF90lDMvklrCeq;
+	}
+
+	public int func_11382_6L4tKeSFB9JuB4C21yfU9Wexrw7VE17dZURA0uDEgh0622ButpwPgn1H7yV8(Minecraft var1) {
+		if(this.field_11407_2i7O7iJDFtoO2YSWX2e96Df4ACzXIrBwc2Khi70y062n1HJaqNA1njxwdt6o == 0 || this.field_11405_5OVC2g2d9zq6dP14qJsUlMx8ghzyNOS2n5hh0gcYmL4BF9KuER7SqHiYE809 != var1.displayWidth || this.field_11401_3W20rY0C5sq1crIFTGspopkir94xT6ZbCJ2HfG0YdtAolGW79iW5ue93k9gj != var1.displayHeight) {
+			this.field_11407_2i7O7iJDFtoO2YSWX2e96Df4ACzXIrBwc2Khi70y062n1HJaqNA1njxwdt6o = this.func_11387_6N3mcf0BGqjNK53qh26x8VQ4E61x3o39KsFng4ST42q2tOJc811a7A37Zu88(var1.displayWidth, var1.displayHeight, true);
+			this.field_11405_5OVC2g2d9zq6dP14qJsUlMx8ghzyNOS2n5hh0gcYmL4BF9KuER7SqHiYE809 = var1.displayWidth;
+			this.field_11401_3W20rY0C5sq1crIFTGspopkir94xT6ZbCJ2HfG0YdtAolGW79iW5ue93k9gj = var1.displayHeight;
+		}
+
+		return this.field_11407_2i7O7iJDFtoO2YSWX2e96Df4ACzXIrBwc2Khi70y062n1HJaqNA1njxwdt6o;
+	}
+
+	public void func_11379_3Ox6ELkjL7tS0M11M9Ec3mtp515ihaUVz6k07257y4J6E9IJVRiQKoD3Ym6J(Minecraft var1, float var2, float var3, float var4, float var5) {
+		if(!var1.options.anaglyph && this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C != 0) {
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.func_11388_8HzFSuQdA8hV11L03HqdJf3J6QnwTI3IL1K751k618F0KmXstFu981F5bdPq(var1));
+			GL11.glCopyTexImage2D(GL11.GL_TEXTURE_2D, 0, GL11.GL_RGBA, 0, 0, var1.displayWidth, var1.displayHeight, 0);
+			GL13.glActiveTexture(ARBMultitexture.GL_TEXTURE1_ARB);
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.func_11384_35vk4IIhd8hao4F5HSR9jWpH6tem7rh9B886Pq7RYkf415WQC9hm6vShCua6(var1));
+			GL13.glActiveTexture(ARBMultitexture.GL_TEXTURE2_ARB);
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.func_11382_6L4tKeSFB9JuB4C21yfU9Wexrw7VE17dZURA0uDEgh0622ButpwPgn1H7yV8(var1));
+			GL13.glActiveTexture(ARBMultitexture.GL_TEXTURE0_ARB);
+			this.func_11385_2aBrqFndfkzC8w9LabN9jT6nygQa1G113SE0F3xs21Ehzq80X8oVOnixaKXP(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C);
+			int var6 = ARBShaderObjects.glGetUniformLocationARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, (CharSequence)"sampler0");
+			ARBShaderObjects.glUniform1iARB(var6, 0);
+			int var7 = ARBShaderObjects.glGetUniformLocationARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, (CharSequence)"sampler1");
+			ARBShaderObjects.glUniform1iARB(var7, 1);
+			int var8 = ARBShaderObjects.glGetUniformLocationARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, (CharSequence)"sampler2");
+			ARBShaderObjects.glUniform1iARB(var8, 2);
+			int var9 = ARBShaderObjects.glGetUniformLocationARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, (CharSequence)"aspectRatio");
+			ARBShaderObjects.glUniform1fARB(var9, (float)(var1.displayWidth / var1.displayHeight));
+			int var10 = ARBShaderObjects.glGetUniformLocationARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, (CharSequence)"near");
+			ARBShaderObjects.glUniform1fARB(var10, 0.05F);
+			int var11 = ARBShaderObjects.glGetUniformLocationARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, (CharSequence)"far");
+			ARBShaderObjects.glUniform1fARB(var11, var2);
+			int var12 = ARBShaderObjects.glGetUniformLocationARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, (CharSequence)"rand");
+			ARBShaderObjects.glUniform1fARB(var12, this.field_11408_2SsePNiNxSOe8T43T3RkxQkXltd0oPOKg7w710gmT1w1fVdSSd15fP0M69aI.nextFloat());
+			int var13 = ARBShaderObjects.glGetUniformLocationARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, (CharSequence)"lastMouseDist");
+			ARBShaderObjects.glUniform1fARB(var13, var1.currentScreen != null ? 0.0F : (float)Math.abs(Math.sqrt(Math.pow((double)InputHandler.EventDX, 2.0D) + Math.pow((double)InputHandler.EventDY, 2.0D))));
+			int var14 = ARBShaderObjects.glGetUniformLocationARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, (CharSequence)"lastMouseX");
+			ARBShaderObjects.glUniform1fARB(var14, (float)InputHandler.EventDX);
+			int var15 = ARBShaderObjects.glGetUniformLocationARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, (CharSequence)"lastMouseY");
+			ARBShaderObjects.glUniform1fARB(var15, (float)InputHandler.EventDY);
+			int var16 = ARBShaderObjects.glGetUniformLocationARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, (CharSequence)"playerPitchRot");
+			ARBShaderObjects.glUniform1fARB(var16, var1.thePlayer.rotationPitch);
+			int var17 = ARBShaderObjects.glGetUniformLocationARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, (CharSequence)"fovMod");
+			ARBShaderObjects.glUniform1fARB(var17, var1.options.fovModifier);
+			int var18 = GL11.glGetInteger(GL11.GL_FOG_MODE);
+			int var19 = ARBShaderObjects.glGetUniformLocationARB(this.field_11394_5njmf4RMUMok22e26216PC1AQHrm3cuOQ244o6dsQIZ7mMyYI2OdfKFqUw9C, (CharSequence)"fogMode");
+			ARBShaderObjects.glUniform1iARB(var19, var18);
+			GL11.glClearColor(var3, var4, var5, 0.0F);
+			GL11.glClear(GL11.GL_COLOR_BUFFER_BIT);
+			GL11.glDisable(GL11.GL_DEPTH_TEST);
+			GL11.glDisable(GL11.GL_BLEND);
+			GL11.glMatrixMode(GL11.GL_PROJECTION);
+			GL11.glLoadIdentity();
+			GL11.glOrtho(0.0D, (double)var1.displayWidth, (double)var1.displayHeight, 0.0D, -1.0D, 1.0D);
+			GL11.glMatrixMode(GL11.GL_MODELVIEW);
+			GL11.glLoadIdentity();
+			GL11.glBegin(GL11.GL_QUADS);
+			GL11.glTexCoord2f(0.0F, 1.0F);
+			GL11.glVertex3f(0.0F, 0.0F, 0.0F);
+			GL11.glTexCoord2f(0.0F, 0.0F);
+			GL11.glVertex3f(0.0F, (float)var1.displayHeight, 0.0F);
+			GL11.glTexCoord2f(1.0F, 0.0F);
+			GL11.glVertex3f((float)var1.displayWidth, (float)var1.displayHeight, 0.0F);
+			GL11.glTexCoord2f(1.0F, 1.0F);
+			GL11.glVertex3f((float)var1.displayWidth, 0.0F, 0.0F);
+			GL11.glEnd();
+			GL11.glEnable(GL11.GL_DEPTH_TEST);
+			this.func_11385_2aBrqFndfkzC8w9LabN9jT6nygQa1G113SE0F3xs21Ehzq80X8oVOnixaKXP(0);
+		}
+
+	}
+
+	public static void func_11383_9k8UYIQjyl8A669E4479n7ZN6ovKzu0Py7mZLt8QHMg0jDqVsW8F6L6Ycg15(int var0, Minecraft var1) {
+		GL11.glBindTexture(GL11.GL_TEXTURE_2D, var0);
+		GL11.glCopyTexImage2D(GL11.GL_TEXTURE_2D, 0, GL11.GL_DEPTH_COMPONENT, 0, 0, var1.displayWidth, var1.displayHeight, 0);
+	}
+}
--- /dev/null
+++ net/minecraft/src/EntityShadowPlayer.java
@@ -1,0 +1,52 @@
+package net.minecraft.src;
+
+public class EntityShadowPlayer extends EntityPlayer {
+	public int stareTimer = 0;
+	public boolean getTheFrickOut = false;
+	public boolean spawnedThisCycle = false;
+
+	public EntityShadowPlayer(World var1) {
+		super(var1);
+		this.yOffset = 1.62F;
+		this.setLocationAndAngles((double)var1.spawnX + 0.5D, (double)(var1.spawnY + 1), (double)var1.spawnZ + 0.5D, 0.0F, 0.0F);
+		this.health = 20;
+		this.entityType = "humanoid";
+		this.fireResistance = 20;
+		this.texture = "/char.png";
+		this.username = "";
+		this.skinUrl = "@@";
+	}
+
+	public void Gone() {
+		this.isDead = true;
+		this.dead = true;
+		this.onDeath(this);
+	}
+
+	public void onLivingUpdate() {
+		float var1 = this.getDistanceToEntity(InputHandler.mc.thePlayer);
+		if(!ScreenDebugMenu.dbg_conf_spawnShadowPlayers || var1 < 19.0F && !ScreenDebugMenu.field_7955_2x00ovR61G2n6Zj5nN9jd9FAdV8H3Cz32KtPOCpcvM363cbIQ5o5vSMN7x7B) {
+			this.Gone();
+		}
+
+		if(InputHandler.mc.thePlayer != null) {
+			double var2 = Math.atan2(this.posX - InputHandler.mc.thePlayer.posX, -(this.posZ - InputHandler.mc.thePlayer.posZ)) / Math.PI * 180.0D;
+			this.setRotation((float)var2, 0.0F);
+			double var4 = Ext1605Utils.AngleDistance((double)InputHandler.mc.thePlayer.rotationYaw, (double)this.rotationYaw) - 180.0D;
+			boolean var6 = !Ext1605Utils.RayCastBlock(this.worldObj, 128, this.posX, this.posY + 1.0D, this.posZ, InputHandler.mc.thePlayer.posX, InputHandler.mc.thePlayer.posY + 1.0D, InputHandler.mc.thePlayer.posZ);
+			if(var4 > -10.0D && var4 < 10.0D && var6 && !ScreenDebugMenu.field_7955_2x00ovR61G2n6Zj5nN9jd9FAdV8H3Cz32KtPOCpcvM363cbIQ5o5vSMN7x7B) {
+				++this.stareTimer;
+				if(this.stareTimer > 70) {
+					this.getTheFrickOut = true;
+					this.Gone();
+				}
+			}
+		}
+
+		if(!this.spawnedThisCycle) {
+			this.Gone();
+		}
+
+		super.onLivingUpdate();
+	}
+}
--- /dev/null
+++ net/minecraft/src/ThreadDownloadResourcesUnknownClass.java
@@ -1,0 +1,34 @@
+package net.minecraft.src;
+
+import java.io.IOException;
+import java.nio.file.Files;
+import java.nio.file.FileVisitResult;
+import java.nio.file.attribute.BasicFileAttributes;
+import java.nio.file.Path;
+import java.nio.file.SimpleFileVisitor;
+
+class ThreadDownloadResourcesUnknownClass extends SimpleFileVisitor<Path> {
+    final /* synthetic */ ThreadDownloadResources field_12254_9lpJ3hOq9he863cILd0jzFa4s8qR0EQ4UCpz997Oq5O3RN6TOWx4JtzglpnC;
+    
+    ThreadDownloadResourcesUnknownClass(final ThreadDownloadResources ue) {
+        this.field_12254_9lpJ3hOq9he863cILd0jzFa4s8qR0EQ4UCpz997Oq5O3RN6TOWx4JtzglpnC = ue;
+    }
+    
+    public FileVisitResult visitFile(final Path path, final BasicFileAttributes basicFileAttributes) throws IOException {
+        Files.delete(path);
+        return FileVisitResult.CONTINUE;
+    }
+    
+    public FileVisitResult visitFileFailed(final Path path, final IOException iOException) throws IOException {
+        Files.delete(path);
+        return FileVisitResult.CONTINUE;
+    }
+    
+    public FileVisitResult postVisitDirectory(final Path path, final IOException iOException) throws IOException {
+        if (iOException != null) {
+            throw iOException;
+        }
+        Files.delete(path);
+        return FileVisitResult.CONTINUE;
+    }
+}
--- /dev/null
+++ net/minecraft/src/RemoteEntityData.java
@@ -1,0 +1,14 @@
+package net.minecraft.src;
+
+public class RemoteEntityData {
+	public int entityID;
+	public double x;
+	public double y;
+	public double z;
+	public double rotPitch;
+	public double rotYaw;
+
+	public RemoteEntityData(int var1) {
+		this.entityID = var1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/HubWorldUnknownClass4.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+public class HubWorldUnknownClass4 {
+	public HubWorldUnknownClass4 field_11789_0J562Mkp8zd7uXcLK816mU9467m831KM7RpX06f6clIam7Juk383188UJI1W;
+	public HubWorldUnknownClass2 field_11787_8iCq4GSKPkQ43x8qDCT4F6e6GtJRbja891p0117NYXqiVP33D0nGR8Ro1PTS;
+	public int field_11788_8SC3atS6j6Isbe0L8jfHn20VpDQ2oEuWx50aPWK7m4716WZvPxNuDet8WcyH;
+	public int field_11785_1xaZJg9P3466Q7kKjNR53Spq94J4346Zn1Fr8ECSh2J6WfTC48Ol85CY516B;
+	public int field_11786_8Cqhm6p50sez02g2aksV2az047YVCwO71qNEk8njBkCznU01mr6qkEVSNl5Y;
+
+	public HubWorldUnknownClass4(HubWorldUnknownClass2 var1, int var2, int var3, int var4) {
+		this.field_11787_8iCq4GSKPkQ43x8qDCT4F6e6GtJRbja891p0117NYXqiVP33D0nGR8Ro1PTS = var1;
+		this.field_11788_8SC3atS6j6Isbe0L8jfHn20VpDQ2oEuWx50aPWK7m4716WZvPxNuDet8WcyH = var2;
+		this.field_11785_1xaZJg9P3466Q7kKjNR53Spq94J4346Zn1Fr8ECSh2J6WfTC48Ol85CY516B = var3;
+		this.field_11786_8Cqhm6p50sez02g2aksV2az047YVCwO71qNEk8njBkCznU01mr6qkEVSNl5Y = var4;
+	}
+
+	public boolean func_11784_50HlF50aFoB7NiHFoTOH3x80rsY8B1b3Kth2O196sr37CQNqM7QEDA5Lg1xv() {
+		return this.field_11789_0J562Mkp8zd7uXcLK816mU9467m831KM7RpX06f6clIam7Juk383188UJI1W != null;
+	}
+}
--- /dev/null
+++ net/minecraft/src/VisualsCavestyle.java
@@ -1,0 +1,38 @@
+package net.minecraft.src;
+
+class VisualsCavestyle extends Visuals {
+    final /* synthetic */ VisualsManager field_10077_1Z0xOFE6V2whQr0Nx8b20Y4Bn07W40vG4Xn7f94Lxfl2KeZ6j7FK18iMP03U;
+    
+    VisualsCavestyle(final VisualsManager la) {
+        this.field_10077_1Z0xOFE6V2whQr0Nx8b20Y4Bn07W40vG4Xn7f94Lxfl2KeZ6j7FK18iMP03U = la;
+    }
+    
+    @Override
+    public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+        return "/unl/ebcc7fc5-e1ff-4d8a-b96c-475aae32cc91.xAL";
+    }
+    
+    @Override
+    public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(final Object... arr) {
+        if (arr[0] instanceof FreerunMap1 && (long)arr[1] <= 480L) {
+            this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+            return true;
+        }
+        return false;
+    }
+    
+    @Override
+    public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+        return "unlock--cavestyle";
+    }
+    
+    @Override
+    public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+        return "Cavestyle";
+    }
+    
+    @Override
+    public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+        return "Finish CONSTRUCT in 24 seconds or less";
+    }
+}
--- net/minecraft/src/EntityLiving.java
+++ net/minecraft/src/EntityLiving.java
@@ -4,23 +4,15 @@
 
 public class EntityLiving extends Entity {
 	public int heartsHalvesLife = 20;
-	public float unusedRotationPitch2;
-	public float unusedFloat;
-	public float unusedRotationPitch;
 	public float renderYawOffset = 0.0F;
 	public float prevRenderYawOffset = 0.0F;
 	protected float ridingRotUnused;
 	protected float prevRidingRotUnused;
 	protected float rotationUnused;
 	protected float prevRotationUnused;
-	protected boolean unusedBool1 = true;
 	protected String texture = "/char.png";
-	protected boolean unusedBool2 = true;
-	protected float unusedRotation = 0.0F;
 	protected String entityType = null;
-	protected float unusedFloat1 = 1.0F;
 	protected int scoreValue = 0;
-	protected float unusedFloat2 = 0.0F;
 	public boolean isAIEnabled = false;
 	public float prevSwingProgress;
 	public float swingProgress;
@@ -35,8 +27,6 @@
 	public float prevCameraPitch;
 	public float cameraPitch;
 	protected boolean dead = false;
-	public int unusedInt = -1;
-	public float unusedFloat4 = (float)(Math.random() * (double)0.9F + (double)0.1F);
 	public float prevLimbYaw;
 	public float limbYaw;
 	public float limbSwing;
@@ -56,15 +46,13 @@
 	protected float moveSpeed = 0.7F;
 	private Entity currentTarget;
 	private int numTicksToChaseTarget = 0;
+	public boolean affectedByFallDamage = true;
 
 	public EntityLiving(World var1) {
 		super(var1);
 		this.preventEntitySpawning = true;
-		this.unusedRotationPitch = (float)(Math.random() + 1.0D) * 0.01F;
 		this.setPosition(this.posX, this.posY, this.posZ);
-		this.unusedRotationPitch2 = (float)Math.random() * 12398.0F;
 		this.rotationYaw = (float)(Math.random() * (double)((float)Math.PI) * 2.0D);
-		this.unusedFloat = 1.0F;
 		this.stepHeight = 0.5F;
 	}
 
@@ -109,7 +97,14 @@
 
 		int var8;
 		if(this.isEntityAlive() && this.isInsideOfMaterial(Material.water)) {
-			--this.air;
+			if(this instanceof EntityPlayer && ((EntityPlayer)this).isSneaking()) {
+				if(this.worldObj.worldTime % 2L == 0L) {
+					--this.air;
+				}
+			} else {
+				--this.air;
+			}
+
 			if(this.air == -20) {
 				this.air = 0;
 
@@ -291,6 +286,7 @@
 
 			this.heartsLife = this.heartsHalvesLife / 2;
 		}
+
 	}
 
 	public boolean attackEntityFrom(Entity var1, int var2) {
@@ -395,60 +391,72 @@
 	}
 
 	protected void fall(float var1) {
-		int var2 = (int)Math.ceil((double)(var1 - 3.0F));
-		if(var2 > 0) {
-			this.attackEntityFrom((Entity)null, var2);
-			int var3 = this.worldObj.getBlockId(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY - (double)0.2F - (double)this.yOffset), MathHelper.floor_double(this.posZ));
-			if(var3 > 0) {
-				StepSound var4 = Block.blocksList[var3].stepSound;
-				this.worldObj.playSoundAtEntity(this, var4.getStepSound(), var4.getVolume() * 0.5F, var4.getPitch() * (12.0F / 16.0F));
+		if(this.affectedByFallDamage) {
+			int var2 = (int)Math.ceil((double)(var1 - 3.0F));
+			if(var2 > 0) {
+				this.attackEntityFrom((Entity)null, var2);
+				int var3 = this.worldObj.getBlockId(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY - (double)0.2F - (double)this.yOffset), MathHelper.floor_double(this.posZ));
+				if(var3 > 0) {
+					StepSound var4 = Block.blocksList[var3].stepSound;
+					this.worldObj.playSoundAtEntity(this, var4.getStepSound(), var4.getVolume() * 0.5F, var4.getPitch() * (12.0F / 16.0F));
+				}
 			}
 		}
 
 	}
 
 	public void moveEntityWithHeading(float var1, float var2) {
-		double var3;
+		this.moveEntityWithHeading(var1, var2, 0.0F);
+	}
+
+	public void moveEntityWithHeading(float var1, float var2, float var3) {
+		double var4;
 		if(this.handleWaterMovement()) {
-			var3 = this.posY;
-			this.moveFlying(var1, var2, 0.02F);
+			var4 = this.posY;
+			this.moveFlying(var1, var2, 0.02F, this.isInsideOfMaterial(Material.water) ? (float)(var2 > 0.0F ? -1 : 1) * (var3 / 8.0F) : 0.0F);
 			this.moveEntity(this.motionX, this.motionY, this.motionZ);
-			this.motionX *= (double)0.8F;
-			this.motionY *= (double)0.8F;
-			this.motionZ *= (double)0.8F;
-			this.motionY -= 0.02D;
-			if(this.isCollidedHorizontally && this.isOffsetPositionInLiquid(this.motionX, this.motionY + (double)0.6F - this.posY + var3, this.motionZ)) {
-				this.motionY = (double)0.3F;
+			if(this.isInsideOfMaterial(Material.water)) {
+				this.motionX *= (double)0.95F;
+				this.motionY *= (double)0.8F;
+				this.motionZ *= (double)0.95F;
+			} else {
+				this.motionX *= (double)0.8F;
+				this.motionY *= (double)0.8F;
+				this.motionZ *= (double)0.8F;
+				this.motionY -= 0.02D;
+				if(this.isCollidedHorizontally && this.isOffsetPositionInLiquid(this.motionX, this.motionY + (double)0.6F - this.posY + var4, this.motionZ)) {
+					this.motionY = (double)0.3F;
+				}
 			}
 		} else if(this.handleLavaMovement()) {
-			var3 = this.posY;
+			var4 = this.posY;
 			this.moveFlying(var1, var2, 0.02F);
 			this.moveEntity(this.motionX, this.motionY, this.motionZ);
 			this.motionX *= 0.5D;
 			this.motionY *= 0.5D;
 			this.motionZ *= 0.5D;
 			this.motionY -= 0.02D;
-			if(this.isCollidedHorizontally && this.isOffsetPositionInLiquid(this.motionX, this.motionY + (double)0.6F - this.posY + var3, this.motionZ)) {
+			if(this.isCollidedHorizontally && this.isOffsetPositionInLiquid(this.motionX, this.motionY + (double)0.6F - this.posY + var4, this.motionZ)) {
 				this.motionY = (double)0.3F;
 			}
 		} else {
-			float var8 = 0.91F;
+			float var6 = 0.91F;
 			if(this.onGround) {
-				var8 = 546.0F * 0.1F * 0.1F * 0.1F;
-				int var4 = this.worldObj.getBlockId(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.boundingBox.minY) - 1, MathHelper.floor_double(this.posZ));
-				if(var4 > 0) {
-					var8 = Block.blocksList[var4].slipperiness * 0.91F;
+				var6 = 546.0F * 0.1F * 0.1F * 0.1F;
+				int var7 = this.worldObj.getBlockId(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.boundingBox.minY) - 1, MathHelper.floor_double(this.posZ));
+				if(var7 > 0) {
+					var6 = Block.blocksList[var7].slipperiness * 0.91F;
 				}
 			}
 
-			float var9 = 0.16277136F / (var8 * var8 * var8);
+			float var9 = 0.16277136F / (var6 * var6 * var6);
 			this.moveFlying(var1, var2, this.onGround ? 0.1F * var9 : 0.02F);
-			var8 = 0.91F;
+			var6 = 0.91F;
 			if(this.onGround) {
-				var8 = 546.0F * 0.1F * 0.1F * 0.1F;
-				int var5 = this.worldObj.getBlockId(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.boundingBox.minY) - 1, MathHelper.floor_double(this.posZ));
-				if(var5 > 0) {
-					var8 = Block.blocksList[var5].slipperiness * 0.91F;
+				var6 = 546.0F * 0.1F * 0.1F * 0.1F;
+				int var8 = this.worldObj.getBlockId(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.boundingBox.minY) - 1, MathHelper.floor_double(this.posZ));
+				if(var8 > 0) {
+					var6 = Block.blocksList[var8].slipperiness * 0.91F;
 				}
 			}
 
@@ -466,19 +474,19 @@
 
 			this.motionY -= 0.08D;
 			this.motionY *= (double)0.98F;
-			this.motionX *= (double)var8;
-			this.motionZ *= (double)var8;
+			this.motionX *= (double)var6;
+			this.motionZ *= (double)var6;
 		}
 
 		this.prevLimbYaw = this.limbYaw;
-		var3 = this.posX - this.prevPosX;
-		double var10 = this.posZ - this.prevPosZ;
-		float var7 = MathHelper.sqrt_double(var3 * var3 + var10 * var10) * 4.0F;
-		if(var7 > 1.0F) {
-			var7 = 1.0F;
+		var4 = this.posX - this.prevPosX;
+		double var11 = this.posZ - this.prevPosZ;
+		float var10 = MathHelper.sqrt_double(var4 * var4 + var11 * var11) * 4.0F;
+		if(var10 > 1.0F) {
+			var10 = 1.0F;
 		}
 
-		this.limbYaw += (var7 - this.limbYaw) * 0.4F;
+		this.limbYaw += (var10 - this.limbYaw) * 0.4F;
 		this.limbSwing += this.limbYaw;
 	}
 
@@ -556,7 +564,7 @@
 		this.moveStrafing *= 0.98F;
 		this.moveForward *= 0.98F;
 		this.randomYawVelocity *= 0.9F;
-		this.moveEntityWithHeading(this.moveStrafing, this.moveForward);
+		this.moveEntityWithHeading(this.moveStrafing, this.moveForward, this.rotationPitch / 90.0F);
 		List var10 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox.expand((double)0.2F, 0.0D, (double)0.2F));
 		if(var10 != null && var10.size() > 0) {
 			for(int var4 = 0; var4 < var10.size(); ++var4) {
@@ -631,18 +639,18 @@
 
 	public void faceEntity(Entity var1, float var2) {
 		double var3 = var1.posX - this.posX;
-		double var7 = var1.posZ - this.posZ;
-		double var5;
+		double var5 = var1.posZ - this.posZ;
+		double var7;
 		if(var1 instanceof EntityLiving) {
 			EntityLiving var9 = (EntityLiving)var1;
-			var5 = var9.posY + (double)var9.getEyeHeight() - (this.posY + (double)this.getEyeHeight());
+			var7 = var9.posY + (double)var9.getEyeHeight() - (this.posY + (double)this.getEyeHeight());
 		} else {
-			var5 = (var1.boundingBox.minY + var1.boundingBox.maxY) / 2.0D - (this.posY + (double)this.getEyeHeight());
+			var7 = (var1.boundingBox.minY + var1.boundingBox.maxY) / 2.0D - (this.posY + (double)this.getEyeHeight());
 		}
 
-		double var13 = (double)MathHelper.sqrt_double(var3 * var3 + var7 * var7);
-		float var11 = (float)(Math.atan2(var7, var3) * 180.0D / (double)((float)Math.PI)) - 90.0F;
-		float var12 = (float)(Math.atan2(var5, var13) * 180.0D / (double)((float)Math.PI));
+		double var13 = (double)MathHelper.sqrt_double(var3 * var3 + var5 * var5);
+		float var11 = (float)(Math.atan2(var5, var3) * 180.0D / (double)((float)Math.PI)) - 90.0F;
+		float var12 = (float)(Math.atan2(var7, var13) * 180.0D / (double)((float)Math.PI));
 		this.rotationPitch = this.updateRotation(this.rotationPitch, var12, var2);
 		this.rotationYaw = this.updateRotation(this.rotationYaw, var11, var2);
 	}
--- /dev/null
+++ net/minecraft/src/VisualsIrrigant.java
@@ -1,0 +1,38 @@
+package net.minecraft.src;
+
+class VisualsIrrigant extends Visuals {
+    final /* synthetic */ VisualsManager field_10079_1F2x6aKhREY5El8Ks5g74U0VCiBi47SJK6N3wEuWE9B7u5Z6C181t22ekbsM;
+    
+    VisualsIrrigant(final VisualsManager la) {
+        this.field_10079_1F2x6aKhREY5El8Ks5g74U0VCiBi47SJK6N3wEuWE9B7u5Z6C181t22ekbsM = la;
+    }
+    
+    @Override
+    public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+        return "/unl/189953d6-71e0-11ee-b962-0242ac120002.xAL";
+    }
+    
+    @Override
+    public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(final Object... arr) {
+        if (arr[0] instanceof EntityPlayerZombieModeClient && (int)arr[1] == ExtItems.GrayGun.shiftedIndex) {
+            this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+            return true;
+        }
+        return false;
+    }
+    
+    @Override
+    public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+        return "unlock--irrigant";
+    }
+    
+    @Override
+    public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+        return "Irrigant";
+    }
+    
+    @Override
+    public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+        return "Acquire the Gray Gun in ZOMBIES";
+    }
+}
--- /dev/null
+++ net/minecraft/src/CommandInvclear.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandInvclear extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8572_4148bjZ81823Crxl168Y7YksI5SYz20HMGwPUDm32ibK9EsFe0q594br66P2;
+    
+    CommandInvclear(final CommandManager abb) {
+        this.field_8572_4148bjZ81823Crxl168Y7YksI5SYz20HMGwPUDm32ibK9EsFe0q594br66P2 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.thePlayer.inventory.func_8655_2030zy05r8P1HRnaOEgnBoKr1OC1y9FA0RMNRU6eq535ylSExX5MmN7p6vst();
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/ImageHolder.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+
+public class ImageHolder {
+	public BufferedImage image;
+	public boolean slimTypePlayer = false;
+	public int referenceCount = 1;
+	public int textureName = -1;
+	public boolean textureSetupComplete = false;
+
+	public void initialize() {
+		if(this.image.getHeight() != this.image.getWidth() / 2) {
+			this.image = this.image.getSubimage(0, 0, this.image.getWidth(), this.image.getWidth() / 2);
+		}
+
+		int var1 = (int)(54.0F * ((float)this.image.getWidth() / 64.0F));
+		int var2 = (int)(20.0F * ((float)this.image.getHeight() / 32.0F));
+		this.slimTypePlayer = (this.image.getRGB(var1, var2) & -16777216) == 0;
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandSvAllowrnet.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+class CommandSvAllowrnet extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8556_9mjx2LGPowCiXoUou1ybCO6d4A0T601Rg2c9VP1R1H5gSjXmJ5rDO1bzy0qa;
+    
+    CommandSvAllowrnet(final CommandManager abb) {
+        this.field_8556_9mjx2LGPowCiXoUou1ybCO6d4A0T601Rg2c9VP1R1H5gSjXmJ5rDO1bzy0qa = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (InputHandler.mc.thePlayer.rand.nextBoolean()) {
+            ScreenDebugMenu.dbg_conf_spawnShadowPlayers = !ScreenDebugMenu.dbg_conf_spawnShadowPlayers;
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return ScreenDebugMenu.dbg_conf_spawnShadowPlayers ? "1" : "0";
+    }
+}
--- /dev/null
+++ net/minecraft/src/CommandImpulse.java
@@ -1,0 +1,56 @@
+package net.minecraft.src;
+
+class CommandImpulse extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8547_2sb1GS8bLF1bjEN4agYOq9Gd2561tP638I0nv8l6zhXw38t314hGURyTOJ33;
+    
+    CommandImpulse(final CommandManager abb) {
+        this.field_8547_2sb1GS8bLF1bjEN4agYOq9Gd2561tP638I0nv8l6zhXw38t314hGURyTOJ33 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (!ScreenDebugMenu.dbg_conf_enableCheats) {
+            return;
+        }
+        switch ((int)arr[0]) {
+            case 102: {
+                for (int i = 0; i < 4; ++i) {
+                    final EntitySkeleton entity = new EntitySkeleton(InputHandler.mc.theWorld);
+                    entity.setPosition(InputHandler.mc.thePlayer.posX, InputHandler.mc.thePlayer.posY, InputHandler.mc.thePlayer.posZ);
+                    InputHandler.mc.theWorld.spawnEntityInWorld(entity);
+                }
+                break;
+            }
+            case 300: {
+                ExtEvents.Spawn(InputHandler.mc.thePlayer, InputHandler.mc.theWorld);
+                break;
+            }
+            case 320: {
+                ExtEvents.func_11856_0t7OQN0wYClKPyfCdKW9g3t0MW94ScRD4ffzAB4MaIwS6K3mB51a67GSmU0B(InputHandler.mc.thePlayer, InputHandler.mc.theWorld);
+                break;
+            }
+            case 400: {
+                final EntityCatbomb entity2 = new EntityCatbomb(InputHandler.mc.theWorld);
+                entity2.setPosition(InputHandler.mc.thePlayer.posX, InputHandler.mc.thePlayer.posY, InputHandler.mc.thePlayer.posZ);
+                InputHandler.mc.theWorld.spawnEntityInWorld(entity2);
+                break;
+            }
+            case 3900: {
+                InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10945_6iX357SpWthupUbWNfLRO87UU7xQ8Prgh5bU4EX2jBlYJ3DWToctpI0eQj4u.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+                InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10943_4P6yLgfnvnO6y89XpVE5PS5Hjo62bm3kdr4eGy8mOs9dKTZu5L8RqEHy2P44.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+                InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10948_0K9Wvp8r1YnOA5010xZpl66lyNUt78N6SfQ197bg85kafTuYvONKR77OoXDq.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+                InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10942_7xLO64tuZWfUPmt15N4O95hJ0176qp03d5mSW8trXS890yqputsco88a0dk3.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+                InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10946_7AR6ItAen3fx05Vncef3s63538b5wb97oi4kfrKpN1xXa92ennAR19lcPgfJ.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+                InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10947_9AnvDYT3tcTSS9Cz1srJAOWX62V5Gqyb2ubqdcRVgP303Y40U8Ke6dGNVv08.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+                InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10944_2EWN3F9cOeZLc1s1Wh3Y3X5G88vSKS70wXa1x0jY361oZ36mAnvM2vYHm7oe.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+                InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10949_90L26at7gGnz0J8Af23lCTpFsYX1JLxXD3R7KOPeOnNw65r9paK3i34TuD8w.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+                break;
+            }
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockUnknownInterface.java
@@ -1,0 +1,9 @@
+package net.minecraft.src;
+
+public interface BlockUnknownInterface {
+	void func_8286_2f84KM1xKjK9eBj4915qo36L405Hm9W3JZ41244r918IGv3BpYiut0G1VBGw(EntityPlayerZombieModeClient var1, XYZv var2);
+
+	String func_8287_3t2cX22yD5J55Zh6G33szTT1PY525wnemKTHp3jQ2r2jhLod41nugOV5rhqI(EntityPlayerZombieModeClient var1, XYZv var2);
+
+	int func_8288_98t8S89tFW42rGL9ALNhVV7sJ5qB3j8Z10bg69FoU68e30R380Rp4L4Dn5kC();
+}
--- net/minecraft/src/EnumArt.java
+++ net/minecraft/src/EnumArt.java
@@ -1,30 +1,139 @@
 package net.minecraft.src;
 
 public enum EnumArt {
-	Kebab("Kebab", 16, 16, 0, 0),
-	Aztec("Aztec", 16, 16, 16, 0),
-	Alban("Alban", 16, 16, 32, 0),
-	Aztec2("Aztec2", 16, 16, 48, 0),
-	Bomb("Bomb", 16, 16, 64, 0),
-	Plant("Plant", 16, 16, 80, 0),
-	Wasteland("Wasteland", 16, 16, 96, 0),
-	Pool("Pool", 32, 16, 0, 32),
-	Courbet("Courbet", 32, 16, 32, 32),
-	Sea("Sea", 32, 16, 64, 32),
-	Sunset("Sunset", 32, 16, 96, 32),
-	Creebet("Creebet", 32, 16, 128, 32),
-	Wanderer("Wanderer", 16, 32, 0, 64),
-	Graham("Graham", 16, 32, 16, 64),
-	Match("Match", 32, 32, 0, 128),
-	Bust("Bust", 32, 32, 32, 128),
-	Stage("Stage", 32, 32, 64, 128),
-	Void("Void", 32, 32, 96, 128),
-	SkullAndRoses("SkullAndRoses", 32, 32, 128, 128),
-	Fighters("Fighters", 64, 32, 0, 96),
-	Pointer("Pointer", 64, 64, 0, 192),
-	Pigscene("Pigscene", 64, 64, 64, 192),
-	Skeleton("Skeleton", 64, 48, 192, 64),
-	DonkeyKong("DonkeyKong", 64, 48, 192, 112);
+	Rock("Rock", 64, 32, 128, 256),
+	Phoenix("Phoenix", 16, 16, 0, 0),
+	Hue("Hue", 16, 16, 16, 0),
+	Nebula("Nebula", 16, 16, 32, 0),
+	HellAspect("HellAspect", 16, 16, 48, 0),
+	Duality("Duality", 16, 16, 64, 0),
+	Smother("Smother", 16, 16, 80, 0),
+	WastelandNight("WastelandNight", 16, 16, 96, 0),
+	Silentio("Silentio", 16, 16, 112, 0),
+	NightGarden("NightGarden", 64, 16, 0, 16),
+	Demo("Demo", 32, 16, 0, 32),
+	Reptile("Reptile", 32, 16, 32, 32),
+	Seek("Seek", 32, 16, 64, 32),
+	Town("Town", 32, 16, 96, 32),
+	AutumnSun("AutumnSun", 16, 16, 0, 48),
+	SunRiver("SunRiver", 32, 32, 16, 48),
+	Poet("Poet", 16, 32, 0, 64),
+	Gradient("Gradient", 48, 16, 16, 80),
+	Seas("Seas", 32, 32, 0, 128),
+	Bird("Bird", 32, 32, 0, 160),
+	Cave("Cave", 32, 32, 32, 128),
+	Cube("Cube", 32, 32, 64, 128),
+	Fog("Fog", 32, 32, 96, 128),
+	Quartet("Quartet", 32, 32, 128, 128),
+	Bull("Bull", 32, 32, 160, 128),
+	Shack("Shack", 64, 32, 0, 96),
+	DoorsToNexi("DoorsToNexi", 64, 64, 0, 192),
+	FloodedDuality("FloodedDuality", 64, 64, 64, 192),
+	Sorrow("Sorrow", 64, 48, 128, 208),
+	Yggdrasil("Yggdrasil", 48, 48, 64, 80),
+	Parallax("Parallax", 48, 48, 112, 80),
+	DigitalMan("DigitalMan", 32, 48, 160, 80),
+	LightBeam("LightBeam", 48, 48, 208, 64),
+	Shrine("Shrine", 48, 48, 208, 112),
+	Galaxy("Ear Wax", 48, 32, 208, 160),
+	DeepseaCoral("DeepseaCoral", 64, 32, 192, 192),
+	Landscape("Landscape", 64, 32, 192, 224),
+	Fragments("Fragments", 32, 64, 256, 128),
+	StoneTroll("Summit", 48, 64, 384, 0),
+	NightLight("NightLight", 16, 16, 64, 16),
+	Snow("Snow", 32, 16, 80, 16),
+	Salt("Empty (Small)", 16, 16, 112, 16),
+	Fate("Fate", 32, 32, 48, 48),
+	BigSalt("Empty", 32, 32, 80, 48),
+	Maze("Merriweather", 16, 16, 112, 48),
+	Darkness("Darkness", 16, 16, 112, 64),
+	CatOne("Cat", 32, 32, 32, 160),
+	Parrot("Parrot", 32, 32, 64, 160),
+	Hill("Hill", 32, 32, 96, 160),
+	HandGuy("Fungus", 64, 64, 0, 256),
+	Fucker("Vermin", 64, 64, 64, 256),
+	Bloodfest("Towers", 48, 48, 0, 320),
+	Mirror("Mirror", 32, 32, 48, 336),
+	Atmosphere("Atmosphere", 48, 48, 80, 320),
+	Plane("Windy Day", 16, 32, 0, 368),
+	Sky("Azores", 16, 32, 0, 400),
+	Apple("Apple", 16, 32, 0, 432),
+	Laptop("Laptop", 16, 32, 0, 464),
+	Plant("Plant", 16, 32, 16, 368),
+	Landscaping("Landscaping", 16, 32, 16, 400),
+	BlueShit("Pillars", 16, 32, 16, 432),
+	RedShit("Step Forward", 16, 32, 16, 464),
+	Ascension("Ascension", 16, 64, 32, 368),
+	Infiltration("Infiltration", 80, 64, 48, 368),
+	LostParadise("Lost Paradise", 96, 64, 32, 432),
+	Distant("Distant", 64, 64, 128, 0),
+	Smoke("Smoke", 32, 16, 128, 64),
+	Symbol("Symbol", 16, 16, 160, 64),
+	BlueGuts("Divine Drowned", 16, 16, 176, 64),
+	Handdrawn("Handdrawn Life", 48, 48, 128, 160),
+	Blue("Blue", 16, 48, 176, 160),
+	Andrei("Cloudman", 64, 32, 128, 256),
+	Distortion("Masque", 32, 48, 128, 288),
+	CatBroom("Katze", 32, 32, 160, 288),
+	Slain("Slain", 32, 32, 128, 336),
+	Galaxia("Cosmos", 48, 48, 160, 320),
+	Hidden("Hidden", 64, 64, 128, 368),
+	TiledSurface("Tiled Surface", 64, 64, 128, 432),
+	Sunrise("Sunrise", 80, 64, 192, 0),
+	Cosmos("Cosmos", 16, 64, 192, 64),
+	TreePlain("Satellite", 16, 64, 192, 128),
+	Shattered("Shattered", 64, 64, 192, 256),
+	Worrysome("Worrysome", 48, 16, 192, 368),
+	Integrity("Stickbug", 48, 48, 192, 384),
+	Globe("Global", 64, 64, 272, 0),
+	Sailor("Sailor", 64, 64, 32, 32),
+	Gorey("Jam", 32, 32, 256, 96),
+	SeaAnimal("Sea Animal", 32, 32, 256, 192),
+	Feline("Feline", 32, 32, 256, 224),
+	MonopolyBoard("Colours", 32, 32, 256, 256),
+	Moon("Moon", 32, 32, 256, 288),
+	Leader("Leader", 48, 64, 336, 0),
+	Fighter("Past", 48, 64, 288, 112),
+	Sideview("Sideview", 48, 48, 288, 176),
+	Hexagon("Okinawa", 64, 64, 288, 224),
+	NightSky("Night Sky", 64, 16, 336, 112),
+	TheTop("Superstructure", 64, 32, 352, 256),
+	DoorThingIdk("Lineframe", 32, 32, 336, 128),
+	Haeven("Heaven", 32, 32, 368, 128),
+	Jupiter("Jupiter", 64, 64, 336, 160),
+	Weed("Cyanobacteria Spiral", 64, 64, 400, 160),
+	Seaside("Seaside View", 48, 48, 384, 64),
+	Stairwell("Stairwell", 64, 48, 400, 112),
+	Event("Event", 64, 48, 432, 64),
+	Erupt("Erupt", 16, 16, 432, 0),
+	GradedSky("Graded Sky", 16, 32, 432, 32),
+	BlackHole("Celestial Center", 32, 32, 416, 224),
+	PinkShit("Magenta", 16, 48, 496, 64),
+	LowRiverSkull("Golden Skull", 48, 48, 464, 112),
+	MissingTex("Texture", 48, 64, 464, 160),
+	FlippedShape("Diamond", 64, 64, 448, 448),
+	Company("Company", 48, 48, 288, 64),
+	Game("Game", 48, 48, 336, 64),
+	GayPorn("Kitten", 16, 32, 256, 320),
+	BigFish("Oarfish", 192, 16, 0, 496),
+	Dreamland("Dreamed World", 48, 32, 192, 480),
+	UnseenLand("Unseen Land", 128, 128, 288, 352),
+	Fields("Snow Growth", 64, 64, 288, 288),
+	Emil("Emil", 16, 16, 496, 320),
+	Zombies("Untoten", 48, 48, 240, 464),
+	Cube2("Cube 2", 32, 32, 416, 480),
+	Cubes("Cubes", 32, 32, 416, 448),
+	Spirit("Space Spirit", 32, 32, 384, 480),
+	Pengo("Penguin", 32, 32, 352, 480),
+	Rogue("Rogue", 32, 32, 320, 480),
+	Encounter("Encounter", 32, 32, 288, 480),
+	FlippedShape2("Cyanine", 64, 64, 480, 448),
+	FlippedShape3("Emerald", 32, 32, 480, 480),
+	FlippedShape4("Amber", 32, 32, 448, 480),
+	CityLicht("Licht", 48, 32, 240, 368),
+	waterhall("Depth", 48, 32, 240, 400),
+	MirrorMirror("Mirror Mirror", 32, 32, 48, 336),
+	Mall("Mall", 96, 96, 416, 352);
 
 	public final String title;
 	public final int sizeX;
@@ -32,6 +141,16 @@
 	public final int offsetX;
 	public final int offsetY;
 
+    private static final /* synthetic */ EnumArt[] field_11581_4z516q5I9h4uBOd5Pllg8z4y2OzP501u7Fh2s93LWM7vxgc5TLD7U99yMnua;
+
+	public static EnumArt[] func_11496_9D6dOuxURsoKgZJGzy4t6u99UDf0ap9v2NhRK3xa7zoR3mTWD0560ktX85Mr() {
+		return (EnumArt[])field_11581_4z516q5I9h4uBOd5Pllg8z4y2OzP501u7Fh2s93LWM7vxgc5TLD7U99yMnua.clone();
+	}
+
+	public static EnumArt func_11495_4EzTIa33UPAMDdQ4Mm8zuX2m7L88O43BYXPi5Jiyxb086cg0n6GEK5y4y1l0(String var0) {
+		return (EnumArt)Enum.valueOf(EnumArt.class, var0);
+	}
+
 	private EnumArt(String var3, int var4, int var5, int var6, int var7) {
 		this.title = var3;
 		this.sizeX = var4;
@@ -39,4 +158,12 @@
 		this.offsetX = var6;
 		this.offsetY = var7;
 	}
+
+	private static EnumArt[] func_11497_0lKJM3d0zK99WfUzY2Z1yrT58EzBaCmhgS5YbRNA8P4Mv6ujoWOQJU445NQJ() {
+		return new EnumArt[]{Rock, Phoenix, Hue, Nebula, HellAspect, Duality, Smother, WastelandNight, Silentio, NightGarden, Demo, Reptile, Seek, Town, AutumnSun, SunRiver, Poet, Gradient, Seas, Bird, Cave, Cube, Fog, Quartet, Bull, Shack, DoorsToNexi, FloodedDuality, Sorrow, Yggdrasil, Parallax, DigitalMan, LightBeam, Shrine, Galaxy, DeepseaCoral, Landscape, Fragments, StoneTroll, NightLight, Snow, Salt, Fate, BigSalt, Maze, Darkness, CatOne, Parrot, Hill, HandGuy, Fucker, Bloodfest, Mirror, Atmosphere, Plane, Sky, Apple, Laptop, Plant, Landscaping, BlueShit, RedShit, Ascension, Infiltration, LostParadise, Distant, Smoke, Symbol, BlueGuts, Handdrawn, Blue, Andrei, Distortion, CatBroom, Slain, Galaxia, Hidden, TiledSurface, Sunrise, Cosmos, TreePlain, Shattered, Worrysome, Integrity, Globe, Sailor, Gorey, SeaAnimal, Feline, MonopolyBoard, Moon, Leader, Fighter, Sideview, Hexagon, NightSky, TheTop, DoorThingIdk, Haeven, Jupiter, Weed, Seaside, Stairwell, Event, Erupt, GradedSky, BlackHole, PinkShit, LowRiverSkull, MissingTex, FlippedShape, Company, Game, GayPorn, BigFish, Dreamland, UnseenLand, Fields, Emil, Zombies, Cube2, Cubes, Spirit, Pengo, Rogue, Encounter, FlippedShape2, FlippedShape3, FlippedShape4, CityLicht, waterhall, MirrorMirror, Mall};
+	}
+	
+    static {
+        field_11581_4z516q5I9h4uBOd5Pllg8z4y2OzP501u7Fh2s93LWM7vxgc5TLD7U99yMnua = EnumArt.func_11497_0lKJM3d0zK99WfUzY2Z1yrT58EzBaCmhgS5YbRNA8P4Mv6ujoWOQJU445NQJ();
+    }
 }
--- net/minecraft/src/BlockDoor.java
+++ net/minecraft/src/BlockDoor.java
@@ -121,7 +121,6 @@
 			if(var1.getBlockId(var2, var3 - 1, var4) == this.blockID) {
 				this.onPoweredBlockChange(var1, var2, var3 - 1, var4, var5);
 			}
-
 		} else {
 			boolean var7 = (var1.getBlockMetadata(var2, var3, var4) & 4) > 0;
 			if(var7 != var5) {
@@ -136,9 +135,9 @@
 				} else {
 					var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "random.door_close", 1.0F, var1.rand.nextFloat() * 0.1F + 0.9F);
 				}
-
 			}
 		}
+
 	}
 
 	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
--- net/minecraft/src/ThreadDownloadImageData.java
+++ net/minecraft/src/ThreadDownloadImageData.java
@@ -1,13 +1,6 @@
 package net.minecraft.src;
 
-import java.awt.image.BufferedImage;
-
-public class ThreadDownloadImageData {
-	public BufferedImage image;
-	public int referenceCount = 1;
-	public int textureName = -1;
-	public boolean textureSetupComplete = false;
-
+public class ThreadDownloadImageData extends ImageHolder {
 	public ThreadDownloadImageData(String var1, ImageBuffer var2) {
 		(new ThreadDownloadImage(this, var1, var2)).start();
 	}
--- /dev/null
+++ net/minecraft/src/BlockFireOld.java
@@ -1,0 +1,225 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockFireOld extends BlockOld {
+	private int[] chanceToEncourageFire = new int[256];
+	private int[] abilityToCatchFire = new int[256];
+
+	protected BlockFireOld(int var1, int var2) {
+		super(var1, var2, Material.fire);
+		this.initializeBlock(BlockOld.planks.blockID, 5, 20);
+		this.initializeBlock(BlockOld.wood.blockID, 5, 5);
+		this.initializeBlock(BlockOld.leaves.blockID, 30, 60);
+		this.initializeBlock(BlockOld.bookshelf.blockID, 30, 20);
+		this.initializeBlock(BlockOld.tnt.blockID, 15, 100);
+		this.initializeBlock(BlockOld.cloth.blockID, 30, 60);
+		this.setTickOnLoad(true);
+	}
+
+	private void initializeBlock(int var1, int var2, int var3) {
+		this.chanceToEncourageFire[var1] = var2;
+		this.abilityToCatchFire[var1] = var3;
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 3;
+	}
+
+	public int quantityDropped(Random var1) {
+		return 0;
+	}
+
+	public int tickRate() {
+		return 10;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		if(var6 < 15) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, var6 + 1);
+			var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
+		}
+
+		if(!this.canNeighborBurn(var1, var2, var3, var4)) {
+			if(!var1.isBlockNormalCube(var2, var3 - 1, var4) || var6 > 3) {
+				var1.setBlockWithNotify(var2, var3, var4, 0);
+			}
+
+		} else if(!this.canBlockCatchFire(var1, var2, var3 - 1, var4) && var6 == 15 && var5.nextInt(4) == 0) {
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		} else {
+			if(var6 % 2 == 0 && var6 > 2) {
+				this.tryToCatchBlockOnFire(var1, var2 + 1, var3, var4, 300, var5);
+				this.tryToCatchBlockOnFire(var1, var2 - 1, var3, var4, 300, var5);
+				this.tryToCatchBlockOnFire(var1, var2, var3 - 1, var4, 200, var5);
+				this.tryToCatchBlockOnFire(var1, var2, var3 + 1, var4, 250, var5);
+				this.tryToCatchBlockOnFire(var1, var2, var3, var4 - 1, 300, var5);
+				this.tryToCatchBlockOnFire(var1, var2, var3, var4 + 1, 300, var5);
+
+				for(int var7 = var2 - 1; var7 <= var2 + 1; ++var7) {
+					for(int var8 = var4 - 1; var8 <= var4 + 1; ++var8) {
+						for(int var9 = var3 - 1; var9 <= var3 + 4; ++var9) {
+							if(var7 != var2 || var9 != var3 || var8 != var4) {
+								int var10 = 100;
+								if(var9 > var3 + 1) {
+									var10 += (var9 - (var3 + 1)) * 100;
+								}
+
+								int var11 = this.getChanceOfNeighborsEncouragingFire(var1, var7, var9, var8);
+								if(var11 > 0 && var5.nextInt(var10) <= var11) {
+									var1.setBlockWithNotify(var7, var9, var8, this.blockID);
+								}
+							}
+						}
+					}
+				}
+			}
+
+		}
+	}
+
+	private void tryToCatchBlockOnFire(World var1, int var2, int var3, int var4, int var5, Random var6) {
+		int var7 = this.abilityToCatchFire[var1.getBlockId(var2, var3, var4)];
+		if(var6.nextInt(var5) < var7) {
+			boolean var8 = var1.getBlockId(var2, var3, var4) == BlockOld.tnt.blockID;
+			if(var6.nextInt(2) == 0) {
+				var1.setBlockWithNotify(var2, var3, var4, this.blockID);
+			} else {
+				var1.setBlockWithNotify(var2, var3, var4, 0);
+			}
+
+			if(var8) {
+				BlockOld.tnt.onBlockDestroyedByPlayer(var1, var2, var3, var4, 0);
+			}
+		}
+
+	}
+
+	private boolean canNeighborBurn(World var1, int var2, int var3, int var4) {
+		return this.canBlockCatchFire(var1, var2 + 1, var3, var4) ? true : (this.canBlockCatchFire(var1, var2 - 1, var3, var4) ? true : (this.canBlockCatchFire(var1, var2, var3 - 1, var4) ? true : (this.canBlockCatchFire(var1, var2, var3 + 1, var4) ? true : (this.canBlockCatchFire(var1, var2, var3, var4 - 1) ? true : this.canBlockCatchFire(var1, var2, var3, var4 + 1)))));
+	}
+
+	private int getChanceOfNeighborsEncouragingFire(World var1, int var2, int var3, int var4) {
+		byte var5 = 0;
+		if(var1.getBlockId(var2, var3, var4) != 0) {
+			return 0;
+		} else {
+			int var6 = this.getChanceToEncourageFire(var1, var2 + 1, var3, var4, var5);
+			var6 = this.getChanceToEncourageFire(var1, var2 - 1, var3, var4, var6);
+			var6 = this.getChanceToEncourageFire(var1, var2, var3 - 1, var4, var6);
+			var6 = this.getChanceToEncourageFire(var1, var2, var3 + 1, var4, var6);
+			var6 = this.getChanceToEncourageFire(var1, var2, var3, var4 - 1, var6);
+			var6 = this.getChanceToEncourageFire(var1, var2, var3, var4 + 1, var6);
+			return var6;
+		}
+	}
+
+	public boolean isCollidable() {
+		return false;
+	}
+
+	public boolean canBlockCatchFire(IBlockAccess var1, int var2, int var3, int var4) {
+		return this.chanceToEncourageFire[var1.getBlockId(var2, var3, var4)] > 0;
+	}
+
+	public int getChanceToEncourageFire(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = this.chanceToEncourageFire[var1.getBlockId(var2, var3, var4)];
+		return var6 > var5 ? var6 : var5;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return var1.isBlockNormalCube(var2, var3 - 1, var4) || this.canNeighborBurn(var1, var2, var3, var4);
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		if(!var1.isBlockNormalCube(var2, var3 - 1, var4) && !this.canNeighborBurn(var1, var2, var3, var4)) {
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		}
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		if(!var1.isBlockNormalCube(var2, var3 - 1, var4) && !this.canNeighborBurn(var1, var2, var3, var4)) {
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		} else {
+			var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
+		}
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(var5.nextInt(24) == 0) {
+			var1.playSoundEffect((double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F), "fire.fire", 1.0F + var5.nextFloat(), var5.nextFloat() * 0.7F + 0.3F);
+		}
+
+		int var6;
+		float var7;
+		float var8;
+		float var9;
+		if(!var1.isBlockNormalCube(var2, var3 - 1, var4) && !BlockOld.fire.canBlockCatchFire(var1, var2, var3 - 1, var4)) {
+			if(BlockOld.fire.canBlockCatchFire(var1, var2 - 1, var3, var4)) {
+				for(var6 = 0; var6 < 2; ++var6) {
+					var7 = (float)var2 + var5.nextFloat() * 0.1F;
+					var8 = (float)var3 + var5.nextFloat();
+					var9 = (float)var4 + var5.nextFloat();
+					var1.spawnParticle("largesmoke", (double)var7, (double)var8, (double)var9, 0.0D, 0.0D, 0.0D);
+				}
+			}
+
+			if(BlockOld.fire.canBlockCatchFire(var1, var2 + 1, var3, var4)) {
+				for(var6 = 0; var6 < 2; ++var6) {
+					var7 = (float)(var2 + 1) - var5.nextFloat() * 0.1F;
+					var8 = (float)var3 + var5.nextFloat();
+					var9 = (float)var4 + var5.nextFloat();
+					var1.spawnParticle("largesmoke", (double)var7, (double)var8, (double)var9, 0.0D, 0.0D, 0.0D);
+				}
+			}
+
+			if(BlockOld.fire.canBlockCatchFire(var1, var2, var3, var4 - 1)) {
+				for(var6 = 0; var6 < 2; ++var6) {
+					var7 = (float)var2 + var5.nextFloat();
+					var8 = (float)var3 + var5.nextFloat();
+					var9 = (float)var4 + var5.nextFloat() * 0.1F;
+					var1.spawnParticle("largesmoke", (double)var7, (double)var8, (double)var9, 0.0D, 0.0D, 0.0D);
+				}
+			}
+
+			if(BlockOld.fire.canBlockCatchFire(var1, var2, var3, var4 + 1)) {
+				for(var6 = 0; var6 < 2; ++var6) {
+					var7 = (float)var2 + var5.nextFloat();
+					var8 = (float)var3 + var5.nextFloat();
+					var9 = (float)(var4 + 1) - var5.nextFloat() * 0.1F;
+					var1.spawnParticle("largesmoke", (double)var7, (double)var8, (double)var9, 0.0D, 0.0D, 0.0D);
+				}
+			}
+
+			if(BlockOld.fire.canBlockCatchFire(var1, var2, var3 + 1, var4)) {
+				for(var6 = 0; var6 < 2; ++var6) {
+					var7 = (float)var2 + var5.nextFloat();
+					var8 = (float)(var3 + 1) - var5.nextFloat() * 0.1F;
+					var9 = (float)var4 + var5.nextFloat();
+					var1.spawnParticle("largesmoke", (double)var7, (double)var8, (double)var9, 0.0D, 0.0D, 0.0D);
+				}
+			}
+		} else {
+			for(var6 = 0; var6 < 3; ++var6) {
+				var7 = (float)var2 + var5.nextFloat();
+				var8 = (float)var3 + var5.nextFloat() * 0.5F + 0.5F;
+				var9 = (float)var4 + var5.nextFloat();
+				var1.spawnParticle("largesmoke", (double)var7, (double)var8, (double)var9, 0.0D, 0.0D, 0.0D);
+			}
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandMatFullbright.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandMatFullbright extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8567_6ULnph1TG62vdcEFU8pdKlVfR8XNyX9qh12LpPD28Mkm7NqkJ52wJhupXR5C;
+    
+    CommandMatFullbright(final CommandManager abb) {
+        this.field_8567_6ULnph1TG62vdcEFU8pdKlVfR8XNyX9qh12LpPD28Mkm7NqkJ52wJhupXR5C = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        ScreenDebugMenu.field_7960_2AJG81m1pl0O5bhn2XiQ37CD76Uoi3M5l8gTKvm6mx16vAu3Ik5oCR8W6P15 = ((int)arr[0] == 1);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "" + (int)(ScreenDebugMenu.field_7960_2AJG81m1pl0O5bhn2XiQ37CD76Uoi3M5l8gTKvm6mx16vAu3Ik5oCR8W6P15 ? 1 : 0);
+    }
+}
--- net/minecraft/src/BlockStone.java
+++ net/minecraft/src/BlockStone.java
@@ -3,11 +3,18 @@
 import java.util.Random;
 
 public class BlockStone extends Block {
+	int dropID = -1;
+
+	public BlockStone(int var1, int var2, int var3) {
+		super(var1, var2, Material.rock);
+		this.dropID = var3;
+	}
+
 	public BlockStone(int var1, int var2) {
 		super(var1, var2, Material.rock);
 	}
 
 	public int idDropped(int var1, Random var2) {
-		return Block.cobblestone.blockID;
+		return this.dropID == -1 ? Block.cobblestone.blockID : this.dropID;
 	}
 }
--- /dev/null
+++ net/minecraft/src/GuiEssenceTransformer.java
@@ -1,0 +1,89 @@
+package net.minecraft.src;
+
+import org.lwjgl.opengl.GL11;
+
+public class GuiEssenceTransformer extends GuiContainer {
+	public EssenceTransformerInventoryCB craftingInventory = new EssenceTransformerInventoryCB();
+
+	public void initGui() {
+		this.controlList.clear();
+		this.controlList.add(new SliderConfirm(this, 0, this.width / 2 + 7, this.height / 2 - 25, 75, "Confirm >>", 0.0F));
+		((GuiButton)this.controlList.get(0)).enabled = true;
+	}
+
+	public GuiEssenceTransformer(InventoryPlayer var1) {
+		this.initGui();
+
+		int var2;
+		int var3;
+		for(var2 = 0; var2 < 3; ++var2) {
+			for(var3 = 0; var3 < 3; ++var3) {
+				this.inventorySlots.add(new SlotInventory(this, this.craftingInventory.craftMatrix, var3 + var2 * 3, 30 + var3 * 18, 17 + var2 * 18));
+			}
+		}
+
+		this.inventorySlots.add(new SlotInventory(this, this.craftingInventory.craftResult, 0, 138, 35));
+		this.inventorySlots.add(new SlotInventory(this, this.craftingInventory.craftResult, 1, 102, 35));
+
+		for(var2 = 0; var2 < 3; ++var2) {
+			for(var3 = 0; var3 < 9; ++var3) {
+				this.inventorySlots.add(new SlotInventory(this, var1, var3 + (var2 + 1) * 9, 8 + var3 * 18, 84 + var2 * 18));
+			}
+		}
+
+		for(var2 = 0; var2 < 9; ++var2) {
+			this.inventorySlots.add(new SlotInventory(this, var1, var2, 8 + var2 * 18, 142));
+		}
+
+	}
+
+	public void sliderReleasedOn1() {
+		if(this.craftingInventory.craftResult.stackResult[1] == null && this.craftingInventory.craftResult.stackResult[0] == null) {
+			int var1;
+			for(var1 = 0; var1 != 9; ++var1) {
+				this.craftingInventory.craftMatrix.stackList[var1] = null;
+			}
+
+			this.craftingInventory.craftResult.stackResult[0] = null;
+			this.craftingInventory.craftResult.stackResult[1] = null;
+			var1 = this.craftingInventory.currentEssenceVal;
+			int var2 = 0;
+			if(var1 > 64) {
+				var2 = var1 / 9;
+				var1 %= 9;
+			}
+
+			InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10944_2EWN3F9cOeZLc1s1Wh3Y3X5G88vSKS70wXa1x0jY361oZ36mAnvM2vYHm7oe.func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(new Object[]{this, Integer.valueOf(this.craftingInventory.currentEssenceVal)});
+			if(var2 != 0) {
+				this.craftingInventory.craftResult.stackResult[1] = new ItemStack(ExtBlocks.EssenceBlock, var2);
+			}
+
+			if(var1 != 0) {
+				this.craftingInventory.craftResult.stackResult[0] = new ItemStack(ExtItems.essence, var1);
+			}
+
+			this.craftingInventory.currentEssenceVal = 0;
+		}
+	}
+
+	public void onGuiClosed() {
+		super.onGuiClosed();
+		this.craftingInventory.onCraftGuiClosed(this.mc.thePlayer);
+	}
+
+	protected void drawGuiContainerForegroundLayer() {
+		this.fontRenderer.drawString("Essence Transformer", 30, 6, 16777215);
+		this.fontRenderer.drawString("Essence Value:", 90, 16, 16777215);
+		this.fontRenderer.drawString(this.craftingInventory.currentEssenceVal + "e", 90, 26, 16777215);
+		this.fontRenderer.drawString("Inventory", 8, this.ySize - 96 + 2, 16777215);
+	}
+
+	protected void drawGuiContainerBackgroundLayer(float var1) {
+		int var2 = this.mc.renderEngine.getTexture("/gui/essencetransformer.png");
+		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+		this.mc.renderEngine.bindTexture(var2);
+		int var3 = (this.width - this.xSize) / 2;
+		int var4 = (this.height - this.ySize) / 2;
+		this.drawTexturedModalRect(var3, var4, 0, 0, this.xSize, this.ySize);
+	}
+}
--- net/minecraft/src/RenderItem.java
+++ net/minecraft/src/RenderItem.java
@@ -1,6 +1,7 @@
 package net.minecraft.src;
 
 import java.util.Random;
+import net.minecraft.client.Minecraft;
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.opengl.GL12;
 
@@ -34,12 +35,12 @@
 
 		GL11.glTranslatef((float)var2, (float)var4 + var11, (float)var6);
 		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
+		float var14;
+		float var15;
 		float var16;
-		float var17;
-		float var18;
-		if(var10.itemID < 256 && RenderBlocks.renderItemIn3d(Block.blocksList[var10.itemID].getRenderType())) {
+		if(var10.itemID < Short.MAX_VALUE && RenderBlocks.renderItemIn3d(Block.blocksList[var10.itemID].getRenderType())) {
 			GL11.glRotatef(var12, 0.0F, 1.0F, 0.0F);
-			this.loadTexture("/terrain.png");
+			this.loadTexture(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L);
 			float var27 = 0.25F;
 			if(!Block.blocksList[var10.itemID].renderAsNormalBlock() && var10.itemID != Block.stairSingle.blockID) {
 				var27 = 0.5F;
@@ -50,10 +51,10 @@
 			for(int var28 = 0; var28 < var13; ++var28) {
 				GL11.glPushMatrix();
 				if(var28 > 0) {
+					var14 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.2F / var27;
+					var15 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.2F / var27;
 					var16 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.2F / var27;
-					var17 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.2F / var27;
-					var18 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.2F / var27;
-					GL11.glTranslatef(var16, var17, var18);
+					GL11.glTranslatef(var14, var15, var16);
 				}
 
 				this.itemRenderBlocks.renderBlockOnInventory(Block.blocksList[var10.itemID]);
@@ -61,18 +62,18 @@
 			}
 		} else {
 			GL11.glScalef(0.5F, 0.5F, 0.5F);
-			int var14 = var10.getIconIndex();
-			if(var10.itemID < 256) {
-				this.loadTexture("/terrain.png");
+			int var17 = var10.getIconIndex();
+			if(var10.itemID < Short.MAX_VALUE) {
+				this.loadTexture(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L);
 			} else {
 				this.loadTexture("/gui/items.png");
 			}
 
-			Tessellator var15 = Tessellator.instance;
-			var16 = (float)(var14 % 16 * 16 + 0) / 256.0F;
-			var17 = (float)(var14 % 16 * 16 + 16) / 256.0F;
-			var18 = (float)(var14 / 16 * 16 + 0) / 256.0F;
-			float var19 = (float)(var14 / 16 * 16 + 16) / 256.0F;
+			Tessellator var18 = Tessellator.instance;
+			var14 = (float)(var17 % 16 * 16 + 0) / 256.0F;
+			var15 = (float)(var17 % 16 * 16 + 16) / 256.0F;
+			var16 = (float)(var17 / 16 * 16 + 0) / (var10.itemID < Short.MAX_VALUE ? 512.0F : 256.0F);
+			float var19 = (float)(var17 / 16 * 16 + 16) / (var10.itemID < Short.MAX_VALUE ? 512.0F : 256.0F);
 			float var20 = 1.0F;
 			float var21 = 0.5F;
 			float var22 = 0.25F;
@@ -87,13 +88,13 @@
 				}
 
 				GL11.glRotatef(180.0F - this.renderManager.playerViewY, 0.0F, 1.0F, 0.0F);
-				var15.startDrawingQuads();
-				var15.setNormal(0.0F, 1.0F, 0.0F);
-				var15.addVertexWithUV((double)(0.0F - var21), (double)(0.0F - var22), 0.0D, (double)var16, (double)var19);
-				var15.addVertexWithUV((double)(var20 - var21), (double)(0.0F - var22), 0.0D, (double)var17, (double)var19);
-				var15.addVertexWithUV((double)(var20 - var21), (double)(1.0F - var22), 0.0D, (double)var17, (double)var18);
-				var15.addVertexWithUV((double)(0.0F - var21), (double)(1.0F - var22), 0.0D, (double)var16, (double)var18);
-				var15.draw();
+				var18.startDrawingQuads();
+				var18.setNormal(0.0F, 1.0F, 0.0F);
+				var18.addVertexWithUV((double)(0.0F - var21), (double)(0.0F - var22), 0.0D, (double)var14, (double)var19);
+				var18.addVertexWithUV((double)(var20 - var21), (double)(0.0F - var22), 0.0D, (double)var15, (double)var19);
+				var18.addVertexWithUV((double)(var20 - var21), (double)(1.0F - var22), 0.0D, (double)var15, (double)var16);
+				var18.addVertexWithUV((double)(0.0F - var21), (double)(1.0F - var22), 0.0D, (double)var14, (double)var16);
+				var18.draw();
 				GL11.glPopMatrix();
 			}
 		}
@@ -104,9 +105,9 @@
 
 	public void renderItemIntoGUI(FontRenderer var1, RenderEngine var2, ItemStack var3, int var4, int var5) {
 		if(var3 != null) {
-			if(var3.itemID < 256 && RenderBlocks.renderItemIn3d(Block.blocksList[var3.itemID].getRenderType())) {
+			if(var3.itemID < Short.MAX_VALUE && RenderBlocks.renderItemIn3d(Block.blocksList[var3.itemID].getRenderType())) {
 				int var6 = var3.itemID;
-				var2.bindTexture(var2.getTexture("/terrain.png"));
+				var2.bindTexture(var2.getTexture(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L));
 				Block var7 = Block.blocksList[var6];
 				GL11.glPushMatrix();
 				GL11.glTranslatef((float)(var4 - 2), (float)(var5 + 3), 0.0F);
@@ -120,18 +121,19 @@
 				GL11.glPopMatrix();
 			} else if(var3.getIconIndex() >= 0) {
 				GL11.glDisable(GL11.GL_LIGHTING);
-				if(var3.itemID < 256) {
-					var2.bindTexture(var2.getTexture("/terrain.png"));
+				if(var3.itemID < Short.MAX_VALUE) {
+					var2.bindTexture(var2.getTexture(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L));
 				} else {
 					var2.bindTexture(var2.getTexture("/gui/items.png"));
 				}
 
-				this.renderIcon(var4, var5, var3.getIconIndex() % 16 * 16, var3.getIconIndex() / 16 * 16, 16, 16);
+				this.renderIcon(var4, var5, var3.getIconIndex() % 16 * 16, var3.getIconIndex() / 16 * 16, 16, 16, var3.itemID < Short.MAX_VALUE);
 				GL11.glEnable(GL11.GL_LIGHTING);
 			}
 
 			GL11.glEnable(GL11.GL_CULL_FACE);
 		}
+
 	}
 
 	public void renderItemOverlayIntoGUI(FontRenderer var1, RenderEngine var2, ItemStack var3, int var4, int var5) {
@@ -162,8 +164,8 @@
 				GL11.glEnable(GL11.GL_DEPTH_TEST);
 				GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 			}
-
 		}
+
 	}
 
 	private void renderQuad(Tessellator var1, int var2, int var3, int var4, int var5, int var6) {
@@ -176,17 +178,17 @@
 		var1.draw();
 	}
 
-	public void renderIcon(int var1, int var2, int var3, int var4, int var5, int var6) {
-		float var7 = 0.0F;
-		float var8 = 0.00390625F;
+	public void renderIcon(int var1, int var2, int var3, int var4, int var5, int var6, boolean var7) {
+		float var8 = 0.0F;
 		float var9 = 0.00390625F;
-		Tessellator var10 = Tessellator.instance;
-		var10.startDrawingQuads();
-		var10.addVertexWithUV((double)(var1 + 0), (double)(var2 + var6), (double)var7, (double)((float)(var3 + 0) * var8), (double)((float)(var4 + var6) * var9));
-		var10.addVertexWithUV((double)(var1 + var5), (double)(var2 + var6), (double)var7, (double)((float)(var3 + var5) * var8), (double)((float)(var4 + var6) * var9));
-		var10.addVertexWithUV((double)(var1 + var5), (double)(var2 + 0), (double)var7, (double)((float)(var3 + var5) * var8), (double)((float)(var4 + 0) * var9));
-		var10.addVertexWithUV((double)(var1 + 0), (double)(var2 + 0), (double)var7, (double)((float)(var3 + 0) * var8), (double)((float)(var4 + 0) * var9));
-		var10.draw();
+		float var10 = 1.0F / (var7 ? 512.0F : 256.0F);
+		Tessellator var11 = Tessellator.instance;
+		var11.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+		var11.addVertexWithUV((double)(var1 + 0), (double)(var2 + var6), (double)var8, (double)((float)(var3 + 0) * var9), (double)((float)(var4 + var6) * var10));
+		var11.addVertexWithUV((double)(var1 + var5), (double)(var2 + var6), (double)var8, (double)((float)(var3 + var5) * var9), (double)((float)(var4 + var6) * var10));
+		var11.addVertexWithUV((double)(var1 + var5), (double)(var2 + 0), (double)var8, (double)((float)(var3 + var5) * var9), (double)((float)(var4 + 0) * var10));
+		var11.addVertexWithUV((double)(var1 + 0), (double)(var2 + 0), (double)var8, (double)((float)(var3 + 0) * var9), (double)((float)(var4 + 0) * var10));
+		var11.draw();
 	}
 
 	public void doRender(Entity var1, double var2, double var4, double var6, float var8, float var9) {
--- /dev/null
+++ net/minecraft/src/BlockFlameWoodDoor.java
@@ -1,0 +1,14 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockFlameWoodDoor extends BlockDoor {
+	public BlockFlameWoodDoor(int var1, int var2) {
+		super(var1, Material.wood);
+		this.blockIndexInTexture = var2;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return (var1 & 8) != 0 ? 0 : ExtItems.fireWoodDoor.shiftedIndex;
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandGpu.java
@@ -1,0 +1,25 @@
+package net.minecraft.src;
+
+class CommandGpu extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8598_4sH4LS5487j4XHmJuu216WPDD6jn8958PFO6A6QYS8tGP5U2S4ACwuUQTd61;
+    
+    CommandGpu(final CommandManager abb) {
+        this.field_8598_4sH4LS5487j4XHmJuu216WPDD6jn8958PFO6A6QYS8tGP5U2S4ACwuUQTd61 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.field_7289_3R5t255Q5D6KY19uD068Mkk1B6OU9sWGPdWh8cCMUgE3jA5I39fu26h80483 = (String)arr[0];
+        InputHandler.mc.func_7251_0aCQ3QUtAn82t0f1z3JQKRAg5aNB155g64AWf0ztqf7j603OA1tsJsAwlFrq();
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return InputHandler.mc.func_7236_2E4BZaw4wUzRdqs6H26gijBXYV2x4keaA5V5idykFk39ETvee94J18B7nBcD();
+    }
+    
+    @Override
+    public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+        return false;
+    }
+}
--- /dev/null
+++ net/minecraft/src/SchemaExterior.java
@@ -1,0 +1,10 @@
+package net.minecraft.src;
+
+public class SchemaExterior {
+	public SchemaExterior(HubWorld var1, int var2, int var3, int var4) {
+	}
+
+	public void func_11005_0ot5LkL5021P1EytulSh4X8Hvu84R17PTHuefhewY5LSIN1s8L39i9O57E49() {
+		throw new UnsupportedOperationException("SchemaExterior is not implemented yet");
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockOreBlockOld.java
@@ -1,0 +1,12 @@
+package net.minecraft.src;
+
+public class BlockOreBlockOld extends BlockOld {
+	public BlockOreBlockOld(int var1, int var2) {
+		super(var1, Material.iron);
+		this.blockIndexInTexture = var2;
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 == 1 ? this.blockIndexInTexture - 16 : (var1 == 0 ? this.blockIndexInTexture + 16 : this.blockIndexInTexture);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockLeavesBaseOld.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+public class BlockLeavesBaseOld extends BlockOld {
+	protected boolean graphicsLevel;
+
+	protected BlockLeavesBaseOld(int var1, int var2, Material var3, boolean var4) {
+		super(var1, var2, var3);
+		this.graphicsLevel = var4;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean shouldSideBeRendered(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockId(var2, var3, var4);
+		return !this.graphicsLevel && var6 == this.blockID ? false : super.shouldSideBeRendered(var1, var2, var3, var4, var5);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockJukeBoxOld.java
@@ -1,0 +1,44 @@
+package net.minecraft.src;
+
+public class BlockJukeBoxOld extends BlockOld {
+	protected BlockJukeBoxOld(int var1, int var2) {
+		super(var1, var2, Material.wood);
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return this.blockIndexInTexture + (var1 == 1 ? 1 : 0);
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		if(var6 > 0) {
+			this.ejectRecord(var1, var2, var3, var4, var6);
+			return true;
+		} else {
+			return false;
+		}
+	}
+
+	public void ejectRecord(World var1, int var2, int var3, int var4, int var5) {
+		var1.playRecord((String)null, var2, var3, var4);
+		var1.setBlockMetadataWithNotify(var2, var3, var4, 0);
+		int var6 = Item.record13.shiftedIndex + var5 - 1;
+		float var7 = 0.7F;
+		double var8 = (double)(var1.rand.nextFloat() * var7) + (double)(1.0F - var7) * 0.5D;
+		double var10 = (double)(var1.rand.nextFloat() * var7) + (double)(1.0F - var7) * 0.2D + 0.6D;
+		double var12 = (double)(var1.rand.nextFloat() * var7) + (double)(1.0F - var7) * 0.5D;
+		EntityItem var14 = new EntityItem(var1, (double)var2 + var8, (double)var3 + var10, (double)var4 + var12, new ItemStack(var6));
+		var14.delayBeforeCanPickup = 10;
+		var1.spawnEntityInWorld(var14);
+	}
+
+	public void dropBlockAsItemWithChance(World var1, int var2, int var3, int var4, int var5, float var6) {
+		if(!var1.multiplayerWorld) {
+			if(var5 > 0) {
+				this.ejectRecord(var1, var2, var3, var4, var5);
+			}
+
+			super.dropBlockAsItemWithChance(var1, var2, var3, var4, var5, var6);
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandMcSandlevel.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandMcSandlevel extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8546_6Ql3TPH628AFmnPG9Udui1bIfKC0ee1Z75H1P5K4tVVUS3lRvb1SaMAipK4f;
+    
+    CommandMcSandlevel(final CommandManager abb) {
+        this.field_8546_6Ql3TPH628AFmnPG9Udui1bIfKC0ee1Z75H1P5K4tVVUS3lRvb1SaMAipK4f = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.theWorld.sandCovered = ((int)arr[0] == 1);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return InputHandler.mc.theWorld.sandCovered ? "1" : "0";
+    }
+}
--- /dev/null
+++ net/minecraft/src/GuiOptionsUnknownClass.java
@@ -1,0 +1,11 @@
+package net.minecraft.src;
+
+public class GuiOptionsUnknownClass {
+	public String field_11925_9Ru5RKiPGrWu85AybUGX8oMPo03B0m3zkt61t6dKCVEnr8y0yY74Kh1R2IVb;
+	public int[] field_11926_9f6mt94hA9p2UClP6Cr5Zgnmo0Z76O6tynyCk27MR31oKNk3vK7Snk8Fkgl8;
+
+	public GuiOptionsUnknownClass(String var1, int[] var2) {
+		this.field_11925_9Ru5RKiPGrWu85AybUGX8oMPo03B0m3zkt61t6dKCVEnr8y0yY74Kh1R2IVb = var1;
+		this.field_11926_9f6mt94hA9p2UClP6Cr5Zgnmo0Z76O6tynyCk27MR31oKNk3vK7Snk8Fkgl8 = var2;
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandMcPosthint.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandMcPosthint extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8601_600qyGvz87d0hQ9L3rd07bkN614Z1ljmu1NinT42g16lfXUW6Ml7nI8NHirz;
+    
+    CommandMcPosthint(final CommandManager abb) {
+        this.field_8601_600qyGvz87d0hQ9L3rd07bkN614Z1ljmu1NinT42g16lfXUW6Ml7nI8NHirz = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw((String)arr[1], (int)arr[0]);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- net/minecraft/src/RenderSorter.java
+++ net/minecraft/src/RenderSorter.java
@@ -2,7 +2,7 @@
 
 import java.util.Comparator;
 
-public class RenderSorter implements Comparator {
+public class RenderSorter implements Comparator<WorldRenderer> {
 	private EntityPlayer baseEntity;
 
 	public RenderSorter(EntityPlayer var1) {
@@ -15,7 +15,7 @@
 		return var3 && !var4 ? 1 : (var4 && !var3 ? -1 : (var1.distanceToEntitySquared(this.baseEntity) < var2.distanceToEntitySquared(this.baseEntity) ? 1 : -1));
 	}
 
-	public int compare(Object var1, Object var2) {
-		return this.doCompare((WorldRenderer)var1, (WorldRenderer)var2);
+	public int compare(WorldRenderer var1, WorldRenderer var2) {
+		return this.doCompare(var1, var2);
 	}
 }
--- /dev/null
+++ net/minecraft/src/WorldGenHouseSmallUnknownClass.java
@@ -1,0 +1,98 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Random;
+
+public class WorldGenHouseSmallUnknownClass {
+	public static final int field_10595_4w74pvYXa7sHUyUKm9RwA7R6dYS5l137T0iovPx6qXkyp4A654X9oYDIIiEs = 30;
+	private final WorldGenHouseSmallUnknownClass2 field_10596_14Wpy36M5dtsKprEKf2Y4vtHO5KoBlcFwIcPD7Q7b2Z320Z530icn8P8OKm8;
+	private final List<WorldGenHouseSmallUnknownClass4> field_10594_8j1Q760kpqsxwN9XC05XRk5NhDyNDLOEU5eR3ka6jY604e164oMNtSBfU03n;
+
+	public static int func_10591_06Gg7YSs1BbiPOukbWMG1FpX9uQjn5167srQmT4e4Tz1P27uh1V14O20Xg65(int var0) {
+		return var0 >= 0 ? var0 * 16 : var0 * 16 + 15;
+	}
+
+	public static boolean func_10592_030X7YBFIyq838PzbbohW0DU604Ufm6fU5P2pk1l46RcvZNy7l32uebe2559(int var0, int var1, int var2, int var3) {
+		int var4 = func_10591_06Gg7YSs1BbiPOukbWMG1FpX9uQjn5167srQmT4e4Tz1P27uh1V14O20Xg65(var0);
+		int var5 = func_10591_06Gg7YSs1BbiPOukbWMG1FpX9uQjn5167srQmT4e4Tz1P27uh1V14O20Xg65(var1);
+		return var2 <= var4 && var3 <= var5 && var2 > var4 - 16 && var3 > var5 - 16;
+	}
+
+	public WorldGenHouseSmallUnknownClass(Random var1, WorldGenHouseSmallUnknownClass2 var2) {
+		long var3 = System.currentTimeMillis();
+		this.field_10594_8j1Q760kpqsxwN9XC05XRk5NhDyNDLOEU5eR3ka6jY604e164oMNtSBfU03n = new ArrayList();
+		this.field_10596_14Wpy36M5dtsKprEKf2Y4vtHO5KoBlcFwIcPD7Q7b2Z320Z530icn8P8OKm8 = var2;
+		int[] var5 = new int[900];
+		Arrays.fill(var5, 0);
+		int var6 = 0;
+
+		boolean var7;
+		do {
+			var7 = false;
+
+			for(int var8 = 0; var8 < var5.length; ++var8) {
+				if(var5[var8] == 0) {
+					int var9 = var8 % 30;
+					int var10 = var8 / 30;
+					WorldGenHouseSmallUnknownClass2 var11 = (new WorldGenHouseSmallUnknownClass2(func_10591_06Gg7YSs1BbiPOukbWMG1FpX9uQjn5167srQmT4e4Tz1P27uh1V14O20Xg65(var2.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM), func_10591_06Gg7YSs1BbiPOukbWMG1FpX9uQjn5167srQmT4e4Tz1P27uh1V14O20Xg65(var2.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174))).func_11107_43cW0BG7D6e15UgFxhYIhnbmvR9R0GKm0lZwapr276d869pJ379mWCc345jT((var9 - 15) * 14, (var10 - 15) * 14);
+					WorldGenHouseSmallUnknownClass4 var12 = WorldGenHouseSmallUnknownClass4.func_11467_510xxO0w79ZkBWq2cMUy7UUel9V7981Kqlz3lT2pU4RuFo2N2qx8G3dE8izE(var1, var11);
+					WorldGenHouseSmallUnknownClass2 var13 = var12.func_11469_1XD49rMZ7tPLtP0CWc3LgGLFv6JSjO4Q2B8uBaPHCRWAe6cbTx3935ua6FcY();
+					boolean var14 = true;
+
+					int var15;
+					int var16;
+					label65:
+					for(var15 = 0; var15 < var13.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM; ++var15) {
+						for(var16 = 0; var16 < var13.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174; ++var16) {
+							if(var9 + var15 >= 30 || var10 + var16 >= 30 || var5[var9 + var15 + (var10 + var16) * 30] != 0) {
+								var14 = false;
+								break label65;
+							}
+						}
+					}
+
+					if(!var14) {
+						var7 = true;
+					} else {
+						++var6;
+						this.field_10594_8j1Q760kpqsxwN9XC05XRk5NhDyNDLOEU5eR3ka6jY604e164oMNtSBfU03n.add(var12);
+
+						for(var15 = 0; var15 < var13.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM; ++var15) {
+							for(var16 = 0; var16 < var13.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174; ++var16) {
+								var5[var9 + var15 + (var10 + var16) * 30] = var6;
+							}
+						}
+					}
+				}
+			}
+		} while(var7);
+
+	}
+
+	public void func_10593_9T6PaAkH5j21yXgxCz0Ky7LkSL657x54i6JmNXG0p2PDYoP5H2HS678A5k0f(World var1, int var2, int var3) {
+		ArrayList var4 = new ArrayList();
+		Iterator var5 = this.field_10594_8j1Q760kpqsxwN9XC05XRk5NhDyNDLOEU5eR3ka6jY604e164oMNtSBfU03n.iterator();
+
+		WorldGenHouseSmallUnknownClass4 var6;
+		while(var5.hasNext()) {
+			var6 = (WorldGenHouseSmallUnknownClass4)var5.next();
+			WorldGenHouseSmallUnknownClass2 var7 = var6.func_11466_770WwnPt75L6J8UguFyXX1ITRtqTVRYMUSrCy1V0cX98wO01Qc5EpwKsvcM9();
+			int var8 = var7.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM - func_10591_06Gg7YSs1BbiPOukbWMG1FpX9uQjn5167srQmT4e4Tz1P27uh1V14O20Xg65(var2);
+			int var9 = var7.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 - func_10591_06Gg7YSs1BbiPOukbWMG1FpX9uQjn5167srQmT4e4Tz1P27uh1V14O20Xg65(var3);
+			if(var8 <= 0 && var9 <= 0 && var8 >= -29 && var9 >= -29 && var6.func_11468_5FEqwXoAtY7AI1e7tv5jsIS2I33Pxp03S2iKy3TijST5d36Zh4iU6YGR536H(var1, var2, var3)) {
+				var4.add(var6);
+			}
+		}
+
+		var5 = var4.iterator();
+
+		while(var5.hasNext()) {
+			var6 = (WorldGenHouseSmallUnknownClass4)var5.next();
+			this.field_10594_8j1Q760kpqsxwN9XC05XRk5NhDyNDLOEU5eR3ka6jY604e164oMNtSBfU03n.remove(var6);
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/RenderHub.java
@@ -1,0 +1,88 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+import org.lwjgl.opengl.GL11;
+
+public class RenderHub extends RenderGlobal {
+	public void RenderHub(Minecraft var1, RenderEngine var2) {
+		super.RenderHub(var1, var2);
+	}
+
+	public void renderSky(float var1) {
+		if(!(InputHandler.mc.theWorld instanceof HubWorld)) {
+			super.renderSky(var1);
+		} else {
+			int var2 = this.renderEngine.getTexture("/terrain/hub_parallax3.png");
+			Tessellator var3 = Tessellator.instance;
+			float var4 = 100.0F;
+			GL11.glRotatef(0.0F, 0.0F, 0.0F, 1.0F);
+			GL11.glRotatef(0.0F, 0.0F, 1.0F, 0.0F);
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var2);
+			var3.startDrawingQuads();
+			var3.addVertexWithUV((double)(-var4), 100.0D, (double)(-var4), 0.0D, 0.0D);
+			var3.addVertexWithUV((double)var4, 100.0D, (double)(-var4), 1.0D, 0.0D);
+			var3.addVertexWithUV((double)var4, 100.0D, (double)var4, 1.0D, 1.0D);
+			var3.addVertexWithUV((double)(-var4), 100.0D, (double)var4, 0.0D, 1.0D);
+			var3.draw();
+			GL11.glRotatef(90.0F, 0.0F, 0.0F, 1.0F);
+			var3.startDrawingQuads();
+			var3.addVertexWithUV((double)(-var4), 100.0D, (double)(-var4), 0.0D, 0.0D);
+			var3.addVertexWithUV((double)var4, 100.0D, (double)(-var4), 1.0D, 0.0D);
+			var3.addVertexWithUV((double)var4, 100.0D, (double)var4, 1.0D, 1.0D);
+			var3.addVertexWithUV((double)(-var4), 100.0D, (double)var4, 0.0D, 1.0D);
+			var3.draw();
+			GL11.glRotatef(90.0F, 0.0F, 0.0F, 1.0F);
+			var3.startDrawingQuads();
+			var3.addVertexWithUV((double)(-var4), 100.0D, (double)(-var4), 0.0D, 0.0D);
+			var3.addVertexWithUV((double)var4, 100.0D, (double)(-var4), 1.0D, 0.0D);
+			var3.addVertexWithUV((double)var4, 100.0D, (double)var4, 1.0D, 1.0D);
+			var3.addVertexWithUV((double)(-var4), 100.0D, (double)var4, 0.0D, 1.0D);
+			var3.draw();
+			GL11.glRotatef(90.0F, 0.0F, 0.0F, 1.0F);
+			var3.startDrawingQuads();
+			var3.addVertexWithUV((double)(-var4), 100.0D, (double)(-var4), 0.0D, 0.0D);
+			var3.addVertexWithUV((double)var4, 100.0D, (double)(-var4), 1.0D, 0.0D);
+			var3.addVertexWithUV((double)var4, 100.0D, (double)var4, 1.0D, 1.0D);
+			var3.addVertexWithUV((double)(-var4), 100.0D, (double)var4, 0.0D, 1.0D);
+			var3.draw();
+			GL11.glRotatef(90.0F, 0.0F, 0.0F, 1.0F);
+			GL11.glRotatef(90.0F, 1.0F, 0.0F, 0.0F);
+			var3.startDrawingQuads();
+			var3.addVertexWithUV((double)(-var4), 100.0D, (double)(-var4), 0.0D, 0.0D);
+			var3.addVertexWithUV((double)var4, 100.0D, (double)(-var4), 1.0D, 0.0D);
+			var3.addVertexWithUV((double)var4, 100.0D, (double)var4, 1.0D, 1.0D);
+			var3.addVertexWithUV((double)(-var4), 100.0D, (double)var4, 0.0D, 1.0D);
+			var3.draw();
+			GL11.glRotatef(180.0F, 1.0F, 0.0F, 0.0F);
+			var3.startDrawingQuads();
+			var3.addVertexWithUV((double)(-var4), 100.0D, (double)(-var4), 0.0D, 0.0D);
+			var3.addVertexWithUV((double)var4, 100.0D, (double)(-var4), 1.0D, 0.0D);
+			var3.addVertexWithUV((double)var4, 100.0D, (double)var4, 1.0D, 1.0D);
+			var3.addVertexWithUV((double)(-var4), 100.0D, (double)var4, 0.0D, 1.0D);
+			var3.draw();
+			GL11.glRotatef(90.0F, 1.0F, 0.0F, 0.0F);
+		}
+
+	}
+
+	public void renderClouds(float var1) {
+		if(!(InputHandler.mc.theWorld instanceof HubWorld)) {
+			super.renderClouds(var1);
+		}
+
+	}
+
+	public void renderCloudsFancy(float var1) {
+		if(!(InputHandler.mc.theWorld instanceof HubWorld)) {
+			super.renderCloudsFancy(var1);
+		}
+
+	}
+
+	public void updateClouds() {
+		if(!(InputHandler.mc.theWorld instanceof HubWorld)) {
+			super.updateClouds();
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockIceDoor.java
@@ -1,0 +1,14 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockIceDoor extends BlockDoor {
+	public BlockIceDoor(int var1, int var2) {
+		super(var1, Material.wood);
+		this.blockIndexInTexture = var2;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return (var1 & 8) != 0 ? 0 : ExtItems.IceDoor.shiftedIndex;
+	}
+}
--- /dev/null
+++ net/minecraft/src/SQUID_GAMES.java
@@ -1,0 +1,24 @@
+package net.minecraft.src;
+
+public class SQUID_GAMES<T extends Entity> extends EntityModel<T> {
+	public static final ModelLayerLocation LAYER_LOCATION = new ModelLayerLocation(new ResourceLocation("modid", "kill_squid"), "main");
+	private final ModelPart bb_main;
+
+	public SQUID_GAMES(ModelPart var1) {
+		this.bb_main = var1.getChild("bb_main");
+	}
+
+	public static LayerDefinition createBodyLayer() {
+		MeshDefinition var0 = new MeshDefinition();
+		PartDefinition var1 = var0.getRoot();
+		var1.addOrReplaceChild("bb_main", CubeListBuilder.create().texOffs(0, 0).addBox(-6.0F, -37.0F, -6.0F, 12.0F, 18.0F, 12.0F, new CubeDeformation(0.0F)).texOffs(12, 30).addBox(-9.0F, -37.0F, -2.0F, 3.0F, 11.0F, 3.0F, new CubeDeformation(0.0F)).texOffs(0, 30).addBox(6.0F, -37.0F, -2.0F, 3.0F, 11.0F, 3.0F, new CubeDeformation(0.0F)).texOffs(24, 30).addBox(-3.0F, -19.0F, -5.0F, 2.0F, 15.0F, 2.0F, new CubeDeformation(0.0F)).texOffs(32, 30).mirror().addBox(3.0F, -19.0F, -2.0F, 2.0F, 14.0F, 2.0F, new CubeDeformation(0.0F)).mirror(false).texOffs(24, 30).mirror().addBox(1.0F, -19.0F, -5.0F, 2.0F, 15.0F, 2.0F, new CubeDeformation(0.0F)).mirror(false).texOffs(32, 30).addBox(-5.0F, -19.0F, -2.0F, 2.0F, 14.0F, 2.0F, new CubeDeformation(0.0F)).texOffs(32, 30).mirror().addBox(3.0F, -19.0F, 1.0F, 2.0F, 14.0F, 2.0F, new CubeDeformation(0.0F)).mirror(false).texOffs(32, 30).addBox(-5.0F, -19.0F, 1.0F, 2.0F, 14.0F, 2.0F, new CubeDeformation(0.0F)).texOffs(24, 30).addBox(-3.0F, -19.0F, 4.0F, 2.0F, 15.0F, 2.0F, new CubeDeformation(0.0F)).texOffs(24, 30).mirror().addBox(1.0F, -19.0F, 4.0F, 2.0F, 15.0F, 2.0F, new CubeDeformation(0.0F)).mirror(false), PartPose.offset(0.0F, 24.0F, 0.0F));
+		return LayerDefinition.create(var0, 64, 64);
+	}
+
+	public void setupAnim(T var1, float var2, float var3, float var4, float var5, float var6) {
+	}
+
+	public void renderToBuffer(PoseStack var1, VertexConsumer var2, int var3, int var4, float var5, float var6, float var7, float var8) {
+		this.bb_main.render(var1, var2, var3, var4, var5, var6, var7, var8);
+	}
+}
--- /dev/null
+++ net/minecraft/src/WorldZMSpawnWorld1.java
@@ -1,0 +1,73 @@
+package net.minecraft.src;
+
+import java.io.File;
+
+public class WorldZMSpawnWorld1 extends ZMWorld {
+	XYZv[] field_7569_0g2oBAP1g21M58g0C4R0a3bS78iiawEN1wZdSp08Z7191q7q57aJ73OctDOv = new XYZv[]{new XYZv(-299L, 86L, 155L), new XYZv(-233L, 73L, 122L), new XYZv(-234L, 87L, 57L), new XYZv(-174L, 76L, 62L), new XYZv(-177L, 83L, 99L), new XYZv(-186L, 68L, 140L)};
+	private boolean field_7567_6SzFyghBi7bgl911n8NHf189f6j7lpv9Y0fo73cx6u5M27SD4mHtePLsH44F = false;
+	private int field_7568_34g98fJMkSE6zt48Z36T847cfT3Z4963V0iVN6G97f2XbI3Kc3s8APxrbzHg = 0;
+
+	public XYZv func_7546_09CNVM2pJHfEd8I53GaO82x396qpVix0JSZqlf73zO9Itp6Z0ZM1dFPcr9r6() {
+		return new XYZv(-173L, 66L, 123L);
+	}
+
+	public WorldZMSpawnWorld1(File var1, String var2) {
+		super(var1, var2);
+		this.enemySpawnLocations.add(new WorldZMSpawn(new NamedLoc(-188, 66, 141, "house_1"), new XYZv(0L, -1L, 0L)));
+		this.enemySpawnLocations.add(new WorldZMSpawn(new NamedLoc(-188, 66, 151, "house_2"), new XYZv(0L, -1L, 0L)));
+		this.enemySpawnLocations.add(new WorldZMSpawn(new NamedLoc(-187, 67, 92, "c_1"), new XYZv(0L, -1L, 0L)));
+		this.enemySpawnLocations.add(new WorldZMSpawn(new NamedLoc(-162, 66, 109, "c_2"), new XYZv(0L, -1L, 0L)));
+		this.enemySpawnLocations.add(new WorldZMSpawn(new NamedLoc(-172, 66, 178, "other_1"), (XYZv)null));
+		this.enemySpawnLocations.add(new WorldZMSpawn(new NamedLoc(-248, 78, 158, "fountainspawn"), (XYZv)null));
+		this.func_7544_6zl5Arnowm866sQ3ny372TOkUNmzVF1HF27ODrSt9jyfg491UBi1U4DDt2Yq(new XYZv(-181L, 65L, 144L), new XYZv(-170L, 68L, 144L));
+		this.func_7544_6zl5Arnowm866sQ3ny372TOkUNmzVF1HF27ODrSt9jyfg491UBi1U4DDt2Yq(new XYZv(-181L, 65L, 130L), new XYZv(-181L, 68L, 117L));
+		this.func_7544_6zl5Arnowm866sQ3ny372TOkUNmzVF1HF27ODrSt9jyfg491UBi1U4DDt2Yq(new XYZv(-213L, 64L, 123L), new XYZv(-213L, 68L, 120L));
+		this.func_7544_6zl5Arnowm866sQ3ny372TOkUNmzVF1HF27ODrSt9jyfg491UBi1U4DDt2Yq(new XYZv(-191L, 65L, 165L), new XYZv(-191L, 68L, 160L));
+		this.func_7544_6zl5Arnowm866sQ3ny372TOkUNmzVF1HF27ODrSt9jyfg491UBi1U4DDt2Yq(new XYZv(-187L, 65L, 168L), new XYZv(-170L, 68L, 168L));
+		this.func_7544_6zl5Arnowm866sQ3ny372TOkUNmzVF1HF27ODrSt9jyfg491UBi1U4DDt2Yq(new XYZv(-172L, 65L, 115L), new XYZv(-181L, 68L, 115L));
+		this.func_7544_6zl5Arnowm866sQ3ny372TOkUNmzVF1HF27ODrSt9jyfg491UBi1U4DDt2Yq(new XYZv(-181L, 66L, 87L), new XYZv(-174L, 69L, 87L));
+		this.func_7544_6zl5Arnowm866sQ3ny372TOkUNmzVF1HF27ODrSt9jyfg491UBi1U4DDt2Yq(new XYZv(-252L, 75L, 150L), new XYZv(-248L, 82L, 148L));
+		this.func_7544_6zl5Arnowm866sQ3ny372TOkUNmzVF1HF27ODrSt9jyfg491UBi1U4DDt2Yq(new XYZv(-268L, 75L, 158L), new XYZv(-270L, 82L, 156L));
+		this.func_7544_6zl5Arnowm866sQ3ny372TOkUNmzVF1HF27ODrSt9jyfg491UBi1U4DDt2Yq(new XYZv(-217L, 76L, 156L), new XYZv(-218L, 79L, 159L));
+		this.func_7544_6zl5Arnowm866sQ3ny372TOkUNmzVF1HF27ODrSt9jyfg491UBi1U4DDt2Yq(new XYZv(-235L, 79L, 107L), new XYZv(-230L, 85L, 104L));
+		this.setBlockWithNotify(-314, 71, 159, ExtBlocks.WeaponGiverGrayGun.blockID);
+		this.setBlockWithNotify(-314, 71, 157, 167);
+		Ext1605Utils.func_12137_4B14YTlTqWTNVpM2G9851Dyfx9DbvQPLa5I81ItD974L7kJ315Qu8EP49Cg9(this, new XYZv(-340L, 60L, 159L), new XYZv(-340L, 67L, 172L), 0, ExtBlocks.BarrierBlock.blockID);
+		XYZv[] var3 = this.field_7569_0g2oBAP1g21M58g0C4R0a3bS78iiawEN1wZdSp08Z7191q7q57aJ73OctDOv;
+		int var4 = var3.length;
+
+		for(int var5 = 0; var5 < var4; ++var5) {
+			XYZv var6 = var3[var5];
+			this.setBlockWithNotify((int)var6.x, (int)var6.y, (int)var6.z, 0);
+		}
+
+	}
+
+	public void func_7550_1TEi6UNf3SwyaU3NIC3s8C7gZNGcTG9vFQGy5qOc4gI9AwjR87h7g68M37B3(XYZv var1, int var2) {
+		if(var1.func_11871_4RIxa4425GeFc7bSJ4pOTa6PYnO0fKP5EOCLB0Ntkt78v4xuQKdo35x8q1y5(new XYZv(-314L, 71L, 159L))) {
+			this.field_7567_6SzFyghBi7bgl911n8NHf189f6j7lpv9Y0fo73cx6u5M27SD4mHtePLsH44F = true;
+			this.setBlockWithNotify(-314, 71, 159, 0);
+			InputHandler.mc.sndManager.playSoundFX("ext.notif", 1.0F, 0.0F);
+			InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("0/6", 2000);
+			XYZv[] var3 = this.field_7569_0g2oBAP1g21M58g0C4R0a3bS78iiawEN1wZdSp08Z7191q7q57aJ73OctDOv;
+			int var4 = var3.length;
+
+			for(int var5 = 0; var5 < var4; ++var5) {
+				XYZv var6 = var3[var5];
+				this.setBlockWithNotify((int)var6.x, (int)var6.y, (int)var6.z, ExtBlocks.WeaponGiverGrayGun.blockID);
+			}
+		} else if(this.field_7567_6SzFyghBi7bgl911n8NHf189f6j7lpv9Y0fo73cx6u5M27SD4mHtePLsH44F) {
+			InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw(++this.field_7568_34g98fJMkSE6zt48Z36T847cfT3Z4963V0iVN6G97f2XbI3Kc3s8APxrbzHg + "/6", 2000);
+			this.setBlockWithNotify((int)var1.x, (int)var1.y, (int)var1.z, 0);
+			InputHandler.mc.sndManager.playSoundFX("ext.notif", 1.0F, 0.0F);
+			this.playSoundEffect((double)var1.x, (double)var1.y, (double)var1.z, "random.glass", 1.0F, 0.0F);
+			if(this.field_7568_34g98fJMkSE6zt48Z36T847cfT3Z4963V0iVN6G97f2XbI3Kc3s8APxrbzHg == 6) {
+				this.setBlockWithNotify(-314, 71, 157, 0);
+				this.playSoundEffect(-314.0D, 71.0D, 157.0D, "random.glass", 1.0F, 0.0F);
+				InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10949_90L26at7gGnz0J8Af23lCTpFsYX1JLxXD3R7KOPeOnNw65r9paK3i34TuD8w.func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(new Object[]{this, Integer.valueOf(this.field_7568_34g98fJMkSE6zt48Z36T847cfT3Z4963V0iVN6G97f2XbI3Kc3s8APxrbzHg)});
+			}
+		}
+
+		ExtLogger.i(var1.toString());
+	}
+}
--- /dev/null
+++ net/minecraft/src/ItemGrayGun.java
@@ -1,0 +1,23 @@
+package net.minecraft.src;
+
+public class ItemGrayGun extends Item {
+	public ItemGrayGun(int var1) {
+		super(var1);
+		this.maxStackSize = 1;
+	}
+
+	public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+		if(var3 instanceof EntityPlayerZombieModeClient) {
+			if(((InventoryVendingMachine)var3.inventory).field_8689_3p0gv43cL7j25sTw85c9cXfcP4HTk7W010VdL2XjgPV7V0w2R2sQvYNjSAja > 10) {
+				((InventoryVendingMachine)var3.inventory).field_8689_3p0gv43cL7j25sTw85c9cXfcP4HTk7W010VdL2XjgPV7V0w2R2sQvYNjSAja -= 10;
+				var2.playSoundAtEntity(var3, "ext1605.neutralspecial", 1.0F, 1.0F / (rand.nextFloat() * 0.4F + 0.8F));
+				var2.spawnEntityInWorld(new EntityEssenceProjectileUnknownClass(var2, var3));
+			}
+		} else if(var3.inventory.consumeInventoryItem(ExtItems.essence.shiftedIndex)) {
+			var2.playSoundAtEntity(var3, "ext1605.neutralspecial", 1.0F, 1.0F / (rand.nextFloat() * 0.4F + 0.8F));
+			var2.spawnEntityInWorld(new EntityEssenceProjectileUnknownClass(var2, var3));
+		}
+
+		return var1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/GuiAltMultiplayer.java
@@ -1,0 +1,79 @@
+package net.minecraft.src;
+
+public class GuiAltMultiplayer extends GuiScreen {
+	private GuiScreen parentScreen;
+	private int updateCounter = 0;
+	private String ipText = "";
+
+	public GuiAltMultiplayer(GuiScreen var1) {
+		this.parentScreen = var1;
+	}
+
+	public void updateScreen() {
+		++this.updateCounter;
+	}
+
+	public void initGui() {
+		this.controlList.clear();
+		this.controlList.add(new GuiButton(0, this.width / 2 - 100, this.height / 4 + 96 + 12, "Connect"));
+		this.controlList.add(new GuiButton(1, this.width / 2 - 100, this.height / 4 + 120 + 12, "Cancel"));
+		((GuiButton)this.controlList.get(0)).enabled = false;
+	}
+
+	protected void actionPerformed(GuiButton var1) {
+		if(var1.enabled) {
+			if(var1.id == 1) {
+				this.mc.displayGuiScreen(this.parentScreen);
+			} else if(var1.id == 0) {
+				String[] var2 = this.ipText.split(":");
+			}
+		}
+
+	}
+
+	protected void keyTyped(char var1, int var2) {
+		if(var1 == 22) {
+			String var3 = GuiScreen.getClipboardString();
+			if(var3 == null) {
+				var3 = "";
+			}
+
+			int var4 = 32 - this.ipText.length();
+			if(var4 > var3.length()) {
+				var4 = var3.length();
+			}
+
+			if(var4 > 0) {
+				this.ipText = this.ipText + var3.substring(0, var4);
+			}
+		}
+
+		if(var1 == 13) {
+			this.actionPerformed((GuiButton)this.controlList.get(0));
+		}
+
+		if(var2 == 14 && this.ipText.length() > 0) {
+			this.ipText = this.ipText.substring(0, this.ipText.length() - 1);
+		}
+
+		if(" !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\'abcdefghijklmnopqrstuvwxyz{|}~\u2302\u00c7\u00fc\u00e9\u00e2\u00e4\u00e0\u00e5\u00e7\u00ea\u00eb\u00e8\u00ef\u00ee\u00ec\u00c4\u00c5\u00c9\u00e6\u00c6\u00f4\u00f6\u00f2\u00fb\u00f9\u00ff\u00d6\u00dc\u00f8\u00a3\u00d8\u00d7\u0192\u00e1\u00ed\u00f3\u00fa\u00f1\u00d1\u00aa\u00ba\u00bf\u00ae\u00ac\u00bd\u00bc\u00a1\u00ab\u00bb".indexOf(var1) >= 0 && this.ipText.length() < 32) {
+			this.ipText = this.ipText + var1;
+		}
+
+		((GuiButton)this.controlList.get(0)).enabled = this.ipText.length() > 0;
+	}
+
+	public void drawScreen(int var1, int var2, float var3) {
+		this.drawDefaultBackground();
+		this.drawCenteredString(this.fontRenderer, "##############", this.width / 2, this.height / 4 - 60 + 20, 16777215);
+		drawString(this.fontRenderer, "#################################", this.width / 2 - 140, this.height / 4 - 60 + 60 + 0, 10526880);
+		int var4 = this.width / 2 - 100;
+		int var5 = this.height / 4 - 10 + 50 + 18;
+		short var6 = 200;
+		byte var7 = 20;
+		drawRect(var4 - 1, var5 - 1, var4 + var6 + 1, var5 + var7 + 1, -6250336);
+		drawRect(var4, var5, var4 + var6, var5 + var7, -16777216);
+		drawString(this.fontRenderer, this.ipText + (this.updateCounter / 6 % 2 == 0 ? "_" : ""), var4 + 4, var5 + (var7 - 8) / 2, 14737632);
+		super.drawScreen(var1, var2, var3);
+	}
+}
--- /dev/null
+++ net/minecraft/src/NetworkLocation.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+import java.net.InetSocketAddress;
+import java.util.Arrays;
+
+public class NetworkLocation {
+	public String field_9817_37049353O7B1gM3wO60gA12oJ8K3V78sEIfGg7Rh05gJ9xxp8t26kOOC5X98;
+	public int field_9818_3NlaE0FJ00EAa6rG0jNPh6XTohgUfb7TCEkeHePUhVNt6I96mw1NRr1pfpCk;
+
+	public NetworkLocation(InetSocketAddress var1) {
+		this.field_9817_37049353O7B1gM3wO60gA12oJ8K3V78sEIfGg7Rh05gJ9xxp8t26kOOC5X98 = var1.getAddress().getHostAddress();
+		this.field_9818_3NlaE0FJ00EAa6rG0jNPh6XTohgUfb7TCEkeHePUhVNt6I96mw1NRr1pfpCk = var1.getPort();
+	}
+
+	public int func_9816_2x0acOjuTTpK4OJWkVSraAOSw60K40SH908itmm7PawcvTN8Ic7280XzUhVj() {
+		String var1 = Arrays.toString(this.field_9817_37049353O7B1gM3wO60gA12oJ8K3V78sEIfGg7Rh05gJ9xxp8t26kOOC5X98.split("\\."));
+		System.out.println("Returned " + var1);
+		return Integer.parseInt(var1);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockTorchOld.java
@@ -1,0 +1,166 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockTorchOld extends BlockOld {
+	protected BlockTorchOld(int var1, int var2) {
+		super(var1, var2, Material.circuits);
+		this.setTickOnLoad(true);
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 2;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return var1.isBlockNormalCube(var2 - 1, var3, var4) ? true : (var1.isBlockNormalCube(var2 + 1, var3, var4) ? true : (var1.isBlockNormalCube(var2, var3, var4 - 1) ? true : (var1.isBlockNormalCube(var2, var3, var4 + 1) ? true : var1.isBlockNormalCube(var2, var3 - 1, var4))));
+	}
+
+	public void onBlockPlaced(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		if(var5 == 1 && var1.isBlockNormalCube(var2, var3 - 1, var4)) {
+			var6 = 5;
+		}
+
+		if(var5 == 2 && var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+			var6 = 4;
+		}
+
+		if(var5 == 3 && var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+			var6 = 3;
+		}
+
+		if(var5 == 4 && var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+			var6 = 2;
+		}
+
+		if(var5 == 5 && var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+			var6 = 1;
+		}
+
+		var1.setBlockMetadataWithNotify(var2, var3, var4, var6);
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		super.updateTick(var1, var2, var3, var4, var5);
+		if(var1.getBlockMetadata(var2, var3, var4) == 0) {
+			this.onBlockAdded(var1, var2, var3, var4);
+		}
+
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		if(var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 1);
+		} else if(var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 2);
+		} else if(var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 3);
+		} else if(var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 4);
+		} else if(var1.isBlockNormalCube(var2, var3 - 1, var4)) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 5);
+		}
+
+		this.checkIfAttachedToBlock(var1, var2, var3, var4);
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		if(this.checkIfAttachedToBlock(var1, var2, var3, var4)) {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			boolean var7 = false;
+			if(!var1.isBlockNormalCube(var2 - 1, var3, var4) && var6 == 1) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2 + 1, var3, var4) && var6 == 2) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3, var4 - 1) && var6 == 3) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3, var4 + 1) && var6 == 4) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3 - 1, var4) && var6 == 5) {
+				var7 = true;
+			}
+
+			if(var7) {
+				this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+				var1.setBlockWithNotify(var2, var3, var4, 0);
+			}
+		}
+
+	}
+
+	private boolean checkIfAttachedToBlock(World var1, int var2, int var3, int var4) {
+		if(!this.canPlaceBlockAt(var1, var2, var3, var4)) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	public MovingObjectPosition collisionRayTrace(World var1, int var2, int var3, int var4, Vec3D var5, Vec3D var6) {
+		int var7 = var1.getBlockMetadata(var2, var3, var4) & 7;
+		float var8 = 0.15F;
+		if(var7 == 1) {
+			this.setBlockBounds(0.0F, 0.2F, 0.5F - var8, var8 * 2.0F, 0.8F, 0.5F + var8);
+		} else if(var7 == 2) {
+			this.setBlockBounds(1.0F - var8 * 2.0F, 0.2F, 0.5F - var8, 1.0F, 0.8F, 0.5F + var8);
+		} else if(var7 == 3) {
+			this.setBlockBounds(0.5F - var8, 0.2F, 0.0F, 0.5F + var8, 0.8F, var8 * 2.0F);
+		} else if(var7 == 4) {
+			this.setBlockBounds(0.5F - var8, 0.2F, 1.0F - var8 * 2.0F, 0.5F + var8, 0.8F, 1.0F);
+		} else {
+			var8 = 0.1F;
+			this.setBlockBounds(0.5F - var8, 0.0F, 0.5F - var8, 0.5F + var8, 0.6F, 0.5F + var8);
+		}
+
+		return super.collisionRayTrace(var1, var2, var3, var4, var5, var6);
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		double var7 = (double)((float)var2 + 0.5F);
+		double var9 = (double)((float)var3 + 0.7F);
+		double var11 = (double)((float)var4 + 0.5F);
+		double var13 = (double)0.22F;
+		double var15 = (double)0.27F;
+		if(var6 == 1) {
+			var1.spawnParticle("smoke", var7 - var15, var9 + var13, var11, 0.0D, 0.0D, 0.0D);
+			var1.spawnParticle("flame", var7 - var15, var9 + var13, var11, 0.0D, 0.0D, 0.0D);
+		} else if(var6 == 2) {
+			var1.spawnParticle("smoke", var7 + var15, var9 + var13, var11, 0.0D, 0.0D, 0.0D);
+			var1.spawnParticle("flame", var7 + var15, var9 + var13, var11, 0.0D, 0.0D, 0.0D);
+		} else if(var6 == 3) {
+			var1.spawnParticle("smoke", var7, var9 + var13, var11 - var15, 0.0D, 0.0D, 0.0D);
+			var1.spawnParticle("flame", var7, var9 + var13, var11 - var15, 0.0D, 0.0D, 0.0D);
+		} else if(var6 == 4) {
+			var1.spawnParticle("smoke", var7, var9 + var13, var11 + var15, 0.0D, 0.0D, 0.0D);
+			var1.spawnParticle("flame", var7, var9 + var13, var11 + var15, 0.0D, 0.0D, 0.0D);
+		} else {
+			var1.spawnParticle("smoke", var7, var9, var11, 0.0D, 0.0D, 0.0D);
+			var1.spawnParticle("flame", var7, var9, var11, 0.0D, 0.0D, 0.0D);
+		}
+
+	}
+}
--- net/minecraft/src/SpawnerClient.java
+++ net/minecraft/src/SpawnerClient.java
@@ -3,7 +3,7 @@
 class SpawnerClient extends SpawnerAnimals {
 	final PlayerControllerSP playerController;
 
-	SpawnerClient(PlayerControllerSP var1, int var2, Class var3, Class[] var4) {
+	SpawnerClient(PlayerControllerSP var1, int var2, Class var3, Class<? extends EntityLiving>[] var4) {
 		super(var2, var3, var4);
 		this.playerController = var1;
 	}
--- /dev/null
+++ net/minecraft/src/ItemHoursLongPastI.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+public class ItemHoursLongPastI extends Item {
+	private int field_9444_1261ip0628mg057N19XxbK0BtF5YI86RaSI8BKQcc7p1FhQG01Foq5mCDM7A = 801;
+
+	public ItemHoursLongPastI(int var1) {
+		super(var1);
+		this.maxStackSize = 1;
+	}
+
+	public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+		var2.playSoundAtEntity(var3, "ext.notif", 1.0F, 1.0F / (rand.nextFloat() * 0.4F + 0.8F));
+		GuiInGameUnknownClass2 var4 = (GuiInGameUnknownClass2)InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.field_11177_7Zksb7i503i87T27QXh6g1K1pS0mrm03cH6J60Ws3B3hciqhuD9PIOw861xp.peek();
+		if(var4 == null || var4.field_8627_0ZmECs21Yya5NZUsnBNbB5tPFhkwONMzlzVXHX4jsV5aynDc020B97BLqocx != this.field_9444_1261ip0628mg057N19XxbK0BtF5YI86RaSI8BKQcc7p1FhQG01Foq5mCDM7A) {
+			InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11171_604vK63ksNcNlyaekc36K9YTmY8326K6noo7h77989I2TsYQ61KM5M25Nii9("Hours Long Past I \nCenturies upon Centuries ago, the world was nothing but shallow tidal pools \nand rock. Simple beings dwelled within - And were content in their ever so \ntemperate Paradise.", 20000, this.field_9444_1261ip0628mg057N19XxbK0BtF5YI86RaSI8BKQcc7p1FhQG01Foq5mCDM7A);
+		}
+
+		return var1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandConRefresh.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+class CommandConRefresh extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8584_59upxRquVby9ygIBFeg2c9e29905cu29JhN4FbM80hyns32WJLOII8c2NBi7;
+    
+    CommandConRefresh(final CommandManager abb) {
+        this.field_8584_59upxRquVby9ygIBFeg2c9e29905cu29JhN4FbM80hyns32WJLOII8c2NBi7 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        this.field_8584_59upxRquVby9ygIBFeg2c9e29905cu29JhN4FbM80hyns32WJLOII8c2NBi7.field_12073_0iqOuoZgC116WGpSB1E8h6gYyzW4BIQI3nCQmb4kRXV3H1cDIrlUZ7MOVIxf.clear();
+        this.field_8584_59upxRquVby9ygIBFeg2c9e29905cu29JhN4FbM80hyns32WJLOII8c2NBi7.func_12060_2N8lggB3Ex84Toh6NAyZR3Jnms86ir0MO35KZ66K1G6RzeQubR99KXYq62k0();
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- net/minecraft/src/GuiErrorScreen.java
+++ net/minecraft/src/GuiErrorScreen.java
@@ -8,7 +8,7 @@
 	}
 
 	public void drawScreen(int var1, int var2, float var3) {
-		this.drawGradientRect(0, 0, this.width, this.height, -12574688, -11530224);
+		drawGradientRect(0, 0, this.width, this.height, -12574688, -11530224);
 		this.drawCenteredString(this.fontRenderer, this.title, this.width / 2, 90, 16777215);
 		this.drawCenteredString(this.fontRenderer, this.text, this.width / 2, 110, 16777215);
 		super.drawScreen(var1, var2, var3);
--- /dev/null
+++ net/minecraft/src/CommandSysexecUnlock.java
@@ -1,0 +1,26 @@
+package net.minecraft.src;
+
+class CommandSysexecUnlock extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8563_2C84426j5keNFqbh0Ly7RPoJmFui7FtTLwhioMoqUiSz0AQ36GNQRtc7pOU4;
+    
+    CommandSysexecUnlock(final CommandManager abb) {
+        this.field_8563_2C84426j5keNFqbh0Ly7RPoJmFui7FtTLwhioMoqUiSz0AQ36GNQRtc7pOU4 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (this.field_8563_2C84426j5keNFqbh0Ly7RPoJmFui7FtTLwhioMoqUiSz0AQ36GNQRtc7pOU4.field_12075_28FdWuxC13fShF99oFUZRa9Zk8Ur8d7gsfw157Cj6qaqjdwi8sD2yQP7IySf) {
+            this.field_8563_2C84426j5keNFqbh0Ly7RPoJmFui7FtTLwhioMoqUiSz0AQ36GNQRtc7pOU4.field_12071_8Mn4tj13vIyC6B4sKvgNU753iaUwsGLVW462dSPrK3Q6u34DDVgN8g4gP3Sg = true;
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+    
+    @Override
+    public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+        return false;
+    }
+}
--- /dev/null
+++ net/minecraft/src/HubFragmentHallwayFwd.java
@@ -1,0 +1,18 @@
+package net.minecraft.src;
+
+import java.util.Arrays;
+import java.util.List;
+
+public class HubFragmentHallwayFwd implements HubFragment {
+	public List<XYZv> generateAt(World var1, XYZv var2) {
+		Ext1605Utils.fillBlock(var1, var2, var2.add((new XYZv(5L, 0L, 5L)).rotateAroundXP(var2.v)), ExtBlocks.dimensionFloorBlock.blockID);
+		Ext1605Utils.fillBlock(var1, var2.add((new XYZv(0L, 1L, 0L)).rotateAroundXP(var2.v)), var2.add((new XYZv(5L, 4L, 0L)).rotateAroundXP(var2.v)), ExtBlocks.dimensionWallBlock.blockID);
+		Ext1605Utils.fillBlock(var1, var2.add((new XYZv(0L, 1L, 5L)).rotateAroundXP(var2.v)), var2.add((new XYZv(5L, 4L, 5L)).rotateAroundXP(var2.v)), ExtBlocks.dimensionWallBlock.blockID);
+		Ext1605Utils.fillBlock(var1, var2, var2, ExtBlocks.woolPink.blockID + var2.v.direction);
+		return Arrays.asList(new XYZv[]{var2.add((new XYZv(6L, 0L, 0L)).rotateAroundXP(var2.v))});
+	}
+
+	public boolean canGenerateAt(World var1, XYZv var2) {
+		return Ext1605Utils.RTForBlocks(var1, var2.add(0L, 1L, 0L), var2.v, 6);
+	}
+}
--- net/minecraft/src/NBTTagCompound.java
+++ net/minecraft/src/NBTTagCompound.java
@@ -3,12 +3,13 @@
 import java.io.DataInput;
 import java.io.DataOutput;
 import java.io.IOException;
+import java.util.Collection;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.Map;
 
 public class NBTTagCompound extends NBTBase {
-	private Map tagMap = new HashMap();
+	private Map<String, NBTBase> tagMap = new HashMap();
 
 	void writeTagContents(DataOutput var1) throws IOException {
 		Iterator var2 = this.tagMap.values().iterator();
@@ -32,6 +33,10 @@
 
 			this.tagMap.put(var2.getKey(), var2);
 		}
+	}
+
+	public Collection<NBTBase> func_9925_7Nmdbr2ySWTWPYBjFFp2Pj5o350YfKPz3M4LF0Uy1488hQ70sr9S06Q7XbE6() {
+		return this.tagMap.values();
 	}
 
 	public byte getType() {
--- net/minecraft/src/EntityItem.java
+++ net/minecraft/src/EntityItem.java
@@ -2,11 +2,14 @@
 
 public class EntityItem extends Entity {
 	public ItemStack item;
-	private int age2;
 	public int age = 0;
 	public int delayBeforeCanPickup;
 	private int health = 5;
 	public float hoverStart = (float)(Math.random() * Math.PI * 2.0D);
+	private int prevX = Integer.MAX_VALUE;
+	private int prevY = Integer.MAX_VALUE;
+	private int prevZ = Integer.MAX_VALUE;
+	private int essenceFountainEffectStrength = 0;
 
 	public EntityItem(World var1, double var2, double var4, double var6, ItemStack var8) {
 		super(var1);
@@ -36,7 +39,12 @@
 		this.prevPosX = this.posX;
 		this.prevPosY = this.posY;
 		this.prevPosZ = this.posZ;
-		this.motionY -= (double)0.04F;
+		if(this.essenceFountainEffectStrength > 0) {
+			this.motionY += (double)0.2F;
+		} else {
+			this.motionY -= (double)0.04F;
+		}
+
 		if(this.worldObj.getBlockMaterial(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY), MathHelper.floor_double(this.posZ)) == Material.lava) {
 			this.motionY = (double)0.2F;
 			this.motionX = (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.2F);
@@ -48,9 +56,10 @@
 		this.handleWaterMovement();
 		this.moveEntity(this.motionX, this.motionY, this.motionZ);
 		float var1 = 0.98F;
-		if(this.onGround) {
+		int var2;
+		if(this.onGround && this.essenceFountainEffectStrength == 0) {
 			var1 = 0.1F * 0.1F * 58.8F;
-			int var2 = this.worldObj.getBlockId(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.boundingBox.minY) - 1, MathHelper.floor_double(this.posZ));
+			var2 = this.worldObj.getBlockId(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.boundingBox.minY) - 1, MathHelper.floor_double(this.posZ));
 			if(var2 > 0) {
 				var1 = Block.blocksList[var2].slipperiness * 0.98F;
 			}
@@ -59,16 +68,195 @@
 		this.motionX *= (double)var1;
 		this.motionY *= (double)0.98F;
 		this.motionZ *= (double)var1;
-		if(this.onGround) {
+		if(this.onGround && this.essenceFountainEffectStrength == 0) {
 			this.motionY *= -0.5D;
 		}
 
-		++this.age2;
 		++this.age;
 		if(this.age >= 6000) {
 			this.setEntityDead();
 		}
 
+		var2 = (int)Math.round(Math.floor(this.posX));
+		int var3 = (int)Math.round(Math.floor(this.posY));
+		int var4 = (int)Math.round(Math.floor(this.posZ));
+		if(var2 != this.prevX || var3 != this.prevY || var4 != this.prevZ) {
+			this.essenceFountainEffectStrength = 0;
+			if(var3 < 0) {
+				this.prevX = var2;
+				this.prevY = var3;
+				this.prevZ = var4;
+			} else {
+				byte var5 = 0;
+
+				label198:
+				for(int var6 = Math.min(var3, 128); var6 >= 0; --var6) {
+					int var7 = this.worldObj.getBlockId(var2, var6, var4);
+					if(var7 == ExtBlocks.essenceFountain.blockID) {
+						TileEntityEssenceFountain var8 = (TileEntityEssenceFountain)this.worldObj.getBlockTileEntity(var2, var6, var4);
+						boolean var9 = false;
+						boolean var10 = var8.getStackInSlot(0).stackSize > 0;
+						int var11;
+						if(this.item.itemID == ExtItems.essence.shiftedIndex && var8.getStackInSlot(0).stackSize < 64 && var6 == var3) {
+							if(!var10) {
+								this.worldObj.markBlocksDirty(var2, var6, var4, var2, var6, var4);
+							}
+
+							var10 = true;
+							if(this.item.stackSize <= 64 - var8.getStackInSlot(0).stackSize) {
+								ItemStack var10000 = var8.getStackInSlot(0);
+								var10000.stackSize += this.item.stackSize;
+								if(var8.getStackInSlot(0).stackSize == 64) {
+									this.worldObj.markBlocksDirty(var2, var3, var4, var2, var3, var4);
+								}
+
+								this.setEntityDead();
+								break;
+							}
+
+							var11 = 64 - var8.getStackInSlot(0).stackSize;
+							var8.getStackInSlot(0).stackSize = 64;
+							var9 = true;
+							this.item.stackSize -= var11;
+						}
+
+						if(var9) {
+							this.worldObj.markBlocksDirty(var2, var3, var4, var2, var3, var4);
+						}
+
+						if(!var10) {
+							break;
+						}
+
+						if(var6 > 0) {
+							var11 = this.worldObj.getBlockId(var2, var6 - 1, var4);
+							if(var11 == ExtBlocks.EssenceTransformer.blockID) {
+								var5 = 1;
+							}
+
+							if(var11 == ExtBlocks.EssenceCloner.blockID) {
+								var5 = 6;
+							}
+
+							if(var11 == Block.chest.blockID) {
+								var5 = 2;
+							}
+
+							if(var11 == Block.stoneOvenIdle.blockID || var11 == Block.stoneOvenActive.blockID) {
+								if(var8.getStackInSlot(0).stackSize == 64) {
+									var5 = 4;
+								} else {
+									var5 = 3;
+								}
+							}
+
+							if(var11 == Block.ice.blockID) {
+								var5 = 5;
+							}
+						}
+
+						switch(var5) {
+						case 0:
+							this.essenceFountainEffectStrength = var8.getStackInSlot(0).stackSize - (var3 - var6);
+							break label198;
+						case 1:
+							if(var6 != var3 || var8.getStackInSlot(0).stackSize != 64 || this.item.getItem() == ExtItems.essence) {
+								break label198;
+							}
+
+							for(var11 = this.item.getEssenceValue() * this.item.stackSize; var11 > 64; var11 -= 64) {
+								ItemStack var18 = new ItemStack(ExtItems.essence, 64);
+								EntityItem var19 = new EntityItem(this.worldObj, this.posX, this.posY, this.posZ, var18);
+								var19.motionX = this.motionX;
+								var19.motionY = this.motionY;
+								var19.motionZ = this.motionZ;
+								this.worldObj.spawnEntityInWorld(var19);
+							}
+
+							this.item = new ItemStack(ExtItems.essence, var11);
+							break label198;
+						case 2:
+							if(var6 == var3 && var8.getStackInSlot(0).stackSize == 64) {
+								TileEntityChest var16 = (TileEntityChest)this.worldObj.getBlockTileEntity(var2, var6 - 1, var4);
+								int var17 = var16.getSizeInventory();
+
+								for(int var13 = 0; var13 < var17; ++var13) {
+									ItemStack var14 = var16.getStackInSlot(var13);
+									if(var14 == null) {
+										var14 = new ItemStack(0, 0);
+									}
+
+									if(var14.itemID != 0) {
+										if(var14.itemID != this.item.itemID || var14.itemDmg != this.item.itemDmg || var14.getMaxStackSize() <= var14.stackSize) {
+											continue;
+										}
+									} else {
+										var14.itemID = this.item.itemID;
+										var14.stackSize = 0;
+									}
+
+									if(var14.stackSize == 0) {
+										var14.stackSize = this.item.stackSize;
+										this.item.stackSize = 0;
+										this.setEntityDead();
+									} else if(var14.getMaxStackSize() - var14.stackSize >= this.item.stackSize) {
+										var14.stackSize += this.item.stackSize;
+										this.item.stackSize = 0;
+										this.setEntityDead();
+									} else {
+										this.item.stackSize -= var14.getMaxStackSize() - var14.stackSize;
+										var14.stackSize = var14.getMaxStackSize();
+									}
+
+									var16.setInventorySlotContents(var13, var14);
+									if(this.item.stackSize <= 0) {
+										break label198;
+									}
+								}
+							}
+						case 3:
+						case 4:
+						default:
+							break label198;
+						case 5:
+							if(var6 == var3) {
+								this.motionX *= (double)2.3F;
+								this.motionZ *= (double)2.3F;
+							}
+							break label198;
+						case 6:
+							if(var6 == var3 && var8.getStackInSlot(0).stackSize == 64 && this.item.getItem() == ExtItems.essence && this.item.stackSize >= 9) {
+								if(this.item.stackSize % 9 == 0) {
+									this.item = new ItemStack(ExtBlocks.EssenceBlock, this.item.stackSize / 9);
+								} else {
+									ItemStack var15 = new ItemStack(ExtBlocks.EssenceBlock, this.item.stackSize / 9);
+									EntityItem var12 = new EntityItem(this.worldObj, this.posX, this.posY, this.posZ, var15);
+									var12.motionX = this.motionX;
+									var12.motionY = this.motionY;
+									var12.motionZ = this.motionZ;
+									this.worldObj.spawnEntityInWorld(var12);
+									this.item.stackSize %= 9;
+								}
+							}
+							break label198;
+						}
+					}
+
+					if(var7 != 0) {
+						break;
+					}
+				}
+
+				this.prevX = var2;
+				this.prevY = var3;
+				this.prevZ = var4;
+			}
+		}
+
+		if(this.essenceFountainEffectStrength > 0) {
+			this.motionY = (double)this.essenceFountainEffectStrength * 0.015D;
+		}
+
 	}
 
 	public boolean handleWaterMovement() {
@@ -184,7 +372,7 @@
 				var1.onItemPickup(this, var2);
 				this.setEntityDead();
 			}
-
 		}
+
 	}
 }
--- /dev/null
+++ net/minecraft/src/ItemEssenceGun.java
@@ -1,0 +1,23 @@
+package net.minecraft.src;
+
+public class ItemEssenceGun extends Item {
+	public ItemEssenceGun(int var1) {
+		super(var1);
+		this.maxStackSize = 1;
+	}
+
+	public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+		if(var3 instanceof EntityPlayerZombieModeClient) {
+			if(((InventoryVendingMachine)var3.inventory).field_8689_3p0gv43cL7j25sTw85c9cXfcP4HTk7W010VdL2XjgPV7V0w2R2sQvYNjSAja > 0) {
+				--((InventoryVendingMachine)var3.inventory).field_8689_3p0gv43cL7j25sTw85c9cXfcP4HTk7W010VdL2XjgPV7V0w2R2sQvYNjSAja;
+				var2.playSoundAtEntity(var3, "ext1605.neutralspecial", 1.0F, 1.0F / (rand.nextFloat() * 0.4F + 0.8F));
+				var2.spawnEntityInWorld(new EntityEssenceProjectile(var2, var3));
+			}
+		} else if(var3.inventory.consumeInventoryItem(ExtItems.essence.shiftedIndex)) {
+			var2.playSoundAtEntity(var3, "ext1605.neutralspecial", 1.0F, 1.0F / (rand.nextFloat() * 0.4F + 0.8F));
+			var2.spawnEntityInWorld(new EntityEssenceProjectile(var2, var3));
+		}
+
+		return var1;
+	}
+}
--- net/minecraft/src/ModelRenderer.java
+++ net/minecraft/src/ModelRenderer.java
@@ -24,53 +24,57 @@
 		this.textureOffsetY = var2;
 	}
 
-	public void addBox(float var1, float var2, float var3, int var4, int var5, int var6) {
-		this.addBox(var1, var2, var3, var4, var5, var6, 0.0F);
-	}
-
 	public void addBox(float var1, float var2, float var3, int var4, int var5, int var6, float var7) {
+		this.addBox(var1, var2, var3, var4, var5, var6, var7, 64, 32);
+	}
+
+	public void addBox(float var1, float var2, float var3, int var4, int var5, int var6) {
+		this.addBox(var1, var2, var3, var4, var5, var6, 0.0F, 64, 32);
+	}
+
+	public void addBox(float var1, float var2, float var3, int var4, int var5, int var6, float var7, int var8, int var9) {
 		this.corners = new PositionTexureVertex[8];
 		this.faces = new TexturedQuad[6];
-		float var8 = var1 + (float)var4;
-		float var9 = var2 + (float)var5;
-		float var10 = var3 + (float)var6;
-		var1 -= var7;
-		var2 -= var7;
-		var3 -= var7;
-		var8 += var7;
-		var9 += var7;
-		var10 += var7;
+		float var17 = var1 + (float)var4;
+		float var18 = var2 + (float)var5;
+		float var19 = var3 + (float)var6;
+		float var10 = var1 - var7;
+		float var11 = var2 - var7;
+		float var12 = var3 - var7;
+		var17 += var7;
+		var18 += var7;
+		var19 += var7;
 		if(this.mirror) {
-			float var11 = var8;
-			var8 = var1;
-			var1 = var11;
+			float var20 = var17;
+			var17 = var10;
+			var10 = var20;
 		}
 
-		PositionTexureVertex var20 = new PositionTexureVertex(var1, var2, var3, 0.0F, 0.0F);
-		PositionTexureVertex var12 = new PositionTexureVertex(var8, var2, var3, 0.0F, 8.0F);
-		PositionTexureVertex var13 = new PositionTexureVertex(var8, var9, var3, 8.0F, 8.0F);
-		PositionTexureVertex var14 = new PositionTexureVertex(var1, var9, var3, 8.0F, 0.0F);
-		PositionTexureVertex var15 = new PositionTexureVertex(var1, var2, var10, 0.0F, 0.0F);
-		PositionTexureVertex var16 = new PositionTexureVertex(var8, var2, var10, 0.0F, 8.0F);
-		PositionTexureVertex var17 = new PositionTexureVertex(var8, var9, var10, 8.0F, 8.0F);
-		PositionTexureVertex var18 = new PositionTexureVertex(var1, var9, var10, 8.0F, 0.0F);
-		this.corners[0] = var20;
-		this.corners[1] = var12;
-		this.corners[2] = var13;
-		this.corners[3] = var14;
-		this.corners[4] = var15;
-		this.corners[5] = var16;
-		this.corners[6] = var17;
-		this.corners[7] = var18;
-		this.faces[0] = new TexturedQuad(new PositionTexureVertex[]{var16, var12, var13, var17}, this.textureOffsetX + var6 + var4, this.textureOffsetY + var6, this.textureOffsetX + var6 + var4 + var6, this.textureOffsetY + var6 + var5);
-		this.faces[1] = new TexturedQuad(new PositionTexureVertex[]{var20, var15, var18, var14}, this.textureOffsetX + 0, this.textureOffsetY + var6, this.textureOffsetX + var6, this.textureOffsetY + var6 + var5);
-		this.faces[2] = new TexturedQuad(new PositionTexureVertex[]{var16, var15, var20, var12}, this.textureOffsetX + var6, this.textureOffsetY + 0, this.textureOffsetX + var6 + var4, this.textureOffsetY + var6);
-		this.faces[3] = new TexturedQuad(new PositionTexureVertex[]{var13, var14, var18, var17}, this.textureOffsetX + var6 + var4, this.textureOffsetY + 0, this.textureOffsetX + var6 + var4 + var4, this.textureOffsetY + var6);
-		this.faces[4] = new TexturedQuad(new PositionTexureVertex[]{var12, var20, var14, var13}, this.textureOffsetX + var6, this.textureOffsetY + var6, this.textureOffsetX + var6 + var4, this.textureOffsetY + var6 + var5);
-		this.faces[5] = new TexturedQuad(new PositionTexureVertex[]{var15, var16, var17, var18}, this.textureOffsetX + var6 + var4 + var6, this.textureOffsetY + var6, this.textureOffsetX + var6 + var4 + var6 + var4, this.textureOffsetY + var6 + var5);
+		PositionTexureVertex var29 = new PositionTexureVertex(var10, var11, var12, 0.0F, 0.0F);
+		PositionTexureVertex var21 = new PositionTexureVertex(var17, var11, var12, 0.0F, 8.0F);
+		PositionTexureVertex var22 = new PositionTexureVertex(var17, var18, var12, 8.0F, 8.0F);
+		PositionTexureVertex var23 = new PositionTexureVertex(var10, var18, var12, 8.0F, 0.0F);
+		PositionTexureVertex var24 = new PositionTexureVertex(var10, var11, var19, 0.0F, 0.0F);
+		PositionTexureVertex var25 = new PositionTexureVertex(var17, var11, var19, 0.0F, 8.0F);
+		PositionTexureVertex var26 = new PositionTexureVertex(var17, var18, var19, 8.0F, 8.0F);
+		PositionTexureVertex var27 = new PositionTexureVertex(var10, var18, var19, 8.0F, 0.0F);
+		this.corners[0] = var29;
+		this.corners[1] = var21;
+		this.corners[2] = var22;
+		this.corners[3] = var23;
+		this.corners[4] = var24;
+		this.corners[5] = var25;
+		this.corners[6] = var26;
+		this.corners[7] = var27;
+		this.faces[0] = new TexturedQuad(new PositionTexureVertex[]{var25, var21, var22, var26}, this.textureOffsetX + var6 + var4, this.textureOffsetY + var6, this.textureOffsetX + var6 + var4 + var6, this.textureOffsetY + var6 + var5, var8, var9);
+		this.faces[1] = new TexturedQuad(new PositionTexureVertex[]{var29, var24, var27, var23}, this.textureOffsetX + 0, this.textureOffsetY + var6, this.textureOffsetX + var6, this.textureOffsetY + var6 + var5, var8, var9);
+		this.faces[2] = new TexturedQuad(new PositionTexureVertex[]{var25, var24, var29, var21}, this.textureOffsetX + var6, this.textureOffsetY + 0, this.textureOffsetX + var6 + var4, this.textureOffsetY + var6, var8, var9);
+		this.faces[3] = new TexturedQuad(new PositionTexureVertex[]{var22, var23, var27, var26}, this.textureOffsetX + var6 + var4, this.textureOffsetY + 0, this.textureOffsetX + var6 + var4 + var4, this.textureOffsetY + var6, var8, var9);
+		this.faces[4] = new TexturedQuad(new PositionTexureVertex[]{var21, var29, var23, var22}, this.textureOffsetX + var6, this.textureOffsetY + var6, this.textureOffsetX + var6 + var4, this.textureOffsetY + var6 + var5, var8, var9);
+		this.faces[5] = new TexturedQuad(new PositionTexureVertex[]{var24, var25, var26, var27}, this.textureOffsetX + var6 + var4 + var6, this.textureOffsetY + var6, this.textureOffsetX + var6 + var4 + var6 + var4, this.textureOffsetY + var6 + var5, var8, var9);
 		if(this.mirror) {
-			for(int var19 = 0; var19 < this.faces.length; ++var19) {
-				this.faces[var19].flipFace();
+			for(int var28 = 0; var28 < this.faces.length; ++var28) {
+				this.faces[var28].flipFace();
 			}
 		}
 
@@ -83,71 +87,71 @@
 	}
 
 	public void render(float var1) {
-		if(!this.isHidden) {
-			if(this.showModel) {
-				if(!this.compiled) {
-					this.compileDisplayList(var1);
-				}
-
-				if(this.rotateAngleX == 0.0F && this.rotateAngleY == 0.0F && this.rotateAngleZ == 0.0F) {
-					if(this.rotationPointX == 0.0F && this.rotationPointY == 0.0F && this.rotationPointZ == 0.0F) {
-						GL11.glCallList(this.displayList);
-					} else {
-						GL11.glTranslatef(this.rotationPointX * var1, this.rotationPointY * var1, this.rotationPointZ * var1);
-						GL11.glCallList(this.displayList);
-						GL11.glTranslatef(-this.rotationPointX * var1, -this.rotationPointY * var1, -this.rotationPointZ * var1);
-					}
-				} else {
-					GL11.glPushMatrix();
-					GL11.glTranslatef(this.rotationPointX * var1, this.rotationPointY * var1, this.rotationPointZ * var1);
-					if(this.rotateAngleZ != 0.0F) {
-						GL11.glRotatef(this.rotateAngleZ * (180.0F / (float)Math.PI), 0.0F, 0.0F, 1.0F);
-					}
-
-					if(this.rotateAngleY != 0.0F) {
-						GL11.glRotatef(this.rotateAngleY * (180.0F / (float)Math.PI), 0.0F, 1.0F, 0.0F);
-					}
-
-					if(this.rotateAngleX != 0.0F) {
-						GL11.glRotatef(this.rotateAngleX * (180.0F / (float)Math.PI), 1.0F, 0.0F, 0.0F);
-					}
-
-					GL11.glCallList(this.displayList);
-					GL11.glPopMatrix();
-				}
-
-			}
-		}
-	}
-
-	public void renderWithRotation(float var1) {
-		if(!this.isHidden) {
-			if(this.showModel) {
-				if(!this.compiled) {
-					this.compileDisplayList(var1);
-				}
-
-				if(this.rotateAngleX == 0.0F && this.rotateAngleY == 0.0F && this.rotateAngleZ == 0.0F) {
-					if(this.rotationPointX != 0.0F || this.rotationPointY != 0.0F || this.rotationPointZ != 0.0F) {
-						GL11.glTranslatef(this.rotationPointX * var1, this.rotationPointY * var1, this.rotationPointZ * var1);
-					}
-				} else {
-					GL11.glTranslatef(this.rotationPointX * var1, this.rotationPointY * var1, this.rotationPointZ * var1);
-					if(this.rotateAngleZ != 0.0F) {
-						GL11.glRotatef(this.rotateAngleZ * (180.0F / (float)Math.PI), 0.0F, 0.0F, 1.0F);
-					}
-
-					if(this.rotateAngleY != 0.0F) {
-						GL11.glRotatef(this.rotateAngleY * (180.0F / (float)Math.PI), 0.0F, 1.0F, 0.0F);
-					}
-
-					if(this.rotateAngleX != 0.0F) {
-						GL11.glRotatef(this.rotateAngleX * (180.0F / (float)Math.PI), 1.0F, 0.0F, 0.0F);
-					}
-				}
-
-			}
-		}
+		if(!this.isHidden && this.showModel) {
+			if(!this.compiled) {
+				this.compileDisplayList(var1);
+			}
+
+			if(this.rotateAngleX == 0.0F && this.rotateAngleY == 0.0F && this.rotateAngleZ == 0.0F) {
+				if(this.rotationPointX == 0.0F && this.rotationPointY == 0.0F && this.rotationPointZ == 0.0F) {
+					GL11.glCallList(this.displayList);
+				} else {
+					GL11.glTranslatef(this.rotationPointX * var1, this.rotationPointY * var1, this.rotationPointZ * var1);
+					GL11.glCallList(this.displayList);
+					GL11.glTranslatef(-this.rotationPointX * var1, -this.rotationPointY * var1, -this.rotationPointZ * var1);
+				}
+			} else {
+				GL11.glPushMatrix();
+				GL11.glTranslatef(this.rotationPointX * var1, this.rotationPointY * var1, this.rotationPointZ * var1);
+				if(this.rotateAngleZ != 0.0F) {
+					GL11.glRotatef(this.rotateAngleZ * (180.0F / (float)Math.PI), 0.0F, 0.0F, 1.0F);
+				}
+
+				if(this.rotateAngleY != 0.0F) {
+					GL11.glRotatef(this.rotateAngleY * (180.0F / (float)Math.PI), 0.0F, 1.0F, 0.0F);
+				}
+
+				if(this.rotateAngleX != 0.0F) {
+					GL11.glRotatef(this.rotateAngleX * (180.0F / (float)Math.PI), 1.0F, 0.0F, 0.0F);
+				}
+
+				GL11.glCallList(this.displayList);
+				GL11.glPopMatrix();
+			}
+		}
+
+	}
+
+	public void func_11978_0QKT3xm998dLH60L19HqO3EUJs5HjELk2UIGifv4D843kdr3JB8CqrJxup6e(float var1) {
+		this.renderWithRotation(var1, false);
+	}
+
+	public void renderWithRotation(float var1, boolean var2) {
+		if(!this.isHidden && this.showModel || var2) {
+			if(!this.compiled && !this.isHidden && this.showModel) {
+				this.compileDisplayList(var1);
+			}
+
+			if(this.rotateAngleX == 0.0F && this.rotateAngleY == 0.0F && this.rotateAngleZ == 0.0F) {
+				if(this.rotationPointX != 0.0F || this.rotationPointY != 0.0F || this.rotationPointZ != 0.0F) {
+					GL11.glTranslatef(this.rotationPointX * var1, this.rotationPointY * var1, this.rotationPointZ * var1);
+				}
+			} else {
+				GL11.glTranslatef(this.rotationPointX * var1, this.rotationPointY * var1, this.rotationPointZ * var1);
+				if(this.rotateAngleZ != 0.0F) {
+					GL11.glRotatef(this.rotateAngleZ * (180.0F / (float)Math.PI), 0.0F, 0.0F, 1.0F);
+				}
+
+				if(this.rotateAngleY != 0.0F) {
+					GL11.glRotatef(this.rotateAngleY * (180.0F / (float)Math.PI), 0.0F, 1.0F, 0.0F);
+				}
+
+				if(this.rotateAngleX != 0.0F) {
+					GL11.glRotatef(this.rotateAngleX * (180.0F / (float)Math.PI), 1.0F, 0.0F, 0.0F);
+				}
+			}
+		}
+
 	}
 
 	private void compileDisplayList(float var1) {
@@ -156,7 +160,7 @@
 		Tessellator var2 = Tessellator.instance;
 
 		for(int var3 = 0; var3 < this.faces.length; ++var3) {
-			this.faces[var3].draw(var2, var1);
+			this.faces[var3].draw(var2, var1, true);
 		}
 
 		GL11.glEndList();
--- /dev/null
+++ net/minecraft/src/BaseMod.java
@@ -1,0 +1,74 @@
+package net.minecraft.src;
+
+import java.util.List;
+import java.util.Map;
+import java.util.Random;
+import net.minecraft.client.Minecraft;
+
+public class BaseMod {
+	public void AddEntityID() {
+	}
+
+	public int AddFuel(int var1) {
+		return 0;
+	}
+
+	public void AddRecipes(CraftingManager var1) {
+	}
+
+	public void AddRenderer(Map<Class<? extends Entity>, Render> var1) {
+	}
+
+	public int AddSmelting(int var1) {
+		return -1;
+	}
+
+	@Deprecated
+	public void func_9842_20fGD696E1rrnKO3zQ6ej3jllKU462gK6r1jhOj9DZ6R475673aN5KvNgDSo(World var1, Random var2, int var3, int var4) {
+		this.func_9838_2Kw4R7ZOnb1rE7OLoL4M99KgoznAH38Zmydk544lS35ACgh9089lk2p3Tb8a(var1, var2, var3, var4);
+	}
+
+	public void func_9838_2Kw4R7ZOnb1rE7OLoL4M99KgoznAH38Zmydk544lS35ACgh9089lk2p3Tb8a(World var1, Random var2, int var3, int var4) {
+	}
+
+	public void GenerateSurface(World var1, Random var2, int var3, int var4) {
+	}
+
+	public GuiScreen OpenModGUI(EntityPlayerSP var1, Object var2) {
+		return null;
+	}
+
+	public void OSDHook(Minecraft var1) {
+	}
+
+	public void RegisterBlocks(List<Block> var1) {
+	}
+
+	public void RegisterTextureOverrides() {
+	}
+
+	public void RegisterAnimation(Minecraft var1) {
+	}
+
+	public void RegisterTileEntity() {
+	}
+
+	public int func_9844_54pM8s64ZMnaU952nGEh82Q57WO2N6jhc3lwdq8i55LCTqh9Z6CBI7mTN1xJ(int var1) {
+		return -1;
+	}
+
+	public int func_9849_7m6m13dn8LrG10h8c2Og50FZ5BadQ06sFis8fvT5TqNZ2cpOxQ56X340JqVC(int var1) {
+		return 0;
+	}
+
+	public String Version() {
+		return "1.0.0";
+	}
+
+	public String toString() {
+		return this.getClass().getName() + " " + this.Version();
+	}
+
+	public void func_9851_9VTXo56vuK02QP3b768P1531Ie7r9zZnEp8PN8XCM31YP2br8w7rWVX045H2() {
+	}
+}
--- net/minecraft/src/CanvasMojangLogo.java
+++ net/minecraft/src/CanvasMojangLogo.java
@@ -9,11 +9,11 @@
 import javax.imageio.ImageIO;
 
 class CanvasMojangLogo extends Canvas {
-	private BufferedImage logo;
+	private BufferedImage BufferedImage1;
 
 	public CanvasMojangLogo() {
 		try {
-			this.logo = ImageIO.read(PanelCrashReport.class.getResource("/gui/logo.png"));
+			this.BufferedImage1 = ImageIO.read(Ext1605Utils.func_12146_9P3TY758VM8951Z7q70WD5qYdKqLdB22jUqQNi8u6rFBU4uZnFfpCw0XU82v("/gui/logo.png"));
 		} catch (IOException var2) {
 		}
 
@@ -24,6 +24,6 @@
 
 	public void paint(Graphics var1) {
 		super.paint(var1);
-		var1.drawImage(this.logo, this.getWidth() / 2 - this.logo.getWidth() / 2, 32, (ImageObserver)null);
+		var1.drawImage(this.BufferedImage1, this.getWidth() / 2 - this.BufferedImage1.getWidth() / 2, 32, (ImageObserver)null);
 	}
 }
--- /dev/null
+++ net/minecraft/src/BlockSnowBlockOld.java
@@ -1,0 +1,26 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockSnowBlockOld extends BlockOld {
+	protected BlockSnowBlockOld(int var1, int var2) {
+		super(var1, var2, Material.craftedSnow);
+		this.setTickOnLoad(true);
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return Item.snowball.shiftedIndex;
+	}
+
+	public int quantityDropped(Random var1) {
+		return 4;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(var1.getSavedLightValue(EnumSkyBlock.Block, var2, var3, var4) > 11) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/Base64.java
@@ -1,0 +1,49 @@
+package net.minecraft.src;
+
+import java.util.Objects;
+
+public class Base64 {
+	public static Encoder getEncoder() {
+		return Encoder.RFC4648;
+	}
+
+	public static Encoder getUrlEncoder() {
+		return Encoder.RFC4648_URLSAFE;
+	}
+
+	public static Encoder getMimeEncoder() {
+		return Encoder.RFC2045;
+	}
+
+	public static Encoder getMimeEncoder(int var0, byte[] var1) {
+		Objects.requireNonNull(var1);
+		int[] var2 = Decoder.fromBase64();
+		byte[] var3 = var1;
+		int var4 = var1.length;
+
+		for(int var5 = 0; var5 < var4; ++var5) {
+			byte var6 = var3[var5];
+			if(var2[var6 & 255] != -1) {
+				throw new IllegalArgumentException("Illegal base64 line separator character 0x" + Integer.toString(var6, 16));
+			}
+		}
+
+		if(var0 <= 0) {
+			return Encoder.RFC4648;
+		} else {
+			return new Encoder(false, var1, var0 >> 2 << 2, true, null);
+		}
+	}
+
+	public static Decoder getDecoder() {
+		return Decoder.RFC4648;
+	}
+
+	public static Decoder getUrlDecoder() {
+		return Decoder.RFC4648_URLSAFE;
+	}
+
+	public static Decoder getMimeDecoder() {
+		return Decoder.RFC2045;
+	}
+}
--- /dev/null
+++ net/minecraft/src/HandlerPlayDemoUnknownClass3.java
@@ -1,0 +1,18 @@
+package net.minecraft.src;
+
+public class HandlerPlayDemoUnknownClass3 {
+	public long field_11851_6Isyx6ibE614572UHOY1hG1DI1xi348XJ8wDp59Qzv9n59hSYsTm088vzK93;
+	public String field_11850_3IpS3kF2uJayWkIy0xX4RkoL010nzpWr3TkCWy49CYtw3Y7pflXVVkOihgHc = "";
+
+	public HandlerPlayDemoUnknownClass3(long var1, String var3) {
+		this.field_11851_6Isyx6ibE614572UHOY1hG1DI1xi348XJ8wDp59Qzv9n59hSYsTm088vzK93 = var1;
+		this.field_11850_3IpS3kF2uJayWkIy0xX4RkoL010nzpWr3TkCWy49CYtw3Y7pflXVVkOihgHc = var3;
+	}
+
+	public void func_11849_8m6693d8dhYR0w4HrTryNkH00xQWV6oS9Yjo7ME4Oro3F23Zt91YucB1PvA1(EntityOtherPlayerMPUnknownClass var1) {
+		if(this.field_11850_3IpS3kF2uJayWkIy0xX4RkoL010nzpWr3TkCWy49CYtw3Y7pflXVVkOihgHc.length() > 2 && this.field_11850_3IpS3kF2uJayWkIy0xX4RkoL010nzpWr3TkCWy49CYtw3Y7pflXVVkOihgHc.substring(0, 2).equals("dc")) {
+			InputHandler.mc.ingameGUI.addChatMessage("<" + var1.username + "> " + this.field_11850_3IpS3kF2uJayWkIy0xX4RkoL010nzpWr3TkCWy49CYtw3Y7pflXVVkOihgHc.substring(3));
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/DecInputStream.java
@@ -1,0 +1,148 @@
+package net.minecraft.src;
+
+import java.io.IOException;
+import java.io.InputStream;
+
+class DecInputStream extends InputStream {
+	private final InputStream is;
+	private final boolean isMIME;
+	private final int[] base64;
+	private int bits = 0;
+	private int nextin = 18;
+	private int nextout = -8;
+	private boolean eof = false;
+	private boolean closed = false;
+	private byte[] sbBuf = new byte[1];
+
+	DecInputStream(InputStream var1, int[] var2, boolean var3) {
+		this.is = var1;
+		this.base64 = var2;
+		this.isMIME = var3;
+	}
+
+	public int read() throws IOException {
+		return this.read(this.sbBuf, 0, 1) == -1 ? -1 : this.sbBuf[0] & 255;
+	}
+
+	public int read(byte[] var1, int var2, int var3) throws IOException {
+		if(this.closed) {
+			throw new IOException("Stream is closed");
+		} else if(this.eof && this.nextout < 0) {
+			return -1;
+		} else if(var2 >= 0 && var3 >= 0 && var3 <= var1.length - var2) {
+			int var4 = var2;
+			if(this.nextout >= 0) {
+				do {
+					if(var3 == 0) {
+						return var2 - var4;
+					}
+
+					var1[var2++] = (byte)(this.bits >> this.nextout);
+					--var3;
+					this.nextout -= 8;
+				} while(this.nextout >= 0);
+
+				this.bits = 0;
+			}
+
+			while(true) {
+				if(var3 > 0) {
+					int var5 = this.is.read();
+					if(var5 == -1) {
+						this.eof = true;
+						if(this.nextin != 18) {
+							if(this.nextin == 12) {
+								throw new IOException("Base64 stream has one un-decoded dangling byte.");
+							}
+
+							var1[var2++] = (byte)(this.bits >> 16);
+							--var3;
+							if(this.nextin == 0) {
+								if(var3 == 0) {
+									this.bits >>= 8;
+									this.nextout = 0;
+								} else {
+									var1[var2++] = (byte)(this.bits >> 8);
+								}
+							}
+						}
+
+						if(var2 == var4) {
+							return -1;
+						}
+
+						return var2 - var4;
+					}
+
+					if(var5 != 61) {
+						var5 = this.base64[var5];
+						if(var5 == -1) {
+							if(!this.isMIME) {
+								throw new IOException("Illegal base64 character " + Integer.toString(var5, 16));
+							}
+							continue;
+						}
+
+						this.bits |= var5 << this.nextin;
+						if(this.nextin != 0) {
+							this.nextin -= 6;
+							continue;
+						}
+
+						this.nextin = 18;
+						this.nextout = 16;
+
+						while(this.nextout >= 0) {
+							var1[var2++] = (byte)(this.bits >> this.nextout);
+							--var3;
+							this.nextout -= 8;
+							if(var3 == 0 && this.nextout >= 0) {
+								return var2 - var4;
+							}
+						}
+
+						this.bits = 0;
+						continue;
+					}
+
+					if(this.nextin == 18 || this.nextin == 12 || this.nextin == 6 && this.is.read() != 61) {
+						throw new IOException("Illegal base64 ending sequence:" + this.nextin);
+					}
+
+					var1[var2++] = (byte)(this.bits >> 16);
+					--var3;
+					if(this.nextin == 0) {
+						if(var3 == 0) {
+							this.bits >>= 8;
+							this.nextout = 0;
+						} else {
+							var1[var2++] = (byte)(this.bits >> 8);
+						}
+					}
+
+					this.eof = true;
+				}
+
+				return var2 - var4;
+			}
+		} else {
+			throw new IndexOutOfBoundsException();
+		}
+	}
+
+	public int available() throws IOException {
+		if(this.closed) {
+			throw new IOException("Stream is closed");
+		} else {
+			return this.is.available();
+		}
+	}
+
+	public void close() throws IOException {
+		if(!this.closed) {
+			this.closed = true;
+			this.is.close();
+		}
+
+	}
+}
--- net/minecraft/src/RenderBlocks.java
+++ net/minecraft/src/RenderBlocks.java
@@ -24,13 +24,392 @@
 	public boolean renderBlockByRenderType(Block var1, int var2, int var3, int var4) {
 		int var5 = var1.getRenderType();
 		var1.setBlockBoundsBasedOnState(this.blockAccess, var2, var3, var4);
-		return var5 == 0 ? this.renderStandardBlock(var1, var2, var3, var4) : (var5 == 4 ? this.renderBlockFluids(var1, var2, var3, var4) : (var5 == 13 ? this.renderBlockCactus(var1, var2, var3, var4) : (var5 == 1 ? this.renderBlockReed(var1, var2, var3, var4) : (var5 == 6 ? this.renderBlockCrops(var1, var2, var3, var4) : (var5 == 2 ? this.renderBlockTorch(var1, var2, var3, var4) : (var5 == 3 ? this.renderBlockFire(var1, var2, var3, var4) : (var5 == 5 ? this.renderBlockRedstoneWire(var1, var2, var3, var4) : (var5 == 8 ? this.renderBlockLadder(var1, var2, var3, var4) : (var5 == 7 ? this.renderBlockDoor(var1, var2, var3, var4) : (var5 == 9 ? this.renderBlockMinecartTrack(var1, var2, var3, var4) : (var5 == 10 ? this.renderBlockStairs(var1, var2, var3, var4) : (var5 == 11 ? this.renderBlockFence(var1, var2, var3, var4) : (var5 == 12 ? this.renderBlockLever(var1, var2, var3, var4) : false)))))))))))));
+		switch(var5) {
+		case -1:
+			return true;
+		case 0:
+		default:
+			return this.renderStandardBlock(var1, var2, var3, var4);
+		case 1:
+			return this.renderBlockReed(var1, var2, var3, var4);
+		case 2:
+			return this.renderBlockTorch(var1, var2, var3, var4);
+		case 3:
+			return this.renderBlockFire(var1, var2, var3, var4);
+		case 4:
+			return this.renderBlockFluids(var1, var2, var3, var4);
+		case 5:
+			return this.renderBlockRedstoneWire(var1, var2, var3, var4);
+		case 6:
+			return this.renderBlockCrops(var1, var2, var3, var4);
+		case 7:
+			return this.renderBlockDoor(var1, var2, var3, var4);
+		case 8:
+			return this.renderBlockLadder(var1, var2, var3, var4);
+		case 9:
+			return this.renderBlockMinecartTrack(var1, var2, var3, var4);
+		case 10:
+			return this.renderBlockStairs(var1, var2, var3, var4);
+		case 11:
+			return this.renderBlockFence(var1, var2, var3, var4);
+		case 12:
+			return this.renderBlockLever(var1, var2, var3, var4);
+		case 13:
+			return this.renderBlockCactus(var1, var2, var3, var4);
+		case 14:
+			return this.renderBlockEssenceFountain(var1, var2, var3, var4, false);
+		}
+	}
+
+	private boolean renderBlockEssenceFountain(Block var1, int var2, int var3, int var4, boolean var5) {
+		Tessellator var6 = Tessellator.instance;
+		byte var7 = 1;
+		byte var8 = 0;
+		float var9 = 1.0F;
+		if(!var5) {
+			var9 = var1.getRenderSideBrightness(this.blockAccess, var2, var3 - 1, var4);
+		}
+
+		var6.setColorOpaque_F(var9, var9, var9);
+		double var10 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+		double var12 = ((double)var7 * 16.0D + 15.0D - 0.01D) / 256.0D;
+		double var14 = ((double)var8 * 16.0D + 1.0D) / 512.0D;
+		double var16 = ((double)var8 * 16.0D + 15.0D - 0.01D) / 512.0D;
+		double var18 = (double)var2 + 1.0D / 16.0D;
+		double var20 = (double)var2 + 0.9375D;
+		double var22 = (double)var4 + 1.0D / 16.0D;
+		double var24 = (double)var4 + 0.9375D;
+		var6.addVertexWithUV(var18, (double)var3, var24, var10, var16);
+		var6.addVertexWithUV(var18, (double)var3, var22, var10, var14);
+		var6.addVertexWithUV(var20, (double)var3, var22, var12, var14);
+		var6.addVertexWithUV(var20, (double)var3, var24, var12, var16);
+		var10 = ((double)var7 * 16.0D + 0.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 16.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 0.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 16.0D - 0.01D) / 512.0D;
+		var18 = (double)(var2 + 1);
+		var20 = (double)var3 + 1.0D / 16.0D;
+		var22 = (double)(var4 + 1);
+		var6.addVertexWithUV((double)var2, var20, var22, var10, var16);
+		var6.addVertexWithUV((double)var2, var20, (double)var4, var10, var14);
+		var6.addVertexWithUV(var18, var20, (double)var4, var12, var14);
+		var6.addVertexWithUV(var18, var20, var22, var12, var16);
+		if(!var5) {
+			var9 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4 - 1);
+		}
+
+		var6.setColorOpaque_F(var9, var9, var9);
+		var10 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 4.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 0.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 16.0D - 0.01D) / 512.0D;
+		var18 = (double)var2;
+		var20 = (double)(var2 + 1);
+		var22 = (double)var3 + 1.0D / 16.0D;
+		var24 = (double)var3 + 0.25D;
+		double var26 = (double)var4;
+		var6.addVertexWithUV(var18, var24, var26, var10, var16);
+		var6.addVertexWithUV(var20, var24, var26, var10, var14);
+		var6.addVertexWithUV(var20, var22, var26, var12, var14);
+		var6.addVertexWithUV(var18, var22, var26, var12, var16);
+		var10 = ((double)var7 * 16.0D + 0.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 1.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 1.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 15.0D - 0.01D) / 512.0D;
+		var18 = (double)var2 + 1.0D / 16.0D;
+		var20 = (double)var2 + 0.9375D;
+		var22 = (double)var3;
+		var24 = (double)var3 + 1.0D / 16.0D;
+		var26 = (double)var4 + 1.0D / 16.0D;
+		var6.addVertexWithUV(var18, var24, var26, var10, var16);
+		var6.addVertexWithUV(var20, var24, var26, var10, var14);
+		var6.addVertexWithUV(var20, var22, var26, var12, var14);
+		var6.addVertexWithUV(var18, var22, var26, var12, var16);
+		if(!var5) {
+			var9 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4 + 1);
+		}
+
+		var6.setColorOpaque_F(var9, var9, var9);
+		var10 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 4.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 0.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 16.0D - 0.01D) / 512.0D;
+		var18 = (double)var2;
+		var20 = (double)(var2 + 1);
+		var22 = (double)var3 + 1.0D / 16.0D;
+		var24 = (double)var3 + 0.25D;
+		var26 = (double)(var4 + 1);
+		var6.addVertexWithUV(var20, var24, var26, var10, var16);
+		var6.addVertexWithUV(var18, var24, var26, var10, var14);
+		var6.addVertexWithUV(var18, var22, var26, var12, var14);
+		var6.addVertexWithUV(var20, var22, var26, var12, var16);
+		var10 = ((double)var7 * 16.0D + 0.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 1.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 1.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 15.0D - 0.01D) / 512.0D;
+		var18 = (double)var2 + 1.0D / 16.0D;
+		var20 = (double)var2 + 0.9375D;
+		var22 = (double)var3;
+		var24 = (double)var3 + 1.0D / 16.0D;
+		var26 = (double)var4 + 0.9375D;
+		var6.addVertexWithUV(var20, var24, var26, var10, var16);
+		var6.addVertexWithUV(var18, var24, var26, var10, var14);
+		var6.addVertexWithUV(var18, var22, var26, var12, var14);
+		var6.addVertexWithUV(var20, var22, var26, var12, var16);
+		if(!var5) {
+			var9 = var1.getRenderSideBrightness(this.blockAccess, var2 - 1, var3, var4);
+		}
+
+		var6.setColorOpaque_F(var9, var9, var9);
+		var10 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 4.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 0.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 16.0D - 0.01D) / 512.0D;
+		var18 = (double)var2;
+		var20 = (double)var3 + 1.0D / 16.0D;
+		var22 = (double)var3 + 0.25D;
+		var24 = (double)var4;
+		var26 = (double)(var4 + 1);
+		var6.addVertexWithUV(var18, var22, var26, var10, var16);
+		var6.addVertexWithUV(var18, var22, var24, var10, var14);
+		var6.addVertexWithUV(var18, var20, var24, var12, var14);
+		var6.addVertexWithUV(var18, var20, var26, var12, var16);
+		var10 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 4.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 0.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 16.0D - 0.01D) / 512.0D;
+		var18 = (double)var2 + 1.0D / 16.0D;
+		var20 = (double)var3;
+		var22 = (double)var3 + 1.0D / 16.0D;
+		var24 = (double)var4 + 1.0D / 16.0D;
+		var26 = (double)var4 + 0.9375D;
+		var6.addVertexWithUV(var18, var22, var26, var10, var16);
+		var6.addVertexWithUV(var18, var22, var24, var10, var14);
+		var6.addVertexWithUV(var18, var20, var24, var12, var14);
+		var6.addVertexWithUV(var18, var20, var26, var12, var16);
+		if(!var5) {
+			var9 = var1.getRenderSideBrightness(this.blockAccess, var2 + 1, var3, var4);
+		}
+
+		var6.setColorOpaque_F(var9, var9, var9);
+		var10 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 4.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 0.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 16.0D - 0.01D) / 512.0D;
+		var18 = (double)(var2 + 1);
+		var20 = (double)var3 + 1.0D / 16.0D;
+		var22 = (double)var3 + 0.25D;
+		var24 = (double)var4;
+		var26 = (double)(var4 + 1);
+		var6.addVertexWithUV(var18, var22, var24, var10, var16);
+		var6.addVertexWithUV(var18, var22, var26, var10, var14);
+		var6.addVertexWithUV(var18, var20, var26, var12, var14);
+		var6.addVertexWithUV(var18, var20, var24, var12, var16);
+		var10 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 4.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 0.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 16.0D - 0.01D) / 512.0D;
+		var18 = (double)var2 + 0.9375D;
+		var20 = (double)var3;
+		var22 = (double)var3 + 1.0D / 16.0D;
+		var24 = (double)var4 + 1.0D / 16.0D;
+		var26 = (double)var4 + 0.9375D;
+		var6.addVertexWithUV(var18, var22, var24, var10, var16);
+		var6.addVertexWithUV(var18, var22, var26, var10, var14);
+		var6.addVertexWithUV(var18, var20, var26, var12, var14);
+		var6.addVertexWithUV(var18, var20, var24, var12, var16);
+		if(!var5) {
+			var9 = var1.getRenderSideBrightness(this.blockAccess, var2, var3 + 1, var4);
+		}
+
+		var6.setColorOpaque_F(var9, var9, var9);
+		var10 = ((double)var7 * 16.0D + 0.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 1.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 0.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 16.0D - 0.01D) / 512.0D;
+		var18 = (double)var2 + 0.0D;
+		var20 = (double)var2 + 1.0D / 16.0D;
+		var22 = (double)var3 + 0.25D;
+		var24 = (double)var4 + 0.0D;
+		var26 = (double)(var4 + 1);
+		var6.addVertexWithUV(var20, var22, var26, var10, var16);
+		var6.addVertexWithUV(var20, var22, var24, var10, var14);
+		var6.addVertexWithUV(var18, var22, var24, var12, var14);
+		var6.addVertexWithUV(var18, var22, var26, var12, var16);
+		var10 = ((double)var7 * 16.0D + 0.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 1.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 0.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 16.0D - 0.01D) / 512.0D;
+		var18 = (double)var2 + 0.9375D;
+		var20 = (double)(var2 + 1);
+		var22 = (double)var3 + 0.25D;
+		var24 = (double)var4 + 0.0D;
+		var26 = (double)(var4 + 1);
+		var6.addVertexWithUV(var20, var22, var26, var10, var16);
+		var6.addVertexWithUV(var20, var22, var24, var10, var14);
+		var6.addVertexWithUV(var18, var22, var24, var12, var14);
+		var6.addVertexWithUV(var18, var22, var26, var12, var16);
+		var10 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 15.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 0.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 1.0D - 0.01D) / 512.0D;
+		var18 = (double)var2 + 1.0D / 16.0D;
+		var20 = (double)var2 + 0.9375D;
+		var22 = (double)var3 + 0.25D;
+		var24 = (double)var4 + 0.0D;
+		var26 = (double)var4 + 1.0D / 16.0D;
+		var6.addVertexWithUV(var20, var22, var26, var10, var16);
+		var6.addVertexWithUV(var20, var22, var24, var10, var14);
+		var6.addVertexWithUV(var18, var22, var24, var12, var14);
+		var6.addVertexWithUV(var18, var22, var26, var12, var16);
+		var10 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 15.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 0.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 1.0D - 0.01D) / 512.0D;
+		var18 = (double)var2 + 1.0D / 16.0D;
+		var20 = (double)var2 + 0.9375D;
+		var22 = (double)var3 + 0.25D;
+		var24 = (double)var4 + 0.9375D;
+		var26 = (double)(var4 + 1);
+		var6.addVertexWithUV(var20, var22, var26, var10, var16);
+		var6.addVertexWithUV(var20, var22, var24, var10, var14);
+		var6.addVertexWithUV(var18, var22, var24, var12, var14);
+		var6.addVertexWithUV(var18, var22, var26, var12, var16);
+		var10 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 15.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 1.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 15.0D - 0.01D) / 512.0D;
+		var18 = (double)var2 + 1.0D / 16.0D;
+		var20 = (double)var2 + 0.9375D;
+		var22 = (double)var3 + 0.125D;
+		var24 = (double)var4 + 1.0D / 16.0D;
+		var26 = (double)var4 + 0.9375D;
+		var6.addVertexWithUV(var20, var22, var26, var10, var16);
+		var6.addVertexWithUV(var20, var22, var24, var10, var14);
+		var6.addVertexWithUV(var18, var22, var24, var12, var14);
+		var6.addVertexWithUV(var18, var22, var26, var12, var16);
+		if(!var5) {
+			var9 = Math.min(var1.getRenderSideBrightness(this.blockAccess, var2, var3 + 1, var4 - 1), var1.getRenderSideBrightness(this.blockAccess, var2, var3 + 1, var4));
+		}
+
+		var6.setColorOpaque_F(var9, var9, var9);
+		var10 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 4.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 1.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 15.0D - 0.01D) / 512.0D;
+		var18 = (double)var2 + 1.0D / 16.0D;
+		var20 = (double)var2 + 0.9375D;
+		var22 = (double)var3 + 0.125D;
+		var24 = (double)var3 + 0.25D;
+		var26 = (double)var4 + 0.9375D;
+		var6.addVertexWithUV(var18, var24, var26, var10, var16);
+		var6.addVertexWithUV(var20, var24, var26, var10, var14);
+		var6.addVertexWithUV(var20, var22, var26, var12, var14);
+		var6.addVertexWithUV(var18, var22, var26, var12, var16);
+		if(!var5) {
+			var9 = Math.min(var1.getRenderSideBrightness(this.blockAccess, var2, var3 + 1, var4 + 1), var1.getRenderSideBrightness(this.blockAccess, var2, var3 + 1, var4));
+		}
+
+		var6.setColorOpaque_F(var9, var9, var9);
+		var10 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 4.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 1.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 15.0D - 0.01D) / 512.0D;
+		var18 = (double)var2 + 1.0D / 16.0D;
+		var20 = (double)var2 + 0.9375D;
+		var22 = (double)var3 + 0.125D;
+		var24 = (double)var3 + 0.25D;
+		var26 = (double)var4 + 1.0D / 16.0D;
+		var6.addVertexWithUV(var20, var24, var26, var10, var16);
+		var6.addVertexWithUV(var18, var24, var26, var10, var14);
+		var6.addVertexWithUV(var18, var22, var26, var12, var14);
+		var6.addVertexWithUV(var20, var22, var26, var12, var16);
+		if(!var5) {
+			var9 = Math.min(var1.getRenderSideBrightness(this.blockAccess, var2 + 1, var3 + 1, var4), var1.getRenderSideBrightness(this.blockAccess, var2, var3 + 1, var4));
+		}
+
+		var6.setColorOpaque_F(var9, var9, var9);
+		var10 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 4.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 0.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 16.0D - 0.01D) / 512.0D;
+		var18 = (double)var2 + 0.9375D;
+		var20 = (double)var3 + 0.125D;
+		var22 = (double)var3 + 0.25D;
+		var24 = (double)var4 + 1.0D / 16.0D;
+		var26 = (double)var4 + 0.9375D;
+		var6.addVertexWithUV(var18, var22, var26, var10, var16);
+		var6.addVertexWithUV(var18, var22, var24, var10, var14);
+		var6.addVertexWithUV(var18, var20, var24, var12, var14);
+		var6.addVertexWithUV(var18, var20, var26, var12, var16);
+		if(!var5) {
+			var9 = Math.min(var1.getRenderSideBrightness(this.blockAccess, var2 - 1, var3 + 1, var4), var1.getRenderSideBrightness(this.blockAccess, var2, var3 + 1, var4));
+		}
+
+		var6.setColorOpaque_F(var9, var9, var9);
+		var10 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+		var12 = ((double)var7 * 16.0D + 4.0D - 0.01D) / 256.0D;
+		var14 = ((double)var8 * 16.0D + 0.0D) / 512.0D;
+		var16 = ((double)var8 * 16.0D + 16.0D - 0.01D) / 512.0D;
+		var18 = (double)var2 + 1.0D / 16.0D;
+		var20 = (double)var3 + 0.125D;
+		var22 = (double)var3 + 0.25D;
+		var24 = (double)var4 + 1.0D / 16.0D;
+		var26 = (double)var4 + 0.9375D;
+		var6.addVertexWithUV(var18, var22, var24, var10, var16);
+		var6.addVertexWithUV(var18, var22, var26, var10, var14);
+		var6.addVertexWithUV(var18, var20, var26, var12, var14);
+		var6.addVertexWithUV(var18, var20, var24, var12, var16);
+		var7 = 13;
+		var8 = 12;
+		var6.setColorOpaque_F(1.0F, 1.0F, 1.0F);
+		TileEntityEssenceFountain var30 = var5 ? null : (TileEntityEssenceFountain)this.blockAccess.getBlockTileEntity(var2, var3, var4);
+		if(!var5 && var3 > 1) {
+			int var11 = this.blockAccess.getBlockId(var2, var3 - 1, var4);
+			TileEntityEssenceFountain var31 = (TileEntityEssenceFountain)this.blockAccess.getBlockTileEntity(var2, var3, var4);
+			if(var11 == ExtBlocks.EssenceTransformer.blockID) {
+				var6.setColorOpaque_F(0.2F, 1.0F, 0.2F);
+			} else if(var11 == ExtBlocks.EssenceCloner.blockID) {
+				var6.setColorOpaque_F(0.1F, 1.0F, 0.4F);
+			} else if(var11 == Block.chest.blockID) {
+				var6.setColorOpaque_F(1.0F, 0.8F, 0.0F);
+			} else if(var11 != Block.stoneOvenIdle.blockID && var11 != Block.stoneOvenActive.blockID) {
+				if(var11 == Block.ice.blockID) {
+					var9 = var1.getRenderSideBrightness(this.blockAccess, var2, var3 + 1, var4);
+					var6.setColorOpaque_F(var9, var9, var9);
+					var7 = 3;
+					var8 = 4;
+				}
+			} else if(var31.getStackInSlot(0).stackSize == 64) {
+				var6.setColorOpaque_F(1.0F, 0.0F, 0.0F);
+			} else {
+				var6.setColorOpaque_F(0.5F, 0.0F, 0.0F);
+			}
+		}
+
+		if(var30 == null || var30.getStackInSlot(0).stackSize > 0) {
+			double var29 = ((double)var7 * 16.0D + 1.0D) / 256.0D;
+			double var13 = ((double)var7 * 16.0D + 15.0D - 0.01D) / 256.0D;
+			double var15 = ((double)var8 * 16.0D + 1.0D) / 512.0D;
+			double var17 = ((double)var8 * 16.0D + 15.0D - 0.01D) / 512.0D;
+			double var19 = (double)var2 + 1.0D / 16.0D;
+			double var21 = (double)var2 + 0.9375D;
+			double var23 = (double)var3 + 0.125D;
+			double var25 = (double)var4 + 1.0D / 16.0D;
+			double var27 = (double)var4 + 0.9375D;
+			var6.addVertexWithUV(var21, var23, var27, var29, var17);
+			var6.addVertexWithUV(var21, var23, var25, var29, var15);
+			var6.addVertexWithUV(var19, var23, var25, var13, var15);
+			var6.addVertexWithUV(var19, var23, var27, var13, var17);
+		}
+
+		return true;
 	}
 
 	public boolean renderBlockTorch(Block var1, int var2, int var3, int var4) {
 		int var5 = this.blockAccess.getBlockMetadata(var2, var3, var4);
 		Tessellator var6 = Tessellator.instance;
-		float var7 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4);
+		float var7 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4);
 		if(Block.lightValue[var1.blockID] > 0) {
 			var7 = 1.0F;
 		}
@@ -86,7 +465,7 @@
 			this.overrideBlockTexture = -1;
 		}
 
-		float var13 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4);
+		float var13 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4);
 		if(Block.lightValue[var1.blockID] > 0) {
 			var13 = 1.0F;
 		}
@@ -98,11 +477,11 @@
 		}
 
 		int var15 = (var14 & 15) << 4;
-		int var16 = var14 & 240;
+		int var16 = var14 & 4080;
 		float var17 = (float)var15 / 256.0F;
 		float var18 = ((float)var15 + 15.99F) / 256.0F;
-		float var19 = (float)var16 / 256.0F;
-		float var20 = ((float)var16 + 15.99F) / 256.0F;
+		float var19 = (float)var16 / 512.0F;
+		float var20 = ((float)var16 + 15.99F) / 512.0F;
 		Vec3D[] var21 = new Vec3D[8];
 		float var22 = 1.0F / 16.0F;
 		float var23 = 1.0F / 16.0F;
@@ -167,13 +546,13 @@
 			if(var29 == 0) {
 				var17 = (float)(var15 + 7) / 256.0F;
 				var18 = ((float)(var15 + 9) - 0.01F) / 256.0F;
-				var19 = (float)(var16 + 6) / 256.0F;
-				var20 = ((float)(var16 + 8) - 0.01F) / 256.0F;
+				var19 = (float)(var16 + 6) / 512.0F;
+				var20 = ((float)(var16 + 8) - 0.01F) / 512.0F;
 			} else if(var29 == 2) {
 				var17 = (float)(var15 + 7) / 256.0F;
 				var18 = ((float)(var15 + 9) - 0.01F) / 256.0F;
-				var19 = (float)(var16 + 6) / 256.0F;
-				var20 = ((float)(var16 + 16) - 0.01F) / 256.0F;
+				var19 = (float)(var16 + 6) / 512.0F;
+				var20 = ((float)(var16 + 16) - 0.01F) / 512.0F;
 			}
 
 			if(var29 == 0) {
@@ -224,182 +603,182 @@
 			var6 = this.overrideBlockTexture;
 		}
 
-		float var7 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4);
+		float var7 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4);
 		var5.setColorOpaque_F(var7, var7, var7);
 		int var8 = (var6 & 15) << 4;
-		int var9 = var6 & 240;
+		int var9 = var6 & 4080;
 		double var10 = (double)((float)var8 / 256.0F);
 		double var12 = (double)(((float)var8 + 15.99F) / 256.0F);
-		double var14 = (double)((float)var9 / 256.0F);
-		double var16 = (double)(((float)var9 + 15.99F) / 256.0F);
+		double var14 = (double)((float)var9 / 512.0F);
+		double var16 = (double)(((float)var9 + 15.99F) / 512.0F);
 		float var18 = 1.4F;
+		double var19;
 		double var21;
 		double var23;
 		double var25;
 		double var27;
 		double var29;
 		double var31;
-		double var33;
 		if(!this.blockAccess.isBlockNormalCube(var2, var3 - 1, var4) && !Block.fire.canBlockCatchFire(this.blockAccess, var2, var3 - 1, var4)) {
 			float var37 = 0.2F;
-			float var20 = 1.0F / 16.0F;
+			float var34 = 1.0F / 16.0F;
 			if((var2 + var3 + var4 & 1) == 1) {
 				var10 = (double)((float)var8 / 256.0F);
 				var12 = (double)(((float)var8 + 15.99F) / 256.0F);
-				var14 = (double)((float)(var9 + 16) / 256.0F);
-				var16 = (double)(((float)var9 + 15.99F + 16.0F) / 256.0F);
+				var14 = (double)((float)(var9 + 16) / 512.0F);
+				var16 = (double)(((float)var9 + 15.99F + 16.0F) / 512.0F);
 			}
 
 			if((var2 / 2 + var3 / 2 + var4 / 2 & 1) == 1) {
-				var21 = var12;
+				var19 = var12;
 				var12 = var10;
-				var10 = var21;
+				var10 = var19;
 			}
 
 			if(Block.fire.canBlockCatchFire(this.blockAccess, var2 - 1, var3, var4)) {
-				var5.addVertexWithUV((double)((float)var2 + var37), (double)((float)var3 + var18 + var20), (double)(var4 + 1), var12, var14);
-				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var20), (double)(var4 + 1), var12, var16);
-				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var20), (double)(var4 + 0), var10, var16);
-				var5.addVertexWithUV((double)((float)var2 + var37), (double)((float)var3 + var18 + var20), (double)(var4 + 0), var10, var14);
-				var5.addVertexWithUV((double)((float)var2 + var37), (double)((float)var3 + var18 + var20), (double)(var4 + 0), var10, var14);
-				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var20), (double)(var4 + 0), var10, var16);
-				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var20), (double)(var4 + 1), var12, var16);
-				var5.addVertexWithUV((double)((float)var2 + var37), (double)((float)var3 + var18 + var20), (double)(var4 + 1), var12, var14);
+				var5.addVertexWithUV((double)((float)var2 + var37), (double)((float)var3 + var18 + var34), (double)(var4 + 1), var12, var14);
+				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var34), (double)(var4 + 1), var12, var16);
+				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var34), (double)(var4 + 0), var10, var16);
+				var5.addVertexWithUV((double)((float)var2 + var37), (double)((float)var3 + var18 + var34), (double)(var4 + 0), var10, var14);
+				var5.addVertexWithUV((double)((float)var2 + var37), (double)((float)var3 + var18 + var34), (double)(var4 + 0), var10, var14);
+				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var34), (double)(var4 + 0), var10, var16);
+				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var34), (double)(var4 + 1), var12, var16);
+				var5.addVertexWithUV((double)((float)var2 + var37), (double)((float)var3 + var18 + var34), (double)(var4 + 1), var12, var14);
 			}
 
 			if(Block.fire.canBlockCatchFire(this.blockAccess, var2 + 1, var3, var4)) {
-				var5.addVertexWithUV((double)((float)(var2 + 1) - var37), (double)((float)var3 + var18 + var20), (double)(var4 + 0), var10, var14);
-				var5.addVertexWithUV((double)(var2 + 1 - 0), (double)((float)(var3 + 0) + var20), (double)(var4 + 0), var10, var16);
-				var5.addVertexWithUV((double)(var2 + 1 - 0), (double)((float)(var3 + 0) + var20), (double)(var4 + 1), var12, var16);
-				var5.addVertexWithUV((double)((float)(var2 + 1) - var37), (double)((float)var3 + var18 + var20), (double)(var4 + 1), var12, var14);
-				var5.addVertexWithUV((double)((float)(var2 + 1) - var37), (double)((float)var3 + var18 + var20), (double)(var4 + 1), var12, var14);
-				var5.addVertexWithUV((double)(var2 + 1 - 0), (double)((float)(var3 + 0) + var20), (double)(var4 + 1), var12, var16);
-				var5.addVertexWithUV((double)(var2 + 1 - 0), (double)((float)(var3 + 0) + var20), (double)(var4 + 0), var10, var16);
-				var5.addVertexWithUV((double)((float)(var2 + 1) - var37), (double)((float)var3 + var18 + var20), (double)(var4 + 0), var10, var14);
+				var5.addVertexWithUV((double)((float)(var2 + 1) - var37), (double)((float)var3 + var18 + var34), (double)(var4 + 0), var10, var14);
+				var5.addVertexWithUV((double)(var2 + 1 - 0), (double)((float)(var3 + 0) + var34), (double)(var4 + 0), var10, var16);
+				var5.addVertexWithUV((double)(var2 + 1 - 0), (double)((float)(var3 + 0) + var34), (double)(var4 + 1), var12, var16);
+				var5.addVertexWithUV((double)((float)(var2 + 1) - var37), (double)((float)var3 + var18 + var34), (double)(var4 + 1), var12, var14);
+				var5.addVertexWithUV((double)((float)(var2 + 1) - var37), (double)((float)var3 + var18 + var34), (double)(var4 + 1), var12, var14);
+				var5.addVertexWithUV((double)(var2 + 1 - 0), (double)((float)(var3 + 0) + var34), (double)(var4 + 1), var12, var16);
+				var5.addVertexWithUV((double)(var2 + 1 - 0), (double)((float)(var3 + 0) + var34), (double)(var4 + 0), var10, var16);
+				var5.addVertexWithUV((double)((float)(var2 + 1) - var37), (double)((float)var3 + var18 + var34), (double)(var4 + 0), var10, var14);
 			}
 
 			if(Block.fire.canBlockCatchFire(this.blockAccess, var2, var3, var4 - 1)) {
-				var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18 + var20), (double)((float)var4 + var37), var12, var14);
-				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var20), (double)(var4 + 0), var12, var16);
-				var5.addVertexWithUV((double)(var2 + 1), (double)((float)(var3 + 0) + var20), (double)(var4 + 0), var10, var16);
-				var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18 + var20), (double)((float)var4 + var37), var10, var14);
-				var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18 + var20), (double)((float)var4 + var37), var10, var14);
-				var5.addVertexWithUV((double)(var2 + 1), (double)((float)(var3 + 0) + var20), (double)(var4 + 0), var10, var16);
-				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var20), (double)(var4 + 0), var12, var16);
-				var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18 + var20), (double)((float)var4 + var37), var12, var14);
+				var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18 + var34), (double)((float)var4 + var37), var12, var14);
+				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var34), (double)(var4 + 0), var12, var16);
+				var5.addVertexWithUV((double)(var2 + 1), (double)((float)(var3 + 0) + var34), (double)(var4 + 0), var10, var16);
+				var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18 + var34), (double)((float)var4 + var37), var10, var14);
+				var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18 + var34), (double)((float)var4 + var37), var10, var14);
+				var5.addVertexWithUV((double)(var2 + 1), (double)((float)(var3 + 0) + var34), (double)(var4 + 0), var10, var16);
+				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var34), (double)(var4 + 0), var12, var16);
+				var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18 + var34), (double)((float)var4 + var37), var12, var14);
 			}
 
 			if(Block.fire.canBlockCatchFire(this.blockAccess, var2, var3, var4 + 1)) {
-				var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18 + var20), (double)((float)(var4 + 1) - var37), var10, var14);
-				var5.addVertexWithUV((double)(var2 + 1), (double)((float)(var3 + 0) + var20), (double)(var4 + 1 - 0), var10, var16);
-				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var20), (double)(var4 + 1 - 0), var12, var16);
-				var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18 + var20), (double)((float)(var4 + 1) - var37), var12, var14);
-				var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18 + var20), (double)((float)(var4 + 1) - var37), var12, var14);
-				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var20), (double)(var4 + 1 - 0), var12, var16);
-				var5.addVertexWithUV((double)(var2 + 1), (double)((float)(var3 + 0) + var20), (double)(var4 + 1 - 0), var10, var16);
-				var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18 + var20), (double)((float)(var4 + 1) - var37), var10, var14);
+				var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18 + var34), (double)((float)(var4 + 1) - var37), var10, var14);
+				var5.addVertexWithUV((double)(var2 + 1), (double)((float)(var3 + 0) + var34), (double)(var4 + 1 - 0), var10, var16);
+				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var34), (double)(var4 + 1 - 0), var12, var16);
+				var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18 + var34), (double)((float)(var4 + 1) - var37), var12, var14);
+				var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18 + var34), (double)((float)(var4 + 1) - var37), var12, var14);
+				var5.addVertexWithUV((double)(var2 + 0), (double)((float)(var3 + 0) + var34), (double)(var4 + 1 - 0), var12, var16);
+				var5.addVertexWithUV((double)(var2 + 1), (double)((float)(var3 + 0) + var34), (double)(var4 + 1 - 0), var10, var16);
+				var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18 + var34), (double)((float)(var4 + 1) - var37), var10, var14);
 			}
 
 			if(Block.fire.canBlockCatchFire(this.blockAccess, var2, var3 + 1, var4)) {
-				var21 = (double)var2 + 0.5D + 0.5D;
-				var23 = (double)var2 + 0.5D - 0.5D;
-				var25 = (double)var4 + 0.5D + 0.5D;
-				var27 = (double)var4 + 0.5D - 0.5D;
-				var29 = (double)var2 + 0.5D - 0.5D;
-				var31 = (double)var2 + 0.5D + 0.5D;
-				var33 = (double)var4 + 0.5D - 0.5D;
+				var19 = (double)var2 + 0.5D + 0.5D;
+				var21 = (double)var2 + 0.5D - 0.5D;
+				var23 = (double)var4 + 0.5D + 0.5D;
+				var25 = (double)var4 + 0.5D - 0.5D;
+				var27 = (double)var2 + 0.5D - 0.5D;
+				var29 = (double)var2 + 0.5D + 0.5D;
+				var31 = (double)var4 + 0.5D - 0.5D;
 				double var35 = (double)var4 + 0.5D + 0.5D;
 				var10 = (double)((float)var8 / 256.0F);
 				var12 = (double)(((float)var8 + 15.99F) / 256.0F);
-				var14 = (double)((float)var9 / 256.0F);
-				var16 = (double)(((float)var9 + 15.99F) / 256.0F);
+				var14 = (double)((float)var9 / 512.0F);
+				var16 = (double)(((float)var9 + 15.99F) / 512.0F);
 				++var3;
 				var18 = -0.2F;
 				if((var2 + var3 + var4 & 1) == 0) {
-					var5.addVertexWithUV(var29, (double)((float)var3 + var18), (double)(var4 + 0), var12, var14);
-					var5.addVertexWithUV(var21, (double)(var3 + 0), (double)(var4 + 0), var12, var16);
-					var5.addVertexWithUV(var21, (double)(var3 + 0), (double)(var4 + 1), var10, var16);
-					var5.addVertexWithUV(var29, (double)((float)var3 + var18), (double)(var4 + 1), var10, var14);
+					var5.addVertexWithUV(var27, (double)((float)var3 + var18), (double)(var4 + 0), var12, var14);
+					var5.addVertexWithUV(var19, (double)(var3 + 0), (double)(var4 + 0), var12, var16);
+					var5.addVertexWithUV(var19, (double)(var3 + 0), (double)(var4 + 1), var10, var16);
+					var5.addVertexWithUV(var27, (double)((float)var3 + var18), (double)(var4 + 1), var10, var14);
 					var10 = (double)((float)var8 / 256.0F);
 					var12 = (double)(((float)var8 + 15.99F) / 256.0F);
-					var14 = (double)((float)(var9 + 16) / 256.0F);
-					var16 = (double)(((float)var9 + 15.99F + 16.0F) / 256.0F);
-					var5.addVertexWithUV(var31, (double)((float)var3 + var18), (double)(var4 + 1), var12, var14);
-					var5.addVertexWithUV(var23, (double)(var3 + 0), (double)(var4 + 1), var12, var16);
-					var5.addVertexWithUV(var23, (double)(var3 + 0), (double)(var4 + 0), var10, var16);
-					var5.addVertexWithUV(var31, (double)((float)var3 + var18), (double)(var4 + 0), var10, var14);
+					var14 = (double)((float)(var9 + 16) / 512.0F);
+					var16 = (double)(((float)var9 + 15.99F + 16.0F) / 512.0F);
+					var5.addVertexWithUV(var29, (double)((float)var3 + var18), (double)(var4 + 1), var12, var14);
+					var5.addVertexWithUV(var21, (double)(var3 + 0), (double)(var4 + 1), var12, var16);
+					var5.addVertexWithUV(var21, (double)(var3 + 0), (double)(var4 + 0), var10, var16);
+					var5.addVertexWithUV(var29, (double)((float)var3 + var18), (double)(var4 + 0), var10, var14);
 				} else {
 					var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18), var35, var12, var14);
-					var5.addVertexWithUV((double)(var2 + 0), (double)(var3 + 0), var27, var12, var16);
-					var5.addVertexWithUV((double)(var2 + 1), (double)(var3 + 0), var27, var10, var16);
+					var5.addVertexWithUV((double)(var2 + 0), (double)(var3 + 0), var25, var12, var16);
+					var5.addVertexWithUV((double)(var2 + 1), (double)(var3 + 0), var25, var10, var16);
 					var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18), var35, var10, var14);
 					var10 = (double)((float)var8 / 256.0F);
 					var12 = (double)(((float)var8 + 15.99F) / 256.0F);
-					var14 = (double)((float)(var9 + 16) / 256.0F);
-					var16 = (double)(((float)var9 + 15.99F + 16.0F) / 256.0F);
-					var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18), var33, var12, var14);
-					var5.addVertexWithUV((double)(var2 + 1), (double)(var3 + 0), var25, var12, var16);
-					var5.addVertexWithUV((double)(var2 + 0), (double)(var3 + 0), var25, var10, var16);
-					var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18), var33, var10, var14);
+					var14 = (double)((float)(var9 + 16) / 512.0F);
+					var16 = (double)(((float)var9 + 15.99F + 16.0F) / 512.0F);
+					var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18), var31, var12, var14);
+					var5.addVertexWithUV((double)(var2 + 1), (double)(var3 + 0), var23, var12, var16);
+					var5.addVertexWithUV((double)(var2 + 0), (double)(var3 + 0), var23, var10, var16);
+					var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18), var31, var10, var14);
 				}
 			}
 		} else {
-			double var19 = (double)var2 + 0.5D + 0.2D;
-			var21 = (double)var2 + 0.5D - 0.2D;
-			var23 = (double)var4 + 0.5D + 0.2D;
-			var25 = (double)var4 + 0.5D - 0.2D;
-			var27 = (double)var2 + 0.5D - 0.3D;
-			var29 = (double)var2 + 0.5D + 0.3D;
-			var31 = (double)var4 + 0.5D - 0.3D;
-			var33 = (double)var4 + 0.5D + 0.3D;
-			var5.addVertexWithUV(var27, (double)((float)var3 + var18), (double)(var4 + 1), var12, var14);
-			var5.addVertexWithUV(var19, (double)(var3 + 0), (double)(var4 + 1), var12, var16);
-			var5.addVertexWithUV(var19, (double)(var3 + 0), (double)(var4 + 0), var10, var16);
-			var5.addVertexWithUV(var27, (double)((float)var3 + var18), (double)(var4 + 0), var10, var14);
-			var5.addVertexWithUV(var29, (double)((float)var3 + var18), (double)(var4 + 0), var12, var14);
-			var5.addVertexWithUV(var21, (double)(var3 + 0), (double)(var4 + 0), var12, var16);
-			var5.addVertexWithUV(var21, (double)(var3 + 0), (double)(var4 + 1), var10, var16);
-			var5.addVertexWithUV(var29, (double)((float)var3 + var18), (double)(var4 + 1), var10, var14);
-			var10 = (double)((float)var8 / 256.0F);
-			var12 = (double)(((float)var8 + 15.99F) / 256.0F);
-			var14 = (double)((float)(var9 + 16) / 256.0F);
-			var16 = (double)(((float)var9 + 15.99F + 16.0F) / 256.0F);
-			var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18), var33, var12, var14);
-			var5.addVertexWithUV((double)(var2 + 1), (double)(var3 + 0), var25, var12, var16);
-			var5.addVertexWithUV((double)(var2 + 0), (double)(var3 + 0), var25, var10, var16);
-			var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18), var33, var10, var14);
-			var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18), var31, var12, var14);
-			var5.addVertexWithUV((double)(var2 + 0), (double)(var3 + 0), var23, var12, var16);
-			var5.addVertexWithUV((double)(var2 + 1), (double)(var3 + 0), var23, var10, var16);
-			var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18), var31, var10, var14);
-			var19 = (double)var2 + 0.5D - 0.5D;
-			var21 = (double)var2 + 0.5D + 0.5D;
-			var23 = (double)var4 + 0.5D - 0.5D;
-			var25 = (double)var4 + 0.5D + 0.5D;
-			var27 = (double)var2 + 0.5D - 0.4D;
-			var29 = (double)var2 + 0.5D + 0.4D;
-			var31 = (double)var4 + 0.5D - 0.4D;
-			var33 = (double)var4 + 0.5D + 0.4D;
-			var5.addVertexWithUV(var27, (double)((float)var3 + var18), (double)(var4 + 0), var10, var14);
-			var5.addVertexWithUV(var19, (double)(var3 + 0), (double)(var4 + 0), var10, var16);
-			var5.addVertexWithUV(var19, (double)(var3 + 0), (double)(var4 + 1), var12, var16);
-			var5.addVertexWithUV(var27, (double)((float)var3 + var18), (double)(var4 + 1), var12, var14);
-			var5.addVertexWithUV(var29, (double)((float)var3 + var18), (double)(var4 + 1), var10, var14);
-			var5.addVertexWithUV(var21, (double)(var3 + 0), (double)(var4 + 1), var10, var16);
-			var5.addVertexWithUV(var21, (double)(var3 + 0), (double)(var4 + 0), var12, var16);
-			var5.addVertexWithUV(var29, (double)((float)var3 + var18), (double)(var4 + 0), var12, var14);
-			var10 = (double)((float)var8 / 256.0F);
-			var12 = (double)(((float)var8 + 15.99F) / 256.0F);
-			var14 = (double)((float)var9 / 256.0F);
-			var16 = (double)(((float)var9 + 15.99F) / 256.0F);
-			var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18), var33, var10, var14);
-			var5.addVertexWithUV((double)(var2 + 0), (double)(var3 + 0), var25, var10, var16);
-			var5.addVertexWithUV((double)(var2 + 1), (double)(var3 + 0), var25, var12, var16);
-			var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18), var33, var12, var14);
-			var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18), var31, var10, var14);
-			var5.addVertexWithUV((double)(var2 + 1), (double)(var3 + 0), var23, var10, var16);
-			var5.addVertexWithUV((double)(var2 + 0), (double)(var3 + 0), var23, var12, var16);
-			var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18), var31, var12, var14);
+			double var33 = (double)var2 + 0.5D + 0.2D;
+			var19 = (double)var2 + 0.5D - 0.2D;
+			var21 = (double)var4 + 0.5D + 0.2D;
+			var23 = (double)var4 + 0.5D - 0.2D;
+			var25 = (double)var2 + 0.5D - 0.3D;
+			var27 = (double)var2 + 0.5D + 0.3D;
+			var29 = (double)var4 + 0.5D - 0.3D;
+			var31 = (double)var4 + 0.5D + 0.3D;
+			var5.addVertexWithUV(var25, (double)((float)var3 + var18), (double)(var4 + 1), var12, var14);
+			var5.addVertexWithUV(var33, (double)(var3 + 0), (double)(var4 + 1), var12, var16);
+			var5.addVertexWithUV(var33, (double)(var3 + 0), (double)(var4 + 0), var10, var16);
+			var5.addVertexWithUV(var25, (double)((float)var3 + var18), (double)(var4 + 0), var10, var14);
+			var5.addVertexWithUV(var27, (double)((float)var3 + var18), (double)(var4 + 0), var12, var14);
+			var5.addVertexWithUV(var19, (double)(var3 + 0), (double)(var4 + 0), var12, var16);
+			var5.addVertexWithUV(var19, (double)(var3 + 0), (double)(var4 + 1), var10, var16);
+			var5.addVertexWithUV(var27, (double)((float)var3 + var18), (double)(var4 + 1), var10, var14);
+			var10 = (double)((float)var8 / 256.0F);
+			var12 = (double)(((float)var8 + 15.99F) / 256.0F);
+			var14 = (double)((float)(var9 + 16) / 512.0F);
+			var16 = (double)(((float)var9 + 15.99F + 16.0F) / 512.0F);
+			var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18), var31, var12, var14);
+			var5.addVertexWithUV((double)(var2 + 1), (double)(var3 + 0), var23, var12, var16);
+			var5.addVertexWithUV((double)(var2 + 0), (double)(var3 + 0), var23, var10, var16);
+			var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18), var31, var10, var14);
+			var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18), var29, var12, var14);
+			var5.addVertexWithUV((double)(var2 + 0), (double)(var3 + 0), var21, var12, var16);
+			var5.addVertexWithUV((double)(var2 + 1), (double)(var3 + 0), var21, var10, var16);
+			var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18), var29, var10, var14);
+			var33 = (double)var2 + 0.5D - 0.5D;
+			var19 = (double)var2 + 0.5D + 0.5D;
+			var21 = (double)var4 + 0.5D - 0.5D;
+			var23 = (double)var4 + 0.5D + 0.5D;
+			var25 = (double)var2 + 0.5D - 0.4D;
+			var27 = (double)var2 + 0.5D + 0.4D;
+			var29 = (double)var4 + 0.5D - 0.4D;
+			var31 = (double)var4 + 0.5D + 0.4D;
+			var5.addVertexWithUV(var25, (double)((float)var3 + var18), (double)(var4 + 0), var10, var14);
+			var5.addVertexWithUV(var33, (double)(var3 + 0), (double)(var4 + 0), var10, var16);
+			var5.addVertexWithUV(var33, (double)(var3 + 0), (double)(var4 + 1), var12, var16);
+			var5.addVertexWithUV(var25, (double)((float)var3 + var18), (double)(var4 + 1), var12, var14);
+			var5.addVertexWithUV(var27, (double)((float)var3 + var18), (double)(var4 + 1), var10, var14);
+			var5.addVertexWithUV(var19, (double)(var3 + 0), (double)(var4 + 1), var10, var16);
+			var5.addVertexWithUV(var19, (double)(var3 + 0), (double)(var4 + 0), var12, var16);
+			var5.addVertexWithUV(var27, (double)((float)var3 + var18), (double)(var4 + 0), var12, var14);
+			var10 = (double)((float)var8 / 256.0F);
+			var12 = (double)(((float)var8 + 15.99F) / 256.0F);
+			var14 = (double)((float)var9 / 512.0F);
+			var16 = (double)(((float)var9 + 15.99F) / 512.0F);
+			var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18), var31, var10, var14);
+			var5.addVertexWithUV((double)(var2 + 0), (double)(var3 + 0), var23, var10, var16);
+			var5.addVertexWithUV((double)(var2 + 1), (double)(var3 + 0), var23, var12, var16);
+			var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18), var31, var12, var14);
+			var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var18), var29, var10, var14);
+			var5.addVertexWithUV((double)(var2 + 1), (double)(var3 + 0), var21, var10, var16);
+			var5.addVertexWithUV((double)(var2 + 0), (double)(var3 + 0), var21, var12, var16);
+			var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var18), var29, var12, var14);
 		}
 
 		return true;
@@ -412,14 +791,14 @@
 			var6 = this.overrideBlockTexture;
 		}
 
-		float var7 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4);
+		float var7 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4);
 		var5.setColorOpaque_F(var7, var7, var7);
 		int var8 = (var6 & 15) << 4;
-		int var9 = var6 & 240;
+		int var9 = var6 & 4080;
 		double var10 = (double)((float)var8 / 256.0F);
 		double var12 = (double)(((float)var8 + 15.99F) / 256.0F);
-		double var14 = (double)((float)var9 / 256.0F);
-		double var16 = (double)(((float)var9 + 15.99F) / 256.0F);
+		double var14 = (double)((float)var9 / 512.0F);
+		double var16 = (double)(((float)var9 + 15.99F) / 512.0F);
 		float var18 = 0.0F;
 		float var19 = 0.03125F;
 		boolean var20 = BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, var2 - 1, var3, var4) || !this.blockAccess.isBlockNormalCube(var2 - 1, var3, var4) && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, var2 - 1, var3 - 1, var4);
@@ -461,8 +840,8 @@
 		if(var29 != 0) {
 			var10 = (double)((float)(var8 + 16) / 256.0F);
 			var12 = (double)(((float)(var8 + 16) + 15.99F) / 256.0F);
-			var14 = (double)((float)var9 / 256.0F);
-			var16 = (double)(((float)var9 + 15.99F) / 256.0F);
+			var14 = (double)((float)var9 / 512.0F);
+			var16 = (double)(((float)var9 + 15.99F) / 512.0F);
 		}
 
 		if(var29 == 0) {
@@ -488,7 +867,7 @@
 				}
 
 				if(!var22) {
-					var14 += (double)(var24 / 16.0F);
+					var14 += (double)(var24 / 32.0F);
 				}
 
 				if(!var23) {
@@ -496,7 +875,7 @@
 				}
 
 				if(!var23) {
-					var16 -= (double)(var24 / 16.0F);
+					var16 -= (double)(var24 / 32.0F);
 				}
 			}
 
@@ -522,8 +901,8 @@
 
 		var10 = (double)((float)(var8 + 16) / 256.0F);
 		var12 = (double)(((float)(var8 + 16) + 15.99F) / 256.0F);
-		var14 = (double)((float)var9 / 256.0F);
-		var16 = (double)(((float)var9 + 15.99F) / 256.0F);
+		var14 = (double)((float)var9 / 512.0F);
+		var16 = (double)(((float)var9 + 15.99F) / 512.0F);
 		if(!this.blockAccess.isBlockNormalCube(var2, var3 + 1, var4)) {
 			if(this.blockAccess.isBlockNormalCube(var2 - 1, var3, var4) && this.blockAccess.getBlockId(var2 - 1, var3 + 1, var4) == Block.redstoneWire.blockID) {
 				var5.addVertexWithUV((double)((float)var2 + var19), (double)((float)(var3 + 1) + var18), (double)((float)(var4 + 1) + var18), var12, var14);
@@ -565,14 +944,14 @@
 			var7 = this.overrideBlockTexture;
 		}
 
-		float var8 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4);
+		float var8 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4);
 		var5.setColorOpaque_F(var8, var8, var8);
 		int var9 = (var7 & 15) << 4;
-		int var10 = var7 & 240;
+		int var10 = var7 & 4080;
 		double var11 = (double)((float)var9 / 256.0F);
 		double var13 = (double)(((float)var9 + 15.99F) / 256.0F);
-		double var15 = (double)((float)var10 / 256.0F);
-		double var17 = (double)(((float)var10 + 15.99F) / 256.0F);
+		double var15 = (double)((float)var10 / 512.0F);
+		double var17 = (double)(((float)var10 + 15.99F) / 512.0F);
 		float var19 = 1.0F / 16.0F;
 		float var20 = (float)(var2 + 1);
 		float var21 = (float)(var2 + 1);
@@ -645,43 +1024,53 @@
 			var6 = this.overrideBlockTexture;
 		}
 
-		float var7 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4);
+		float var7 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4);
 		var5.setColorOpaque_F(var7, var7, var7);
 		int var8 = (var6 & 15) << 4;
-		int var9 = var6 & 240;
+		int var9 = var6 & 4080;
 		double var10 = (double)((float)var8 / 256.0F);
 		double var12 = (double)(((float)var8 + 15.99F) / 256.0F);
-		double var14 = (double)((float)var9 / 256.0F);
-		double var16 = (double)(((float)var9 + 15.99F) / 256.0F);
+		double var14 = (double)((float)var9 / 512.0F);
+		double var16 = (double)(((float)var9 + 15.99F) / 512.0F);
 		int var18 = this.blockAccess.getBlockMetadata(var2, var3, var4);
 		float var19 = 0.0F;
 		float var20 = 0.05F;
-		if(var18 == 5) {
-			var5.addVertexWithUV((double)((float)var2 + var20), (double)((float)(var3 + 1) + var19), (double)((float)(var4 + 1) + var19), var10, var14);
-			var5.addVertexWithUV((double)((float)var2 + var20), (double)((float)(var3 + 0) - var19), (double)((float)(var4 + 1) + var19), var10, var16);
-			var5.addVertexWithUV((double)((float)var2 + var20), (double)((float)(var3 + 0) - var19), (double)((float)(var4 + 0) - var19), var12, var16);
-			var5.addVertexWithUV((double)((float)var2 + var20), (double)((float)(var3 + 1) + var19), (double)((float)(var4 + 0) - var19), var12, var14);
-		}
-
-		if(var18 == 4) {
-			var5.addVertexWithUV((double)((float)(var2 + 1) - var20), (double)((float)(var3 + 0) - var19), (double)((float)(var4 + 1) + var19), var12, var16);
-			var5.addVertexWithUV((double)((float)(var2 + 1) - var20), (double)((float)(var3 + 1) + var19), (double)((float)(var4 + 1) + var19), var12, var14);
-			var5.addVertexWithUV((double)((float)(var2 + 1) - var20), (double)((float)(var3 + 1) + var19), (double)((float)(var4 + 0) - var19), var10, var14);
-			var5.addVertexWithUV((double)((float)(var2 + 1) - var20), (double)((float)(var3 + 0) - var19), (double)((float)(var4 + 0) - var19), var10, var16);
-		}
-
-		if(var18 == 3) {
-			var5.addVertexWithUV((double)((float)(var2 + 1) + var19), (double)((float)(var3 + 0) - var19), (double)((float)var4 + var20), var12, var16);
-			var5.addVertexWithUV((double)((float)(var2 + 1) + var19), (double)((float)(var3 + 1) + var19), (double)((float)var4 + var20), var12, var14);
-			var5.addVertexWithUV((double)((float)(var2 + 0) - var19), (double)((float)(var3 + 1) + var19), (double)((float)var4 + var20), var10, var14);
-			var5.addVertexWithUV((double)((float)(var2 + 0) - var19), (double)((float)(var3 + 0) - var19), (double)((float)var4 + var20), var10, var16);
-		}
-
-		if(var18 == 2) {
+		switch(var18) {
+		case 2:
 			var5.addVertexWithUV((double)((float)(var2 + 1) + var19), (double)((float)(var3 + 1) + var19), (double)((float)(var4 + 1) - var20), var10, var14);
 			var5.addVertexWithUV((double)((float)(var2 + 1) + var19), (double)((float)(var3 + 0) - var19), (double)((float)(var4 + 1) - var20), var10, var16);
 			var5.addVertexWithUV((double)((float)(var2 + 0) - var19), (double)((float)(var3 + 0) - var19), (double)((float)(var4 + 1) - var20), var12, var16);
 			var5.addVertexWithUV((double)((float)(var2 + 0) - var19), (double)((float)(var3 + 1) + var19), (double)((float)(var4 + 1) - var20), var12, var14);
+			break;
+		case 3:
+			var5.addVertexWithUV((double)((float)(var2 + 1) + var19), (double)((float)(var3 + 0) - var19), (double)((float)var4 + var20), var12, var16);
+			var5.addVertexWithUV((double)((float)(var2 + 1) + var19), (double)((float)(var3 + 1) + var19), (double)((float)var4 + var20), var12, var14);
+			var5.addVertexWithUV((double)((float)(var2 + 0) - var19), (double)((float)(var3 + 1) + var19), (double)((float)var4 + var20), var10, var14);
+			var5.addVertexWithUV((double)((float)(var2 + 0) - var19), (double)((float)(var3 + 0) - var19), (double)((float)var4 + var20), var10, var16);
+			break;
+		case 4:
+			var5.addVertexWithUV((double)((float)(var2 + 1) - var20), (double)((float)(var3 + 0) - var19), (double)((float)(var4 + 1) + var19), var12, var16);
+			var5.addVertexWithUV((double)((float)(var2 + 1) - var20), (double)((float)(var3 + 1) + var19), (double)((float)(var4 + 1) + var19), var12, var14);
+			var5.addVertexWithUV((double)((float)(var2 + 1) - var20), (double)((float)(var3 + 1) + var19), (double)((float)(var4 + 0) - var19), var10, var14);
+			var5.addVertexWithUV((double)((float)(var2 + 1) - var20), (double)((float)(var3 + 0) - var19), (double)((float)(var4 + 0) - var19), var10, var16);
+			break;
+		case 5:
+			var5.addVertexWithUV((double)((float)var2 + var20), (double)((float)(var3 + 1) + var19), (double)((float)(var4 + 1) + var19), var10, var14);
+			var5.addVertexWithUV((double)((float)var2 + var20), (double)((float)(var3 + 0) - var19), (double)((float)(var4 + 1) + var19), var10, var16);
+			var5.addVertexWithUV((double)((float)var2 + var20), (double)((float)(var3 + 0) - var19), (double)((float)(var4 + 0) - var19), var12, var16);
+			var5.addVertexWithUV((double)((float)var2 + var20), (double)((float)(var3 + 1) + var19), (double)((float)(var4 + 0) - var19), var12, var14);
+			break;
+		case 6:
+			var5.addVertexWithUV((double)((float)(var2 + 1) + var19), (double)((float)(var3 + 1) - var20), (double)((float)(var4 + 1) + var19), var10, var14);
+			var5.addVertexWithUV((double)((float)(var2 + 0) - var19), (double)((float)(var3 + 1) - var20), (double)((float)(var4 + 1) + var19), var10, var16);
+			var5.addVertexWithUV((double)((float)(var2 + 0) - var19), (double)((float)(var3 + 1) - var20), (double)((float)(var4 + 0) - var19), var12, var16);
+			var5.addVertexWithUV((double)((float)(var2 + 1) + var19), (double)((float)(var3 + 1) - var20), (double)((float)(var4 + 0) - var19), var12, var14);
+			break;
+		case 7:
+			var5.addVertexWithUV((double)((float)(var2 + 1) + var19), (double)((float)var3 + var20), (double)((float)(var4 + 1) + var19), var10, var14);
+			var5.addVertexWithUV((double)((float)(var2 + 1) + var19), (double)((float)var3 + var20), (double)((float)(var4 + 0) - var19), var10, var16);
+			var5.addVertexWithUV((double)((float)(var2 + 0) - var19), (double)((float)var3 + var20), (double)((float)(var4 + 0) - var19), var12, var16);
+			var5.addVertexWithUV((double)((float)(var2 + 0) - var19), (double)((float)var3 + var20), (double)((float)(var4 + 1) + var19), var12, var14);
 		}
 
 		return true;
@@ -689,7 +1078,7 @@
 
 	public boolean renderBlockReed(Block var1, int var2, int var3, int var4) {
 		Tessellator var5 = Tessellator.instance;
-		float var6 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4);
+		float var6 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4);
 		var5.setColorOpaque_F(var6, var6, var6);
 		this.renderCrossedSquares(var1, this.blockAccess.getBlockMetadata(var2, var3, var4), (double)var2, (double)var3, (double)var4);
 		return true;
@@ -697,7 +1086,7 @@
 
 	public boolean renderBlockCrops(Block var1, int var2, int var3, int var4) {
 		Tessellator var5 = Tessellator.instance;
-		float var6 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4);
+		float var6 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4);
 		var5.setColorOpaque_F(var6, var6, var6);
 		this.renderBlockCropsImpl(var1, this.blockAccess.getBlockMetadata(var2, var3, var4), (double)var2, (double)((float)var3 - 1.0F / 16.0F), (double)var4);
 		return true;
@@ -711,11 +1100,11 @@
 		}
 
 		int var14 = (var13 & 15) << 4;
-		int var15 = var13 & 240;
+		int var15 = var13 & 4080;
 		float var16 = (float)var14 / 256.0F;
 		float var17 = ((float)var14 + 15.99F) / 256.0F;
-		float var18 = (float)var15 / 256.0F;
-		float var19 = ((float)var15 + 15.99F) / 256.0F;
+		float var18 = (float)var15 / 512.0F;
+		float var19 = ((float)var15 + 15.99F) / 512.0F;
 		double var20 = (double)var16 + 1.75D / 64.0D;
 		double var22 = (double)var18 + 6.0D / 256.0D;
 		double var24 = (double)var16 + 9.0D / 256.0D;
@@ -752,17 +1141,17 @@
 
 	public void renderCrossedSquares(Block var1, int var2, double var3, double var5, double var7) {
 		Tessellator var9 = Tessellator.instance;
-		int var10 = var1.getBlockTextureFromSideAndMetadata(0, var2);
+		int var10 = var1.func_8086_562a2lhwZKvA2q1SYRkk6a3ib277RkRI785Nc3EOo7NAF01ZLdp6C8534NoH(this.blockAccess, 0, var2, var3, var5, var7);
 		if(this.overrideBlockTexture >= 0) {
 			var10 = this.overrideBlockTexture;
 		}
 
 		int var11 = (var10 & 15) << 4;
-		int var12 = var10 & 240;
+		int var12 = var10 & 4080;
 		double var13 = (double)((float)var11 / 256.0F);
 		double var15 = (double)(((float)var11 + 15.99F) / 256.0F);
-		double var17 = (double)((float)var12 / 256.0F);
-		double var19 = (double)(((float)var12 + 15.99F) / 256.0F);
+		double var17 = (double)((float)var12 / 512.0F);
+		double var19 = (double)(((float)var12 + 15.99F) / 512.0F);
 		double var21 = var3 + 0.5D - (double)0.45F;
 		double var23 = var3 + 0.5D + (double)0.45F;
 		double var25 = var7 + 0.5D - (double)0.45F;
@@ -793,11 +1182,11 @@
 		}
 
 		int var11 = (var10 & 15) << 4;
-		int var12 = var10 & 240;
+		int var12 = var10 & 4080;
 		double var13 = (double)((float)var11 / 256.0F);
 		double var15 = (double)(((float)var11 + 15.99F) / 256.0F);
-		double var17 = (double)((float)var12 / 256.0F);
-		double var19 = (double)(((float)var12 + 15.99F) / 256.0F);
+		double var17 = (double)((float)var12 / 512.0F);
+		double var19 = (double)(((float)var12 + 15.99F) / 512.0F);
 		double var21 = var3 + 0.5D - 0.25D;
 		double var23 = var3 + 0.5D + 0.25D;
 		double var25 = var7 + 0.5D - 0.5D;
@@ -862,120 +1251,124 @@
 			float var22 = this.getFluidHeight(var2 + 1, var3, var4 + 1, var18);
 			float var23 = this.getFluidHeight(var2 + 1, var3, var4, var18);
 			int var24;
-			int var27;
-			float var32;
-			float var33;
-			float var34;
+			int var25;
+			float var26;
+			float var27;
+			float var28;
+			float var29;
+			int var30;
+			float var35;
 			if(this.renderAllFaces || var6) {
 				var9 = true;
 				var24 = var1.getBlockTextureFromSideAndMetadata(1, var19);
-				float var25 = (float)BlockFluid.getFlowDirection(this.blockAccess, var2, var3, var4, var18);
-				if(var25 > -999.0F) {
+				var29 = (float)BlockFluid.getFlowDirection(this.blockAccess, var2, var3, var4, var18);
+				if(var29 > -999.0F) {
 					var24 = var1.getBlockTextureFromSideAndMetadata(2, var19);
 				}
 
-				int var26 = (var24 & 15) << 4;
-				var27 = var24 & 240;
-				double var28 = ((double)var26 + 8.0D) / 256.0D;
-				double var30 = ((double)var27 + 8.0D) / 256.0D;
-				if(var25 < -999.0F) {
-					var25 = 0.0F;
+				var30 = (var24 & 15) << 4;
+				var25 = var24 & 4080;
+				double var31 = ((double)var30 + 8.0D) / 256.0D;
+				double var33 = ((double)var25 + 8.0D) / 512.0D;
+				if(var29 < -999.0F) {
+					var29 = 0.0F;
 				} else {
-					var28 = (double)((float)(var26 + 16) / 256.0F);
-					var30 = (double)((float)(var27 + 16) / 256.0F);
+					var31 = (double)((float)(var30 + 16) / 256.0F);
+					var33 = (double)((float)(var25 + 16) / 512.0F);
 				}
 
-				var32 = MathHelper.sin(var25) * 8.0F / 256.0F;
-				var33 = MathHelper.cos(var25) * 8.0F / 256.0F;
-				var34 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4);
-				var5.setColorOpaque_F(var11 * var34, var11 * var34, var11 * var34);
-				var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var20), (double)(var4 + 0), var28 - (double)var33 - (double)var32, var30 - (double)var33 + (double)var32);
-				var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var21), (double)(var4 + 1), var28 - (double)var33 + (double)var32, var30 + (double)var33 + (double)var32);
-				var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var22), (double)(var4 + 1), var28 + (double)var33 + (double)var32, var30 + (double)var33 - (double)var32);
-				var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var23), (double)(var4 + 0), var28 + (double)var33 - (double)var32, var30 - (double)var33 - (double)var32);
+				var35 = MathHelper.sin(var29) * 8.0F / 256.0F;
+				float var36 = MathHelper.cos(var29) * 8.0F / 256.0F;
+				var26 = MathHelper.sin(var29) * 8.0F / 512.0F;
+				var27 = MathHelper.cos(var29) * 8.0F / 512.0F;
+				var28 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4);
+				var5.setColorOpaque_F(var11 * var28, var11 * var28, var11 * var28);
+				var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var20), (double)(var4 + 0), var31 - (double)var36 - (double)var35, var33 - (double)var27 + (double)var26);
+				var5.addVertexWithUV((double)(var2 + 0), (double)((float)var3 + var21), (double)(var4 + 1), var31 - (double)var36 + (double)var35, var33 + (double)var27 + (double)var26);
+				var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var22), (double)(var4 + 1), var31 + (double)var36 + (double)var35, var33 + (double)var27 - (double)var26);
+				var5.addVertexWithUV((double)(var2 + 1), (double)((float)var3 + var23), (double)(var4 + 0), var31 + (double)var36 - (double)var35, var33 - (double)var27 - (double)var26);
 			}
 
 			if(this.renderAllFaces || var7) {
-				float var48 = var1.getBlockBrightness(this.blockAccess, var2, var3 - 1, var4);
-				var5.setColorOpaque_F(var10 * var48, var10 * var48, var10 * var48);
+				var29 = var1.getRenderSideBrightness(this.blockAccess, var2, var3 - 1, var4);
+				var5.setColorOpaque_F(var10 * var29, var10 * var29, var10 * var29);
 				this.renderBottomFace(var1, (double)var2, (double)var3, (double)var4, var1.getBlockTextureFromSide(0));
 				var9 = true;
 			}
 
 			for(var24 = 0; var24 < 4; ++var24) {
-				int var49 = var2;
-				var27 = var4;
+				int var47 = var2;
+				var25 = var4;
 				if(var24 == 0) {
-					var27 = var4 - 1;
+					var25 = var4 - 1;
 				}
 
 				if(var24 == 1) {
-					++var27;
+					++var25;
 				}
 
 				if(var24 == 2) {
-					var49 = var2 - 1;
+					var47 = var2 - 1;
 				}
 
 				if(var24 == 3) {
-					++var49;
+					++var47;
 				}
 
-				int var50 = var1.getBlockTextureFromSideAndMetadata(var24 + 2, var19);
-				int var29 = (var50 & 15) << 4;
-				int var51 = var50 & 240;
+				var30 = var1.getBlockTextureFromSideAndMetadata(var24 + 2, var19);
+				int var48 = (var30 & 15) << 4;
+				int var32 = var30 & 4080;
 				if(this.renderAllFaces || var8[var24]) {
-					float var31;
-					float var35;
-					float var36;
+					float var34;
+					float var49;
 					if(var24 == 0) {
-						var31 = var20;
-						var32 = var23;
-						var33 = (float)var2;
-						var35 = (float)(var2 + 1);
-						var34 = (float)var4;
-						var36 = (float)var4;
+						var49 = var20;
+						var26 = var23;
+						var27 = (float)var2;
+						var34 = (float)(var2 + 1);
+						var28 = (float)var4;
+						var35 = (float)var4;
 					} else if(var24 == 1) {
-						var31 = var22;
-						var32 = var21;
-						var33 = (float)(var2 + 1);
-						var35 = (float)var2;
-						var34 = (float)(var4 + 1);
-						var36 = (float)(var4 + 1);
+						var49 = var22;
+						var26 = var21;
+						var27 = (float)(var2 + 1);
+						var34 = (float)var2;
+						var28 = (float)(var4 + 1);
+						var35 = (float)(var4 + 1);
 					} else if(var24 == 2) {
-						var31 = var21;
-						var32 = var20;
-						var33 = (float)var2;
-						var35 = (float)var2;
-						var34 = (float)(var4 + 1);
-						var36 = (float)var4;
+						var49 = var21;
+						var26 = var20;
+						var27 = (float)var2;
+						var34 = (float)var2;
+						var28 = (float)(var4 + 1);
+						var35 = (float)var4;
 					} else {
-						var31 = var23;
-						var32 = var22;
-						var33 = (float)(var2 + 1);
-						var35 = (float)(var2 + 1);
-						var34 = (float)var4;
-						var36 = (float)(var4 + 1);
+						var49 = var23;
+						var26 = var22;
+						var27 = (float)(var2 + 1);
+						var34 = (float)(var2 + 1);
+						var28 = (float)var4;
+						var35 = (float)(var4 + 1);
 					}
 
 					var9 = true;
-					double var37 = (double)((float)(var29 + 0) / 256.0F);
-					double var39 = ((double)(var29 + 16) - 0.01D) / 256.0D;
-					double var41 = (double)(((float)var51 + (1.0F - var31) * 16.0F) / 256.0F);
-					double var43 = (double)(((float)var51 + (1.0F - var32) * 16.0F) / 256.0F);
-					double var45 = ((double)(var51 + 16) - 0.01D) / 256.0D;
-					float var47 = var1.getBlockBrightness(this.blockAccess, var49, var3, var27);
+					double var50 = (double)((float)(var48 + 0) / 256.0F);
+					double var38 = ((double)(var48 + 16) - 0.01D) / 256.0D;
+					double var40 = (double)(((float)var32 + (1.0F - var49) * 16.0F) / 512.0F);
+					double var42 = (double)(((float)var32 + (1.0F - var26) * 16.0F) / 512.0F);
+					double var44 = ((double)(var32 + 16) - 0.01D) / 512.0D;
+					float var46 = var1.getRenderSideBrightness(this.blockAccess, var47, var3, var25);
 					if(var24 < 2) {
-						var47 *= var12;
+						var46 *= var12;
 					} else {
-						var47 *= var13;
+						var46 *= var13;
 					}
 
-					var5.setColorOpaque_F(var11 * var47, var11 * var47, var11 * var47);
-					var5.addVertexWithUV((double)var33, (double)((float)var3 + var31), (double)var34, var37, var41);
-					var5.addVertexWithUV((double)var35, (double)((float)var3 + var32), (double)var36, var39, var43);
-					var5.addVertexWithUV((double)var35, (double)(var3 + 0), (double)var36, var39, var45);
-					var5.addVertexWithUV((double)var33, (double)(var3 + 0), (double)var34, var37, var45);
+					var5.setColorOpaque_F(var11 * var46, var11 * var46, var11 * var46);
+					var5.addVertexWithUV((double)var27, (double)((float)var3 + var49), (double)var28, var50, var40);
+					var5.addVertexWithUV((double)var34, (double)((float)var3 + var26), (double)var35, var38, var42);
+					var5.addVertexWithUV((double)var34, (double)(var3 + 0), (double)var35, var38, var44);
+					var5.addVertexWithUV((double)var27, (double)(var3 + 0), (double)var28, var50, var44);
 				}
 			}
 
@@ -991,25 +1384,25 @@
 
 		for(int var7 = 0; var7 < 4; ++var7) {
 			int var8 = var1 - (var7 & 1);
-			int var10 = var3 - (var7 >> 1 & 1);
-			if(this.blockAccess.getBlockMaterial(var8, var2 + 1, var10) == var4) {
+			int var9 = var3 - (var7 >> 1 & 1);
+			if(this.blockAccess.getBlockMaterial(var8, var2 + 1, var9) == var4) {
 				return 1.0F;
 			}
 
-			Material var11 = this.blockAccess.getBlockMaterial(var8, var2, var10);
-			if(var11 != var4) {
-				if(!var11.isSolid()) {
+			Material var10 = this.blockAccess.getBlockMaterial(var8, var2, var9);
+			if(var10 != var4) {
+				if(!var10.isSolid()) {
 					++var6;
 					++var5;
 				}
 			} else {
-				int var12 = this.blockAccess.getBlockMetadata(var8, var2, var10);
-				if(var12 >= 8 || var12 == 0) {
-					var6 += BlockFluid.getFluidHeightPercent(var12) * 10.0F;
+				int var11 = this.blockAccess.getBlockMetadata(var8, var2, var9);
+				if(var11 >= 8 || var11 == 0) {
+					var6 += BlockFluid.getFluidHeightPercent(var11) * 10.0F;
 					var5 += 10;
 				}
 
-				var6 += BlockFluid.getFluidHeightPercent(var12);
+				var6 += BlockFluid.getFluidHeightPercent(var11);
 				++var5;
 			}
 		}
@@ -1024,43 +1417,43 @@
 		float var9 = 0.6F;
 		Tessellator var10 = Tessellator.instance;
 		var10.startDrawingQuads();
-		float var11 = var1.getBlockBrightness(var2, var3, var4, var5);
-		float var12 = var1.getBlockBrightness(var2, var3, var4 - 1, var5);
+		float var11 = var1.getRenderSideBrightness(var2, var3, var4, var5);
+		float var12 = var1.getRenderSideBrightness(var2, var3, var4 - 1, var5);
 		if(var12 < var11) {
 			var12 = var11;
 		}
 
 		var10.setColorOpaque_F(var6 * var12, var6 * var12, var6 * var12);
 		this.renderBottomFace(var1, -0.5D, -0.5D, -0.5D, var1.getBlockTextureFromSide(0));
-		var12 = var1.getBlockBrightness(var2, var3, var4 + 1, var5);
+		var12 = var1.getRenderSideBrightness(var2, var3, var4 + 1, var5);
 		if(var12 < var11) {
 			var12 = var11;
 		}
 
 		var10.setColorOpaque_F(var7 * var12, var7 * var12, var7 * var12);
 		this.renderTopFace(var1, -0.5D, -0.5D, -0.5D, var1.getBlockTextureFromSide(1));
-		var12 = var1.getBlockBrightness(var2, var3, var4, var5 - 1);
+		var12 = var1.getRenderSideBrightness(var2, var3, var4, var5 - 1);
 		if(var12 < var11) {
 			var12 = var11;
 		}
 
 		var10.setColorOpaque_F(var8 * var12, var8 * var12, var8 * var12);
 		this.renderEastFace(var1, -0.5D, -0.5D, -0.5D, var1.getBlockTextureFromSide(2));
-		var12 = var1.getBlockBrightness(var2, var3, var4, var5 + 1);
+		var12 = var1.getRenderSideBrightness(var2, var3, var4, var5 + 1);
 		if(var12 < var11) {
 			var12 = var11;
 		}
 
 		var10.setColorOpaque_F(var8 * var12, var8 * var12, var8 * var12);
 		this.renderWestFace(var1, -0.5D, -0.5D, -0.5D, var1.getBlockTextureFromSide(3));
-		var12 = var1.getBlockBrightness(var2, var3 - 1, var4, var5);
+		var12 = var1.getRenderSideBrightness(var2, var3 - 1, var4, var5);
 		if(var12 < var11) {
 			var12 = var11;
 		}
 
 		var10.setColorOpaque_F(var9 * var12, var9 * var12, var9 * var12);
 		this.renderNorthFace(var1, -0.5D, -0.5D, -0.5D, var1.getBlockTextureFromSide(4));
-		var12 = var1.getBlockBrightness(var2, var3 + 1, var4, var5);
+		var12 = var1.getRenderSideBrightness(var2, var3 + 1, var4, var5);
 		if(var12 < var11) {
 			var12 = var11;
 		}
@@ -1097,17 +1490,17 @@
 		float var23 = var11 * var7;
 		float var24 = var12 * var7;
 		float var25 = var13 * var7;
-		float var26 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4);
+		float var26 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4);
 		float var27;
 		if(this.renderAllFaces || var1.shouldSideBeRendered(this.blockAccess, var2, var3 - 1, var4, 0)) {
-			var27 = var1.getBlockBrightness(this.blockAccess, var2, var3 - 1, var4);
+			var27 = var1.getRenderSideBrightness(this.blockAccess, var2, var3 - 1, var4);
 			var8.setColorOpaque_F(var14 * var27, var18 * var27, var22 * var27);
 			this.renderBottomFace(var1, (double)var2, (double)var3, (double)var4, var1.getBlockTexture(this.blockAccess, var2, var3, var4, 0));
 			var9 = true;
 		}
 
 		if(this.renderAllFaces || var1.shouldSideBeRendered(this.blockAccess, var2, var3 + 1, var4, 1)) {
-			var27 = var1.getBlockBrightness(this.blockAccess, var2, var3 + 1, var4);
+			var27 = var1.getRenderSideBrightness(this.blockAccess, var2, var3 + 1, var4);
 			if(var1.maxY != 1.0D && !var1.material.getIsLiquid()) {
 				var27 = var26;
 			}
@@ -1118,7 +1511,7 @@
 		}
 
 		if(this.renderAllFaces || var1.shouldSideBeRendered(this.blockAccess, var2, var3, var4 - 1, 2)) {
-			var27 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4 - 1);
+			var27 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4 - 1);
 			if(var1.minZ > 0.0D) {
 				var27 = var26;
 			}
@@ -1129,7 +1522,7 @@
 		}
 
 		if(this.renderAllFaces || var1.shouldSideBeRendered(this.blockAccess, var2, var3, var4 + 1, 3)) {
-			var27 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4 + 1);
+			var27 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4 + 1);
 			if(var1.maxZ < 1.0D) {
 				var27 = var26;
 			}
@@ -1140,7 +1533,7 @@
 		}
 
 		if(this.renderAllFaces || var1.shouldSideBeRendered(this.blockAccess, var2 - 1, var3, var4, 4)) {
-			var27 = var1.getBlockBrightness(this.blockAccess, var2 - 1, var3, var4);
+			var27 = var1.getRenderSideBrightness(this.blockAccess, var2 - 1, var3, var4);
 			if(var1.minX > 0.0D) {
 				var27 = var26;
 			}
@@ -1151,7 +1544,7 @@
 		}
 
 		if(this.renderAllFaces || var1.shouldSideBeRendered(this.blockAccess, var2 + 1, var3, var4, 5)) {
-			var27 = var1.getBlockBrightness(this.blockAccess, var2 + 1, var3, var4);
+			var27 = var1.getRenderSideBrightness(this.blockAccess, var2 + 1, var3, var4);
 			if(var1.maxX < 1.0D) {
 				var27 = var26;
 			}
@@ -1192,17 +1585,17 @@
 		float var24 = var12 * var7;
 		float var25 = var13 * var7;
 		float var26 = 1.0F / 16.0F;
-		float var27 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4);
+		float var27 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4);
 		float var28;
 		if(this.renderAllFaces || var1.shouldSideBeRendered(this.blockAccess, var2, var3 - 1, var4, 0)) {
-			var28 = var1.getBlockBrightness(this.blockAccess, var2, var3 - 1, var4);
+			var28 = var1.getRenderSideBrightness(this.blockAccess, var2, var3 - 1, var4);
 			var8.setColorOpaque_F(var14 * var28, var18 * var28, var22 * var28);
 			this.renderBottomFace(var1, (double)var2, (double)var3, (double)var4, var1.getBlockTexture(this.blockAccess, var2, var3, var4, 0));
 			var9 = true;
 		}
 
 		if(this.renderAllFaces || var1.shouldSideBeRendered(this.blockAccess, var2, var3 + 1, var4, 1)) {
-			var28 = var1.getBlockBrightness(this.blockAccess, var2, var3 + 1, var4);
+			var28 = var1.getRenderSideBrightness(this.blockAccess, var2, var3 + 1, var4);
 			if(var1.maxY != 1.0D && !var1.material.getIsLiquid()) {
 				var28 = var27;
 			}
@@ -1213,7 +1606,7 @@
 		}
 
 		if(this.renderAllFaces || var1.shouldSideBeRendered(this.blockAccess, var2, var3, var4 - 1, 2)) {
-			var28 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4 - 1);
+			var28 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4 - 1);
 			if(var1.minZ > 0.0D) {
 				var28 = var27;
 			}
@@ -1226,7 +1619,7 @@
 		}
 
 		if(this.renderAllFaces || var1.shouldSideBeRendered(this.blockAccess, var2, var3, var4 + 1, 3)) {
-			var28 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4 + 1);
+			var28 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4 + 1);
 			if(var1.maxZ < 1.0D) {
 				var28 = var27;
 			}
@@ -1239,7 +1632,7 @@
 		}
 
 		if(this.renderAllFaces || var1.shouldSideBeRendered(this.blockAccess, var2 - 1, var3, var4, 4)) {
-			var28 = var1.getBlockBrightness(this.blockAccess, var2 - 1, var3, var4);
+			var28 = var1.getRenderSideBrightness(this.blockAccess, var2 - 1, var3, var4);
 			if(var1.minX > 0.0D) {
 				var28 = var27;
 			}
@@ -1252,7 +1645,7 @@
 		}
 
 		if(this.renderAllFaces || var1.shouldSideBeRendered(this.blockAccess, var2 + 1, var3, var4, 5)) {
-			var28 = var1.getBlockBrightness(this.blockAccess, var2 + 1, var3, var4);
+			var28 = var1.getRenderSideBrightness(this.blockAccess, var2 + 1, var3, var4);
 			if(var1.maxX < 1.0D) {
 				var28 = var27;
 			}
@@ -1362,8 +1755,8 @@
 		float var9 = 1.0F;
 		float var10 = 0.8F;
 		float var11 = 0.6F;
-		float var12 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4);
-		float var13 = var1.getBlockBrightness(this.blockAccess, var2, var3 - 1, var4);
+		float var12 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4);
+		float var13 = var1.getRenderSideBrightness(this.blockAccess, var2, var3 - 1, var4);
 		if(var6.minY > 0.0D) {
 			var13 = var12;
 		}
@@ -1375,7 +1768,7 @@
 		var5.setColorOpaque_F(var8 * var13, var8 * var13, var8 * var13);
 		this.renderBottomFace(var1, (double)var2, (double)var3, (double)var4, var1.getBlockTexture(this.blockAccess, var2, var3, var4, 0));
 		var7 = true;
-		var13 = var1.getBlockBrightness(this.blockAccess, var2, var3 + 1, var4);
+		var13 = var1.getRenderSideBrightness(this.blockAccess, var2, var3 + 1, var4);
 		if(var6.maxY < 1.0D) {
 			var13 = var12;
 		}
@@ -1387,7 +1780,7 @@
 		var5.setColorOpaque_F(var9 * var13, var9 * var13, var9 * var13);
 		this.renderTopFace(var1, (double)var2, (double)var3, (double)var4, var1.getBlockTexture(this.blockAccess, var2, var3, var4, 1));
 		var7 = true;
-		var13 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4 - 1);
+		var13 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4 - 1);
 		if(var6.minZ > 0.0D) {
 			var13 = var12;
 		}
@@ -1406,7 +1799,7 @@
 		this.renderEastFace(var1, (double)var2, (double)var3, (double)var4, var14);
 		var7 = true;
 		this.flipTexture = false;
-		var13 = var1.getBlockBrightness(this.blockAccess, var2, var3, var4 + 1);
+		var13 = var1.getRenderSideBrightness(this.blockAccess, var2, var3, var4 + 1);
 		if(var6.maxZ < 1.0D) {
 			var13 = var12;
 		}
@@ -1425,7 +1818,7 @@
 		this.renderWestFace(var1, (double)var2, (double)var3, (double)var4, var14);
 		var7 = true;
 		this.flipTexture = false;
-		var13 = var1.getBlockBrightness(this.blockAccess, var2 - 1, var3, var4);
+		var13 = var1.getRenderSideBrightness(this.blockAccess, var2 - 1, var3, var4);
 		if(var6.minX > 0.0D) {
 			var13 = var12;
 		}
@@ -1444,7 +1837,7 @@
 		this.renderNorthFace(var1, (double)var2, (double)var3, (double)var4, var14);
 		var7 = true;
 		this.flipTexture = false;
-		var13 = var1.getBlockBrightness(this.blockAccess, var2 + 1, var3, var4);
+		var13 = var1.getRenderSideBrightness(this.blockAccess, var2 + 1, var3, var4);
 		if(var6.maxX < 1.0D) {
 			var13 = var12;
 		}
@@ -1473,19 +1866,19 @@
 		}
 
 		int var10 = (var8 & 15) << 4;
-		int var11 = var8 & 240;
+		int var11 = var8 & 4080;
 		double var12 = ((double)var10 + var1.minX * 16.0D) / 256.0D;
 		double var14 = ((double)var10 + var1.maxX * 16.0D - 0.01D) / 256.0D;
-		double var16 = ((double)var11 + var1.minZ * 16.0D) / 256.0D;
-		double var18 = ((double)var11 + var1.maxZ * 16.0D - 0.01D) / 256.0D;
+		double var16 = ((double)var11 + var1.minZ * 16.0D) / 512.0D;
+		double var18 = ((double)var11 + var1.maxZ * 16.0D - 0.01D) / 512.0D;
 		if(var1.minX < 0.0D || var1.maxX > 1.0D) {
 			var12 = (double)(((float)var10 + 0.0F) / 256.0F);
 			var14 = (double)(((float)var10 + 15.99F) / 256.0F);
 		}
 
 		if(var1.minZ < 0.0D || var1.maxZ > 1.0D) {
-			var16 = (double)(((float)var11 + 0.0F) / 256.0F);
-			var18 = (double)(((float)var11 + 15.99F) / 256.0F);
+			var16 = (double)(((float)var11 + 0.0F) / 512.0F);
+			var18 = (double)(((float)var11 + 15.99F) / 512.0F);
 		}
 
 		double var20 = var2 + var1.minX;
@@ -1506,19 +1899,19 @@
 		}
 
 		int var10 = (var8 & 15) << 4;
-		int var11 = var8 & 240;
+		int var11 = var8 & 4080;
 		double var12 = ((double)var10 + var1.minX * 16.0D) / 256.0D;
 		double var14 = ((double)var10 + var1.maxX * 16.0D - 0.01D) / 256.0D;
-		double var16 = ((double)var11 + var1.minZ * 16.0D) / 256.0D;
-		double var18 = ((double)var11 + var1.maxZ * 16.0D - 0.01D) / 256.0D;
+		double var16 = ((double)var11 + var1.minZ * 16.0D) / 512.0D;
+		double var18 = ((double)var11 + var1.maxZ * 16.0D - 0.01D) / 512.0D;
 		if(var1.minX < 0.0D || var1.maxX > 1.0D) {
 			var12 = (double)(((float)var10 + 0.0F) / 256.0F);
 			var14 = (double)(((float)var10 + 15.99F) / 256.0F);
 		}
 
 		if(var1.minZ < 0.0D || var1.maxZ > 1.0D) {
-			var16 = (double)(((float)var11 + 0.0F) / 256.0F);
-			var18 = (double)(((float)var11 + 15.99F) / 256.0F);
+			var16 = (double)(((float)var11 + 0.0F) / 512.0F);
+			var18 = (double)(((float)var11 + 15.99F) / 512.0F);
 		}
 
 		double var20 = var2 + var1.minX;
@@ -1539,11 +1932,11 @@
 		}
 
 		int var10 = (var8 & 15) << 4;
-		int var11 = var8 & 240;
+		int var11 = var8 & 4080;
 		double var12 = ((double)var10 + var1.minX * 16.0D) / 256.0D;
 		double var14 = ((double)var10 + var1.maxX * 16.0D - 0.01D) / 256.0D;
-		double var16 = ((double)var11 + var1.minY * 16.0D) / 256.0D;
-		double var18 = ((double)var11 + var1.maxY * 16.0D - 0.01D) / 256.0D;
+		double var16 = ((double)var11 + var1.minY * 16.0D) / 512.0D;
+		double var18 = ((double)var11 + var1.maxY * 16.0D - 0.01D) / 512.0D;
 		double var20;
 		if(this.flipTexture) {
 			var20 = var12;
@@ -1557,8 +1950,8 @@
 		}
 
 		if(var1.minY < 0.0D || var1.maxY > 1.0D) {
-			var16 = (double)(((float)var11 + 0.0F) / 256.0F);
-			var18 = (double)(((float)var11 + 15.99F) / 256.0F);
+			var16 = (double)(((float)var11 + 0.0F) / 512.0F);
+			var18 = (double)(((float)var11 + 15.99F) / 512.0F);
 		}
 
 		var20 = var2 + var1.minX;
@@ -1579,11 +1972,11 @@
 		}
 
 		int var10 = (var8 & 15) << 4;
-		int var11 = var8 & 240;
+		int var11 = var8 & 4080;
 		double var12 = ((double)var10 + var1.minX * 16.0D) / 256.0D;
 		double var14 = ((double)var10 + var1.maxX * 16.0D - 0.01D) / 256.0D;
-		double var16 = ((double)var11 + var1.minY * 16.0D) / 256.0D;
-		double var18 = ((double)var11 + var1.maxY * 16.0D - 0.01D) / 256.0D;
+		double var16 = ((double)var11 + var1.minY * 16.0D) / 512.0D;
+		double var18 = ((double)var11 + var1.maxY * 16.0D - 0.01D) / 512.0D;
 		double var20;
 		if(this.flipTexture) {
 			var20 = var12;
@@ -1597,8 +1990,8 @@
 		}
 
 		if(var1.minY < 0.0D || var1.maxY > 1.0D) {
-			var16 = (double)(((float)var11 + 0.0F) / 256.0F);
-			var18 = (double)(((float)var11 + 15.99F) / 256.0F);
+			var16 = (double)(((float)var11 + 0.0F) / 512.0F);
+			var18 = (double)(((float)var11 + 15.99F) / 512.0F);
 		}
 
 		var20 = var2 + var1.minX;
@@ -1619,11 +2012,11 @@
 		}
 
 		int var10 = (var8 & 15) << 4;
-		int var11 = var8 & 240;
+		int var11 = var8 & 4080;
 		double var12 = ((double)var10 + var1.minZ * 16.0D) / 256.0D;
 		double var14 = ((double)var10 + var1.maxZ * 16.0D - 0.01D) / 256.0D;
-		double var16 = ((double)var11 + var1.minY * 16.0D) / 256.0D;
-		double var18 = ((double)var11 + var1.maxY * 16.0D - 0.01D) / 256.0D;
+		double var16 = ((double)var11 + var1.minY * 16.0D) / 512.0D;
+		double var18 = ((double)var11 + var1.maxY * 16.0D - 0.01D) / 512.0D;
 		double var20;
 		if(this.flipTexture) {
 			var20 = var12;
@@ -1637,8 +2030,8 @@
 		}
 
 		if(var1.minY < 0.0D || var1.maxY > 1.0D) {
-			var16 = (double)(((float)var11 + 0.0F) / 256.0F);
-			var18 = (double)(((float)var11 + 15.99F) / 256.0F);
+			var16 = (double)(((float)var11 + 0.0F) / 512.0F);
+			var18 = (double)(((float)var11 + 15.99F) / 512.0F);
 		}
 
 		var20 = var2 + var1.minX;
@@ -1659,11 +2052,11 @@
 		}
 
 		int var10 = (var8 & 15) << 4;
-		int var11 = var8 & 240;
+		int var11 = var8 & 4080;
 		double var12 = ((double)var10 + var1.minZ * 16.0D) / 256.0D;
 		double var14 = ((double)var10 + var1.maxZ * 16.0D - 0.01D) / 256.0D;
-		double var16 = ((double)var11 + var1.minY * 16.0D) / 256.0D;
-		double var18 = ((double)var11 + var1.maxY * 16.0D - 0.01D) / 256.0D;
+		double var16 = ((double)var11 + var1.minY * 16.0D) / 512.0D;
+		double var18 = ((double)var11 + var1.maxY * 16.0D - 0.01D) / 512.0D;
 		double var20;
 		if(this.flipTexture) {
 			var20 = var12;
@@ -1677,8 +2070,8 @@
 		}
 
 		if(var1.minY < 0.0D || var1.maxY > 1.0D) {
-			var16 = (double)(((float)var11 + 0.0F) / 256.0F);
-			var18 = (double)(((float)var11 + 15.99F) / 256.0F);
+			var16 = (double)(((float)var11 + 0.0F) / 512.0F);
+			var18 = (double)(((float)var11 + 15.99F) / 512.0F);
 		}
 
 		var20 = var2 + var1.maxX;
@@ -1693,27 +2086,38 @@
 	}
 
 	public void renderBlockAsItem(Block var1, float var2) {
-		int var3 = var1.getRenderType();
-		Tessellator var4 = Tessellator.instance;
-		if(var3 == 0) {
+		this.func_10674_47uFsco7k3MB69GCB74UB9R3EkROVQhfTX6e4vfh9tGQb5JpV1NpUJJZFMS4(var1, var2, false);
+	}
+
+	public void func_10674_47uFsco7k3MB69GCB74UB9R3EkROVQhfTX6e4vfh9tGQb5JpV1NpUJJZFMS4(Block var1, float var2, boolean var3) {
+		int var4 = var1.getRenderType();
+		Tessellator var5 = Tessellator.instance;
+		if(var4 == 0) {
 			var1.setBlockBoundsForItemRender();
 			GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
-			float var5 = 0.5F;
-			float var6 = 1.0F;
-			float var7 = 0.8F;
-			float var8 = 0.6F;
-			var4.startDrawingQuads();
-			var4.setColorRGBA_F(var6, var6, var6, var2);
+			float var6 = 0.5F;
+			float var7 = 1.0F;
+			float var8 = 0.8F;
+			float var9 = 0.6F;
+			var5.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(var3);
+			var5.setColorRGBA_F(var7, var7, var7, var2);
 			this.renderBottomFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(0));
-			var4.setColorRGBA_F(var5, var5, var5, var2);
+			var5.setColorRGBA_F(var6, var6, var6, var2);
 			this.renderTopFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(1));
-			var4.setColorRGBA_F(var7, var7, var7, var2);
+			var5.setColorRGBA_F(var8, var8, var8, var2);
 			this.renderEastFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(2));
 			this.renderWestFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(3));
-			var4.setColorRGBA_F(var8, var8, var8, var2);
+			var5.setColorRGBA_F(var9, var9, var9, var2);
 			this.renderNorthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(4));
 			this.renderSouthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(5));
-			var4.draw();
+			var5.draw();
+			GL11.glTranslatef(0.5F, 0.5F, 0.5F);
+		}
+
+		if(var4 == 14) {
+			var1.setBlockBoundsForItemRender();
+			GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
+			this.renderBlockEssenceFountain(var1, 0, 0, 0, true);
 			GL11.glTranslatef(0.5F, 0.5F, 0.5F);
 		}
 
@@ -1723,175 +2127,198 @@
 		byte var2 = -1;
 		Tessellator var3 = Tessellator.instance;
 		int var4 = var1.getRenderType();
-		if(var4 == 0) {
-			var1.setBlockBoundsForItemRender();
-			GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
-			var3.startDrawingQuads();
-			var3.setNormal(0.0F, -1.0F, 0.0F);
-			this.renderBottomFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(0));
-			var3.draw();
-			var3.startDrawingQuads();
-			var3.setNormal(0.0F, 1.0F, 0.0F);
-			this.renderTopFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(1));
-			var3.draw();
-			var3.startDrawingQuads();
-			var3.setNormal(0.0F, 0.0F, -1.0F);
-			this.renderEastFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(2));
-			var3.draw();
-			var3.startDrawingQuads();
-			var3.setNormal(0.0F, 0.0F, 1.0F);
-			this.renderWestFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(3));
-			var3.draw();
-			var3.startDrawingQuads();
-			var3.setNormal(-1.0F, 0.0F, 0.0F);
-			this.renderNorthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(4));
-			var3.draw();
-			var3.startDrawingQuads();
-			var3.setNormal(1.0F, 0.0F, 0.0F);
-			this.renderSouthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(5));
-			var3.draw();
-			GL11.glTranslatef(0.5F, 0.5F, 0.5F);
-		} else if(var4 == 1) {
-			var3.startDrawingQuads();
+		switch(var4) {
+		case 1:
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
 			var3.setNormal(0.0F, -1.0F, 0.0F);
 			this.renderCrossedSquares(var1, var2, -0.5D, -0.5D, -0.5D);
 			var3.draw();
-		} else if(var4 == 13) {
-			var1.setBlockBoundsForItemRender();
-			GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
-			float var5 = 1.0F / 16.0F;
-			var3.startDrawingQuads();
-			var3.setNormal(0.0F, -1.0F, 0.0F);
-			this.renderBottomFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(0));
-			var3.draw();
-			var3.startDrawingQuads();
-			var3.setNormal(0.0F, 1.0F, 0.0F);
-			this.renderTopFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(1));
-			var3.draw();
-			var3.startDrawingQuads();
-			var3.setNormal(0.0F, 0.0F, -1.0F);
-			var3.setTranslationF(0.0F, 0.0F, var5);
-			this.renderEastFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(2));
-			var3.setTranslationF(0.0F, 0.0F, -var5);
-			var3.draw();
-			var3.startDrawingQuads();
-			var3.setNormal(0.0F, 0.0F, 1.0F);
-			var3.setTranslationF(0.0F, 0.0F, -var5);
-			this.renderWestFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(3));
-			var3.setTranslationF(0.0F, 0.0F, var5);
-			var3.draw();
-			var3.startDrawingQuads();
-			var3.setNormal(-1.0F, 0.0F, 0.0F);
-			var3.setTranslationF(var5, 0.0F, 0.0F);
-			this.renderNorthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(4));
-			var3.setTranslationF(-var5, 0.0F, 0.0F);
-			var3.draw();
-			var3.startDrawingQuads();
-			var3.setNormal(1.0F, 0.0F, 0.0F);
-			var3.setTranslationF(-var5, 0.0F, 0.0F);
-			this.renderSouthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(5));
-			var3.setTranslationF(var5, 0.0F, 0.0F);
-			var3.draw();
-			GL11.glTranslatef(0.5F, 0.5F, 0.5F);
-		} else if(var4 == 6) {
-			var3.startDrawingQuads();
-			var3.setNormal(0.0F, -1.0F, 0.0F);
-			this.renderBlockCropsImpl(var1, var2, -0.5D, -0.5D, -0.5D);
-			var3.draw();
-		} else if(var4 == 2) {
-			var3.startDrawingQuads();
+			break;
+		case 2:
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
 			var3.setNormal(0.0F, -1.0F, 0.0F);
 			this.renderTorchAtAngle(var1, -0.5D, -0.5D, -0.5D, 0.0D, 0.0D);
 			var3.draw();
-		} else {
-			int var7;
+			break;
+		case 3:
+		case 4:
+		case 5:
+		case 7:
+		case 8:
+		case 9:
+		case 10:
+		case 11:
+		case 12:
+		default:
+			int var6;
 			if(var4 == 10) {
-				for(var7 = 0; var7 < 2; ++var7) {
-					if(var7 == 0) {
+				for(var6 = 0; var6 < 2; ++var6) {
+					if(var6 == 0) {
 						var1.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 0.5F);
 					}
 
-					if(var7 == 1) {
+					if(var6 == 1) {
 						var1.setBlockBounds(0.0F, 0.0F, 0.5F, 1.0F, 0.5F, 1.0F);
 					}
 
 					GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
-					var3.startDrawingQuads();
-					var3.setNormal(0.0F, -1.0F, 0.0F);
-					this.renderBottomFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(0));
-					var3.draw();
-					var3.startDrawingQuads();
-					var3.setNormal(0.0F, 1.0F, 0.0F);
-					this.renderTopFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(1));
-					var3.draw();
-					var3.startDrawingQuads();
-					var3.setNormal(0.0F, 0.0F, -1.0F);
-					this.renderEastFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(2));
-					var3.draw();
-					var3.startDrawingQuads();
-					var3.setNormal(0.0F, 0.0F, 1.0F);
-					this.renderWestFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(3));
-					var3.draw();
-					var3.startDrawingQuads();
-					var3.setNormal(-1.0F, 0.0F, 0.0F);
-					this.renderNorthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(4));
-					var3.draw();
-					var3.startDrawingQuads();
-					var3.setNormal(1.0F, 0.0F, 0.0F);
-					this.renderSouthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(5));
-					var3.draw();
-					GL11.glTranslatef(0.5F, 0.5F, 0.5F);
-				}
-			} else if(var4 == 11) {
-				for(var7 = 0; var7 < 4; ++var7) {
-					float var6 = 2.0F / 16.0F;
-					if(var7 == 0) {
-						var1.setBlockBounds(0.5F - var6, 0.0F, 0.0F, 0.5F + var6, 1.0F, var6 * 2.0F);
-					}
-
-					if(var7 == 1) {
-						var1.setBlockBounds(0.5F - var6, 0.0F, 1.0F - var6 * 2.0F, 0.5F + var6, 1.0F, 1.0F);
-					}
-
-					var6 = 1.0F / 16.0F;
-					if(var7 == 2) {
-						var1.setBlockBounds(0.5F - var6, 1.0F - var6 * 3.0F, -var6 * 2.0F, 0.5F + var6, 1.0F - var6, 1.0F + var6 * 2.0F);
-					}
-
-					if(var7 == 3) {
-						var1.setBlockBounds(0.5F - var6, 0.5F - var6 * 3.0F, -var6 * 2.0F, 0.5F + var6, 0.5F - var6, 1.0F + var6 * 2.0F);
-					}
-
-					GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
-					var3.startDrawingQuads();
-					var3.setNormal(0.0F, -1.0F, 0.0F);
-					this.renderBottomFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(0));
-					var3.draw();
-					var3.startDrawingQuads();
-					var3.setNormal(0.0F, 1.0F, 0.0F);
-					this.renderTopFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(1));
-					var3.draw();
-					var3.startDrawingQuads();
-					var3.setNormal(0.0F, 0.0F, -1.0F);
-					this.renderEastFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(2));
-					var3.draw();
-					var3.startDrawingQuads();
-					var3.setNormal(0.0F, 0.0F, 1.0F);
-					this.renderWestFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(3));
-					var3.draw();
-					var3.startDrawingQuads();
-					var3.setNormal(-1.0F, 0.0F, 0.0F);
-					this.renderNorthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(4));
-					var3.draw();
-					var3.startDrawingQuads();
-					var3.setNormal(1.0F, 0.0F, 0.0F);
-					this.renderSouthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(5));
-					var3.draw();
-					GL11.glTranslatef(0.5F, 0.5F, 0.5F);
-				}
-
-				var1.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
+					var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+					var3.setNormal(0.0F, -1.0F, 0.0F);
+					this.renderBottomFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(0));
+					var3.draw();
+					var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+					var3.setNormal(0.0F, 1.0F, 0.0F);
+					this.renderTopFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(1));
+					var3.draw();
+					var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+					var3.setNormal(0.0F, 0.0F, -1.0F);
+					this.renderEastFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(2));
+					var3.draw();
+					var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+					var3.setNormal(0.0F, 0.0F, 1.0F);
+					this.renderWestFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(3));
+					var3.draw();
+					var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+					var3.setNormal(-1.0F, 0.0F, 0.0F);
+					this.renderNorthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(4));
+					var3.draw();
+					var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+					var3.setNormal(1.0F, 0.0F, 0.0F);
+					this.renderSouthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(5));
+					var3.draw();
+					GL11.glTranslatef(0.5F, 0.5F, 0.5F);
+				}
+
+				return;
+			} else {
+				if(var4 == 11) {
+					for(var6 = 0; var6 < 4; ++var6) {
+						float var7 = 2.0F / 16.0F;
+						if(var6 == 0) {
+							var1.setBlockBounds(0.5F - var7, 0.0F, 0.0F, 0.5F + var7, 1.0F, var7 * 2.0F);
+						}
+
+						if(var6 == 1) {
+							var1.setBlockBounds(0.5F - var7, 0.0F, 1.0F - var7 * 2.0F, 0.5F + var7, 1.0F, 1.0F);
+						}
+
+						var7 = 1.0F / 16.0F;
+						if(var6 == 2) {
+							var1.setBlockBounds(0.5F - var7, 1.0F - var7 * 3.0F, -var7 * 2.0F, 0.5F + var7, 1.0F - var7, 1.0F + var7 * 2.0F);
+						}
+
+						if(var6 == 3) {
+							var1.setBlockBounds(0.5F - var7, 0.5F - var7 * 3.0F, -var7 * 2.0F, 0.5F + var7, 0.5F - var7, 1.0F + var7 * 2.0F);
+						}
+
+						GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
+						var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+						var3.setNormal(0.0F, -1.0F, 0.0F);
+						this.renderBottomFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(0));
+						var3.draw();
+						var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+						var3.setNormal(0.0F, 1.0F, 0.0F);
+						this.renderTopFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(1));
+						var3.draw();
+						var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+						var3.setNormal(0.0F, 0.0F, -1.0F);
+						this.renderEastFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(2));
+						var3.draw();
+						var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+						var3.setNormal(0.0F, 0.0F, 1.0F);
+						this.renderWestFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(3));
+						var3.draw();
+						var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+						var3.setNormal(-1.0F, 0.0F, 0.0F);
+						this.renderNorthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(4));
+						var3.draw();
+						var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+						var3.setNormal(1.0F, 0.0F, 0.0F);
+						this.renderSouthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(5));
+						var3.draw();
+						GL11.glTranslatef(0.5F, 0.5F, 0.5F);
+					}
+
+					var1.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
+				}
+				break;
 			}
+		case 6:
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var3.setNormal(0.0F, -1.0F, 0.0F);
+			this.renderBlockCropsImpl(var1, var2, -0.5D, -0.5D, -0.5D);
+			var3.draw();
+			break;
+		case 13:
+			var1.setBlockBoundsForItemRender();
+			GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
+			float var5 = 1.0F / 16.0F;
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var3.setNormal(0.0F, -1.0F, 0.0F);
+			this.renderBottomFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(0));
+			var3.draw();
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var3.setNormal(0.0F, 1.0F, 0.0F);
+			this.renderTopFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(1));
+			var3.draw();
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var3.setNormal(0.0F, 0.0F, -1.0F);
+			var3.setTranslationF(0.0F, 0.0F, var5);
+			this.renderEastFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(2));
+			var3.setTranslationF(0.0F, 0.0F, -var5);
+			var3.draw();
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var3.setNormal(0.0F, 0.0F, 1.0F);
+			var3.setTranslationF(0.0F, 0.0F, -var5);
+			this.renderWestFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(3));
+			var3.setTranslationF(0.0F, 0.0F, var5);
+			var3.draw();
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var3.setNormal(-1.0F, 0.0F, 0.0F);
+			var3.setTranslationF(var5, 0.0F, 0.0F);
+			this.renderNorthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(4));
+			var3.setTranslationF(-var5, 0.0F, 0.0F);
+			var3.draw();
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var3.setNormal(1.0F, 0.0F, 0.0F);
+			var3.setTranslationF(-var5, 0.0F, 0.0F);
+			this.renderSouthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(5));
+			var3.setTranslationF(var5, 0.0F, 0.0F);
+			var3.draw();
+			GL11.glTranslatef(0.5F, 0.5F, 0.5F);
+			break;
+		case 14:
+			GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
+			this.renderBlockEssenceFountain(var1, 0, 0, 0, true);
+			GL11.glTranslatef(0.5F, 0.5F, 0.5F);
+		case 0:
+			var1.setBlockBoundsForItemRender();
+			GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var3.setNormal(0.0F, -1.0F, 0.0F);
+			this.renderBottomFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(0));
+			var3.draw();
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var3.setNormal(0.0F, 1.0F, 0.0F);
+			this.renderTopFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(1));
+			var3.draw();
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var3.setNormal(0.0F, 0.0F, -1.0F);
+			this.renderEastFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(2));
+			var3.draw();
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var3.setNormal(0.0F, 0.0F, 1.0F);
+			this.renderWestFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(3));
+			var3.draw();
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var3.setNormal(-1.0F, 0.0F, 0.0F);
+			this.renderNorthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(4));
+			var3.draw();
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var3.setNormal(1.0F, 0.0F, 0.0F);
+			this.renderSouthFace(var1, 0.0D, 0.0D, 0.0D, var1.getBlockTextureFromSide(5));
+			var3.draw();
+			GL11.glTranslatef(0.5F, 0.5F, 0.5F);
 		}
 
 	}
--- /dev/null
+++ net/minecraft/src/CommandCgFovmod.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandCgFovmod extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8600_5qFn96zZ62iS19Y5ITC0nzl7I1c5v9brFN596O2zORG4z3ix5fI7B415Y8jx;
+    
+    CommandCgFovmod(final CommandManager abb) {
+        this.field_8600_5qFn96zZ62iS19Y5ITC0nzl7I1c5v9brFN596O2zORG4z3ix5fI7B415Y8jx = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.options.fovModifier = (float)arr[0];
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "" + InputHandler.mc.options.fovModifier;
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockFlowerOld.java
@@ -1,0 +1,58 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockFlowerOld extends BlockOld {
+	protected BlockFlowerOld(int var1, int var2) {
+		super(var1, Material.plants);
+		this.blockIndexInTexture = var2;
+		this.setTickOnLoad(true);
+		float var3 = 0.2F;
+		this.setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, var3 * 3.0F, 0.5F + var3);
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return this.canThisPlantGrowOnThisBlockID(var1.getBlockId(var2, var3 - 1, var4));
+	}
+
+	protected boolean canThisPlantGrowOnThisBlockID(int var1) {
+		return var1 == BlockOld.grass.blockID || var1 == BlockOld.dirt.blockID || var1 == BlockOld.tilledField.blockID;
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		super.onNeighborBlockChange(var1, var2, var3, var4, var5);
+		this.checkFlowerChange(var1, var2, var3, var4);
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		this.checkFlowerChange(var1, var2, var3, var4);
+	}
+
+	protected final void checkFlowerChange(World var1, int var2, int var3, int var4) {
+		if(!this.canBlockStay(var1, var2, var3, var4)) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		}
+
+	}
+
+	public boolean canBlockStay(World var1, int var2, int var3, int var4) {
+		return (var1.getBlockLightValue(var2, var3, var4) >= 8 || var1.canBlockSeeTheSky(var2, var3, var4)) && this.canThisPlantGrowOnThisBlockID(var1.getBlockId(var2, var3 - 1, var4));
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 1;
+	}
+}
--- net/minecraft/src/BlockFlowing.java
+++ net/minecraft/src/BlockFlowing.java
@@ -21,47 +21,47 @@
 	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
 		int var6 = this.getFlowDecay(var1, var2, var3, var4);
 		boolean var7 = true;
-		int var9;
+		int var8;
 		if(var6 > 0) {
-			byte var8 = -100;
+			byte var9 = -100;
 			this.numAdjacentSources = 0;
-			int var11 = this.getSmallestFlowDecay(var1, var2 - 1, var3, var4, var8);
-			var11 = this.getSmallestFlowDecay(var1, var2 + 1, var3, var4, var11);
-			var11 = this.getSmallestFlowDecay(var1, var2, var3, var4 - 1, var11);
-			var11 = this.getSmallestFlowDecay(var1, var2, var3, var4 + 1, var11);
-			var9 = var11 + this.fluidType;
-			if(var9 >= 8 || var11 < 0) {
-				var9 = -1;
+			int var10 = this.getSmallestFlowDecay(var1, var2 - 1, var3, var4, var9);
+			var10 = this.getSmallestFlowDecay(var1, var2 + 1, var3, var4, var10);
+			var10 = this.getSmallestFlowDecay(var1, var2, var3, var4 - 1, var10);
+			var10 = this.getSmallestFlowDecay(var1, var2, var3, var4 + 1, var10);
+			var8 = var10 + this.fluidType;
+			if(var8 >= 8 || var10 < 0) {
+				var8 = -1;
 			}
 
 			if(this.getFlowDecay(var1, var2, var3 + 1, var4) >= 0) {
-				int var10 = this.getFlowDecay(var1, var2, var3 + 1, var4);
-				if(var10 >= 8) {
-					var9 = var10;
+				int var11 = this.getFlowDecay(var1, var2, var3 + 1, var4);
+				if(var11 >= 8) {
+					var8 = var11;
 				} else {
-					var9 = var10 + 8;
+					var8 = var11 + 8;
 				}
 			}
 
 			if(this.numAdjacentSources >= 2 && this.material == Material.water) {
 				if(var1.isBlockNormalCube(var2, var3 - 1, var4)) {
-					var9 = 0;
+					var8 = 0;
 				} else if(var1.getBlockMaterial(var2, var3 - 1, var4) == this.material && var1.getBlockMetadata(var2, var3, var4) == 0) {
-					var9 = 0;
+					var8 = 0;
 				}
 			}
 
-			if(this.material == Material.lava && var6 < 8 && var9 < 8 && var9 > var6 && var5.nextInt(4) != 0) {
-				var9 = var6;
+			if(this.material == Material.lava && var6 < 8 && var8 < 8 && var8 > var6 && var5.nextInt(4) != 0) {
+				var8 = var6;
 				var7 = false;
 			}
 
-			if(var9 != var6) {
-				var6 = var9;
-				if(var9 < 0) {
+			if(var8 != var6) {
+				var6 = var8;
+				if(var8 < 0) {
 					var1.setBlockWithNotify(var2, var3, var4, 0);
 				} else {
-					var1.setBlockMetadataWithNotify(var2, var3, var4, var9);
+					var1.setBlockMetadataWithNotify(var2, var3, var4, var8);
 					var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
 					var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
 				}
@@ -80,29 +80,29 @@
 			}
 		} else if(var6 >= 0 && (var6 == 0 || this.blockBlocksFlow(var1, var2, var3 - 1, var4))) {
 			boolean[] var12 = this.getOptimalFlowDirections(var1, var2, var3, var4);
-			var9 = var6 + this.fluidType;
+			var8 = var6 + this.fluidType;
 			if(var6 >= 8) {
-				var9 = 1;
+				var8 = 1;
 			}
 
-			if(var9 >= 8) {
+			if(var8 >= 8) {
 				return;
 			}
 
 			if(var12[0]) {
-				this.flowIntoBlock(var1, var2 - 1, var3, var4, var9);
+				this.flowIntoBlock(var1, var2 - 1, var3, var4, var8);
 			}
 
 			if(var12[1]) {
-				this.flowIntoBlock(var1, var2 + 1, var3, var4, var9);
+				this.flowIntoBlock(var1, var2 + 1, var3, var4, var8);
 			}
 
 			if(var12[2]) {
-				this.flowIntoBlock(var1, var2, var3, var4 - 1, var9);
+				this.flowIntoBlock(var1, var2, var3, var4 - 1, var8);
 			}
 
 			if(var12[3]) {
-				this.flowIntoBlock(var1, var2, var3, var4 + 1, var9);
+				this.flowIntoBlock(var1, var2, var3, var4 + 1, var8);
 			}
 		}
 
@@ -130,7 +130,7 @@
 		for(int var8 = 0; var8 < 4; ++var8) {
 			if((var8 != 0 || var6 != 1) && (var8 != 1 || var6 != 0) && (var8 != 2 || var6 != 3) && (var8 != 3 || var6 != 2)) {
 				int var9 = var2;
-				int var11 = var4;
+				int var10 = var4;
 				if(var8 == 0) {
 					var9 = var2 - 1;
 				}
@@ -140,22 +140,22 @@
 				}
 
 				if(var8 == 2) {
-					var11 = var4 - 1;
+					var10 = var4 - 1;
 				}
 
 				if(var8 == 3) {
-					++var11;
+					++var10;
 				}
 
-				if(!this.blockBlocksFlow(var1, var9, var3, var11) && (var1.getBlockMaterial(var9, var3, var11) != this.material || var1.getBlockMetadata(var9, var3, var11) != 0)) {
-					if(!this.blockBlocksFlow(var1, var9, var3 - 1, var11)) {
+				if(!this.blockBlocksFlow(var1, var9, var3, var10) && (var1.getBlockMaterial(var9, var3, var10) != this.material || var1.getBlockMetadata(var9, var3, var10) != 0)) {
+					if(!this.blockBlocksFlow(var1, var9, var3 - 1, var10)) {
 						return var5;
 					}
 
 					if(var5 < 4) {
-						int var12 = this.calculateFlowCost(var1, var9, var3, var11, var5 + 1, var8);
-						if(var12 < var7) {
-							var7 = var12;
+						int var11 = this.calculateFlowCost(var1, var9, var3, var10, var5 + 1, var8);
+						if(var11 < var7) {
+							var7 = var11;
 						}
 					}
 				}
@@ -171,7 +171,7 @@
 		for(var5 = 0; var5 < 4; ++var5) {
 			this.flowCost[var5] = 1000;
 			var6 = var2;
-			int var8 = var4;
+			int var7 = var4;
 			if(var5 == 0) {
 				var6 = var2 - 1;
 			}
@@ -181,18 +181,18 @@
 			}
 
 			if(var5 == 2) {
-				var8 = var4 - 1;
+				var7 = var4 - 1;
 			}
 
 			if(var5 == 3) {
-				++var8;
+				++var7;
 			}
 
-			if(!this.blockBlocksFlow(var1, var6, var3, var8) && (var1.getBlockMaterial(var6, var3, var8) != this.material || var1.getBlockMetadata(var6, var3, var8) != 0)) {
-				if(!this.blockBlocksFlow(var1, var6, var3 - 1, var8)) {
+			if(!this.blockBlocksFlow(var1, var6, var3, var7) && (var1.getBlockMaterial(var6, var3, var7) != this.material || var1.getBlockMetadata(var6, var3, var7) != 0)) {
+				if(!this.blockBlocksFlow(var1, var6, var3 - 1, var7)) {
 					this.flowCost[var5] = 0;
 				} else {
-					this.flowCost[var5] = this.calculateFlowCost(var1, var6, var3, var8, 1, var5);
+					this.flowCost[var5] = this.calculateFlowCost(var1, var6, var3, var7, 1, var5);
 				}
 			}
 		}
--- net/minecraft/src/World.java
+++ net/minecraft/src/World.java
@@ -7,25 +7,30 @@
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Random;
 import java.util.Set;
 import java.util.TreeSet;
+import net.minecraft.client.Minecraft;
 
 public class World implements IBlockAccess {
-	private List lightingToUpdate;
-	public List loadedEntityList;
-	private List unloadedEntityList;
-	private TreeSet scheduledTickTreeSet;
-	private Set scheduledTickSet;
-	public List loadedTileEntityList;
+	private Minecraft field_7480_14apz8yQs3u7j64h52PO3AJlaP90n480K75I0kD4kgKy0D5drp56qXv5W2yX;
+	private List<MetadataChunkBlock> lightingToUpdate;
+	public List<Entity> loadedEntityList;
+	private List<Entity> unloadedEntityList;
+	private Set<NextTickListEntry> scheduledTickTreeSet;
+	private Set<NextTickListEntry> scheduledTickSet;
+	public List<TileEntity> loadedTileEntityList;
 	public long worldTime;
 	public boolean snowCovered;
-	private long skyColor;
-	private long fogColor;
-	private long cloudColor;
+	public boolean sandCovered;
+	public long skyColor;
+	public long field_7500_6aGUO2jbVGtoxoGHcgMRUkCmunA4cxQ7hz8a29V2I7fc5UVeqFCM92Z8HJnU;
+	public long fogColor;
+	public long cloudColor;
 	public int skylightSubtracted;
 	protected int updateLCG;
 	protected int DIST_HASH_MAGIC;
@@ -33,7 +38,7 @@
 	public static float[] lightBrightnessTable = new float[16];
 	private final long lockTimestamp;
 	protected int autosavePeriod;
-	public List playerEntities;
+	public List<EntityPlayer> playerEntities;
 	public int difficultySetting;
 	public Object fontRenderer;
 	public Random rand;
@@ -41,19 +46,28 @@
 	public int spawnY;
 	public int spawnZ;
 	public boolean isNewWorld;
-	protected List worldAccesses;
-	private IChunkProvider chunkProvider;
+	protected List<IWorldAccess> worldAccesses;
+	public IChunkProvider chunkProvider;
 	public File saveDirectory;
 	public long randomSeed;
 	private NBTTagCompound nbtCompoundPlayer;
 	public long sizeOnDisk;
 	public final String levelName;
 	public boolean worldChunkLoadOverride;
-	private ArrayList collidingBoundingBoxes;
-	private Set positionsToUpdate;
+	private ArrayList<AxisAlignedBB> collidingBoundingBoxes;
+	private Set<ChunkCoordIntPair> positionsToUpdate;
 	private int soundCounter;
-	private List entitiesWithinAABBExcludingEntity;
+	private List<Entity> entitiesWithinAABBExcludingEntity;
 	public boolean multiplayerWorld;
+	protected BiomeInterface field_7486_19Zq3usHE49nqTf42NA4437074mbHq57gg27445jru16ailF0t00O91Q8HO3;
+	public boolean exclFrailMode;
+	public List<HandlerSetCheckpointUnknownClass> field_7498_65957fU9nGL5PA2e96ZOK3ePBveSt2ceA9Glj10PC2Jo5s0wI21ix69flng2;
+	public boolean listBeingWritten;
+	int field_7497_6WbP28c555893meijkmoF90Ca566QQQN5FP022rim05fq26oU3308065FJ2h;
+
+	public long GetMilestone() {
+		return this.worldTime / 23000L;
+	}
 
 	public static NBTTagCompound getLevelData(File var0, String var1) {
 		File var2 = new File(var0, "saves");
@@ -83,6 +97,7 @@
 			deleteWorldFiles(var3.listFiles());
 			var3.delete();
 		}
+
 	}
 
 	private static void deleteWorldFiles(File[] var0) {
@@ -96,20 +111,30 @@
 
 	}
 
+	public boolean func_7458_5r8qe5geuw4S9tsd10m7M2qgIZAlCgZo31t563di8oEr3d5K6yrFyI690mD5() {
+		return true;
+	}
+
 	public World(File var1, String var2) {
 		this(var1, var2, (new Random()).nextLong());
 	}
 
 	public World(String var1) {
+		this.exclFrailMode = true;
+		this.field_7498_65957fU9nGL5PA2e96ZOK3ePBveSt2ceA9Glj10PC2Jo5s0wI21ix69flng2 = new ArrayList();
+		this.listBeingWritten = false;
+		this.field_7497_6WbP28c555893meijkmoF90Ca566QQQN5FP022rim05fq26oU3308065FJ2h = 0;
 		this.lightingToUpdate = new ArrayList();
 		this.loadedEntityList = new ArrayList();
 		this.unloadedEntityList = new ArrayList();
-		this.scheduledTickTreeSet = new TreeSet();
-		this.scheduledTickSet = new HashSet();
+		this.scheduledTickTreeSet = Collections.synchronizedSet(new TreeSet());
+		this.scheduledTickSet = Collections.synchronizedSet(new HashSet());
 		this.loadedTileEntityList = new ArrayList();
 		this.worldTime = 0L;
 		this.snowCovered = false;
-		this.skyColor = 8961023L;
+		this.sandCovered = false;
+		this.skyColor = (long)InputHandler.mc.field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0.field_10164_5N63dbka0na7Is07L9kMmSk6ZK28Ioxdll6JwQgybo1I69cauDA8U5rtDvBv.field_12192_9E67d5X2srrjQ8fe493f7ub1P59cMh50f2G1a453y7P5UP6YgaLpUO1EN9yR;
+		this.field_7500_6aGUO2jbVGtoxoGHcgMRUkCmunA4cxQ7hz8a29V2I7fc5UVeqFCM92Z8HJnU = (long)InputHandler.mc.field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0.field_10164_5N63dbka0na7Is07L9kMmSk6ZK28Ioxdll6JwQgybo1I69cauDA8U5rtDvBv.field_12195_4252ptxk91utqUzwxJFw0j8CTrWMs6A4327D4QmrdAsD6mV695v861Puc7f3;
 		this.fogColor = 12638463L;
 		this.cloudColor = 16777215L;
 		this.skylightSubtracted = 0;
@@ -120,6 +145,7 @@
 		this.autosavePeriod = 40;
 		this.playerEntities = new ArrayList();
 		this.rand = new Random();
+		this.field_7486_19Zq3usHE49nqTf42NA4437074mbHq57gg27445jru16ailF0t00O91Q8HO3 = new BiomeUnknownClass2();
 		this.isNewWorld = false;
 		this.worldAccesses = new ArrayList();
 		this.randomSeed = 0L;
@@ -135,15 +161,21 @@
 	}
 
 	public World(File var1, String var2, long var3) {
+		this.exclFrailMode = true;
+		this.field_7498_65957fU9nGL5PA2e96ZOK3ePBveSt2ceA9Glj10PC2Jo5s0wI21ix69flng2 = new ArrayList();
+		this.listBeingWritten = false;
+		this.field_7497_6WbP28c555893meijkmoF90Ca566QQQN5FP022rim05fq26oU3308065FJ2h = 0;
 		this.lightingToUpdate = new ArrayList();
 		this.loadedEntityList = new ArrayList();
 		this.unloadedEntityList = new ArrayList();
-		this.scheduledTickTreeSet = new TreeSet();
-		this.scheduledTickSet = new HashSet();
+		this.scheduledTickTreeSet = Collections.synchronizedSet(new TreeSet());
+		this.scheduledTickSet = Collections.synchronizedSet(new HashSet());
 		this.loadedTileEntityList = new ArrayList();
 		this.worldTime = 0L;
 		this.snowCovered = false;
-		this.skyColor = 8961023L;
+		this.sandCovered = false;
+		this.skyColor = (long)InputHandler.mc.field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0.field_10164_5N63dbka0na7Is07L9kMmSk6ZK28Ioxdll6JwQgybo1I69cauDA8U5rtDvBv.field_12192_9E67d5X2srrjQ8fe493f7ub1P59cMh50f2G1a453y7P5UP6YgaLpUO1EN9yR;
+		this.field_7500_6aGUO2jbVGtoxoGHcgMRUkCmunA4cxQ7hz8a29V2I7fc5UVeqFCM92Z8HJnU = (long)InputHandler.mc.field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0.field_10164_5N63dbka0na7Is07L9kMmSk6ZK28Ioxdll6JwQgybo1I69cauDA8U5rtDvBv.field_12195_4252ptxk91utqUzwxJFw0j8CTrWMs6A4327D4QmrdAsD6mV695v861Puc7f3;
 		this.fogColor = 12638463L;
 		this.cloudColor = 16777215L;
 		this.skylightSubtracted = 0;
@@ -154,6 +186,7 @@
 		this.autosavePeriod = 40;
 		this.playerEntities = new ArrayList();
 		this.rand = new Random();
+		this.field_7486_19Zq3usHE49nqTf42NA4437074mbHq57gg27445jru16ailF0t00O91Q8HO3 = new BiomeUnknownClass2();
 		this.isNewWorld = false;
 		this.worldAccesses = new ArrayList();
 		this.randomSeed = 0L;
@@ -178,7 +211,7 @@
 			} finally {
 				var6.close();
 			}
-		} catch (IOException var13) {
+		} catch (IOException var16) {
 			throw new RuntimeException("Failed to check session lock, aborting");
 		}
 
@@ -186,8 +219,8 @@
 		this.isNewWorld = !var5.exists();
 		if(var5.exists()) {
 			try {
-				NBTTagCompound var14 = CompressedStreamTools.readCompressed(new FileInputStream(var5));
-				NBTTagCompound var7 = var14.getCompoundTag("Data");
+				NBTTagCompound var18 = CompressedStreamTools.readCompressed(new FileInputStream(var5));
+				NBTTagCompound var7 = var18.getCompoundTag("Data");
 				this.randomSeed = var7.getLong("RandomSeed");
 				this.spawnX = var7.getInteger("SpawnX");
 				this.spawnY = var7.getInteger("SpawnY");
@@ -195,24 +228,40 @@
 				this.worldTime = var7.getLong("Time");
 				this.sizeOnDisk = var7.getLong("SizeOnDisk");
 				this.snowCovered = var7.getBoolean("SnowCovered");
-				if(var7.hasKey("Player")) {
+				this.sandCovered = var7.getBoolean("SandCovered");
+				this.exclFrailMode = var7.getBoolean("ExclusivelyFrail");
+				if(var7.hasKey("PortalZones")) {
+					NBTTagCompound var8 = var7.getCompoundTag("PortalZones");
+					Iterator var9 = var8.func_9925_7Nmdbr2ySWTWPYBjFFp2Pj5o350YfKPz3M4LF0Uy1488hQ70sr9S06Q7XbE6().iterator();
+
+					while(var9.hasNext()) {
+						NBTBase var10 = (NBTBase)var9.next();
+						if(var10.getType() == 10) {
+							NBTTagCompound var11 = (NBTTagCompound)var10;
+							this.field_7498_65957fU9nGL5PA2e96ZOK3ePBveSt2ceA9Glj10PC2Jo5s0wI21ix69flng2.add(HandlerSetCheckpointUnknownClass.func_10084_6FAAVBx3XRV8rsU1z0770zreU3637zjNEWB3Z8B3V8CI5d1V47yA72wzHu01(var11, var10.getKey()));
+						}
+					}
+				}
+
+				if(this.func_7458_5r8qe5geuw4S9tsd10m7M2qgIZAlCgZo31t563di8oEr3d5K6yrFyI690mD5() && var7.hasKey("Player")) {
 					this.nbtCompoundPlayer = var7.getCompoundTag("Player");
 				}
-			} catch (Exception var11) {
-				var11.printStackTrace();
+			} catch (Exception var17) {
+				var17.printStackTrace();
 			}
 		} else {
-			this.snowCovered = this.rand.nextInt(4) == 0;
+			this.sandCovered = InputHandler.IsKeyDown(54) ? false : this.rand.nextInt(4) == 1;
 		}
 
-		boolean var15 = false;
+		boolean var19 = false;
 		if(this.randomSeed == 0L) {
 			this.randomSeed = var3;
-			var15 = true;
+			var19 = true;
 		}
 
+		this.field_7486_19Zq3usHE49nqTf42NA4437074mbHq57gg27445jru16ailF0t00O91Q8HO3 = (new BiomeUnknownClass3(new Random(this.randomSeed))).func_10190_9hA9hGtqVhzjB1mqm8q4p5FR00Mv2wW72R61Kce04yYaa19rm57UsiH9mAq0();
 		this.chunkProvider = this.getChunkProvider(this.saveDirectory);
-		if(var15) {
+		if(var19) {
 			this.worldChunkLoadOverride = true;
 			this.spawnX = 0;
 			this.spawnY = 64;
@@ -243,7 +292,7 @@
 
 	}
 
-	private boolean findSpawn(int var1, int var2) {
+	protected boolean findSpawn(int var1, int var2) {
 		int var3 = this.getFirstUncoveredBlock(var1, var2);
 		return var3 == Block.sand.blockID;
 	}
@@ -283,6 +332,7 @@
 
 			this.chunkProvider.saveChunks(var1, var2);
 		}
+
 	}
 
 	private void saveLevel() {
@@ -295,42 +345,70 @@
 		var1.setLong("Time", this.worldTime);
 		var1.setLong("SizeOnDisk", this.sizeOnDisk);
 		var1.setBoolean("SnowCovered", this.snowCovered);
+		var1.setBoolean("SandCovered", this.sandCovered);
 		var1.setLong("LastPlayed", System.currentTimeMillis());
+		var1.setLong("Milestone", this.GetMilestone());
+		var1.setBoolean("ExclusivelyFrail", this.exclFrailMode);
 		EntityPlayer var2 = null;
 		if(this.playerEntities.size() > 0) {
 			var2 = (EntityPlayer)this.playerEntities.get(0);
 		}
 
-		NBTTagCompound var3;
+		File var3 = new File(this.saveDirectory, "excl_frail");
+		if(this.exclFrailMode && !var3.exists()) {
+			try {
+				var3.createNewFile();
+			} catch (IOException var10) {
+				var10.printStackTrace();
+			}
+		} else if(!this.exclFrailMode && var3.exists()) {
+			ExtLogger.i("Deleting excl. frail file");
+			var3.delete();
+		}
+
+		NBTTagCompound var4;
 		if(var2 != null) {
-			var3 = new NBTTagCompound();
-			var2.writeToNBT(var3);
-			var1.setCompoundTag("Player", var3);
+			var4 = new NBTTagCompound();
+			var2.writeToNBT(var4);
+			if(this.func_7458_5r8qe5geuw4S9tsd10m7M2qgIZAlCgZo31t563di8oEr3d5K6yrFyI690mD5()) {
+				var1.setCompoundTag("Player", var4);
+			}
+
+			if(this.field_7498_65957fU9nGL5PA2e96ZOK3ePBveSt2ceA9Glj10PC2Jo5s0wI21ix69flng2 != null && this.field_7498_65957fU9nGL5PA2e96ZOK3ePBveSt2ceA9Glj10PC2Jo5s0wI21ix69flng2.size() > 0) {
+				NBTTagCompound var5 = new NBTTagCompound();
+				var1.setCompoundTag("PortalZones", var5);
+				int var6 = 0;
+
+				for(Iterator var7 = this.field_7498_65957fU9nGL5PA2e96ZOK3ePBveSt2ceA9Glj10PC2Jo5s0wI21ix69flng2.iterator(); var7.hasNext(); ++var6) {
+					HandlerSetCheckpointUnknownClass var8 = (HandlerSetCheckpointUnknownClass)var7.next();
+					var5.setCompoundTag("pzone" + var6, var8.func_10087_1y146m8JQy5RXz2ldm45tt2tSQj9U640VM27JQiN01nA79WhHvFRXlvxe84l());
+				}
+			}
 		}
 
-		var3 = new NBTTagCompound();
-		var3.setTag("Data", var1);
+		var4 = new NBTTagCompound();
+		var4.setTag("Data", var1);
 
 		try {
-			File var4 = new File(this.saveDirectory, "level.dat_new");
-			File var5 = new File(this.saveDirectory, "level.dat_old");
-			File var6 = new File(this.saveDirectory, "level.dat");
-			CompressedStreamTools.writeCompressed(var3, new FileOutputStream(var4));
-			if(var5.exists()) {
-				var5.delete();
-			}
-
-			var6.renameTo(var5);
-			if(var6.exists()) {
-				var6.delete();
-			}
-
-			var4.renameTo(var6);
-			if(var4.exists()) {
-				var4.delete();
-			}
-		} catch (Exception var7) {
-			var7.printStackTrace();
+			File var11 = new File(this.saveDirectory, "level.dat_new");
+			File var12 = new File(this.saveDirectory, "level.dat_old");
+			File var13 = new File(this.saveDirectory, "level.dat");
+			CompressedStreamTools.writeCompressed(var4, new FileOutputStream(var11));
+			if(var12.exists()) {
+				var12.delete();
+			}
+
+			var13.renameTo(var12);
+			if(var13.exists()) {
+				var13.delete();
+			}
+
+			var11.renameTo(var13);
+			if(var11.exists()) {
+				var11.delete();
+			}
+		} catch (Exception var9) {
+			var9.printStackTrace();
 		}
 
 	}
@@ -378,7 +456,7 @@
 		}
 	}
 
-	private boolean chunkExists(int var1, int var2) {
+	public boolean chunkExists(int var1, int var2) {
 		return this.chunkProvider.chunkExists(var1, var2);
 	}
 
@@ -483,10 +561,12 @@
 	}
 
 	public void markBlockNeedsUpdate(int var1, int var2, int var3) {
-		for(int var4 = 0; var4 < this.worldAccesses.size(); ++var4) {
-			((IWorldAccess)this.worldAccesses.get(var4)).markBlockAndNeighborsNeedsUpdate(var1, var2, var3);
-		}
+		if(var2 >= 0) {
+			for(int var4 = 0; var4 < this.worldAccesses.size(); ++var4) {
+				((IWorldAccess)this.worldAccesses.get(var4)).markBlockAndNeighborsNeedsUpdate(var1, var2, var3);
+			}
 
+		}
 	}
 
 	protected void notifyBlockChange(int var1, int var2, int var3, int var4) {
@@ -526,8 +606,8 @@
 			if(var5 != null) {
 				var5.onNeighborBlockChange(this, var1, var2, var3, var4);
 			}
-
 		}
+
 	}
 
 	public boolean canBlockSeeTheSky(int var1, int var2, int var3) {
@@ -538,51 +618,64 @@
 		return this.getBlockLightValue_do(var1, var2, var3, true);
 	}
 
+	public int getBlockLightValue(int var1, int var2, int var3, boolean var4) {
+		return this.getBlockLightValue_do(var1, var2, var3, true, var4);
+	}
+
 	public int getBlockLightValue_do(int var1, int var2, int var3, boolean var4) {
+		return this.getBlockLightValue_do(var1, var2, var3, var4, false);
+	}
+
+	public int getBlockLightValue_do(int var1, int var2, int var3, boolean var4, boolean var5) {
+		int var6 = this.skylightSubtracted;
+		if(var5 && InputHandler.mc.options.renderDistance == 5) {
+			var6 = Math.max(12, var6);
+		}
+
 		if(var1 >= -32000000 && var3 >= -32000000 && var1 < 32000000 && var3 <= 32000000) {
-			int var5;
+			int var7;
 			if(var4) {
-				var5 = this.getBlockId(var1, var2, var3);
-				if(var5 == Block.stairSingle.blockID || var5 == Block.tilledField.blockID) {
-					int var6 = this.getBlockLightValue_do(var1, var2 + 1, var3, false);
-					int var7 = this.getBlockLightValue_do(var1 + 1, var2, var3, false);
-					int var8 = this.getBlockLightValue_do(var1 - 1, var2, var3, false);
-					int var9 = this.getBlockLightValue_do(var1, var2, var3 + 1, false);
-					int var10 = this.getBlockLightValue_do(var1, var2, var3 - 1, false);
-					if(var7 > var6) {
-						var6 = var7;
-					}
-
-					if(var8 > var6) {
-						var6 = var8;
-					}
-
-					if(var9 > var6) {
-						var6 = var9;
-					}
-
-					if(var10 > var6) {
-						var6 = var10;
-					}
-
-					return var6;
+				var7 = this.getBlockId(var1, var2, var3);
+				if(var7 == Block.stairSingle.blockID || var7 == Block.tilledField.blockID) {
+					int var13 = this.getBlockLightValue_do(var1, var2 + 1, var3, false);
+					int var9 = this.getBlockLightValue_do(var1 + 1, var2, var3, false);
+					int var10 = this.getBlockLightValue_do(var1 - 1, var2, var3, false);
+					int var11 = this.getBlockLightValue_do(var1, var2, var3 + 1, false);
+					int var12 = this.getBlockLightValue_do(var1, var2, var3 - 1, false);
+					if(var9 > var13) {
+						var13 = var9;
+					}
+
+					if(var10 > var13) {
+						var13 = var10;
+					}
+
+					if(var11 > var13) {
+						var13 = var11;
+					}
+
+					if(var12 > var13) {
+						var13 = var12;
+					}
+
+					return var13;
 				}
 			}
 
 			if(var2 < 0) {
 				return 0;
 			} else if(var2 >= 128) {
-				var5 = 15 - this.skylightSubtracted;
-				if(var5 < 0) {
-					var5 = 0;
+				var7 = 15 - var6;
+				if(var7 < 0) {
+					var7 = 0;
 				}
 
-				return var5;
+				return var7;
 			} else {
-				Chunk var11 = this.getChunkFromChunkCoords(var1 >> 4, var3 >> 4);
+				Chunk var8 = this.getChunkFromChunkCoords(var1 >> 4, var3 >> 4);
 				var1 &= 15;
 				var3 &= 15;
-				return var11.getBlockLightValue(var1, var2, var3, this.skylightSubtracted);
+				return var8.getBlockLightValue(var1, var2, var3, var6);
 			}
 		} else {
 			return 15;
@@ -637,8 +730,8 @@
 			if(this.getSavedLightValue(var1, var2, var3, var4) != var5) {
 				this.scheduleLightingUpdate(var1, var2, var3, var4, var2, var3, var4);
 			}
-
 		}
+
 	}
 
 	public int getSavedLightValue(EnumSkyBlock var1, int var2, int var3, int var4) {
@@ -649,7 +742,12 @@
 				return 0;
 			} else {
 				Chunk var7 = this.getChunkFromChunkCoords(var5, var6);
-				return var7.getSavedLightValue(var1, var2 & 15, var3, var4 & 15);
+
+				try {
+					return var7.getSavedLightValue(var1, var2 & 15, var3, var4 & 15);
+				} catch (StackOverflowError var9) {
+					return 0;
+				}
 			}
 		} else {
 			return var1.defaultLightValue;
@@ -657,21 +755,19 @@
 	}
 
 	public void setLightValue(EnumSkyBlock var1, int var2, int var3, int var4, int var5) {
-		if(var2 >= -32000000 && var4 >= -32000000 && var2 < 32000000 && var4 <= 32000000) {
-			if(var3 >= 0) {
-				if(var3 < 128) {
-					if(this.chunkExists(var2 >> 4, var4 >> 4)) {
-						Chunk var6 = this.getChunkFromChunkCoords(var2 >> 4, var4 >> 4);
-						var6.setLightValue(var1, var2 & 15, var3, var4 & 15, var5);
-
-						for(int var7 = 0; var7 < this.worldAccesses.size(); ++var7) {
-							((IWorldAccess)this.worldAccesses.get(var7)).markBlockAndNeighborsNeedsUpdate(var2, var3, var4);
-						}
-
-					}
-				}
+		if(var2 >= -32000000 && var4 >= -32000000 && var2 < 32000000 && var4 <= 32000000 && var3 >= 0 && var3 < 128 && this.chunkExists(var2 >> 4, var4 >> 4)) {
+			Chunk var6 = this.getChunkFromChunkCoords(var2 >> 4, var4 >> 4);
+			var6.setLightValue(var1, var2 & 15, var3, var4 & 15, var5);
+
+			for(int var7 = 0; var7 < this.worldAccesses.size(); ++var7) {
+				((IWorldAccess)this.worldAccesses.get(var7)).markBlockAndNeighborsNeedsUpdate(var2, var3, var4);
 			}
 		}
+
+	}
+
+	public float getRenderSideBrightness(int var1, int var2, int var3) {
+		return lightBrightnessTable[this.getBlockLightValue(var1, var2, var3, true)];
 	}
 
 	public float getBrightness(int var1, int var2, int var3) {
@@ -751,13 +847,12 @@
 						var21 = (var15 - var1.zCoord) / var27;
 					}
 
-					boolean var29 = false;
-					byte var35;
+					byte var29;
 					if(var17 < var19 && var17 < var21) {
 						if(var4 > var7) {
-							var35 = 4;
+							var29 = 4;
 						} else {
-							var35 = 5;
+							var29 = 5;
 						}
 
 						var1.xCoord = var11;
@@ -765,9 +860,9 @@
 						var1.zCoord += var27 * var17;
 					} else if(var19 < var21) {
 						if(var5 > var8) {
-							var35 = 0;
+							var29 = 0;
 						} else {
-							var35 = 1;
+							var29 = 1;
 						}
 
 						var1.xCoord += var23 * var19;
@@ -775,9 +870,9 @@
 						var1.zCoord += var27 * var19;
 					} else {
 						if(var6 > var9) {
-							var35 = 2;
+							var29 = 2;
 						} else {
-							var35 = 3;
+							var29 = 3;
 						}
 
 						var1.xCoord += var23 * var21;
@@ -787,19 +882,19 @@
 
 					Vec3D var30 = Vec3D.createVector(var1.xCoord, var1.yCoord, var1.zCoord);
 					var7 = (int)(var30.xCoord = (double)MathHelper.floor_double(var1.xCoord));
-					if(var35 == 5) {
+					if(var29 == 5) {
 						--var7;
 						++var30.xCoord;
 					}
 
 					var8 = (int)(var30.yCoord = (double)MathHelper.floor_double(var1.yCoord));
-					if(var35 == 1) {
+					if(var29 == 1) {
 						--var8;
 						++var30.yCoord;
 					}
 
 					var9 = (int)(var30.zCoord = (double)MathHelper.floor_double(var1.zCoord));
-					if(var35 == 3) {
+					if(var29 == 3) {
 						--var9;
 						++var30.zCoord;
 					}
@@ -856,14 +951,14 @@
 		int var2 = MathHelper.floor_double(var1.posX / 16.0D);
 		int var3 = MathHelper.floor_double(var1.posZ / 16.0D);
 		boolean var4 = false;
-		if(var1 instanceof EntityPlayer) {
+		if(var1 instanceof EntityPlayer && !(var1 instanceof EntityShadowPlayer)) {
 			var4 = true;
 		}
 
 		if(!var4 && !this.chunkExists(var2, var3)) {
 			return false;
 		} else {
-			if(var1 instanceof EntityPlayer) {
+			if(var1 instanceof EntityPlayer && !(var1 instanceof EntityShadowPlayer)) {
 				this.playerEntities.add((EntityPlayer)var1);
 				System.out.println("Player count: " + this.playerEntities.size());
 			}
@@ -906,7 +1001,7 @@
 		this.worldAccesses.remove(var1);
 	}
 
-	public List getCollidingBoundingBoxes(Entity var1, AxisAlignedBB var2) {
+	public List<AxisAlignedBB> getCollidingBoundingBoxes(Entity var1, AxisAlignedBB var2) {
 		this.collidingBoundingBoxes.clear();
 		int var3 = MathHelper.floor_double(var2.minX);
 		int var4 = MathHelper.floor_double(var2.maxX + 1.0D);
@@ -921,7 +1016,7 @@
 					for(int var11 = var5 - 1; var11 < var6; ++var11) {
 						Block var12 = Block.blocksList[this.getBlockId(var9, var11, var10)];
 						if(var12 != null) {
-							var12.getCollidingBoundingBoxes(this, var9, var11, var10, var2, this.collidingBoundingBoxes);
+							var12.getCollidingBoundingBoxes(this, var9, var11, var10, var2, this.collidingBoundingBoxes, var1);
 						}
 					}
 				}
@@ -957,7 +1052,8 @@
 			var3 = 1.0F;
 		}
 
-		return (int)(var3 * 11.0F);
+		boolean var4 = ScreenDebugMenu.dbg_conf_nebulaEvt || this.GetMilestone() % 10L == 0L && this.GetMilestone() > 0L;
+		return var4 ? 8 + (int)(var3 * 3.0F) : (int)(var3 * 11.0F);
 	}
 
 	public Vec3D getSkyColor(float var1) {
@@ -974,10 +1070,11 @@
 		float var4 = (float)(this.skyColor >> 16 & 255L) / 255.0F;
 		float var5 = (float)(this.skyColor >> 8 & 255L) / 255.0F;
 		float var6 = (float)(this.skyColor & 255L) / 255.0F;
-		var4 *= var3;
-		var5 *= var3;
-		var6 *= var3;
-		return Vec3D.createVector((double)var4, (double)var5, (double)var6);
+		float var7 = (float)(this.field_7500_6aGUO2jbVGtoxoGHcgMRUkCmunA4cxQ7hz8a29V2I7fc5UVeqFCM92Z8HJnU >> 16 & 255L) / 255.0F;
+		float var8 = (float)(this.field_7500_6aGUO2jbVGtoxoGHcgMRUkCmunA4cxQ7hz8a29V2I7fc5UVeqFCM92Z8HJnU >> 8 & 255L) / 255.0F;
+		float var9 = (float)(this.field_7500_6aGUO2jbVGtoxoGHcgMRUkCmunA4cxQ7hz8a29V2I7fc5UVeqFCM92Z8HJnU & 255L) / 255.0F;
+		float[] var10 = Ext1605Utils.BlendColorA(var3, var4, var5, var6, var7, var8, var9);
+		return Vec3D.createVector((double)var10[0], (double)var10[1], (double)var10[2]);
 	}
 
 	public float getCelestialAngle(float var1) {
@@ -1078,10 +1175,13 @@
 				var5.setScheduledTime((long)Block.blocksList[var4].tickRate() + this.worldTime);
 			}
 
+			this.listBeingWritten = true;
 			if(!this.scheduledTickSet.contains(var5)) {
 				this.scheduledTickSet.add(var5);
 				this.scheduledTickTreeSet.add(var5);
 			}
+
+			this.listBeingWritten = false;
 		}
 
 	}
@@ -1203,8 +1303,8 @@
 			if(Double.isNaN((double)var1.rotationYaw) || Double.isInfinite((double)var1.rotationYaw)) {
 				var1.rotationYaw = var1.prevRotationYaw;
 			}
-
 		}
+
 	}
 
 	public boolean checkIfAABBIsClear(AxisAlignedBB var1) {
@@ -1424,7 +1524,7 @@
 
 	}
 
-	public Entity createDebugPlayer(Class var1) {
+	public Entity createDebugPlayer(Class<? extends EntityPlayer> var1) {
 		return null;
 	}
 
@@ -1458,6 +1558,10 @@
 		return var4 == null ? false : var4.isOpaqueCube();
 	}
 
+	public BiomeInterface func_7342_9805301CWs03An9555qIw883P54dcq9802DkM5DuquNweM1NH26RH6oP02mr() {
+		return this.field_7486_19Zq3usHE49nqTf42NA4437074mbHq57gg27445jru16ailF0t00O91Q8HO3;
+	}
+
 	public void saveWorldIndirectly(IProgressUpdate var1) {
 		this.saveWorld(true, var1);
 	}
@@ -1471,7 +1575,10 @@
 				return true;
 			}
 
-			((MetadataChunkBlock)this.lightingToUpdate.remove(this.lightingToUpdate.size() - 1)).updateLight(this);
+			MetadataChunkBlock var2 = (MetadataChunkBlock)this.lightingToUpdate.remove(this.lightingToUpdate.size() - 1);
+			if(var2 != null) {
+				var2.updateLight(this);
+			}
 		}
 
 		return false;
@@ -1494,20 +1601,15 @@
 
 				for(int var13 = 0; var13 < var12; ++var13) {
 					MetadataChunkBlock var14 = (MetadataChunkBlock)this.lightingToUpdate.get(this.lightingToUpdate.size() - var13 - 1);
-					if(var14.skyBlock == var1 && var14.getLightUpdated(var2, var3, var4, var5, var6, var7)) {
+					if(var14 != null && var14.skyBlock == var1 && var14.getLightUpdated(var2, var3, var4, var5, var6, var7)) {
 						return;
 					}
 				}
 			}
 
 			this.lightingToUpdate.add(new MetadataChunkBlock(var1, var2, var3, var4, var5, var6, var7));
-			if(this.lightingToUpdate.size() > 100000) {
-				while(this.lightingToUpdate.size() > '\uc350') {
-					this.updatingLighting();
-				}
-			}
-
 		}
+
 	}
 
 	public void calculateInitialSkylight() {
@@ -1518,8 +1620,26 @@
 
 	}
 
+	public void func_7430_2WpX24v1vz12pVlm4Rc1b7y4nk1dDNM5jBcH0X8hn3Jw39FwYG2gi9mM940l() {
+		++this.field_7497_6WbP28c555893meijkmoF90Ca566QQQN5FP022rim05fq26oU3308065FJ2h;
+		if((this.field_7497_6WbP28c555893meijkmoF90Ca566QQQN5FP022rim05fq26oU3308065FJ2h & 5) == 5) {
+			this.markBlockNeedsUpdate((int)InputHandler.mc.thePlayer.posX, (int)InputHandler.mc.thePlayer.posY - 1, (int)InputHandler.mc.thePlayer.posZ);
+			this.markBlockNeedsUpdate((int)InputHandler.mc.thePlayer.posX, (int)InputHandler.mc.thePlayer.posY - 8, (int)InputHandler.mc.thePlayer.posZ);
+			this.markBlockNeedsUpdate((int)InputHandler.mc.thePlayer.posX + 16, (int)InputHandler.mc.thePlayer.posY - 1, (int)InputHandler.mc.thePlayer.posZ);
+			this.markBlockNeedsUpdate((int)InputHandler.mc.thePlayer.posX - 16, (int)InputHandler.mc.thePlayer.posY - 1, (int)InputHandler.mc.thePlayer.posZ);
+			this.markBlockNeedsUpdate((int)InputHandler.mc.thePlayer.posX, (int)InputHandler.mc.thePlayer.posY - 1, (int)InputHandler.mc.thePlayer.posZ + 16);
+			this.markBlockNeedsUpdate((int)InputHandler.mc.thePlayer.posX, (int)InputHandler.mc.thePlayer.posY - 1, (int)InputHandler.mc.thePlayer.posZ - 16);
+		}
+
+	}
+
 	public void tick() {
 		this.chunkProvider.unload100OldestChunks();
+		if(this.loadedEntityList.size() >= 4096) {
+			System.out.println("Entity overflow!");
+			this.loadedEntityList.retainAll(this.playerEntities);
+		}
+
 		int var1 = this.calculateSkylightSubtracted(1.0F);
 		if(var1 != this.skylightSubtracted) {
 			this.skylightSubtracted = var1;
@@ -1529,8 +1649,27 @@
 			}
 		}
 
-		++this.worldTime;
-		if(this.worldTime % (long)this.autosavePeriod == 0L) {
+		this.func_7430_2WpX24v1vz12pVlm4Rc1b7y4nk1dDNM5jBcH0X8hn3Jw39FwYG2gi9mM940l();
+		InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.func_12196_7s9IfTKre2uJtyoPjdLc93WmidSQs9AM2aDgi63837RD3989LlCE6V4C08ci();
+		boolean var3 = ScreenDebugMenu.dbg_conf_nebulaEvt || this.GetMilestone() % 10L == 0L && this.GetMilestone() > 0L;
+		if(var3) {
+			this.skyColor = 6976L;
+		} else {
+			this.skyColor = (long)InputHandler.mc.field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0.field_10164_5N63dbka0na7Is07L9kMmSk6ZK28Ioxdll6JwQgybo1I69cauDA8U5rtDvBv.field_12192_9E67d5X2srrjQ8fe493f7ub1P59cMh50f2G1a453y7P5UP6YgaLpUO1EN9yR;
+		}
+
+		if(this.worldTime % 23000L == 0L) {
+			System.out.println("Milestone " + this.worldTime / 23000L + " reached");
+		}
+
+		if(this.exclFrailMode && InputHandler.mc.options.difficulty != 4) {
+			this.exclFrailMode = false;
+			System.out.println("World has been changed from Frail mode");
+		}
+
+		this.worldTime += (long)(InputHandler.IsKeyDown(199) ? 16 : 1);
+		ExtEvents.WorldTick(this);
+		if(this.worldTime % (InputHandler.mc.options.renderDistance == 0 ? (long)(this.autosavePeriod * 10) : (long)this.autosavePeriod) == 0L) {
 			this.saveWorld(false, (IProgressUpdate)null);
 		}
 
@@ -1541,19 +1680,19 @@
 	protected void updateBlocksAndPlayCaveSounds() {
 		this.positionsToUpdate.clear();
 
+		int var1;
+		int var2;
 		int var3;
 		int var4;
-		int var6;
-		int var7;
-		for(int var1 = 0; var1 < this.playerEntities.size(); ++var1) {
-			EntityPlayer var2 = (EntityPlayer)this.playerEntities.get(var1);
-			var3 = MathHelper.floor_double(var2.posX / 16.0D);
-			var4 = MathHelper.floor_double(var2.posZ / 16.0D);
-			byte var5 = 9;
+		for(int var5 = 0; var5 < this.playerEntities.size(); ++var5) {
+			EntityPlayer var6 = (EntityPlayer)this.playerEntities.get(var5);
+			var1 = MathHelper.floor_double(var6.posX / 16.0D);
+			var2 = MathHelper.floor_double(var6.posZ / 16.0D);
+			byte var7 = 9;
 
-			for(var6 = -var5; var6 <= var5; ++var6) {
-				for(var7 = -var5; var7 <= var5; ++var7) {
-					this.positionsToUpdate.add(new ChunkCoordIntPair(var6 + var3, var7 + var4));
+			for(var3 = -var7; var3 <= var7; ++var3) {
+				for(var4 = -var7; var4 <= var7; ++var4) {
+					this.positionsToUpdate.add(new ChunkCoordIntPair(var3 + var1, var4 + var2));
 				}
 			}
 		}
@@ -1566,25 +1705,25 @@
 
 		while(var12.hasNext()) {
 			ChunkCoordIntPair var13 = (ChunkCoordIntPair)var12.next();
-			var3 = var13.chunkXPos * 16;
-			var4 = var13.chunkZPos * 16;
+			var1 = var13.chunkXPos * 16;
+			var2 = var13.chunkZPos * 16;
 			Chunk var14 = this.getChunkFromChunkCoords(var13.chunkXPos, var13.chunkZPos);
 			int var8;
 			int var9;
 			int var10;
 			if(this.soundCounter == 0) {
 				this.updateLCG = this.updateLCG * 3 + this.DIST_HASH_MAGIC;
-				var6 = this.updateLCG >> 2;
-				var7 = var6 & 15;
-				var8 = var6 >> 8 & 15;
-				var9 = var6 >> 16 & 127;
-				var10 = var14.getBlockID(var7, var9, var8);
-				var7 += var3;
-				var8 += var4;
-				if(var10 == 0 && this.getBlockLightValue(var7, var9, var8) <= this.rand.nextInt(8) && this.getSavedLightValue(EnumSkyBlock.Sky, var7, var9, var8) <= 0) {
-					EntityPlayer var11 = this.getClosestPlayer((double)var7 + 0.5D, (double)var9 + 0.5D, (double)var8 + 0.5D, 8.0D);
-					if(var11 != null && var11.getDistanceSq((double)var7 + 0.5D, (double)var9 + 0.5D, (double)var8 + 0.5D) > 4.0D) {
-						this.playSoundEffect((double)var7 + 0.5D, (double)var9 + 0.5D, (double)var8 + 0.5D, "ambient.cave.cave", 0.7F, 0.8F + this.rand.nextFloat() * 0.2F);
+				var3 = this.updateLCG >> 2;
+				var4 = var3 & 15;
+				var8 = var3 >> 8 & 15;
+				var9 = var3 >> 16 & 127;
+				var10 = var14.getBlockID(var4, var9, var8);
+				var4 += var1;
+				var8 += var2;
+				if(var10 == 0 && this.getBlockLightValue(var4, var9, var8) <= this.rand.nextInt(8) && this.getSavedLightValue(EnumSkyBlock.Sky, var4, var9, var8) <= 0) {
+					EntityPlayer var11 = this.getClosestPlayer((double)var4 + 0.5D, (double)var9 + 0.5D, (double)var8 + 0.5D, 8.0D);
+					if(var11 != null && var11.getDistanceSq((double)var4 + 0.5D, (double)var9 + 0.5D, (double)var8 + 0.5D) > 4.0D) {
+						this.playSoundEffect((double)var4 + 0.5D, (double)var9 + 0.5D, (double)var8 + 0.5D, "ambient.cave.cave", 0.7F, 0.8F + this.rand.nextFloat() * 0.2F);
 						this.soundCounter = this.rand.nextInt(12000) + 6000;
 					}
 				}
@@ -1592,31 +1731,59 @@
 
 			if(this.snowCovered && this.rand.nextInt(4) == 0) {
 				this.updateLCG = this.updateLCG * 3 + this.DIST_HASH_MAGIC;
-				var6 = this.updateLCG >> 2;
-				var7 = var6 & 15;
-				var8 = var6 >> 8 & 15;
-				var9 = this.getTopSolidOrLiquidBlock(var7 + var3, var8 + var4);
-				if(var9 >= 0 && var9 < 128 && var14.getSavedLightValue(EnumSkyBlock.Block, var7, var9, var8) < 10) {
-					var10 = var14.getBlockID(var7, var9 - 1, var8);
-					if(var14.getBlockID(var7, var9, var8) == 0 && Block.snow.canPlaceBlockAt(this, var7 + var3, var9, var8 + var4)) {
-						this.setBlockWithNotify(var7 + var3, var9, var8 + var4, Block.snow.blockID);
-					}
-
-					if(var10 == Block.waterStill.blockID && var14.getBlockMetadata(var7, var9 - 1, var8) == 0) {
-						this.setBlockWithNotify(var7 + var3, var9 - 1, var8 + var4, Block.ice.blockID);
-					}
-				}
-			}
-
-			for(var6 = 0; var6 < 80; ++var6) {
-				this.updateLCG = this.updateLCG * 3 + this.DIST_HASH_MAGIC;
-				var7 = this.updateLCG >> 2;
-				var8 = var7 & 15;
-				var9 = var7 >> 8 & 15;
-				var10 = var7 >> 16 & 127;
-				byte var15 = var14.blocks[var8 << 11 | var9 << 7 | var10];
+				var3 = this.updateLCG >> 2;
+				var4 = var3 & 15;
+				var8 = var3 >> 8 & 15;
+				var9 = this.getTopSolidOrLiquidBlock(var4 + var1, var8 + var2);
+				if(var9 >= 0 && var9 < 128 && var14.getSavedLightValue(EnumSkyBlock.Block, var4, var9, var8) < 10) {
+					var10 = var14.getBlockID(var4, var9 - 1, var8);
+					if(var14.getBlockID(var4, var9, var8) == 0 && Block.snow.canPlaceBlockAt(this, var4 + var1, var9, var8 + var2)) {
+						this.setBlockWithNotify(var4 + var1, var9, var8 + var2, Block.snow.blockID);
+					}
+
+					if(var10 == Block.waterStill.blockID && var14.getBlockMetadata(var4, var9 - 1, var8) == 0) {
+						this.setBlockWithNotify(var4 + var1, var9 - 1, var8 + var2, Block.ice.blockID);
+					}
+				}
+			}
+
+			if(this.sandCovered && this.rand.nextInt(4) == 1) {
+				this.updateLCG = this.updateLCG * 3 + this.DIST_HASH_MAGIC;
+				var3 = this.updateLCG >> 2;
+				var4 = var3 & 15;
+				var8 = var3 >> 8 & 15;
+				var9 = this.getTopSolidOrLiquidBlock(var4 + var1, var8 + var2);
+				if(var9 >= 0 && var9 < 128 && var14.getSavedLightValue(EnumSkyBlock.Block, var4, var9, var8) < 10) {
+					var10 = var14.getBlockID(var4, var9 - 1, var8);
+					if(var10 == Block.waterStill.blockID && var14.getBlockMetadata(var4, var9 - 1, var8) == 0 && this.rand.nextInt(16) == 0) {
+						this.setBlockWithNotify(var4 + var1, var9 - 1, var8 + var2, Block.blockClay.blockID);
+					}
+				}
+			}
+
+			if(InputHandler.mc.isRaining) {
+				this.updateLCG = this.updateLCG * 3 + this.DIST_HASH_MAGIC;
+				var3 = this.updateLCG >> 2;
+				var4 = var3 & 15;
+				var8 = var3 >> 8 & 15;
+				var9 = this.getTopSolidOrLiquidBlock(var4 + var1, var8 + var2);
+				if(var9 >= 0 && var9 < 128 && var14.getSavedLightValue(EnumSkyBlock.Block, var4, var9, var8) < 8) {
+					var14.getBlockID(var4, var9 - 1, var8);
+					if(var14.getBlockID(var4, var9, var8) == 0 && var9 < 66) {
+						this.setBlockWithNotify(var4 + var1, var9, var8 + var2, Block.waterStill.blockID);
+					}
+				}
+			}
+
+			for(var3 = 0; var3 < 80; ++var3) {
+				this.updateLCG = this.updateLCG * 3 + this.DIST_HASH_MAGIC;
+				var4 = this.updateLCG >> 2;
+				var8 = var4 & 15;
+				var9 = var4 >> 8 & 15;
+				var10 = var4 >> 16 & 127;
+				int var15 = var14.blocks[var8 << 11 | var9 << 7 | var10] & 255;
 				if(Block.tickOnLoad[var15]) {
-					Block.blocksList[var15].updateTick(this, var8 + var3, var10, var9 + var4, this.rand);
+					Block.blocksList[var15].updateTick(this, var8 + var1, var10, var9 + var2, this.rand);
 				}
 			}
 		}
@@ -1625,26 +1792,35 @@
 
 	public boolean tickUpdates(boolean var1) {
 		int var2 = this.scheduledTickTreeSet.size();
-		if(var2 != this.scheduledTickSet.size()) {
-			throw new IllegalStateException("TickNextTick list out of synch");
+		int var3 = Math.min(var2, this.scheduledTickSet.size());
+		if(Math.abs(var2 - this.scheduledTickSet.size()) > 3) {
+			return true;
 		} else {
 			if(var2 > 1000) {
 				var2 = 1000;
 			}
 
-			for(int var3 = 0; var3 < var2; ++var3) {
-				NextTickListEntry var4 = (NextTickListEntry)this.scheduledTickTreeSet.first();
-				if(!var1 && var4.scheduledTime > this.worldTime) {
+			for(int var4 = 0; var4 < var3; ++var4) {
+				var3 = Math.min(var2, this.scheduledTickSet.size());
+				Set var6 = this.scheduledTickTreeSet;
+				NextTickListEntry var5;
+				synchronized(var6) {
+					var5 = (NextTickListEntry)this.scheduledTickTreeSet.iterator().next();
+				}
+
+				if(!var1 && var5.scheduledTime > this.worldTime) {
 					break;
 				}
 
-				this.scheduledTickTreeSet.remove(var4);
-				this.scheduledTickSet.remove(var4);
-				byte var5 = 8;
-				if(this.checkChunksExist(var4.xCoord - var5, var4.yCoord - var5, var4.zCoord - var5, var4.xCoord + var5, var4.yCoord + var5, var4.zCoord + var5)) {
-					int var6 = this.getBlockId(var4.xCoord, var4.yCoord, var4.zCoord);
-					if(var6 == var4.blockID && var6 > 0) {
-						Block.blocksList[var6].updateTick(this, var4.xCoord, var4.yCoord, var4.zCoord, this.rand);
+				this.listBeingWritten = true;
+				this.scheduledTickTreeSet.remove(var5);
+				this.scheduledTickSet.remove(var5);
+				this.listBeingWritten = false;
+				byte var9 = 8;
+				if(this.checkChunksExist(var5.xCoord - var9, var5.yCoord - var9, var5.zCoord - var9, var5.xCoord + var9, var5.yCoord + var9, var5.zCoord + var9)) {
+					int var7 = this.getBlockId(var5.xCoord, var5.yCoord, var5.zCoord);
+					if(var7 == var5.blockID && var7 > 0) {
+						Block.blocksList[var7].updateTick(this, var5.xCoord, var5.yCoord, var5.zCoord, this.rand);
 					}
 				}
 			}
@@ -1669,7 +1845,7 @@
 
 	}
 
-	public List getEntitiesWithinAABBExcludingEntity(Entity var1, AxisAlignedBB var2) {
+	public List<Entity> getEntitiesWithinAABBExcludingEntity(Entity var1, AxisAlignedBB var2) {
 		this.entitiesWithinAABBExcludingEntity.clear();
 		int var3 = MathHelper.floor_double((var2.minX - 2.0D) / 16.0D);
 		int var4 = MathHelper.floor_double((var2.maxX + 2.0D) / 16.0D);
@@ -1687,7 +1863,7 @@
 		return this.entitiesWithinAABBExcludingEntity;
 	}
 
-	public List getEntitiesWithinAABB(Class var1, AxisAlignedBB var2) {
+	public List<Entity> getEntitiesWithinAABB(Class<? extends Entity> var1, AxisAlignedBB var2) {
 		int var3 = MathHelper.floor_double((var2.minX - 2.0D) / 16.0D);
 		int var4 = MathHelper.floor_double((var2.maxX + 2.0D) / 16.0D);
 		int var5 = MathHelper.floor_double((var2.minZ - 2.0D) / 16.0D);
@@ -1705,7 +1881,7 @@
 		return var7;
 	}
 
-	public List getLoadedEntityList() {
+	public List<Entity> getLoadedEntityList() {
 		return this.loadedEntityList;
 	}
 
@@ -1720,7 +1896,7 @@
 
 	}
 
-	public int countEntities(Class var1) {
+	public int countEntities(Class<? extends Entity> var1) {
 		int var2 = 0;
 
 		for(int var3 = 0; var3 < this.loadedEntityList.size(); ++var3) {
@@ -1733,7 +1909,7 @@
 		return var2;
 	}
 
-	public void addLoadedEntities(List var1) {
+	public void addLoadedEntities(List<Entity> var1) {
 		this.loadedEntityList.addAll(var1);
 
 		for(int var2 = 0; var2 < var1.size(); ++var2) {
@@ -1742,7 +1918,7 @@
 
 	}
 
-	public void unloadEntities(List var1) {
+	public void unloadEntities(List<Entity> var1) {
 		this.unloadedEntityList.addAll(var1);
 	}
 
@@ -1891,15 +2067,19 @@
 
 			try {
 				if(var2.readLong() != this.lockTimestamp) {
-					throw new MinecraftException("The save is being accessed from another location, aborting");
+					InputHandler.mc.changeWorld((World)null, "", false);
+					InputHandler.mc.displayGuiScreen(new GuiMainMenu());
+					InputHandler.mc.displayGuiScreen(new GuiConnectFailed("", "This save is being accessed from another location."));
 				}
 			} finally {
 				var2.close();
 			}
-
 		} catch (IOException var7) {
-			throw new MinecraftException("Failed to check session lock, aborting");
+			InputHandler.mc.changeWorld((World)null, "", false);
+			InputHandler.mc.displayGuiScreen(new GuiMainMenu());
+			InputHandler.mc.displayGuiScreen(new GuiConnectFailed("", "Failed to check session lock."));
 		}
+
 	}
 
 	public void setWorldTime(long var1) {
@@ -1918,7 +2098,7 @@
 		}
 
 		if(!this.loadedEntityList.contains(var1)) {
-			System.out.println("REINSERTING PLAYER!");
+			System.out.println("REINSERTING PLAYER! " + ((EntityPlayer)var1).username);
 			this.loadedEntityList.add(var1);
 		}
 
--- /dev/null
+++ net/minecraft/src/EntityOtherPlayerMPUnknownClass.java
@@ -1,0 +1,51 @@
+package net.minecraft.src;
+
+public class EntityOtherPlayerMPUnknownClass extends EntityOtherPlayerMP {
+	HandlerPlayDemo field_9039_4T67u5DrK5VRC9XHzasX05qoPY1RE180o297SnfFmfpgFTtBwRT6s53O7M7x;
+	int field_9042_02T89qK8l4TTf73hk3u8L3iC9zA96g1C8bm18I8h0qhOFo8igW3P9UHE5pp0 = 0;
+	int field_9040_9sT33E3Otr4kMppEeO5Fj8Y2tIq0i1U84Z2PgHMS5jGSuwMwF33nWD5d1X94 = 0;
+	public boolean field_9041_7NupkuQ1lSGoC9624rm26tc960f5I8Nuu6F13q14526SMi8WK3oY6wlnVWf2 = true;
+
+	public EntityOtherPlayerMPUnknownClass(World var1, HandlerPlayDemo var2) {
+		super(var1, var2.field_11430_0OdUr2nD4R8uO36Sd51QoP94Lm2202x55uFJQVi7Sy5OO23j6PTNlph9id4f);
+		this.setLocationAndAngles(((HandlerPlayDemoUnknownClass2)var2.field_11431_637P37TE9gmDT57yVlTZ73i576up8cwuDF63ofWaw7wL7LacaR24xM7BXzu5.get(0)).field_11238_06ia42Crh5k64k27yg1rkw01iek6FWqXq038Nz5xCsr1186gZTb5QrQC9Ee6, ((HandlerPlayDemoUnknownClass2)var2.field_11431_637P37TE9gmDT57yVlTZ73i576up8cwuDF63ofWaw7wL7LacaR24xM7BXzu5.get(0)).field_11239_27ngU1sJjzhN2F1lwIlqzdWsQU09NIv1oOAETINS9vPghD0aR3wNidfKbmq8, ((HandlerPlayDemoUnknownClass2)var2.field_11431_637P37TE9gmDT57yVlTZ73i576up8cwuDF63ofWaw7wL7LacaR24xM7BXzu5.get(0)).field_11242_70hhZNfPCn7F2A43sUn292vmU47FJ2Xqf8wxmaj0Jvht0gJ3JZdg1B11ZIS4, (float)((HandlerPlayDemoUnknownClass2)var2.field_11431_637P37TE9gmDT57yVlTZ73i576up8cwuDF63ofWaw7wL7LacaR24xM7BXzu5.get(0)).field_11243_366213Kygu44q4VZJiDT5dY5qsS8R35a4wMyFfwM8f9lEhNH41knI2ixxw3K, (float)((HandlerPlayDemoUnknownClass2)var2.field_11431_637P37TE9gmDT57yVlTZ73i576up8cwuDF63ofWaw7wL7LacaR24xM7BXzu5.get(0)).field_11241_1pBNhz72hG0DM4M2G197Aq7qWjMeY65Hl12oPon7Y3795IIGRLKfWH6264yk);
+		this.field_9039_4T67u5DrK5VRC9XHzasX05qoPY1RE180o297SnfFmfpgFTtBwRT6s53O7M7x = var2;
+		this.yOffset = 0.0F;
+		this.stepHeight = 0.0F;
+		this.noClip = true;
+	}
+
+	public boolean attackEntityFrom(Entity var1, int var2) {
+		return false;
+	}
+
+	public void applyEntityCollision(Entity var1) {
+	}
+
+	public void onLivingUpdate() {
+		if(this.field_9042_02T89qK8l4TTf73hk3u8L3iC9zA96g1C8bm18I8h0qhOFo8igW3P9UHE5pp0 < this.field_9039_4T67u5DrK5VRC9XHzasX05qoPY1RE180o297SnfFmfpgFTtBwRT6s53O7M7x.field_11431_637P37TE9gmDT57yVlTZ73i576up8cwuDF63ofWaw7wL7LacaR24xM7BXzu5.size()) {
+			HandlerPlayDemoUnknownClass2 var1 = (HandlerPlayDemoUnknownClass2)this.field_9039_4T67u5DrK5VRC9XHzasX05qoPY1RE180o297SnfFmfpgFTtBwRT6s53O7M7x.field_11431_637P37TE9gmDT57yVlTZ73i576up8cwuDF63ofWaw7wL7LacaR24xM7BXzu5.get(this.field_9042_02T89qK8l4TTf73hk3u8L3iC9zA96g1C8bm18I8h0qhOFo8igW3P9UHE5pp0);
+			this.setLocationAndAngles(var1.field_11238_06ia42Crh5k64k27yg1rkw01iek6FWqXq038Nz5xCsr1186gZTb5QrQC9Ee6, var1.field_11239_27ngU1sJjzhN2F1lwIlqzdWsQU09NIv1oOAETINS9vPghD0aR3wNidfKbmq8 - (double)1.62F, var1.field_11242_70hhZNfPCn7F2A43sUn292vmU47FJ2Xqf8wxmaj0Jvht0gJ3JZdg1B11ZIS4, (float)var1.field_11243_366213Kygu44q4VZJiDT5dY5qsS8R35a4wMyFfwM8f9lEhNH41knI2ixxw3K, (float)var1.field_11241_1pBNhz72hG0DM4M2G197Aq7qWjMeY65Hl12oPon7Y3795IIGRLKfWH6264yk);
+			this.limbSwing = (float)var1.field_11237_979Vt94Ikeubje8aq02QS2ct4vv1F2xoYEYcud7ff1548HLvX33CvjHHnP0K;
+			this.limbYaw = (float)var1.field_11236_73B65S5lxs1r7B0z1M2S4uMTH4ZE43GT5xQV19C44T08jAeG7ae4e6V605K6;
+			this.motionY = 0.0D;
+			if(this.field_9039_4T67u5DrK5VRC9XHzasX05qoPY1RE180o297SnfFmfpgFTtBwRT6s53O7M7x.field_11432_08Cq759cm94gk5tNi09771XqCD6UcInYC8zHgZJS1aDD9g9FLZ8ZaW69dqkS.size() > 0 && this.field_9039_4T67u5DrK5VRC9XHzasX05qoPY1RE180o297SnfFmfpgFTtBwRT6s53O7M7x.field_11432_08Cq759cm94gk5tNi09771XqCD6UcInYC8zHgZJS1aDD9g9FLZ8ZaW69dqkS.size() > this.field_9040_9sT33E3Otr4kMppEeO5Fj8Y2tIq0i1U84Z2PgHMS5jGSuwMwF33nWD5d1X94 && ((HandlerPlayDemoUnknownClass3)this.field_9039_4T67u5DrK5VRC9XHzasX05qoPY1RE180o297SnfFmfpgFTtBwRT6s53O7M7x.field_11432_08Cq759cm94gk5tNi09771XqCD6UcInYC8zHgZJS1aDD9g9FLZ8ZaW69dqkS.get(this.field_9040_9sT33E3Otr4kMppEeO5Fj8Y2tIq0i1U84Z2PgHMS5jGSuwMwF33nWD5d1X94)).field_11851_6Isyx6ibE614572UHOY1hG1DI1xi348XJ8wDp59Qzv9n59hSYsTm088vzK93 == (long)this.field_9042_02T89qK8l4TTf73hk3u8L3iC9zA96g1C8bm18I8h0qhOFo8igW3P9UHE5pp0) {
+				((HandlerPlayDemoUnknownClass3)this.field_9039_4T67u5DrK5VRC9XHzasX05qoPY1RE180o297SnfFmfpgFTtBwRT6s53O7M7x.field_11432_08Cq759cm94gk5tNi09771XqCD6UcInYC8zHgZJS1aDD9g9FLZ8ZaW69dqkS.get(this.field_9040_9sT33E3Otr4kMppEeO5Fj8Y2tIq0i1U84Z2PgHMS5jGSuwMwF33nWD5d1X94++)).func_11849_8m6693d8dhYR0w4HrTryNkH00xQWV6oS9Yjo7ME4Oro3F23Zt91YucB1PvA1(this);
+			}
+
+			++this.field_9042_02T89qK8l4TTf73hk3u8L3iC9zA96g1C8bm18I8h0qhOFo8igW3P9UHE5pp0;
+		} else {
+			this.func_9038_1vEc42Y7c91b4gM7oY72q1v1gF1P33XCpUko2cq23lKl2JrT3iJUBoY1U7dI();
+		}
+
+		super.onLivingUpdate();
+	}
+
+	public void func_9038_1vEc42Y7c91b4gM7oY72q1v1gF1P33XCpUko2cq23lKl2JrT3iJUBoY1U7dI() {
+		this.field_9041_7NupkuQ1lSGoC9624rm26tc960f5I8Nuu6F13q14526SMi8WK3oY6wlnVWf2 = false;
+		this.dead = true;
+		this.onDeath(this);
+		this.kill();
+		this.worldObj.setEntityDead(this);
+	}
+}
--- net/minecraft/src/StepSoundGlass.java
+++ net/minecraft/src/StepSoundGlass.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-final class StepSoundGlass extends StepSound {
-	StepSoundGlass(String var1, float var2, float var3) {
+public final class StepSoundGlass extends StepSound {
+	public StepSoundGlass(String var1, float var2, float var3) {
 		super(var1, var2, var3);
 	}
 
--- net/minecraft/src/RenderArrow.java
+++ net/minecraft/src/RenderArrow.java
@@ -4,8 +4,18 @@
 import org.lwjgl.opengl.GL12;
 
 public class RenderArrow extends Render {
-	public void renderArrow(EntityArrow var1, double var2, double var4, double var6, float var8, float var9) {
-		this.loadTexture("/item/arrows.png");
+	public boolean shadeless = false;
+
+	public RenderArrow(boolean var1) {
+		this.shadeless = var1;
+	}
+
+	public void renderArrow(EntityFirable var1, double var2, double var4, double var6, float var8, float var9) {
+		if(this.shadeless) {
+			RenderHelper.disableStandardItemLighting();
+		}
+
+		this.loadTexture(var1.getTexture());
 		GL11.glPushMatrix();
 		GL11.glTranslatef((float)var2, (float)var4, (float)var6);
 		GL11.glRotatef(var1.prevRotationYaw + (var1.rotationYaw - var1.prevRotationYaw) * var9 - 90.0F, 0.0F, 1.0F, 0.0F);
@@ -22,12 +32,16 @@
 		float var19 = (float)(10 + var11 * 10) / 32.0F;
 		float var20 = 0.05625F;
 		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
-		float var21 = (float)var1.arrowShake - var9;
+		float var21 = var1.arrowShake - var9;
 		if(var21 > 0.0F) {
 			float var22 = -MathHelper.sin(var21 * 3.0F) * var21;
 			GL11.glRotatef(var22, 0.0F, 0.0F, 1.0F);
 		}
 
+		if(this.shadeless) {
+			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+		}
+
 		GL11.glRotatef(45.0F, 1.0F, 0.0F, 0.0F);
 		GL11.glScalef(var20, var20, var20);
 		GL11.glTranslatef(-4.0F, 0.0F, 0.0F);
@@ -59,9 +73,13 @@
 
 		GL11.glDisable(GL12.GL_RESCALE_NORMAL);
 		GL11.glPopMatrix();
+		if(this.shadeless) {
+			RenderHelper.enableStandardItemLighting();
+		}
+
 	}
 
 	public void doRender(Entity var1, double var2, double var4, double var6, float var8, float var9) {
-		this.renderArrow((EntityArrow)var1, var2, var4, var6, var8, var9);
+		this.renderArrow((EntityFirable)var1, var2, var4, var6, var8, var9);
 	}
 }
--- /dev/null
+++ net/minecraft/src/BlockPillar.java
@@ -1,0 +1,16 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+
+public class BlockPillar extends Block {
+	public BlockPillar(int var1, int var2, Material var3) {
+		super(var1, var2, var3);
+	}
+
+	public void getCollidingBoundingBoxes(World var1, int var2, int var3, int var4, AxisAlignedBB var5, ArrayList<AxisAlignedBB> var6, Entity var7) {
+		if(!(var1 instanceof ZMWorld) || !(var7 instanceof EntityZombie)) {
+			super.getCollidingBoundingBoxes(var1, var2, var3, var4, var5, var6, var7);
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/Packet71.java
@@ -1,0 +1,55 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+
+public class Packet71 extends Packet {
+	public String field_8472_28DRek4v4KQUw9KLE6Oc1AsTx74xRWg892e8w2RDtc17be6dHpNr005yCRW6 = "";
+	public double field_8474_145olukCshOr7AbHQ37u7Mek5J4P72YUunedJaJO16hjSfTGODn4m9m5a1li;
+	public double field_8470_9IrDiRRUrGdyFa6A7PTN8n2gN7KM6m7hJt8zUc23Te1J28vMxI4uo31CBYay;
+	public double field_8475_3jlw1j330Q8Z8q9Qo97DvEh5W2hcFrGUFMo0W390y314Nds665s329qCvr51;
+	public float field_8471_102rZg1EIQM0yf5sxDO3Mo7Ck6i5Z4kWuhm2PPl40f7rZS7L9M2G9ciup82Q;
+	public float field_8473_42sARdt3h0YOa81x8UlPl0CEJtC90d59hSH909CU366FzIF4B45o6aiwz125;
+
+	public Packet71() {
+	}
+
+	public Packet71(String var1, double var2, double var4, double var6, float var8, float var9) {
+		this.field_8472_28DRek4v4KQUw9KLE6Oc1AsTx74xRWg892e8w2RDtc17be6dHpNr005yCRW6 = var1;
+		this.field_8474_145olukCshOr7AbHQ37u7Mek5J4P72YUunedJaJO16hjSfTGODn4m9m5a1li = var2;
+		this.field_8470_9IrDiRRUrGdyFa6A7PTN8n2gN7KM6m7hJt8zUc23Te1J28vMxI4uo31CBYay = var4;
+		this.field_8475_3jlw1j330Q8Z8q9Qo97DvEh5W2hcFrGUFMo0W390y314Nds665s329qCvr51 = var6;
+		this.field_8471_102rZg1EIQM0yf5sxDO3Mo7Ck6i5Z4kWuhm2PPl40f7rZS7L9M2G9ciup82Q = var8;
+		this.field_8473_42sARdt3h0YOa81x8UlPl0CEJtC90d59hSH909CU366FzIF4B45o6aiwz125 = var9;
+	}
+
+	public void readPacketData(DataInputStream var1) throws IOException {
+		this.field_8472_28DRek4v4KQUw9KLE6Oc1AsTx74xRWg892e8w2RDtc17be6dHpNr005yCRW6 = var1.readUTF();
+		this.field_8474_145olukCshOr7AbHQ37u7Mek5J4P72YUunedJaJO16hjSfTGODn4m9m5a1li = var1.readDouble();
+		this.field_8470_9IrDiRRUrGdyFa6A7PTN8n2gN7KM6m7hJt8zUc23Te1J28vMxI4uo31CBYay = var1.readDouble();
+		this.field_8475_3jlw1j330Q8Z8q9Qo97DvEh5W2hcFrGUFMo0W390y314Nds665s329qCvr51 = var1.readDouble();
+		this.field_8471_102rZg1EIQM0yf5sxDO3Mo7Ck6i5Z4kWuhm2PPl40f7rZS7L9M2G9ciup82Q = var1.readFloat();
+		this.field_8473_42sARdt3h0YOa81x8UlPl0CEJtC90d59hSH909CU366FzIF4B45o6aiwz125 = var1.readFloat();
+	}
+
+	public void writePacket(DataOutputStream var1) throws IOException {
+		var1.writeUTF(this.field_8472_28DRek4v4KQUw9KLE6Oc1AsTx74xRWg892e8w2RDtc17be6dHpNr005yCRW6);
+		var1.writeDouble(this.field_8474_145olukCshOr7AbHQ37u7Mek5J4P72YUunedJaJO16hjSfTGODn4m9m5a1li);
+		var1.writeDouble(this.field_8470_9IrDiRRUrGdyFa6A7PTN8n2gN7KM6m7hJt8zUc23Te1J28vMxI4uo31CBYay);
+		var1.writeDouble(this.field_8475_3jlw1j330Q8Z8q9Qo97DvEh5W2hcFrGUFMo0W390y314Nds665s329qCvr51);
+		var1.writeFloat(this.field_8471_102rZg1EIQM0yf5sxDO3Mo7Ck6i5Z4kWuhm2PPl40f7rZS7L9M2G9ciup82Q);
+		var1.writeFloat(this.field_8473_42sARdt3h0YOa81x8UlPl0CEJtC90d59hSH909CU366FzIF4B45o6aiwz125);
+	}
+
+	public void processPacket(NetHandler var1) {
+		if(var1 instanceof NetClientHandler) {
+			((NetClientHandler)var1).func_9567_8Uqzx4T0U7C4w4y2Ni3ekUd757k1g1Aslx6MbBL4gp7k8VP7S54Cq5ura317(new Packet71(this.field_8472_28DRek4v4KQUw9KLE6Oc1AsTx74xRWg892e8w2RDtc17be6dHpNr005yCRW6, this.field_8474_145olukCshOr7AbHQ37u7Mek5J4P72YUunedJaJO16hjSfTGODn4m9m5a1li, this.field_8470_9IrDiRRUrGdyFa6A7PTN8n2gN7KM6m7hJt8zUc23Te1J28vMxI4uo31CBYay, this.field_8475_3jlw1j330Q8Z8q9Qo97DvEh5W2hcFrGUFMo0W390y314Nds665s329qCvr51, this.field_8471_102rZg1EIQM0yf5sxDO3Mo7Ck6i5Z4kWuhm2PPl40f7rZS7L9M2G9ciup82Q, this.field_8473_42sARdt3h0YOa81x8UlPl0CEJtC90d59hSH909CU366FzIF4B45o6aiwz125));
+		}
+
+	}
+
+	public int getPacketSize() {
+		return this.field_8472_28DRek4v4KQUw9KLE6Oc1AsTx74xRWg892e8w2RDtc17be6dHpNr005yCRW6.getBytes().length + 24 + 8;
+	}
+}
--- net/minecraft/src/EntityPig.java
+++ net/minecraft/src/EntityPig.java
@@ -42,6 +42,6 @@
 	}
 
 	protected int getDropItemId() {
-		return Item.porkRaw.shiftedIndex;
+		return this.fire > 0 ? Item.porkCooked.shiftedIndex : Item.porkRaw.shiftedIndex;
 	}
 }
--- net/minecraft/src/BlockSnow.java
+++ net/minecraft/src/BlockSnow.java
@@ -53,7 +53,7 @@
 	}
 
 	public int idDropped(int var1, Random var2) {
-		return Item.snowball.shiftedIndex;
+		return Block.blockSnow.blockID;
 	}
 
 	public int quantityDropped(Random var1) {
--- net/minecraft/src/EntityRenderer.java
+++ net/minecraft/src/EntityRenderer.java
@@ -36,7 +36,11 @@
 	public void updateRenderer() {
 		this.prevFogColor = this.fogColor;
 		float var1 = this.mc.theWorld.getBrightness(MathHelper.floor_double(this.mc.thePlayer.posX), MathHelper.floor_double(this.mc.thePlayer.posY), MathHelper.floor_double(this.mc.thePlayer.posZ));
-		float var2 = (float)(3 - this.mc.options.renderDistance) / 3.0F;
+		float var2 = (float)(3 - Math.min(this.mc.options.renderDistance - 1, 3)) / 3.0F;
+		if(this.mc.options.renderDistance == 0) {
+			var2 = 1.0F;
+		}
+
 		float var3 = var1 * (1.0F - var2) + var2;
 		this.fogColor += (var3 - this.fogColor) * 0.1F;
 		++this.rendererUpdateCount;
@@ -59,6 +63,7 @@
 
 			if(this.mc.playerController instanceof PlayerControllerCreative) {
 				var2 = 32.0D;
+				var4 = 32.0D;
 			} else {
 				if(var4 > 3.0D) {
 					var4 = 3.0D;
@@ -92,8 +97,8 @@
 			if(this.pointedEntity != null && !(this.mc.playerController instanceof PlayerControllerCreative)) {
 				this.mc.objectMouseOver = new MovingObjectPosition(this.pointedEntity);
 			}
-
 		}
+
 	}
 
 	private float getFOVModifier(float var1) {
@@ -108,7 +113,7 @@
 			var3 /= (1.0F - 500.0F / (var4 + 500.0F)) * 2.0F + 1.0F;
 		}
 
-		return var3;
+		return Math.max(var3 + (this.mc.options.fovModifier - 0.5F) * 80.0F + (float)(InputHandler.IsKeyDown(54) ? -45 : 0), 5.0F);
 	}
 
 	private void hurtCameraEffect(float var1) {
@@ -128,6 +133,7 @@
 			GL11.glRotatef(-var3 * 14.0F, 0.0F, 0.0F, 1.0F);
 			GL11.glRotatef(var4, 0.0F, 1.0F, 0.0F);
 		}
+
 	}
 
 	private void setupViewBobbing(float var1) {
@@ -142,6 +148,7 @@
 			GL11.glRotatef(Math.abs(MathHelper.cos(var4 * (float)Math.PI + 0.2F) * var5) * 5.0F, 1.0F, 0.0F, 0.0F);
 			GL11.glRotatef(var6, 1.0F, 0.0F, 0.0F);
 		}
+
 	}
 
 	private void orientCamera(float var1) {
@@ -149,45 +156,51 @@
 		double var3 = var2.prevPosX + (var2.posX - var2.prevPosX) * (double)var1;
 		double var5 = var2.prevPosY + (var2.posY - var2.prevPosY) * (double)var1;
 		double var7 = var2.prevPosZ + (var2.posZ - var2.prevPosZ) * (double)var1;
+		float var9 = var2.rotationYaw;
+		float var10 = var2.prevRotationYaw;
+		float var11 = var2.rotationPitch;
 		if(this.mc.options.thirdPersonView) {
-			double var9 = 4.0D;
-			float var11 = var2.rotationYaw;
-			float var12 = var2.rotationPitch;
-			double var13 = (double)(-MathHelper.sin(var11 / 180.0F * (float)Math.PI) * MathHelper.cos(var12 / 180.0F * (float)Math.PI)) * var9;
-			double var15 = (double)(MathHelper.cos(var11 / 180.0F * (float)Math.PI) * MathHelper.cos(var12 / 180.0F * (float)Math.PI)) * var9;
-			double var17 = (double)(-MathHelper.sin(var12 / 180.0F * (float)Math.PI)) * var9;
+			double var12 = 6.0D;
+			double var14 = (double)(-MathHelper.sin(var9 / 180.0F * (float)Math.PI) * MathHelper.cos(var11 / 180.0F * (float)Math.PI)) * var12;
+			double var16 = (double)(MathHelper.cos(var9 / 180.0F * (float)Math.PI) * MathHelper.cos(var11 / 180.0F * (float)Math.PI)) * var12;
+			double var18 = (double)(-MathHelper.sin(var11 / 180.0F * (float)Math.PI)) * var12;
 
-			for(int var19 = 0; var19 < 8; ++var19) {
-				float var20 = (float)((var19 & 1) * 2 - 1);
-				float var21 = (float)((var19 >> 1 & 1) * 2 - 1);
-				float var22 = (float)((var19 >> 2 & 1) * 2 - 1);
-				var20 *= 0.1F;
+			for(int var20 = 0; var20 < 8; ++var20) {
+				float var21 = (float)((var20 & 1) * 2 - 1);
+				float var22 = (float)((var20 >> 1 & 1) * 2 - 1);
+				float var23 = (float)((var20 >> 2 & 1) * 2 - 1);
 				var21 *= 0.1F;
 				var22 *= 0.1F;
-				MovingObjectPosition var23 = this.mc.theWorld.rayTraceBlocks(Vec3D.createVector(var3 + (double)var20, var5 + (double)var21, var7 + (double)var22), Vec3D.createVector(var3 - var13 + (double)var20 + (double)var22, var5 - var17 + (double)var21, var7 - var15 + (double)var22));
-				if(var23 != null) {
-					double var24 = var23.hitVec.distanceTo(Vec3D.createVector(var3, var5, var7));
-					if(var24 < var9) {
-						var9 = var24;
+				var23 *= 0.1F;
+				MovingObjectPosition var24 = this.mc.theWorld.rayTraceBlocks(Vec3D.createVector(var3 + (double)var21, var5 + (double)var22, var7 + (double)var23), Vec3D.createVector(var3 - var14 + (double)var21 + (double)var23, var5 - var18 + (double)var22, var7 - var16 + (double)var23));
+				if(var24 != null) {
+					double var25 = var24.hitVec.distanceTo(Vec3D.createVector(var3, var5, var7));
+					if(var25 < var12) {
+						var12 = var25;
 					}
 				}
 			}
 
-			GL11.glRotatef(var2.rotationPitch - var12, 1.0F, 0.0F, 0.0F);
-			GL11.glRotatef(var2.rotationYaw - var11, 0.0F, 1.0F, 0.0F);
-			GL11.glTranslatef(0.0F, 0.0F, (float)(-var9));
-			GL11.glRotatef(var11 - var2.rotationYaw, 0.0F, 1.0F, 0.0F);
-			GL11.glRotatef(var12 - var2.rotationPitch, 1.0F, 0.0F, 0.0F);
+			GL11.glRotatef(var2.rotationPitch - var11, 1.0F, 0.0F, 0.0F);
+			GL11.glRotatef(var9 - var9, 0.0F, 1.0F, 0.0F);
+			GL11.glTranslatef(0.0F, 0.0F, (float)(-var12));
+			GL11.glRotatef(var9 - var9, 0.0F, 1.0F, 0.0F);
+			GL11.glRotatef(var11 - var2.rotationPitch, 1.0F, 0.0F, 0.0F);
 		} else {
 			GL11.glTranslatef(0.0F, 0.0F, -0.1F);
 		}
 
 		GL11.glRotatef(var2.prevRotationPitch + (var2.rotationPitch - var2.prevRotationPitch) * var1, 1.0F, 0.0F, 0.0F);
-		GL11.glRotatef(var2.prevRotationYaw + (var2.rotationYaw - var2.prevRotationYaw) * var1 + 180.0F, 0.0F, 1.0F, 0.0F);
+		GL11.glRotatef(var10 + (var9 - var10) * var1 + 180.0F, 0.0F, 1.0F, 0.0F);
 	}
 
 	private void setupCameraTransform(float var1, int var2) {
-		this.farPlaneDistance = (float)(256 >> this.mc.options.renderDistance);
+		if(this.mc.options.renderDistance == 0) {
+			this.farPlaneDistance = 1024.0F;
+		} else {
+			this.farPlaneDistance = (float)(256 >> Math.min(this.mc.options.renderDistance - 1, 3));
+		}
+
 		GL11.glMatrixMode(GL11.GL_PROJECTION);
 		GL11.glLoadIdentity();
 		float var3 = 0.07F;
@@ -211,36 +224,38 @@
 	}
 
 	private void renderHand(float var1, int var2) {
-		GL11.glLoadIdentity();
-		if(this.mc.options.anaglyph) {
-			GL11.glTranslatef((float)(var2 * 2 - 1) * 0.1F, 0.0F, 0.0F);
-		}
-
-		GL11.glPushMatrix();
-		this.hurtCameraEffect(var1);
-		if(this.mc.options.viewBobbing) {
-			this.setupViewBobbing(var1);
-		}
-
-		if(!this.mc.options.thirdPersonView) {
-			this.itemRenderer.renderItemInFirstPerson(var1);
-		}
-
-		GL11.glPopMatrix();
-		if(!this.mc.options.thirdPersonView) {
-			this.itemRenderer.renderOverlays(var1);
+		if(!ScreenDebugMenu.dbg_conf_hideUI) {
+			GL11.glLoadIdentity();
+			if(this.mc.options.anaglyph) {
+				GL11.glTranslatef((float)(var2 * 2 - 1) * 0.1F, 0.0F, 0.0F);
+			}
+
+			GL11.glPushMatrix();
 			this.hurtCameraEffect(var1);
-		}
-
-		if(this.mc.options.viewBobbing) {
-			this.setupViewBobbing(var1);
-		}
-
+			if(this.mc.options.viewBobbing) {
+				this.setupViewBobbing(var1);
+			}
+
+			if(!this.mc.options.thirdPersonView) {
+				this.itemRenderer.renderItemInFirstPerson(var1);
+			}
+
+			GL11.glPopMatrix();
+			if(!this.mc.options.thirdPersonView) {
+				this.itemRenderer.renderOverlays(var1);
+				this.hurtCameraEffect(var1);
+			}
+
+			if(this.mc.options.viewBobbing) {
+				this.setupViewBobbing(var1);
+			}
+
+		}
 	}
 
 	public void updateCameraAndRender(float var1) {
 		if(!Display.isActive()) {
-			if(System.currentTimeMillis() - this.prevFrameTime > 500L) {
+			if(System.currentTimeMillis() - this.prevFrameTime > 500L && this.mc.options.pauseOnUnfocus) {
 				this.mc.displayInGameMenu();
 			}
 		} else {
@@ -261,14 +276,18 @@
 			this.mc.thePlayer.setAngles(var4, var5 * (float)var6);
 		}
 
+		ScaledResolution var7 = new ScaledResolution(this.mc.displayWidth, this.mc.displayHeight);
+		int var8 = var7.getScaledWidth();
+		int var9 = var7.getScaledHeight();
 		if(!this.mc.skipRenderWorld) {
-			ScaledResolution var7 = new ScaledResolution(this.mc.displayWidth, this.mc.displayHeight);
-			int var8 = var7.getScaledWidth();
-			int var9 = var7.getScaledHeight();
 			int var10 = Mouse.getX() * var8 / this.mc.displayWidth;
 			int var11 = var9 - Mouse.getY() * var9 / this.mc.displayHeight - 1;
 			if(this.mc.theWorld != null) {
 				this.renderWorld(var1);
+				if(this.mc.options.field_11757_25y1pfK8198W9Tm66cfxM95C77y782yiFE2iJ841XnrF5E5HedVA6X11kaDV) {
+					this.mc.field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo.func_11379_3Ox6ELkjL7tS0M11M9Ec3mtp515ihaUVz6k07257y4J6E9IJVRiQKoD3Ym6J(this.mc, this.farPlaneDistance, this.fogColorRed, this.fogColorGreen, this.fogColorBlue);
+				}
+
 				this.mc.ingameGUI.renderGameOverlay(var1, this.mc.currentScreen != null, var10, var11);
 			} else {
 				GL11.glViewport(0, 0, this.mc.displayWidth, this.mc.displayHeight);
@@ -286,7 +305,13 @@
 				this.mc.currentScreen.drawScreen(var10, var11, var1);
 			}
 
+			if(!ThreadDownloadResources.finished) {
+				Gui.drawString(this.mc.fontRenderer, "Downloading resources... [" + Math.round((float)ThreadDownloadResources.field_11491_0SH256J50ztK98I6A6bs5r40vo8pH2P0gb6sxjqPY3KzLgiP3OXy0Scq9399 / (float)ThreadDownloadResources.field_11492_8f3Z0A851l0Aj7j727QIWsGHy7xKwyrM81FsXm09QFVtF7dPCOH2aOfq9n9c * 100.0F) + "%]", 10, this.mc.currentScreen != null ? 10 : var9 - 60, 13421772);
+			}
+
+			InputHandler.func_9734_9Uj534ugdHP7u4PJfw2FnKZ82q9nF8ro9tfj5p0ywqqPTB3a2I67xd2543E3(var8, var9);
 		}
+
 	}
 
 	public void renderWorld(float var1) {
@@ -320,13 +345,17 @@
 
 			GL11.glEnable(GL11.GL_FOG);
 			this.setupFog(1);
+			if(this.mc.options.field_11757_25y1pfK8198W9Tm66cfxM95C77y782yiFE2iJ841XnrF5E5HedVA6X11kaDV) {
+				this.mc.field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo.func_11385_2aBrqFndfkzC8w9LabN9jT6nygQa1G113SE0F3xs21Ehzq80X8oVOnixaKXP(this.mc.field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo.field_11404_6G238hzdz174ui01Kn7hC7aXG4OFtxgSTqd88RZTU29K01h2S9Ewl85O71ni);
+			}
+
 			Frustum var12 = new Frustum();
 			var12.setPosition(var5, var7, var9);
 			this.mc.renderGlobal.clipRenderersByFrustum(var12, var1);
 			this.mc.renderGlobal.updateRenderers(var2, false);
 			this.setupFog(0);
 			GL11.glEnable(GL11.GL_FOG);
-			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/terrain.png"));
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L));
 			RenderHelper.disableStandardItemLighting();
 			var3.sortAndRender(var2, 0, (double)var1);
 			RenderHelper.enableStandardItemLighting();
@@ -346,8 +375,8 @@
 			this.setupFog(0);
 			GL11.glEnable(GL11.GL_BLEND);
 			GL11.glDisable(GL11.GL_CULL_FACE);
-			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/terrain.png"));
-			if(this.mc.options.fancyGraphics) {
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9796_62Ccm2XAR6JqSDTgV762x61j971DNgsIrMhaXZxPs0fQnBC7ymR2l1v1V22X)));
+			if(this.mc.options.fancyGraphics != 2) {
 				GL11.glColorMask(false, false, false, false);
 				int var13 = var3.sortAndRender(var2, 1, (double)var1);
 				GL11.glColorMask(true, true, true, true);
@@ -377,20 +406,36 @@
 			}
 
 			GL11.glDisable(GL11.GL_FOG);
-			if(this.mc.theWorld.snowCovered) {
+			if(this.mc.theWorld.snowCovered && this.mc.options.fancyGraphics != 2) {
 				this.renderSnow(var1);
 			}
 
+			if(this.mc.isRaining) {
+				this.func_11802_5th15JkB4K6nA5048kg5q2q94X7PLURL8qGJVUoGs155vbYf105w7UkkC798(var1);
+			}
+
 			if(this.pointedEntity != null) {
 			}
 
 			this.setupFog(0);
 			GL11.glEnable(GL11.GL_FOG);
-			var3.renderClouds(var1);
+			if(this.mc.options.fancyGraphics != 2 && this.mc.field_7316_28K4517FJT58jN9ucjj3zE1jE410Ltpi330vH7516f19B006E4Wco5x4Y0w5) {
+				var3.renderClouds(var1);
+			}
+
+			if(this.mc.options.field_11757_25y1pfK8198W9Tm66cfxM95C77y782yiFE2iJ841XnrF5E5HedVA6X11kaDV) {
+				MinecraftUnknownClass3.func_11383_9k8UYIQjyl8A669E4479n7ZN6ovKzu0Py7mZLt8QHMg0jDqVsW8F6L6Ycg15(this.mc.field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo.func_11384_35vk4IIhd8hao4F5HSR9jWpH6tem7rh9B886Pq7RYkf415WQC9hm6vShCua6(this.mc), this.mc);
+			}
+
 			GL11.glDisable(GL11.GL_FOG);
 			this.setupFog(1);
 			GL11.glClear(GL11.GL_DEPTH_BUFFER_BIT);
 			this.renderHand(var1, var11);
+			if(this.mc.options.field_11757_25y1pfK8198W9Tm66cfxM95C77y782yiFE2iJ841XnrF5E5HedVA6X11kaDV) {
+				MinecraftUnknownClass3.func_11383_9k8UYIQjyl8A669E4479n7ZN6ovKzu0Py7mZLt8QHMg0jDqVsW8F6L6Ycg15(this.mc.field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo.func_11382_6L4tKeSFB9JuB4C21yfU9Wexrw7VE17dZURA0uDEgh0622ButpwPgn1H7yV8(this.mc), this.mc);
+				this.mc.field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo.func_11385_2aBrqFndfkzC8w9LabN9jT6nygQa1G113SE0F3xs21Ehzq80X8oVOnixaKXP(0);
+			}
+
 			if(!this.mc.options.anaglyph) {
 				return;
 			}
@@ -400,7 +445,7 @@
 	}
 
 	private void addRainParticles() {
-		if(this.mc.options.fancyGraphics) {
+		if(this.mc.options.fancyGraphics != 2) {
 			EntityPlayerSP var1 = this.mc.thePlayer;
 			World var2 = this.mc.theWorld;
 			int var3 = MathHelper.floor_double(var1.posX);
@@ -411,18 +456,18 @@
 			for(int var7 = 0; var7 < 150; ++var7) {
 				int var8 = var3 + this.random.nextInt(var6) - this.random.nextInt(var6);
 				int var9 = var5 + this.random.nextInt(var6) - this.random.nextInt(var6);
-				int var10 = var2.getPrecipitationHeight(var8, var9);
+				int var10 = var2.getPrecipitationHeight(var8, var9 + 2);
 				int var11 = var2.getBlockId(var8, var10 - 1, var9);
 				if(var10 <= var4 + var6 && var10 >= var4 - var6) {
 					float var12 = this.random.nextFloat();
 					float var13 = this.random.nextFloat();
 					if(var11 > 0) {
-						this.mc.effectRenderer.addEffect(new EntityRainFX(var2, (double)((float)var8 + var12), (double)((float)var10 + 0.1F) - Block.blocksList[var11].minY, (double)((float)var9 + var13)));
+						this.mc.effectRenderer.addEffect(new EntityRainFX(var2, (double)((float)var8 + var12), (double)((float)var10 + 0.3F) - Block.blocksList[var11].minY, (double)((float)var9 + var13)));
 					}
 				}
 			}
-
 		}
+
 	}
 
 	private void renderSnow(float var1) {
@@ -441,7 +486,7 @@
 		double var10 = var2.lastTickPosY + (var2.posY - var2.lastTickPosY) * (double)var1;
 		double var12 = var2.lastTickPosZ + (var2.posZ - var2.lastTickPosZ) * (double)var1;
 		byte var14 = 5;
-		if(this.mc.options.fancyGraphics) {
+		if(this.mc.options.fancyGraphics != 2) {
 			var14 = 10;
 		}
 
@@ -494,6 +539,75 @@
 		GL11.glDisable(GL11.GL_BLEND);
 	}
 
+	private void func_11802_5th15JkB4K6nA5048kg5q2q94X7PLURL8qGJVUoGs155vbYf105w7UkkC798(float var1) {
+		EntityPlayerSP var2 = this.mc.thePlayer;
+		World var3 = this.mc.theWorld;
+		int var4 = MathHelper.floor_double(var2.posX);
+		int var5 = MathHelper.floor_double(var2.posY);
+		int var6 = MathHelper.floor_double(var2.posZ);
+		Tessellator var7 = Tessellator.instance;
+		GL11.glDisable(GL11.GL_CULL_FACE);
+		GL11.glNormal3f(0.0F, 2.0F, 0.0F);
+		GL11.glEnable(GL11.GL_BLEND);
+		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
+		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/rain.png"));
+		double var8 = var2.lastTickPosX + (var2.posX - var2.lastTickPosX) * (double)var1;
+		double var10 = var2.lastTickPosY + (var2.posY - var2.lastTickPosY) * (double)var1;
+		double var12 = var2.lastTickPosZ + (var2.posZ - var2.lastTickPosZ) * (double)var1;
+		byte var14 = 5;
+		if(this.mc.options.fancyGraphics != 2) {
+			var14 = 10;
+		}
+
+		for(int var15 = var4 - var14; var15 <= var4 + var14; ++var15) {
+			for(int var16 = var6 - var14; var16 <= var6 + var14; ++var16) {
+				int var17 = var3.getTopSolidOrLiquidBlock(var15, var16);
+				if(var17 < 0) {
+					var17 = 0;
+				}
+
+				int var18 = var5 - var14;
+				int var19 = var5 + var14;
+				if(var18 < var17) {
+					var18 = var17;
+				}
+
+				if(var19 < var17) {
+					var19 = var17;
+				}
+
+				float var20 = 2.0F;
+				if(var18 != var19) {
+					this.random.setSeed((long)(var15 * var15 * 1312 + var15 * 57284571 + var16 * var16 * 102984 + var16 * 68392));
+					float var21 = (float)this.rendererUpdateCount + var1;
+					float var22 = ((float)(this.rendererUpdateCount & 511) + var1) / 256.0F;
+					float var23 = this.random.nextFloat() + var21 * 0.01F * (float)this.random.nextGaussian();
+					float var24 = this.random.nextFloat() + var21 * (float)this.random.nextGaussian() * 0.001F;
+					double var25 = (double)((float)var15 + 0.5F) - var2.posX;
+					double var27 = (double)((float)var16 + 0.5F) - var2.posZ;
+					float var29 = MathHelper.sqrt_double(var25 * var25 + var27 * var27) / (float)var14;
+					var7.startDrawingQuads();
+					float var30 = var3.getBrightness(var15, 128, var16);
+					GL11.glColor4f(var30, var30, var30, 1.0F - var29 * var29 + 0.7F);
+					var7.setTranslationD(-var8 * 1.0D, -var10 - 2.0D, -var12 * 1.0D);
+					var7.addVertexWithUV((double)(var15 + 0), (double)var18, (double)(var16 + 0), (double)(0.0F * var20 + var23), (double)((float)var18 * var20 / 8.0F + var22 * var20 / var24));
+					var7.addVertexWithUV((double)(var15 + 1), (double)var18, (double)(var16 + 1), (double)(1.0F * var20 + var23), (double)((float)var18 * var20 / 8.0F + var22 * var20 / var24));
+					var7.addVertexWithUV((double)(var15 + 1), (double)var19, (double)(var16 + 1), (double)(1.0F * var20 + var23), (double)((float)var19 * var20 / 8.0F + var22 * var20 / var24));
+					var7.addVertexWithUV((double)(var15 + 0), (double)var19, (double)(var16 + 0), (double)(0.0F * var20 + var23), (double)((float)var19 * var20 / 8.0F + var22 * var20 / var24));
+					var7.addVertexWithUV((double)(var15 + 0), (double)var18, (double)(var16 + 1), (double)(0.0F * var20 + var23), (double)((float)var18 * var20 / 8.0F + var22 * var20 / var24));
+					var7.addVertexWithUV((double)(var15 + 1), (double)var18, (double)(var16 + 0), (double)(1.0F * var20 + var23), (double)((float)var18 * var20 / 8.0F + var22 * var20 / var24));
+					var7.addVertexWithUV((double)(var15 + 1), (double)var19, (double)(var16 + 0), (double)(1.0F * var20 + var23), (double)((float)var19 * var20 / 8.0F + var22 * var20 / var24));
+					var7.addVertexWithUV((double)(var15 + 0), (double)var19, (double)(var16 + 1), (double)(0.0F * var20 + var23), (double)((float)var19 * var20 / 8.0F + var22 * var20 / var24));
+					var7.setTranslationD(0.0D, 0.0D, 0.0D);
+					var7.draw();
+				}
+			}
+		}
+
+		GL11.glEnable(GL11.GL_CULL_FACE);
+		GL11.glDisable(GL11.GL_BLEND);
+	}
+
 	public void setupOverlayRendering() {
 		ScaledResolution var1 = new ScaledResolution(this.mc.displayWidth, this.mc.displayHeight);
 		int var2 = var1.getScaledWidth();
@@ -510,8 +624,13 @@
 	private void updateFogColor(float var1) {
 		World var2 = this.mc.theWorld;
 		EntityPlayerSP var3 = this.mc.thePlayer;
-		float var4 = 1.0F / (float)(4 - this.mc.options.renderDistance);
-		var4 = 1.0F - (float)Math.pow((double)var4, 0.25D);
+		float var4 = 1.0F / (float)(4 - Math.min(this.mc.options.renderDistance - 1, 3));
+		if(this.mc.options.renderDistance == 5) {
+			var4 = -Float.POSITIVE_INFINITY;
+		} else {
+			var4 = 1.0F - (float)Math.pow((double)var4, 0.25D);
+		}
+
 		Vec3D var5 = var2.getSkyColor(var1);
 		float var6 = (float)var5.xCoord;
 		float var7 = (float)var5.yCoord;
@@ -537,15 +656,28 @@
 		this.fogColorRed *= var10;
 		this.fogColorGreen *= var10;
 		this.fogColorBlue *= var10;
+		float var13;
 		if(this.mc.options.anaglyph) {
 			float var11 = (this.fogColorRed * 30.0F + this.fogColorGreen * 59.0F + this.fogColorBlue * 11.0F) / 100.0F;
 			float var12 = (this.fogColorRed * 30.0F + this.fogColorGreen * 70.0F) / 100.0F;
-			float var13 = (this.fogColorRed * 30.0F + this.fogColorBlue * 70.0F) / 100.0F;
+			var13 = (this.fogColorRed * 30.0F + this.fogColorBlue * 70.0F) / 100.0F;
 			this.fogColorRed = var11;
 			this.fogColorGreen = var12;
 			this.fogColorBlue = var13;
 		}
 
+		long var15 = var2.worldTime % 23000L;
+		var13 = 0.0F;
+		if(var15 >= 22000L) {
+			var13 = (float)(1000L - (var15 - 22000L)) / 1000.0F;
+		} else if(var15 >= 21000L) {
+			var13 = (float)(var15 - 21000L) / 1000.0F;
+		}
+
+		float[] var14 = Ext1605Utils.BlendColor(var13 / 2.0F, this.fogColorRed, this.fogColorGreen, this.fogColorBlue);
+		this.fogColorRed = var14[0];
+		this.fogColorGreen = var14[1];
+		this.fogColorBlue = var14[2];
 		GL11.glClearColor(this.fogColorRed, this.fogColorGreen, this.fogColorBlue, 0.0F);
 	}
 
@@ -554,34 +686,12 @@
 		GL11.glFog(GL11.GL_FOG_COLOR, this.setFogColorBuffer(this.fogColorRed, this.fogColorGreen, this.fogColorBlue, 1.0F));
 		GL11.glNormal3f(0.0F, -1.0F, 0.0F);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		float var3;
-		float var4;
-		float var5;
-		float var6;
-		float var7;
-		float var8;
 		if(var2.isInsideOfMaterial(Material.water)) {
 			GL11.glFogi(GL11.GL_FOG_MODE, GL11.GL_EXP);
 			GL11.glFogf(GL11.GL_FOG_DENSITY, 0.1F);
-			var3 = 0.4F;
-			var4 = 0.4F;
-			var5 = 0.9F;
-			if(this.mc.options.anaglyph) {
-				var6 = (var3 * 30.0F + var4 * 59.0F + var5 * 11.0F) / 100.0F;
-				var7 = (var3 * 30.0F + var4 * 70.0F) / 100.0F;
-				var8 = (var3 * 30.0F + var5 * 70.0F) / 100.0F;
-			}
 		} else if(var2.isInsideOfMaterial(Material.lava)) {
 			GL11.glFogi(GL11.GL_FOG_MODE, GL11.GL_EXP);
 			GL11.glFogf(GL11.GL_FOG_DENSITY, 2.0F);
-			var3 = 0.4F;
-			var4 = 0.3F;
-			var5 = 0.3F;
-			if(this.mc.options.anaglyph) {
-				var6 = (var3 * 30.0F + var4 * 59.0F + var5 * 11.0F) / 100.0F;
-				var7 = (var3 * 30.0F + var4 * 70.0F) / 100.0F;
-				var8 = (var3 * 30.0F + var5 * 70.0F) / 100.0F;
-			}
 		} else {
 			GL11.glFogi(GL11.GL_FOG_MODE, GL11.GL_LINEAR);
 			GL11.glFogf(GL11.GL_FOG_START, this.farPlaneDistance * 0.25F);
--- /dev/null
+++ net/minecraft/src/FreerunMap2.java
@@ -1,0 +1,24 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.util.List;
+
+public class FreerunMap2 extends FreerunWorld {
+	private NamedLoc[] field_7520_0Jf79B45M5LyF7gNSt7S3L60dVHN10z1455f6e17X7DmMvubyaCJwQSRS5mq = new NamedLoc[]{new NamedLoc(-715, 103, -945, "spawn"), new NamedLoc(-718, 102, -944, -721, 104, -946, "spawn_start"), new NamedLoc(-752, 98, -910, -756, 102, -913, "checkpoint1"), new NamedLoc(-698, 90, -818, -701, 94, -812, "checkpoint2"), new NamedLoc(-697, 90, -783, -701, 93, -776, "checkpoint3"), new NamedLoc(-652, 94, -800, -655, 96, -798, "checkpoint4"), new NamedLoc(-633, 102, -769, -629, 104, -763, "checkpoint5"), new NamedLoc(-574, 91, -776, -578, 95, -780, "end")};
+
+	public FreerunMap2(File var1, String var2) {
+		super(var1, var2);
+	}
+
+	public NamedLoc[] getCheckpoints() {
+		return this.field_7520_0Jf79B45M5LyF7gNSt7S3L60dVHN10z1455f6e17X7DmMvubyaCJwQSRS5mq;
+	}
+
+	public int getResetY(long var1, long var3) {
+		return 88;
+	}
+
+	public List<HandlerSetCheckpointUnknownClass> func_7517_8oADBp42n4G2Ly6U1WLv70n6VyS2bkokzo8dF7ayUqDb1A6ofY86pUJA8mf8() {
+		return this.field_7498_65957fU9nGL5PA2e96ZOK3ePBveSt2ceA9Glj10PC2Jo5s0wI21ix69flng2;
+	}
+}
--- /dev/null
+++ net/minecraft/src/HubServerDetectorUnknownClass.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+import java.util.concurrent.atomic.AtomicInteger;
+import java.util.logging.LogManager;
+import java.util.logging.Logger;
+
+public class HubServerDetectorUnknownClass {
+	private static final AtomicInteger field_12081_04iLgcPVYlkFQ1z8CCjl9K5RRFo87I3BXb917yZS3sxWv9985d95vl30PsxL = new AtomicInteger(0);
+	private static final Logger field_12079_6oES59ytM702rH8nNMp4QSVqQ36N1xi0c5ebhgyslEt68hq8ARUU5Feh89Jf = LogManager.getLogManager().getLogger(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9790_4Mn44antCz29B6GKYv6d2ZW6jUZp3xLB1XTEKn5O2h7Xzs27I617Goaxn8XY));
+	private static final String field_12080_6iHgeEaDL4TY1eiZ29uo5RRuCiezPjRlVZXk90SC3oEunk038vwToyr5fU93 = "CL_00001133";
+
+	static AtomicInteger func_12078_8095QTr6V051pTOyEln290S3uDK3v65566PUXfys595pR5uPyLtaonH4p9jn() {
+		return field_12081_04iLgcPVYlkFQ1z8CCjl9K5RRFo87I3BXb917yZS3sxWv9985d95vl30PsxL;
+	}
+
+	static Logger func_12077_9aCES4xVN044Nl6kBDM97r4haJIM3J7NY0D1z5IeNMU9oucd80P32kO8d8h5() {
+		return field_12079_6oES59ytM702rH8nNMp4QSVqQ36N1xi0c5ebhgyslEt68hq8ARUU5Feh89Jf;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockTeaDoor.java
@@ -1,0 +1,14 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockTeaDoor extends BlockDoor {
+	public BlockTeaDoor(int var1, int var2) {
+		super(var1, Material.wood);
+		this.blockIndexInTexture = var2;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return (var1 & 8) != 0 ? 0 : ExtItems.TeaDoor.shiftedIndex;
+	}
+}
--- /dev/null
+++ net/minecraft/src/Packet200SecureLogin.java
@@ -1,0 +1,62 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+
+public class Packet200SecureLogin extends Packet1Login {
+	public int protocolVersion;
+	public String username;
+	public String password;
+	public String signature = "";
+	public int playerMode = 0;
+	public boolean verifyPassed = false;
+
+	public Packet200SecureLogin() {
+	}
+
+	public Packet200SecureLogin(String var1, String var2, int var3, int var4) {
+		this.username = var1;
+		this.password = var2;
+		this.protocolVersion = var3;
+		this.playerMode = var4;
+	}
+
+	public void readPacketData(DataInputStream var1) throws IOException {
+		long var2 = var1.readLong();
+		this.username = var1.readUTF();
+		this.password = var1.readUTF();
+		this.protocolVersion = var1.readInt();
+		this.playerMode = var1.readInt();
+
+		try {
+			this.verifyPassed = CertUtils.verify(var1.readUTF(), var2 + "" + this.username + "" + this.password + "" + this.protocolVersion + "" + this.playerMode);
+		} catch (Exception var5) {
+		}
+
+	}
+
+	public void writePacket(DataOutputStream var1) throws IOException {
+		long var2 = System.currentTimeMillis();
+		var1.writeLong(var2);
+		var1.writeUTF(this.username);
+		var1.writeUTF(this.password);
+		var1.writeInt(this.protocolVersion);
+		var1.writeInt(this.playerMode);
+
+		try {
+			var1.writeUTF(CertUtils.sign(var2 + "" + this.username + "" + this.password + "" + this.protocolVersion + "" + this.playerMode, CertUtils.loadedPrivKey));
+		} catch (Exception var5) {
+			var5.printStackTrace();
+		}
+
+	}
+
+	public void processPacket(NetHandler var1) {
+		var1.handleLogin(this);
+	}
+
+	public int getPacketSize() {
+		return 8 + this.username.length() + this.password.length() + 4 + 4;
+	}
+}
--- /dev/null
+++ net/minecraft/src/ExtCraftingRecipes.java
@@ -1,0 +1,103 @@
+package net.minecraft.src;
+
+public class ExtCraftingRecipes {
+	public static void RegisterCrafting(CraftingManager var0) {
+		var0.addRecipe(new ItemStack(ExtBlocks.PillarBlock, 4), new Object[]{"#X#", "X X", "#X#", Character.valueOf('#'), Block.planks, Character.valueOf('X'), Item.stick});
+		var0.addRecipe(new ItemStack(ExtBlocks.QuadWindowGlassBlock, 2), new Object[]{" # ", "#X#", " # ", Character.valueOf('#'), Block.cobblestone, Character.valueOf('X'), Block.glass});
+		var0.addRecipe(new ItemStack(ExtItems.obsidianSword), new Object[]{"#", "#", "$", Character.valueOf('#'), ExtItems.obsidianIngot, Character.valueOf('$'), Item.stick});
+		var0.addRecipe(new ItemStack(ExtItems.obsidianShovel), new Object[]{"#", "$", "$", Character.valueOf('#'), ExtItems.obsidianIngot, Character.valueOf('$'), Item.stick});
+		var0.addRecipe(new ItemStack(ExtItems.obsidianPick), new Object[]{"###", " $ ", " $ ", Character.valueOf('#'), ExtItems.obsidianIngot, Character.valueOf('$'), Item.stick});
+		var0.addRecipe(new ItemStack(ExtItems.obsidianHoe), new Object[]{"##", " $", " $", Character.valueOf('#'), ExtItems.obsidianIngot, Character.valueOf('$'), Item.stick});
+		var0.addRecipe(new ItemStack(ExtItems.obsidianHoe), new Object[]{"##", "$ ", "$ ", Character.valueOf('#'), ExtItems.obsidianIngot, Character.valueOf('$'), Item.stick});
+		var0.addRecipe(new ItemStack(ExtItems.obsidianAxe), new Object[]{"##", "#$", " $", Character.valueOf('#'), ExtItems.obsidianIngot, Character.valueOf('$'), Item.stick});
+		var0.addRecipe(new ItemStack(ExtItems.obsidianAxe), new Object[]{"##", "$ ", "$ ", Character.valueOf('#'), ExtItems.obsidianIngot, Character.valueOf('$'), Item.stick});
+		var0.addRecipe(new ItemStack(ExtItems.obsidianArmor0), new Object[]{"###", "# #", Character.valueOf('#'), ExtItems.obsidianIngot});
+		var0.addRecipe(new ItemStack(ExtItems.obsidianArmor2), new Object[]{"###", "# #", "# #", Character.valueOf('#'), ExtItems.obsidianIngot});
+		var0.addRecipe(new ItemStack(ExtItems.obsidianArmor3), new Object[]{"# #", "# #", Character.valueOf('#'), ExtItems.obsidianIngot});
+		var0.addRecipe(new ItemStack(ExtItems.obsidianArmor1), new Object[]{"# #", "###", "###", Character.valueOf('#'), ExtItems.obsidianIngot});
+		var0.addShapelessRecipe(new ItemStack(ExtBlocks.woolPink), new Object[]{"#X", Character.valueOf('#'), Block.cloth, Character.valueOf('X'), ExtItems.pinkDye});
+		var0.addShapelessRecipe(new ItemStack(ExtBlocks.woolBlue), new Object[]{"#X", Character.valueOf('#'), Block.cloth, Character.valueOf('X'), ExtItems.blueDye});
+		var0.addShapelessRecipe(new ItemStack(ExtBlocks.woolGreen), new Object[]{"#X", Character.valueOf('#'), Block.cloth, Character.valueOf('X'), ExtItems.greenDye});
+		var0.addShapelessRecipe(new ItemStack(ExtBlocks.woolBlack), new Object[]{"#X", Character.valueOf('#'), Block.cloth, Character.valueOf('X'), ExtItems.blackDye});
+		var0.addRecipe(new ItemStack(ExtItems.edibleFire), new Object[]{"#", Character.valueOf('#'), ExtBlocks.blueFireIdk});
+		var0.addRecipe(new ItemStack(ExtBlocks.FireSkyPlanks, 4), new Object[]{"#", Character.valueOf('#'), ExtBlocks.FireSkyWood});
+		var0.addRecipe(new ItemStack(ExtBlocks.AncientPlanks, 3), new Object[]{"#", Character.valueOf('#'), ExtBlocks.AncientWood});
+		var0.addRecipe(new ItemStack(ExtItems.fireWoodDoor), new Object[]{"##", "##", "##", Character.valueOf('#'), ExtBlocks.FireSkyPlanks});
+		var0.addRecipe(new ItemStack(ExtItems.essence, 9), new Object[]{"#", Character.valueOf('#'), ExtBlocks.EssenceBlock});
+		var0.addRecipe(new ItemStack(ExtBlocks.EssenceBlock), new Object[]{"###", "###", "###", Character.valueOf('#'), ExtItems.essence});
+		var0.addRecipe(new ItemStack(ExtBlocks.EssenceTransformer), new Object[]{"###", "#X#", "###", Character.valueOf('#'), Block.cobblestone, Character.valueOf('X'), Item.redstone});
+		var0.addRecipe(new ItemStack(ExtBlocks.essenceFountain), new Object[]{"#X#", "###", Character.valueOf('#'), Block.cobblestone, Character.valueOf('X'), ExtItems.essence});
+		var0.addRecipe(new ItemStack(ExtBlocks.EssenceCloner), new Object[]{"777", "7X7", "727", Character.valueOf('7'), Block.cobblestone, Character.valueOf('X'), Item.redstone, Character.valueOf('2'), ExtBlocks.EssenceBlock});
+		var0.addRecipe(new ItemStack(ExtItems.essenceGun), new Object[]{"#  ", "SEX", " #7", Character.valueOf('#'), Item.ingotIron, Character.valueOf('S'), Item.redstone, Character.valueOf('E'), Item.stick, Character.valueOf('X'), ExtItems.essence, Character.valueOf('7'), Block.planks});
+		var0.addRecipe(new ItemStack(ExtBlocks.QuadWindowGlassBlock, 8), new Object[]{"727", "222", "727", Character.valueOf('7'), Block.glass, Character.valueOf('2'), Block.obsidian});
+		var0.addRecipe(new ItemStack(ExtBlocks.QGlassMagenta, 8), new Object[]{"727", "262", "727", Character.valueOf('7'), Block.glass, Character.valueOf('2'), Block.obsidian, Character.valueOf('6'), ExtBlocks.woolPink});
+		var0.addRecipe(new ItemStack(ExtBlocks.QGlassBlack, 8), new Object[]{"727", "262", "727", Character.valueOf('7'), Block.glass, Character.valueOf('2'), Block.obsidian, Character.valueOf('6'), ExtBlocks.woolBlack});
+		var0.addRecipe(new ItemStack(ExtBlocks.QGlassGreen, 8), new Object[]{"727", "262", "727", Character.valueOf('7'), Block.glass, Character.valueOf('2'), Block.obsidian, Character.valueOf('6'), ExtBlocks.woolGreen});
+		var0.addRecipe(new ItemStack(ExtBlocks.QGlassBlue, 8), new Object[]{"727", "262", "727", Character.valueOf('7'), Block.glass, Character.valueOf('2'), Block.obsidian, Character.valueOf('6'), ExtBlocks.woolBlue});
+		var0.addRecipe(new ItemStack(ExtBlocks.TileBlock, 4), new Object[]{"727", "272", "727", Character.valueOf('7'), Block.brick, Character.valueOf('2'), Block.cobblestone});
+		var0.addRecipe(new ItemStack(ExtBlocks.TileBlock2NonFucked, 4), new Object[]{"7 7", " 7 ", "7 7", Character.valueOf('7'), Block.brick});
+		var0.addRecipe(new ItemStack(ExtBlocks.dimensionFloorBlock, 4), new Object[]{"72", "27", Character.valueOf('7'), ExtBlocks.TileBlock3, Character.valueOf('2'), ExtBlocks.TileBlock4});
+		var0.addRecipe(new ItemStack(ExtBlocks.dimensionFloorBlock, 4), new Object[]{"72", "27", Character.valueOf('7'), ExtBlocks.TileBlock4, Character.valueOf('2'), ExtBlocks.TileBlock3});
+		var0.addRecipe(new ItemStack(ExtBlocks.EmptyBookshelf, 1), new Object[]{"#i#", " i ", "#i#", Character.valueOf('#'), Block.planks, Character.valueOf('i'), Item.stick});
+		var0.addRecipe(new ItemStack(ExtBlocks.Bookshelf, 1), new Object[]{"###", " i ", "###", Character.valueOf('#'), Item.book, Character.valueOf('i'), ExtBlocks.EmptyBookshelf});
+		var0.addRecipe(new ItemStack(ExtItems.Spear, 1), new Object[]{"#", "#", "#", Character.valueOf('#'), Item.ingotIron});
+		var0.addRecipe(new ItemStack(ExtBlocks.SkyFlameInGlass, 8), new Object[]{"###", "#1#", "###", Character.valueOf('#'), Block.glass, Character.valueOf('1'), ExtBlocks.glowingFlowerInfBasic});
+		var0.addRecipe(new ItemStack(ExtBlocks.GoldFlameInGlass, 8), new Object[]{"###", "#1#", "###", Character.valueOf('#'), Block.glass, Character.valueOf('1'), ExtBlocks.glowingFlowerInfGold});
+		var0.addRecipe(new ItemStack(ExtBlocks.ObsidianFlameInGlass, 8), new Object[]{"###", "#1#", "###", Character.valueOf('#'), Block.glass, Character.valueOf('1'), ExtBlocks.glowingFlowerInfObsidian});
+		var0.addRecipe(new ItemStack(ExtBlocks.LowFlameInGlass, 8), new Object[]{"###", "#1#", "###", Character.valueOf('#'), Block.glass, Character.valueOf('1'), ExtBlocks.LowGlowingFlower});
+		var0.addRecipe(new ItemStack(ExtBlocks.LichenMass, 4), new Object[]{"##", "##", Character.valueOf('#'), ExtBlocks.Lichen});
+		var0.addRecipe(new ItemStack(ExtBlocks.LichenBricks, 4), new Object[]{" # ", "#1#", " # ", Character.valueOf('#'), ExtBlocks.Lichen, Character.valueOf('1'), Block.brick});
+		var0.addRecipe(new ItemStack(Block.cobblestoneMossy, 4), new Object[]{" # ", "#1#", " # ", Character.valueOf('#'), ExtBlocks.Lichen, Character.valueOf('1'), Block.cobblestone});
+		var0.addRecipe(new ItemStack(ExtItems.GranularSalt, 4), new Object[]{"#", Character.valueOf('#'), ExtBlocks.saltBlock});
+		var0.addRecipe(new ItemStack(ExtBlocks.SaltBricks, 4), new Object[]{"##", "##", Character.valueOf('#'), ExtItems.GranularSalt});
+		var0.addRecipe(new ItemStack(ExtItems.MyconStrand, 4), new Object[]{"#", "#", Character.valueOf('#'), ExtBlocks.MyconPlank});
+		var0.addRecipe(new ItemStack(ExtBlocks.MyconPlank, 4), new Object[]{"#", Character.valueOf('#'), ExtBlocks.MyconStem});
+		var0.addRecipe(new ItemStack(ExtItems.MyconPickaxe), new Object[]{"###", " $ ", " $ ", Character.valueOf('$'), ExtItems.MyconStrand, Character.valueOf('#'), ExtBlocks.MyconPlank});
+		var0.addRecipe(new ItemStack(ExtItems.MyconAxe), new Object[]{"##", "#$", " $", Character.valueOf('$'), ExtItems.MyconStrand, Character.valueOf('#'), ExtBlocks.MyconPlank});
+		var0.addRecipe(new ItemStack(ExtItems.MyconHoe), new Object[]{"##", " $", " $", Character.valueOf('$'), ExtItems.MyconStrand, Character.valueOf('#'), ExtBlocks.MyconPlank});
+		var0.addRecipe(new ItemStack(ExtItems.MyconShovel), new Object[]{"#", "$", "$", Character.valueOf('$'), ExtItems.MyconStrand, Character.valueOf('#'), ExtBlocks.MyconPlank});
+		var0.addRecipe(new ItemStack(ExtItems.MyconSword), new Object[]{"#", "#", "$", Character.valueOf('$'), ExtItems.MyconStrand, Character.valueOf('#'), ExtBlocks.MyconPlank});
+		var0.addRecipe(new ItemStack(ExtBlocks.IronBrick, 4), new Object[]{" # ", "#1#", " # ", Character.valueOf('#'), Item.ingotIron, Character.valueOf('1'), Block.brick});
+		var0.addRecipe(new ItemStack(ExtBlocks.GoldBrick, 4), new Object[]{" # ", "#1#", " # ", Character.valueOf('#'), Item.ingotGold, Character.valueOf('1'), Block.brick});
+		var0.addRecipe(new ItemStack(ExtBlocks.DiamondBrick, 4), new Object[]{" # ", "#1#", " # ", Character.valueOf('#'), Item.diamond, Character.valueOf('1'), Block.brick});
+		var0.addRecipe(new ItemStack(ExtBlocks.ObsidianBrick, 4), new Object[]{" # ", "#1#", " # ", Character.valueOf('#'), ExtItems.obsidianIngot, Character.valueOf('1'), Block.brick});
+		var0.addRecipe(new ItemStack(ExtBlocks.BismuthBrick, 4), new Object[]{" # ", "#1#", " # ", Character.valueOf('#'), ExtItems.BismuthIngot, Character.valueOf('1'), Block.brick});
+		var0.addRecipe(new ItemStack(ExtBlocks.BismuthBlock, 4), new Object[]{"##", "##", Character.valueOf('#'), ExtItems.BismuthIngot});
+		var0.addRecipe(new ItemStack(ExtBlocks.BismuthPillar, 4), new Object[]{"#1#", "1 1", "#1#", Character.valueOf('#'), ExtBlocks.BismuthBlock, Character.valueOf('1'), ExtItems.BismuthIngot});
+		var0.addRecipe(new ItemStack(ExtBlocks.FirewoodWorkbench, 1), new Object[]{"##", "##", Character.valueOf('#'), ExtBlocks.FireSkyPlanks});
+		var0.addRecipe(new ItemStack(ExtBlocks.HighwoodWorkbench, 1), new Object[]{"##", "##", Character.valueOf('#'), ExtBlocks.AncientPlanks});
+		var0.addRecipe(new ItemStack(ExtBlocks.MyconWorkbench, 1), new Object[]{"##", "##", Character.valueOf('#'), ExtBlocks.MyconPlank});
+		var0.addRecipe(new ItemStack(ExtItems.MyconDoor), new Object[]{"##", "##", "##", Character.valueOf('#'), ExtBlocks.MyconPlank});
+		var0.addRecipe(new ItemStack(ExtItems.HighwoodDoor), new Object[]{"##", "##", "##", Character.valueOf('#'), ExtBlocks.AncientPlanks});
+		var0.addRecipe(new ItemStack(ExtBlocks.TeaPlank, 4), new Object[]{"#", Character.valueOf('#'), ExtBlocks.TeaWood});
+		var0.addRecipe(new ItemStack(ExtBlocks.MalachiteBlock, 1), new Object[]{"###", "###", "###", Character.valueOf('#'), ExtItems.Malachite});
+		var0.addRecipe(new ItemStack(ExtBlocks.LaceAgateBlock, 1), new Object[]{"###", "###", "###", Character.valueOf('#'), ExtItems.LaceAgate});
+		var0.addRecipe(new ItemStack(ExtBlocks.ClinohumiteBlock, 1), new Object[]{"###", "###", "###", Character.valueOf('#'), ExtItems.Clinohumite});
+		var0.addRecipe(new ItemStack(ExtBlocks.PyriteBlock, 1), new Object[]{"###", "###", "###", Character.valueOf('#'), ExtItems.Pyrite});
+		var0.addRecipe(new ItemStack(ExtItems.Malachite, 9), new Object[]{"#", Character.valueOf('#'), ExtBlocks.MalachiteBlock});
+		var0.addRecipe(new ItemStack(ExtItems.LaceAgate, 9), new Object[]{"#", Character.valueOf('#'), ExtBlocks.LaceAgateBlock});
+		var0.addRecipe(new ItemStack(ExtItems.Clinohumite, 9), new Object[]{"#", Character.valueOf('#'), ExtBlocks.ClinohumiteBlock});
+		var0.addRecipe(new ItemStack(ExtItems.Pyrite, 9), new Object[]{"#", Character.valueOf('#'), ExtBlocks.PyriteBlock});
+		var0.addRecipe(new ItemStack(ExtItems.FrigidBits, 8), new Object[]{"#", Character.valueOf('#'), ExtBlocks.FrigidTrunk});
+		var0.addRecipe(new ItemStack(ExtItems.TeaBucket, 1), new Object[]{" # ", "#1#", " # ", Character.valueOf('#'), ExtItems.TeaLeaf, Character.valueOf('1'), Item.bucketWater});
+		var0.addRecipe(new ItemStack(ExtItems.HearthenMirror, 1), new Object[]{" # ", "#1#", " # ", Character.valueOf('#'), Item.ingotGold, Character.valueOf('1'), ExtBlocks.blueFireIdk});
+		var0.addRecipe(new ItemStack(ExtBlocks.FlamewoodPillar, 4), new Object[]{"#X#", "X X", "#X#", Character.valueOf('#'), ExtBlocks.FireSkyPlanks, Character.valueOf('X'), Item.stick});
+		var0.addRecipe(new ItemStack(ExtBlocks.MyconPillar, 4), new Object[]{"#X#", "X X", "#X#", Character.valueOf('#'), ExtBlocks.MyconPlank, Character.valueOf('X'), ExtItems.MyconStrand});
+		var0.addRecipe(new ItemStack(ExtBlocks.TeaPillar, 4), new Object[]{"#X#", "X X", "#X#", Character.valueOf('#'), ExtBlocks.TeaPlank, Character.valueOf('X'), Item.stick});
+		var0.addRecipe(new ItemStack(ExtBlocks.HighwoodPillar, 4), new Object[]{"#X#", "X X", "#X#", Character.valueOf('#'), ExtBlocks.AncientPlanks, Character.valueOf('X'), Item.stick});
+		var0.addRecipe(new ItemStack(ExtBlocks.Freezer), new Object[]{"###", "#1#", "###", Character.valueOf('#'), Block.cobblestone, Character.valueOf('1'), Block.blockSnow});
+		var0.addRecipe(new ItemStack(ExtBlocks.woodSingle, 3), new Object[]{"###", Character.valueOf('#'), Block.planks});
+		var0.addRecipe(new ItemStack(ExtBlocks.SmoothStone, 4), new Object[]{"##", "##", Character.valueOf('#'), Block.stone});
+		var0.addRecipe(new ItemStack(ExtBlocks.SmoothLimestone, 4), new Object[]{"##", "##", Character.valueOf('#'), ExtBlocks.Limestone});
+		var0.addRecipe(new ItemStack(ExtItems.IceDoor), new Object[]{"##", "##", "##", Character.valueOf('#'), Block.ice});
+		var0.addRecipe(new ItemStack(ExtItems.TheOneTrueBook), new Object[]{"12", "34", Character.valueOf('1'), ExtItems.HoursLongPastI, Character.valueOf('2'), ExtItems.HoursLongPastII, Character.valueOf('3'), ExtItems.HoursLongPastIII, Character.valueOf('4'), ExtItems.HoursLongPastVI});
+	}
+
+	public static int GetSmeltingRecipe(int var0) {
+		return var0 == Block.obsidian.blockID ? ExtItems.obsidianIngot.shiftedIndex : (var0 == Item.coal.shiftedIndex ? ExtItems.blackDye.shiftedIndex : (var0 == Item.redstone.shiftedIndex ? ExtItems.greenDye.shiftedIndex : (var0 == Block.plantYellow.blockID ? ExtItems.blueDye.shiftedIndex : (var0 == Block.mushroomBrown.blockID ? ExtItems.pinkDye.shiftedIndex : (var0 == Block.mushroomRed.blockID ? ExtItems.fryshroom.shiftedIndex : (var0 == ExtBlocks.LowOreGold.blockID ? Item.ingotGold.shiftedIndex : (var0 == ExtBlocks.LowOreIron.blockID ? Item.ingotIron.shiftedIndex : (var0 == ExtBlocks.BismuthOre.blockID ? ExtItems.BismuthIngot.shiftedIndex : (var0 == ExtBlocks.LimeCobblestone.blockID ? ExtBlocks.Limestone.blockID : -1)))))))));
+	}
+
+	public static int newFreezing(int var0) {
+		return var0 == Item.bucketWater.shiftedIndex ? Block.ice.blockID : (var0 == Block.blockSnow.blockID ? ExtBlocks.SnowBrick.blockID : (var0 == Item.appleRed.shiftedIndex ? ExtItems.CandyIce.shiftedIndex : (var0 == Block.dirt.blockID ? Block.blockSnow.blockID : (var0 == ExtItems.edibleFire.shiftedIndex ? ExtBlocks.blueFireIdk.blockID : (var0 == Item.slimeBall.shiftedIndex ? Item.snowball.shiftedIndex : -1)))));
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandUnknownClass2.java
@@ -1,0 +1,66 @@
+package net.minecraft.src;
+
+import java.util.List;
+import net.minecraft.client.Minecraft;
+
+public class CommandUnknownClass2 {
+	private Minecraft field_11840_9swGCi8V8YHS8T1b3yIdpeBI27w6IBPn67ig5BinVe6224MQ0Ekj2h9TfQ9E;
+	public CommandManager field_11839_52dbdXLg3Wx81i6gW4IYo1Bq32Pz2QIUyPjWOA1i0OJRd00ZX7w649E5B4JD = new CommandManager();
+
+	public CommandUnknownClass2(Minecraft var1) {
+		this.field_11840_9swGCi8V8YHS8T1b3yIdpeBI27w6IBPn67ig5BinVe6224MQ0Ekj2h9TfQ9E = var1;
+	}
+
+	public void func_11838_1mCSTFiXQZMQRgg38E4l2za0x1wQzUIIZQAoUEJ051l3R9Cc00Qmou4eQ5Yf(int var1, int var2) {
+		Gui.drawGradientRect(1, 1, var1 - 1, 13, -266724838, -1608902118);
+		Gui.drawGradientRect(2, 2, var1 - 2, 12, -265080013, -1607257293);
+		int var3 = this.field_11840_9swGCi8V8YHS8T1b3yIdpeBI27w6IBPn67ig5BinVe6224MQ0Ekj2h9TfQ9E.fontRenderer.getStringWidth("3emj MC16.05 >");
+		Gui.drawString(this.field_11840_9swGCi8V8YHS8T1b3yIdpeBI27w6IBPn67ig5BinVe6224MQ0Ekj2h9TfQ9E.fontRenderer, "3emj MC16.05 >", 3, 3, 16187136);
+		Gui.drawString(this.field_11840_9swGCi8V8YHS8T1b3yIdpeBI27w6IBPn67ig5BinVe6224MQ0Ekj2h9TfQ9E.fontRenderer, this.field_11839_52dbdXLg3Wx81i6gW4IYo1Bq32Pz2QIUyPjWOA1i0OJRd00ZX7w649E5B4JD.field_12074_59H713eWwMqHt2BkXfmtU7Gw1Ed2yJ84RRj5r8Os9hXCRrICXE2XfeV2i7Jm + "_", 8 + var3, 3, 16777215);
+		String[] var4 = this.field_11839_52dbdXLg3Wx81i6gW4IYo1Bq32Pz2QIUyPjWOA1i0OJRd00ZX7w649E5B4JD.field_12074_59H713eWwMqHt2BkXfmtU7Gw1Ed2yJ84RRj5r8Os9hXCRrICXE2XfeV2i7Jm.split(" ");
+		if(var4.length > 0) {
+			boolean var5 = false;
+			CommandManagerUnknownClass var6 = this.field_11839_52dbdXLg3Wx81i6gW4IYo1Bq32Pz2QIUyPjWOA1i0OJRd00ZX7w649E5B4JD.func_12064_066qvw8i8VJk9r8W9zey0qBl7l4RI0SeVtY38i356k7OodNhLGt3200y64s6(var4[0]);
+			if(var6 != null) {
+				byte var11 = 30;
+				Gui.drawGradientRect(1, 14, var1 - 1, 14 + var11 + 8, -1608902118, -266724838);
+				Gui.drawGradientRect(2, 15, var1 - 2, 15 + var11 + 6, -1607257293, -265080013);
+
+				String var7;
+				try {
+					var7 = var6.field_12023_4a6hGbi1yf1wisYXW788UpKE9grOBLI6J908Opcn8Zv63ROZKy49K6Z3M3gz.func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe();
+				} catch (Exception var10) {
+					var7 = "(error getting value)";
+				}
+
+				Gui.drawString(this.field_11840_9swGCi8V8YHS8T1b3yIdpeBI27w6IBPn67ig5BinVe6224MQ0Ekj2h9TfQ9E.fontRenderer, var7.equals("~exec") ? "executable command" : "current value", 4, 16, 11579568);
+				if(!var7.equals("~exec")) {
+					Gui.drawString(this.field_11840_9swGCi8V8YHS8T1b3yIdpeBI27w6IBPn67ig5BinVe6224MQ0Ekj2h9TfQ9E.fontRenderer, var7, 80, 16, 16777215);
+				}
+
+				String var8 = var6.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640.length == 0 ? "" : "domain is ";
+
+				for(int var9 = 0; var9 != var6.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640.length; ++var9) {
+					var8 = var8 + "any " + var6.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640[var9].getSimpleName().toLowerCase();
+					if(var9 != var6.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640.length - 1) {
+						var8 = var8 + ", ";
+					}
+				}
+
+				Gui.drawString(this.field_11840_9swGCi8V8YHS8T1b3yIdpeBI27w6IBPn67ig5BinVe6224MQ0Ekj2h9TfQ9E.fontRenderer, var8, 16, 36, 11579568);
+			} else {
+				List var13 = this.field_11839_52dbdXLg3Wx81i6gW4IYo1Bq32Pz2QIUyPjWOA1i0OJRd00ZX7w649E5B4JD.func_12065_70o5m3y9gbwr3PpxBbyXBPCTq6zSby60p7fwgFYI1mH6IJ8DJMrZAt2f87KR(var4[0]);
+				if(var13.size() != 0) {
+					int var12 = var13.size() * 10;
+					Gui.drawGradientRect(1, 14, var1 - 1, 14 + var12 + 8, -1608902118, -266724838);
+					Gui.drawGradientRect(2, 15, var1 - 2, 15 + var12 + 6, -1607257293, -265080013);
+
+					for(int var14 = 0; var14 != var13.size(); ++var14) {
+						Gui.drawString(this.field_11840_9swGCi8V8YHS8T1b3yIdpeBI27w6IBPn67ig5BinVe6224MQ0Ekj2h9TfQ9E.fontRenderer, ((CommandManagerUnknownClass)var13.get(var14)).field_12024_1q5eqd4V75vh5r0RkoHJF19l4S347yEp0rA4sR70sQOr8jdcCj1Z12u5PSx9, 16, 16 + var14 * 10, 11579568);
+					}
+				}
+			}
+		}
+
+	}
+}
--- net/minecraft/src/EntityArrow.java
+++ net/minecraft/src/EntityArrow.java
@@ -2,14 +2,14 @@
 
 import java.util.List;
 
-public class EntityArrow extends Entity {
+public class EntityArrow extends EntityFirable {
 	private int xTile = -1;
 	private int yTile = -1;
 	private int zTile = -1;
 	private int inTile = 0;
 	private boolean inData = false;
 	public int arrowShake = 0;
-	private EntityLiving shootingEntity;
+	EntityLiving shootingEntity;
 	private int ticksInGround;
 	private int ticksInAir = 0;
 
@@ -94,17 +94,17 @@
 		List var5 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox.addCoord(this.motionX, this.motionY, this.motionZ).expand(1.0D, 1.0D, 1.0D));
 		double var6 = 0.0D;
 
-		float var10;
-		for(int var8 = 0; var8 < var5.size(); ++var8) {
-			Entity var9 = (Entity)var5.get(var8);
-			if(var9.canBeCollidedWith() && (var9 != this.shootingEntity || this.ticksInAir >= 5)) {
-				var10 = 0.3F;
-				AxisAlignedBB var11 = var9.boundingBox.expand((double)var10, (double)var10, (double)var10);
+		float var8;
+		for(int var9 = 0; var9 < var5.size(); ++var9) {
+			Entity var10 = (Entity)var5.get(var9);
+			if(var10.canBeCollidedWith() && (var10 != this.shootingEntity || this.ticksInAir >= 5)) {
+				var8 = 0.3F;
+				AxisAlignedBB var11 = var10.boundingBox.expand((double)var8, (double)var8, (double)var8);
 				MovingObjectPosition var12 = var11.calculateIntercept(var15, var2);
 				if(var12 != null) {
 					double var13 = var15.distanceTo(var12.hitVec);
 					if(var13 < var6 || var6 == 0.0D) {
-						var4 = var9;
+						var4 = var10;
 						var6 = var13;
 					}
 				}
@@ -171,7 +171,7 @@
 		this.rotationPitch = this.prevRotationPitch + (this.rotationPitch - this.prevRotationPitch) * 0.2F;
 		this.rotationYaw = this.prevRotationYaw + (this.rotationYaw - this.prevRotationYaw) * 0.2F;
 		float var17 = 0.99F;
-		var10 = 0.03F;
+		var8 = 0.03F;
 		if(this.handleWaterMovement()) {
 			for(int var18 = 0; var18 < 4; ++var18) {
 				float var19 = 0.25F;
@@ -184,7 +184,7 @@
 		this.motionX *= (double)var17;
 		this.motionY *= (double)var17;
 		this.motionZ *= (double)var17;
-		this.motionY -= (double)var10;
+		this.motionY -= (double)var8;
 		this.setPosition(this.posX, this.posY, this.posZ);
 	}
 
--- /dev/null
+++ net/minecraft/src/CommandUnbind.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+class CommandUnbind extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8583_14m8mzv5wB1aiEBAzcN4Sac8s1Z25q39Icefwe4ID92eJ799yBdQE3ZNVLwV;
+    
+    CommandUnbind(final CommandManager abb) {
+        this.field_8583_14m8mzv5wB1aiEBAzcN4Sac8s1Z25q39Icefwe4ID92eJ799yBdQE3ZNVLwV = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (this.field_8583_14m8mzv5wB1aiEBAzcN4Sac8s1Z25q39Icefwe4ID92eJ799yBdQE3ZNVLwV.field_12072_57Pslv03tR1GVO6rfR7Myg6SJ9Dfi77KWF699D8Zy703Dh2cM61HfFA0VmYd.containsKey((int)arr[0])) {
+            this.field_8583_14m8mzv5wB1aiEBAzcN4Sac8s1Z25q39Icefwe4ID92eJ799yBdQE3ZNVLwV.field_12072_57Pslv03tR1GVO6rfR7Myg6SJ9Dfi77KWF699D8Zy703Dh2cM61HfFA0VmYd.remove((int)arr[0]);
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/ItemHoursLongPastII.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+public class ItemHoursLongPastII extends Item {
+	private int field_9421_82dGO9OdChM6cULsX841DGSRZt4koxJx8Ra2615Ji24oKXk0Kh3Fm8843GJG = 802;
+
+	public ItemHoursLongPastII(int var1) {
+		super(var1);
+		this.maxStackSize = 1;
+	}
+
+	public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+		var2.playSoundAtEntity(var3, "ext.notif", 1.0F, 1.0F / (rand.nextFloat() * 0.4F + 0.8F));
+		GuiInGameUnknownClass2 var4 = (GuiInGameUnknownClass2)InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.field_11177_7Zksb7i503i87T27QXh6g1K1pS0mrm03cH6J60Ws3B3hciqhuD9PIOw861xp.peek();
+		if(var4 == null || var4.field_8627_0ZmECs21Yya5NZUsnBNbB5tPFhkwONMzlzVXHX4jsV5aynDc020B97BLqocx != this.field_9421_82dGO9OdChM6cULsX841DGSRZt4koxJx8Ra2615Ji24oKXk0Kh3Fm8843GJG) {
+			InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11171_604vK63ksNcNlyaekc36K9YTmY8326K6noo7h77989I2TsYQ61KM5M25Nii9("Hours Long Past II \nThen, in a darkness so bright it blinded all who saw it - the world changed.\nWhat once was its surface now lay deep below\nsmothered by ever-young stone and with skies bleeding light far above.\nThe world changed in an instant. A vast new unknown.", 20000, this.field_9421_82dGO9OdChM6cULsX841DGSRZt4koxJx8Ra2615Ji24oKXk0Kh3Fm8843GJG);
+		}
+
+		return var1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/HubWorldUnknownClass2.java
@@ -1,0 +1,128 @@
+package net.minecraft.src;
+
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.Map;
+
+public abstract class HubWorldUnknownClass2 {
+	public int field_9833_9Psx0tZC91cMh7ZAzUJ658Kzvt14VXdr7EZ2i1DLVD9g4MlOJonxzd0TGHB9;
+	protected HubWorld field_9831_9di5kTyQJSVIL4e04LHO4k6zJ1R6dE2XFd7U87CVdoCE497R8cfT70Idl59f;
+	public Map<Integer, HubWorldUnknownClass4> field_9828_402Fu54l8TN2Bk80iCfxL13eV1alTV2m2yuc0ENbnJKb9yho3t8yoy6p2U16;
+	private int field_9834_49YKQ9H4rrqumwJ440g4Mih74Nh25b3khR0956wdddVjq9A278gi4nUXDmg5;
+	private int field_9830_7C4VOY68RA8Zy4TwusOsh6A2t4L4uXD7kPKxs6Dy2d35t3Ziv1aw4I0uQ6o8;
+	private int field_9827_11fE8Ox7P73E077oD4aH1xmldckIt3kdPUm7WME2kV9Rpk2Ky85479aFl1oG;
+	public int field_9837_3X8uS9Os0Ro4y2OE9xS3l95Rn75LDno8OkmTSU4PUHOIRmXt6887Qc80QbJp;
+	public int field_9835_4xQ8UJa1zzwd5Ak02TtA45g8muig5017CnUqTI595caW1tt0I0n2G8Fq86z7;
+	public int field_9832_04229h383DiAbTtznv60GRjak8V5dt3yQ79a0e8ICDtjs9toY69Ld05AykI1;
+	protected NibbleArray field_9836_5CixT11auYqthm59bz65N7pR6c1kFc4PgWOJTyMES6c8JRFtTc8y4fu4by3m;
+	protected NibbleArray field_9829_1ZuLBTbJCb68R6q2Pu8z16VwdmUU78La4DGYSspy8oZ48Z2dLDn7EaVJQ5s6;
+
+	public HubWorldUnknownClass2(HubWorld var1, int var2, int var3, int var4) {
+		this(var1, var2, var3, var4, 16, 16, 5);
+	}
+
+	public HubWorldUnknownClass2(HubWorld var1, int var2, int var3, int var4, int var5, int var6, int var7) {
+		this.field_9831_9di5kTyQJSVIL4e04LHO4k6zJ1R6dE2XFd7U87CVdoCE497R8cfT70Idl59f = var1;
+		this.field_9834_49YKQ9H4rrqumwJ440g4Mih74Nh25b3khR0956wdddVjq9A278gi4nUXDmg5 = var2;
+		this.field_9830_7C4VOY68RA8Zy4TwusOsh6A2t4L4uXD7kPKxs6Dy2d35t3Ziv1aw4I0uQ6o8 = var3;
+		this.field_9827_11fE8Ox7P73E077oD4aH1xmldckIt3kdPUm7WME2kV9Rpk2Ky85479aFl1oG = var4;
+		this.field_9837_3X8uS9Os0Ro4y2OE9xS3l95Rn75LDno8OkmTSU4PUHOIRmXt6887Qc80QbJp = var5;
+		this.field_9835_4xQ8UJa1zzwd5Ak02TtA45g8muig5017CnUqTI595caW1tt0I0n2G8Fq86z7 = var6;
+		this.field_9832_04229h383DiAbTtznv60GRjak8V5dt3yQ79a0e8ICDtjs9toY69Ld05AykI1 = var7;
+		this.field_9833_9Psx0tZC91cMh7ZAzUJ658Kzvt14VXdr7EZ2i1DLVD9g4MlOJonxzd0TGHB9 = 0;
+		this.field_9836_5CixT11auYqthm59bz65N7pR6c1kFc4PgWOJTyMES6c8JRFtTc8y4fu4by3m = new NibbleArray(-Short.MIN_VALUE);
+		this.field_9829_1ZuLBTbJCb68R6q2Pu8z16VwdmUU78La4DGYSspy8oZ48Z2dLDn7EaVJQ5s6 = new NibbleArray(this.field_9836_5CixT11auYqthm59bz65N7pR6c1kFc4PgWOJTyMES6c8JRFtTc8y4fu4by3m.data.length);
+		this.field_9828_402Fu54l8TN2Bk80iCfxL13eV1alTV2m2yuc0ENbnJKb9yho3t8yoy6p2U16 = new HashMap();
+	}
+
+	protected boolean func_9823_0ir18WW2Er00vPEwk4ysWYEf3jBf0oDxYSVBcO27LQ7O9UiZXGtduk6tgrab(int var1, int var2, int var3, int var4) {
+		if(this.field_9831_9di5kTyQJSVIL4e04LHO4k6zJ1R6dE2XFd7U87CVdoCE497R8cfT70Idl59f.setBlock(this.field_9834_49YKQ9H4rrqumwJ440g4Mih74Nh25b3khR0956wdddVjq9A278gi4nUXDmg5 + var1, this.field_9830_7C4VOY68RA8Zy4TwusOsh6A2t4L4uXD7kPKxs6Dy2d35t3Ziv1aw4I0uQ6o8 + var2, this.field_9827_11fE8Ox7P73E077oD4aH1xmldckIt3kdPUm7WME2kV9Rpk2Ky85479aFl1oG + var3, var4)) {
+			this.field_9836_5CixT11auYqthm59bz65N7pR6c1kFc4PgWOJTyMES6c8JRFtTc8y4fu4by3m.set(var1, var2, var3, var4);
+			return true;
+		} else {
+			return false;
+		}
+	}
+
+	protected boolean func_9825_68E6w9t9bw9Zp6jmEk8M417RMoDQ5rpWim85pcpWr4b1H5bY93ND9Ret3lM0(int var1, int var2, int var3, int var4, int var5) {
+		if(this.func_9823_0ir18WW2Er00vPEwk4ysWYEf3jBf0oDxYSVBcO27LQ7O9UiZXGtduk6tgrab(var1, var2, var3, var4) && this.field_9831_9di5kTyQJSVIL4e04LHO4k6zJ1R6dE2XFd7U87CVdoCE497R8cfT70Idl59f.setBlockMetadata(this.field_9834_49YKQ9H4rrqumwJ440g4Mih74Nh25b3khR0956wdddVjq9A278gi4nUXDmg5 + var1, this.field_9830_7C4VOY68RA8Zy4TwusOsh6A2t4L4uXD7kPKxs6Dy2d35t3Ziv1aw4I0uQ6o8 + var2, this.field_9827_11fE8Ox7P73E077oD4aH1xmldckIt3kdPUm7WME2kV9Rpk2Ky85479aFl1oG + var3, var5)) {
+			this.field_9829_1ZuLBTbJCb68R6q2Pu8z16VwdmUU78La4DGYSspy8oZ48Z2dLDn7EaVJQ5s6.set(var1, var2, var3, var5);
+			return true;
+		} else {
+			return false;
+		}
+	}
+
+	protected void func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(int var1, int var2, int var3, int var4, int var5, int var6, int var7) {
+		for(int var8 = var1; var8 <= var4; ++var8) {
+			for(int var9 = var2; var9 <= var5; ++var9) {
+				for(int var10 = var3; var10 <= var6; ++var10) {
+					this.func_9823_0ir18WW2Er00vPEwk4ysWYEf3jBf0oDxYSVBcO27LQ7O9UiZXGtduk6tgrab(var8, var9, var10, var7);
+				}
+			}
+		}
+
+	}
+
+	public void func_9826_7ZpHFjuGvcJ051cOz9PE89x1h4vDq16V2LJ76i4OBAOemXk2l5J09hlg30Vh(int var1) {
+		if(this.field_9833_9Psx0tZC91cMh7ZAzUJ658Kzvt14VXdr7EZ2i1DLVD9g4MlOJonxzd0TGHB9 != var1) {
+			NibbleArray var2 = this.field_9836_5CixT11auYqthm59bz65N7pR6c1kFc4PgWOJTyMES6c8JRFtTc8y4fu4by3m;
+			byte var3;
+			byte var4;
+			switch(Math.abs(var1 - this.field_9833_9Psx0tZC91cMh7ZAzUJ658Kzvt14VXdr7EZ2i1DLVD9g4MlOJonxzd0TGHB9)) {
+			case 1:
+				var3 = 1;
+				var4 = 0;
+				break;
+			case 2:
+				var3 = 0;
+				var4 = -1;
+				break;
+			case 3:
+				var3 = -1;
+				var4 = 0;
+				break;
+			default:
+				var3 = 0;
+				var4 = 1;
+			}
+
+			for(int var5 = 0; var5 < this.field_9837_3X8uS9Os0Ro4y2OE9xS3l95Rn75LDno8OkmTSU4PUHOIRmXt6887Qc80QbJp; ++var5) {
+				for(int var6 = 0; var6 < this.field_9832_04229h383DiAbTtznv60GRjak8V5dt3yQ79a0e8ICDtjs9toY69Ld05AykI1; ++var6) {
+					for(int var7 = 0; var7 < this.field_9835_4xQ8UJa1zzwd5Ak02TtA45g8muig5017CnUqTI595caW1tt0I0n2G8Fq86z7; ++var7) {
+						this.field_9831_9di5kTyQJSVIL4e04LHO4k6zJ1R6dE2XFd7U87CVdoCE497R8cfT70Idl59f.setBlock(var5 * var4 - var7 * var3, var6, var5 * var3 + var7 * var4, var2.get(var5, var6, var7));
+					}
+				}
+			}
+
+			this.field_9833_9Psx0tZC91cMh7ZAzUJ658Kzvt14VXdr7EZ2i1DLVD9g4MlOJonxzd0TGHB9 = var1;
+		}
+
+	}
+
+	public boolean func_9820_5204axQba8r4yKOmf635c4mf99bQl70mm0X8b96R3NY7EX2N636dc3j5E7Jq() {
+		Iterator var1 = this.field_9828_402Fu54l8TN2Bk80iCfxL13eV1alTV2m2yuc0ENbnJKb9yho3t8yoy6p2U16.values().iterator();
+
+		HubWorldUnknownClass4 var2;
+		do {
+			if(!var1.hasNext()) {
+				return true;
+			}
+
+			var2 = (HubWorldUnknownClass4)var1.next();
+		} while(!var2.func_11784_50HlF50aFoB7NiHFoTOH3x80rsY8B1b3Kth2O196sr37CQNqM7QEDA5Lg1xv());
+
+		return false;
+	}
+
+	public void func_9821_7R35CGL5Z6S8q1KH37CB0kTCR4Y7Ufr7F0QHR1bV4Ftooj95dS8B04mVvpb3(HubWorldUnknownClass2 var1, int var2) {
+		if(this.func_9820_5204axQba8r4yKOmf635c4mf99bQl70mm0X8b96R3NY7EX2N636dc3j5E7Jq() && var1.func_9820_5204axQba8r4yKOmf635c4mf99bQl70mm0X8b96R3NY7EX2N636dc3j5E7Jq()) {
+			if(var1.field_9828_402Fu54l8TN2Bk80iCfxL13eV1alTV2m2yuc0ENbnJKb9yho3t8yoy6p2U16.get(Integer.valueOf(HubWorldUnknownClass5.func_11015_4dD10Vjg8EXQlPqLn1740KeipDH3q81QpEc7eJ1kIDKnDkDuh78Z6nVgtW23(var2))) != null) {
+				((HubWorldUnknownClass4)this.field_9828_402Fu54l8TN2Bk80iCfxL13eV1alTV2m2yuc0ENbnJKb9yho3t8yoy6p2U16.get(Integer.valueOf(var2))).field_11789_0J562Mkp8zd7uXcLK816mU9467m831KM7RpX06f6clIam7Juk383188UJI1W = (HubWorldUnknownClass4)var1.field_9828_402Fu54l8TN2Bk80iCfxL13eV1alTV2m2yuc0ENbnJKb9yho3t8yoy6p2U16.get(Integer.valueOf(HubWorldUnknownClass5.func_11015_4dD10Vjg8EXQlPqLn1740KeipDH3q81QpEc7eJ1kIDKnDkDuh78Z6nVgtW23(var2)));
+				((HubWorldUnknownClass4)var1.field_9828_402Fu54l8TN2Bk80iCfxL13eV1alTV2m2yuc0ENbnJKb9yho3t8yoy6p2U16.get(Integer.valueOf(HubWorldUnknownClass5.func_11015_4dD10Vjg8EXQlPqLn1740KeipDH3q81QpEc7eJ1kIDKnDkDuh78Z6nVgtW23(var2)))).field_11789_0J562Mkp8zd7uXcLK816mU9467m831KM7RpX06f6clIam7Juk383188UJI1W = (HubWorldUnknownClass4)this.field_9828_402Fu54l8TN2Bk80iCfxL13eV1alTV2m2yuc0ENbnJKb9yho3t8yoy6p2U16.get(Integer.valueOf(var2));
+			}
+		}
+	}
+
+	public abstract void func_9822_96pkMbVA643Z1Y78zU1zOHbm0WbR47PCGp9q1ZyTK64G0pr0ViUREK2TCos1();
+}
--- /dev/null
+++ net/minecraft/src/MinecraftException3.java
@@ -1,0 +1,7 @@
+package net.minecraft.src;
+
+public class MinecraftException3 extends RuntimeException {
+	public MinecraftException3(String var1) {
+		super(var1);
+	}
+}
--- /dev/null
+++ net/minecraft/src/WorldGenUnknownClass.java
@@ -1,0 +1,23 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class WorldGenUnknownClass extends WorldGenerator {
+	private int field_9643_1c67U62JX74Ds8D2PEwrTCxtC884CKW3AO1eDGP05T5mkyKfzi7q42DkH3re = 165;
+
+	public WorldGenUnknownClass(int var1) {
+	}
+
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		for(int var6 = 0; var6 < 64; ++var6) {
+			int var7 = var3 + var2.nextInt(8) - var2.nextInt(8);
+			int var8 = var4 + var2.nextInt(4) - var2.nextInt(4);
+			int var9 = var5 + var2.nextInt(8) - var2.nextInt(8);
+			if(var1.getBlockId(var7, var8, var9) == 0 && ((BlockFlower)Block.blocksList[this.field_9643_1c67U62JX74Ds8D2PEwrTCxtC884CKW3AO1eDGP05T5mkyKfzi7q42DkH3re]).canBlockStay(var1, var7, var8, var9)) {
+				var1.setBlock(var7, var8, var9, this.field_9643_1c67U62JX74Ds8D2PEwrTCxtC884CKW3AO1eDGP05T5mkyKfzi7q42DkH3re);
+			}
+		}
+
+		return true;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockPressurePlateOld.java
@@ -1,0 +1,147 @@
+package net.minecraft.src;
+
+import java.util.List;
+import java.util.Random;
+
+public class BlockPressurePlateOld extends BlockOld {
+	private EnumMobType triggerMobType;
+
+	protected BlockPressurePlateOld(int var1, int var2, EnumMobType var3) {
+		super(var1, var2, Material.rock);
+		this.triggerMobType = var3;
+		this.setTickOnLoad(true);
+		float var4 = 1.0F / 16.0F;
+		this.setBlockBounds(var4, 0.0F, var4, 1.0F - var4, 0.03125F, 1.0F - var4);
+	}
+
+	public int tickRate() {
+		return 20;
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return var1.isBlockNormalCube(var2, var3 - 1, var4);
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		boolean var6 = false;
+		if(!var1.isBlockNormalCube(var2, var3 - 1, var4)) {
+			var6 = true;
+		}
+
+		if(var6) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		}
+
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(var1.getBlockMetadata(var2, var3, var4) != 0) {
+			this.setStateIfMobInteractsWithPlate(var1, var2, var3, var4);
+		}
+	}
+
+	public void onEntityCollidedWithBlock(World var1, int var2, int var3, int var4, Entity var5) {
+		if(var1.getBlockMetadata(var2, var3, var4) != 1) {
+			this.setStateIfMobInteractsWithPlate(var1, var2, var3, var4);
+		}
+	}
+
+	private void setStateIfMobInteractsWithPlate(World var1, int var2, int var3, int var4) {
+		boolean var5 = var1.getBlockMetadata(var2, var3, var4) == 1;
+		boolean var6 = false;
+		float var7 = 2.0F / 16.0F;
+		List var8 = null;
+		if(this.triggerMobType == EnumMobType.everything) {
+			var8 = var1.getEntitiesWithinAABBExcludingEntity((Entity)null, AxisAlignedBB.getBoundingBoxFromPool((double)((float)var2 + var7), (double)var3, (double)((float)var4 + var7), (double)((float)(var2 + 1) - var7), (double)var3 + 0.25D, (double)((float)(var4 + 1) - var7)));
+		}
+
+		if(this.triggerMobType == EnumMobType.mobs) {
+			var8 = var1.getEntitiesWithinAABB(EntityLiving.class, AxisAlignedBB.getBoundingBoxFromPool((double)((float)var2 + var7), (double)var3, (double)((float)var4 + var7), (double)((float)(var2 + 1) - var7), (double)var3 + 0.25D, (double)((float)(var4 + 1) - var7)));
+		}
+
+		if(this.triggerMobType == EnumMobType.players) {
+			var8 = var1.getEntitiesWithinAABB(EntityPlayer.class, AxisAlignedBB.getBoundingBoxFromPool((double)((float)var2 + var7), (double)var3, (double)((float)var4 + var7), (double)((float)(var2 + 1) - var7), (double)var3 + 0.25D, (double)((float)(var4 + 1) - var7)));
+		}
+
+		if(var8.size() > 0) {
+			var6 = true;
+		}
+
+		if(var6 && !var5) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 1);
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+			var1.markBlocksDirty(var2, var3, var4, var2, var3, var4);
+			var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.1D, (double)var4 + 0.5D, "random.click", 0.3F, 0.6F);
+		}
+
+		if(!var6 && var5) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 0);
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+			var1.markBlocksDirty(var2, var3, var4, var2, var3, var4);
+			var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.1D, (double)var4 + 0.5D, "random.click", 0.3F, 0.5F);
+		}
+
+		if(var6) {
+			var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
+		}
+
+	}
+
+	public void onBlockRemoval(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		if(var5 > 0) {
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+		}
+
+		super.onBlockRemoval(var1, var2, var3, var4);
+	}
+
+	public void setBlockBoundsBasedOnState(IBlockAccess var1, int var2, int var3, int var4) {
+		boolean var5 = var1.getBlockMetadata(var2, var3, var4) == 1;
+		float var6 = 1.0F / 16.0F;
+		if(var5) {
+			this.setBlockBounds(var6, 0.0F, var6, 1.0F - var6, 0.03125F, 1.0F - var6);
+		} else {
+			this.setBlockBounds(var6, 0.0F, var6, 1.0F - var6, 1.0F / 16.0F, 1.0F - var6);
+		}
+
+	}
+
+	public boolean isPoweringTo(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		return var1.getBlockMetadata(var2, var3, var4) > 0;
+	}
+
+	public boolean isIndirectlyPoweringTo(World var1, int var2, int var3, int var4, int var5) {
+		return var1.getBlockMetadata(var2, var3, var4) == 0 ? false : var5 == 1;
+	}
+
+	public boolean canProvidePower() {
+		return true;
+	}
+
+	public void setBlockBoundsForItemRender() {
+		float var1 = 0.5F;
+		float var2 = 2.0F / 16.0F;
+		float var3 = 0.5F;
+		this.setBlockBounds(0.5F - var1, 0.5F - var2, 0.5F - var3, 0.5F + var1, 0.5F + var2, 0.5F + var3);
+	}
+}
--- /dev/null
+++ net/minecraft/src/LayerDefinition.java
@@ -1,0 +1,14 @@
+package net.minecraft.src;
+
+import java.util.HashMap;
+
+public class LayerDefinition {
+	public static HashMap<Class<? extends Entity>, ModelBase> models = new HashMap();
+	public MeshDefinition msh = null;
+
+	public static LayerDefinition create(MeshDefinition var0, int var1, int var2) {
+		LayerDefinition var3 = new LayerDefinition();
+		var3.msh = var0;
+		return var3;
+	}
+}
--- net/minecraft/src/Packet1Login.java
+++ net/minecraft/src/Packet1Login.java
@@ -8,6 +8,7 @@
 	public int protocolVersion;
 	public String username;
 	public String password;
+	public int secID = -1;
 
 	public Packet1Login() {
 	}
@@ -22,6 +23,10 @@
 		this.protocolVersion = var1.readInt();
 		this.username = var1.readUTF();
 		this.password = var1.readUTF();
+		if(CertUtils.loadedPrivKey != null) {
+			this.secID = Integer.parseInt(this.password);
+		}
+
 	}
 
 	public void writePacket(DataOutputStream var1) throws IOException {
--- net/minecraft/src/WorldRenderer.java
+++ net/minecraft/src/WorldRenderer.java
@@ -36,10 +36,10 @@
 	public int glOcclusionQuery;
 	public boolean isChunkLit;
 	private boolean isInitialized = false;
-	public List tileEntityRenderers = new ArrayList();
-	private List tileEntities;
+	public List<TileEntity> tileEntityRenderers = new ArrayList();
+	private List<TileEntity> tileEntities;
 
-	public WorldRenderer(World var1, List var2, int var3, int var4, int var5, int var6, int var7) {
+	public WorldRenderer(World var1, List<TileEntity> var2, int var3, int var4, int var5, int var6, int var7) {
 		this.worldObj = var1;
 		this.tileEntities = var2;
 		this.sizeWidth = this.sizeHeight = this.sizeDepth = var6;
@@ -72,6 +72,7 @@
 			GL11.glEndList();
 			this.markDirty();
 		}
+
 	}
 
 	private void setupGLTranslation() {
@@ -119,7 +120,7 @@
 									GL11.glTranslatef((float)(-this.sizeDepth) / 2.0F, (float)(-this.sizeHeight) / 2.0F, (float)(-this.sizeDepth) / 2.0F);
 									GL11.glScalef(var19, var19, var19);
 									GL11.glTranslatef((float)this.sizeDepth / 2.0F, (float)this.sizeHeight / 2.0F, (float)this.sizeDepth / 2.0F);
-									tessellator.startDrawingQuads();
+									tessellator.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(false);
 									tessellator.setTranslationD((double)(-this.posX), (double)(-this.posY), (double)(-this.posZ));
 								}
 
@@ -130,12 +131,16 @@
 									}
 								}
 
-								Block var24 = Block.blocksList[var18];
-								int var20 = var24.getRenderBlockPass();
-								if(var20 != var11) {
-									var12 = true;
-								} else if(var20 == var11) {
-									var13 |= var10.renderBlockByRenderType(var24, var17, var15, var16);
+								if(Block.blocksList[var18] == null) {
+									ExtLogger.i("NULL BLOCK ID " + var18);
+								} else {
+									Block var24 = Block.blocksList[var18];
+									int var20 = var24.getRenderBlockPass();
+									if(var20 != var11) {
+										var12 = true;
+									} else if(var20 == var11) {
+										var13 |= var10.renderBlockByRenderType(var24, var17, var15, var16);
+									}
 								}
 							}
 						}
@@ -169,6 +174,7 @@
 			this.isChunkLit = Chunk.isLit;
 			this.isInitialized = true;
 		}
+
 	}
 
 	public float distanceToEntitySquared(Entity var1) {
--- net/minecraft/src/GuiMultiplayer.java
+++ net/minecraft/src/GuiMultiplayer.java
@@ -4,6 +4,7 @@
 	private GuiScreen parentScreen;
 	private int updateCounter = 0;
 	private String ipText = "";
+	public static int playerMode = 0;
 
 	public GuiMultiplayer(GuiScreen var1) {
 		this.parentScreen = var1;
@@ -17,6 +18,10 @@
 		this.controlList.clear();
 		this.controlList.add(new GuiButton(0, this.width / 2 - 100, this.height / 4 + 96 + 12, "Connect"));
 		this.controlList.add(new GuiButton(1, this.width / 2 - 100, this.height / 4 + 120 + 12, "Cancel"));
+		if(CertUtils.loadedPrivKey != null) {
+			this.controlList.add(new GuiButton(2, this.width / 2 - 100, this.height / 4 + 96 - 24, playerMode + ""));
+		}
+
 		((GuiButton)this.controlList.get(0)).enabled = false;
 	}
 
@@ -26,10 +31,20 @@
 				this.mc.displayGuiScreen(this.parentScreen);
 			} else if(var1.id == 0) {
 				String[] var2 = this.ipText.split(":");
-				this.mc.displayGuiScreen(new GuiConnecting(this.mc, var2[0], var2.length > 1 ? Integer.parseInt(var2[1]) : 25565));
+				NetSplitImageDataHandler.handlers.clear();
+
+				try {
+					this.mc.displayGuiScreen(new GuiConnecting(this.mc, var2[0], var2.length > 1 ? Integer.parseInt(var2[1]) : 25565));
+				} catch (NumberFormatException var4) {
+					this.mc.displayGuiScreen(new GuiConnectFailed("Connection failed", "Invalid port: " + var2[1]));
+				}
+			} else if(var1.id == 2) {
+				++playerMode;
+				playerMode %= 3;
+				((GuiButton)this.controlList.get(2)).displayString = playerMode + "";
 			}
-
 		}
+
 	}
 
 	protected void keyTyped(char var1, int var2) {
@@ -67,16 +82,21 @@
 	public void drawScreen(int var1, int var2, float var3) {
 		this.drawDefaultBackground();
 		this.drawCenteredString(this.fontRenderer, "Play Multiplayer", this.width / 2, this.height / 4 - 60 + 20, 16777215);
-		this.drawString(this.fontRenderer, "Minecraft Multiplayer is currently not finished, but there", this.width / 2 - 140, this.height / 4 - 60 + 60 + 0, 10526880);
-		this.drawString(this.fontRenderer, "is some buggy early testing going on.", this.width / 2 - 140, this.height / 4 - 60 + 60 + 9, 10526880);
-		this.drawString(this.fontRenderer, "Enter the IP of a server to connect to it:", this.width / 2 - 140, this.height / 4 - 60 + 60 + 36, 10526880);
+		if(CertUtils.loadedPrivKey != null) {
+			drawString(this.fontRenderer, "-- WARNING --   JOINING IN SECURE MODE", this.width / 2 - 140, this.height / 4 - 60 + 60 + 0, 10526880);
+		} else {
+			drawString(this.fontRenderer, "Minecraft Multiplayer is currently not finished, but there", this.width / 2 - 140, this.height / 4 - 60 + 60 + 0, 10526880);
+			drawString(this.fontRenderer, "is some buggy early testing going on.", this.width / 2 - 140, this.height / 4 - 60 + 60 + 9, 10526880);
+			drawString(this.fontRenderer, "Enter the IP of a server to connect to it:", this.width / 2 - 140, this.height / 4 - 60 + 60 + 36, 10526880);
+		}
+
 		int var4 = this.width / 2 - 100;
 		int var5 = this.height / 4 - 10 + 50 + 18;
 		short var6 = 200;
 		byte var7 = 20;
-		this.drawRect(var4 - 1, var5 - 1, var4 + var6 + 1, var5 + var7 + 1, -6250336);
-		this.drawRect(var4, var5, var4 + var6, var5 + var7, -16777216);
-		this.drawString(this.fontRenderer, this.ipText + (this.updateCounter / 6 % 2 == 0 ? "_" : ""), var4 + 4, var5 + (var7 - 8) / 2, 14737632);
+		drawRect(var4 - 1, var5 - 1, var4 + var6 + 1, var5 + var7 + 1, -6250336);
+		drawRect(var4, var5, var4 + var6, var5 + var7, -16777216);
+		drawString(this.fontRenderer, this.ipText + (this.updateCounter / 6 % 2 == 0 ? "_" : ""), var4 + 4, var5 + (var7 - 8) / 2, 14737632);
 		super.drawScreen(var1, var2, var3);
 	}
 }
--- /dev/null
+++ net/minecraft/src/ModelAmoung.java
@@ -1,0 +1,40 @@
+package net.minecraft.src;
+
+public class ModelAmoung extends ModelBase {
+	public ModelRenderer[] field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs = new ModelRenderer[5];
+
+	public ModelAmoung() {
+		byte var1 = 18;
+		byte var2 = 0;
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[0] = new ModelRenderer(0, 0);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[0].addBox(-5.0F, -12.0F + (float)var2, -5.0F, 10, 13, 9);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[0].setRotationPoint(0.0F, (float)var1, 0.0F);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[1] = new ModelRenderer(29, 0);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[1].addBox(-4.0F, -11.0F + (float)var2, -6.0F, 8, 6, 1);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[1].setRotationPoint(0.0F, (float)var1, 0.0F);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[2] = new ModelRenderer(46, 20);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[2].addBox(1.0F, 0.0F + (float)var2, -3.0F, 4, 6, 5);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[2].setRotationPoint(0.0F, (float)var1, 0.0F);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[3] = new ModelRenderer(46, 20);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[3].addBox(-5.0F, 0.0F + (float)var2, -3.0F, 4, 6, 5);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[3].setRotationPoint(0.0F, (float)var1, 0.0F);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[3].mirror = true;
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[4] = new ModelRenderer(38, 7);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[4].addBox(-4.0F, -10.0F + (float)var2, 4.0F, 8, 10, 3);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[4].setRotationPoint(0.0F, (float)var1, 0.0F);
+	}
+
+	public void render(float var1, float var2, float var3, float var4, float var5, float var6) {
+		this.setRotationAngles(var1, var2, var3, var4, var5, var6);
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[2].rotateAngleX = MathHelper.cos(var1 * 0.6662F) * 1.4F * var2;
+		this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs[3].rotateAngleX = MathHelper.cos(var1 * 0.6662F + (float)Math.PI) * 1.4F * var2;
+		ModelRenderer[] var7 = this.field_9247_0Lx1J16Yen1308TBY3ddvv7AdaV8bSu7J7WYu7g1h3h8j3PGiOptr24Rk2Qs;
+		int var8 = var7.length;
+
+		for(int var9 = 0; var9 < var8; ++var9) {
+			ModelRenderer var10 = var7[var9];
+			var10.render(var6);
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockDoorUnknownClass.java
@@ -1,0 +1,17 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockDoorUnknownClass extends BlockDoor {
+	public static int field_8268_47i97CxczCt3zKR5Jn9pv6Yi7ugWFb034G5cr2RMli20J72CtjK675D6nUoS;
+
+	public BlockDoorUnknownClass(int var1, int var2, int var3) {
+		super(var1, Material.wood);
+		this.blockIndexInTexture = var2;
+		field_8268_47i97CxczCt3zKR5Jn9pv6Yi7ugWFb034G5cr2RMli20J72CtjK675D6nUoS = var3 + Short.MAX_VALUE;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return (var1 & 8) != 0 ? 0 : field_8268_47i97CxczCt3zKR5Jn9pv6Yi7ugWFb034G5cr2RMli20J72CtjK675D6nUoS;
+	}
+}
--- net/minecraft/src/MouseHelper.java
+++ net/minecraft/src/MouseHelper.java
@@ -12,6 +12,7 @@
 	public int deltaX;
 	public int deltaY;
 	private int mouseInt = 10;
+	private long lastUpdate = -1L;
 
 	public MouseHelper(Component var1) {
 		this.windowComponent = var1;
@@ -40,6 +41,32 @@
 	}
 
 	public void mouseXYChange() {
+		if(this.lastUpdate == -1L) {
+			this.lastUpdate = System.currentTimeMillis();
+		}
+
+		float var1 = (float)(System.currentTimeMillis() - this.lastUpdate) / 1000.0F;
+		this.lastUpdate = System.currentTimeMillis();
+		if(InputHandler.gamepads != null) {
+			for(int var2 = 0; var2 != InputHandler.gamepads.length; ++var2) {
+				if(InputHandler.gamepads[var2] != null && (InputHandler.gamepads[var2].getRXAxisValue() != 0.0F || InputHandler.gamepads[var2].getRYAxisValue() != 0.0F) && (InputHandler.gamepads[var2].getRXAxisValue() != -1.0F || InputHandler.gamepads[var2].getRYAxisValue() != -1.0F)) {
+					this.deltaX = (int)(InputHandler.gamepads[var2].getRXAxisValue() * 500.0F * (float)InputHandler.field_9745_4T40SjxPM7Zgd16lkH4wCJeyIT159Gxi3Bz0h3trX928I683iCL1KZ3iK4Q6 * var1);
+					if(this.deltaX > -1 && this.deltaX < 1) {
+						this.deltaX = 0;
+					}
+
+					this.deltaY = (int)(-InputHandler.gamepads[var2].getRYAxisValue() * 250.0F * (float)InputHandler.field_9745_4T40SjxPM7Zgd16lkH4wCJeyIT159Gxi3Bz0h3trX928I683iCL1KZ3iK4Q6 * var1);
+					if(this.deltaY > -1 && this.deltaY < 1) {
+						this.deltaY = 0;
+					}
+
+					if(this.deltaX != 0 || this.deltaY != 0) {
+						return;
+					}
+				}
+			}
+		}
+
 		this.deltaX = Mouse.getDX();
 		this.deltaY = Mouse.getDY();
 	}
--- /dev/null
+++ net/minecraft/src/VisualsNeon.java
@@ -1,0 +1,38 @@
+package net.minecraft.src;
+
+class VisualsNeon extends Visuals {
+    final /* synthetic */ VisualsManager field_10081_6SL4jn9Y16LC2w68PX75vG4iR8yIBzXccf40SRp0L6Ds888rYbMv81On2Zcl;
+    
+    VisualsNeon(final VisualsManager la) {
+        this.field_10081_6SL4jn9Y16LC2w68PX75vG4iR8yIBzXccf40SRp0L6Ds888rYbMv81On2Zcl = la;
+    }
+    
+    @Override
+    public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+        return "/unl/546d27d3-e170-47cb-b70e-4f4015fb5aa3.xAL";
+    }
+    
+    @Override
+    public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(final Object... arr) {
+        if (arr[0] instanceof FreerunMap5 && (long)arr[1] <= 420L) {
+            this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+            return true;
+        }
+        return false;
+    }
+    
+    @Override
+    public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+        return "unlock--neo";
+    }
+    
+    @Override
+    public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+        return "Neon";
+    }
+    
+    @Override
+    public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+        return "Finish FINALE in 21 seconds or less";
+    }
+}
--- /dev/null
+++ net/minecraft/src/HubFragment4.java
@@ -1,0 +1,15 @@
+package net.minecraft.src;
+
+public class HubFragment4 extends HubWorldUnknownClass2 {
+	public HubFragment4(HubWorld var1, int var2, int var3, int var4) {
+		super(var1, var2, var3, var4, 8, 12, 5);
+	}
+
+	public void func_9822_96pkMbVA643Z1Y78zU1zOHbm0WbR47PCGp9q1ZyTK64G0pr0ViUREK2TCos1() {
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 0, 0, 7, 0, 11, ExtBlocks.dimensionFloorBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 4, 0, 7, 4, 11, ExtBlocks.dimensionFloorBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 0, 0, 7, 4, 0, ExtBlocks.dimensionWallBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 0, 0, 0, 4, 11, ExtBlocks.dimensionWallBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 0, 11, 7, 4, 11, ExtBlocks.dimensionWallBlock.blockID);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockBookshelfOld.java
@@ -1,0 +1,17 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockBookshelfOld extends BlockOld {
+	public BlockBookshelfOld(int var1, int var2) {
+		super(var1, var2, Material.wood);
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 <= 1 ? 4 : this.blockIndexInTexture;
+	}
+
+	public int quantityDropped(Random var1) {
+		return 0;
+	}
+}
--- /dev/null
+++ net/minecraft/src/HandlerPlayDemo.java
@@ -1,0 +1,130 @@
+package net.minecraft.src;
+
+import java.io.BufferedReader;
+import java.io.FileReader;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.PrintWriter;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+public class HandlerPlayDemo {
+	List<HandlerPlayDemoUnknownClass2> field_11431_637P37TE9gmDT57yVlTZ73i576up8cwuDF63ofWaw7wL7LacaR24xM7BXzu5;
+	public List<HandlerPlayDemoUnknownClass3> field_11432_08Cq759cm94gk5tNi09771XqCD6UcInYC8zHgZJS1aDD9g9FLZ8ZaW69dqkS;
+	public String field_11430_0OdUr2nD4R8uO36Sd51QoP94Lm2202x55uFJQVi7Sy5OO23j6PTNlph9id4f;
+
+	public HandlerPlayDemo(List<HandlerPlayDemoUnknownClass2> var1, List<HandlerPlayDemoUnknownClass3> var2, String var3) {
+		this(var1, var2);
+		this.field_11430_0OdUr2nD4R8uO36Sd51QoP94Lm2202x55uFJQVi7Sy5OO23j6PTNlph9id4f = var3;
+	}
+
+	public HandlerPlayDemo(List<HandlerPlayDemoUnknownClass2> var1, List<HandlerPlayDemoUnknownClass3> var2) {
+		this.field_11430_0OdUr2nD4R8uO36Sd51QoP94Lm2202x55uFJQVi7Sy5OO23j6PTNlph9id4f = "v0-DEMOPLAYER";
+		this.field_11431_637P37TE9gmDT57yVlTZ73i576up8cwuDF63ofWaw7wL7LacaR24xM7BXzu5 = new ArrayList(var1);
+		this.field_11432_08Cq759cm94gk5tNi09771XqCD6UcInYC8zHgZJS1aDD9g9FLZ8ZaW69dqkS = new ArrayList(var2);
+	}
+
+	protected HandlerPlayDemo() {
+		this.field_11430_0OdUr2nD4R8uO36Sd51QoP94Lm2202x55uFJQVi7Sy5OO23j6PTNlph9id4f = "v0-DEMOPLAYER";
+		this.field_11431_637P37TE9gmDT57yVlTZ73i576up8cwuDF63ofWaw7wL7LacaR24xM7BXzu5 = new ArrayList();
+		this.field_11432_08Cq759cm94gk5tNi09771XqCD6UcInYC8zHgZJS1aDD9g9FLZ8ZaW69dqkS = new ArrayList();
+	}
+
+	public void func_11429_4Hdb2tF4Ro161cgZ713aaHheHwul09r95mRk40083ARmzqow29B4CqUo84M6(String var1) {
+		try {
+			PrintWriter var2 = new PrintWriter(new FileWriter(var1));
+
+			try {
+				var2.println("+mdmver:v1h0");
+				var2.println("+dwmeta:RECDEMO ON 1.0.16.05R4 [" + InputHandler.mc.theWorld.levelName + "]");
+				var2.println("+player:" + InputHandler.mc.session.username);
+				Iterator var3 = this.field_11431_637P37TE9gmDT57yVlTZ73i576up8cwuDF63ofWaw7wL7LacaR24xM7BXzu5.iterator();
+
+				while(true) {
+					if(!var3.hasNext()) {
+						System.out.println("Data written to " + var1);
+						break;
+					}
+
+					HandlerPlayDemoUnknownClass2 var4 = (HandlerPlayDemoUnknownClass2)var3.next();
+					var2.println(var4.field_11240_47ME2ux1w9JD07OmK1KWlC2l36wjp9k5rk5C91EqYYR6gjOY4kb42895Ml2n + " " + var4.field_11238_06ia42Crh5k64k27yg1rkw01iek6FWqXq038Nz5xCsr1186gZTb5QrQC9Ee6 + " " + var4.field_11239_27ngU1sJjzhN2F1lwIlqzdWsQU09NIv1oOAETINS9vPghD0aR3wNidfKbmq8 + " " + var4.field_11242_70hhZNfPCn7F2A43sUn292vmU47FJ2Xqf8wxmaj0Jvht0gJ3JZdg1B11ZIS4 + " " + var4.field_11241_1pBNhz72hG0DM4M2G197Aq7qWjMeY65Hl12oPon7Y3795IIGRLKfWH6264yk + " " + var4.field_11243_366213Kygu44q4VZJiDT5dY5qsS8R35a4wMyFfwM8f9lEhNH41knI2ixxw3K + " " + var4.field_11235_9PuH3jWZ0MDG4rg08sntk93kjfDv2P6b59Q9soX01Ey3WsujUs200QhUHLp9 + " " + var4.field_11237_979Vt94Ikeubje8aq02QS2ct4vv1F2xoYEYcud7ff1548HLvX33CvjHHnP0K + " " + var4.field_11236_73B65S5lxs1r7B0z1M2S4uMTH4ZE43GT5xQV19C44T08jAeG7ae4e6V605K6);
+				}
+			} catch (Throwable var6) {
+				try {
+					var2.close();
+				} catch (Throwable var5) {
+					var6.addSuppressed(var5);
+				}
+
+				throw var6;
+			}
+
+			var2.close();
+		} catch (IOException var7) {
+			var7.printStackTrace();
+		}
+
+	}
+
+	public static HandlerPlayDemo func_11428_9k6E1ErM8m8Ekl2tnCyj5PljXv5fpIe33XB87jRlW98HF72SweTYv0JQvjaQ(String var0) {
+		HandlerPlayDemo var1 = new HandlerPlayDemo();
+
+		try {
+			BufferedReader var2 = new BufferedReader(new FileReader(var0));
+
+			HandlerPlayDemo var29;
+			try {
+				long var4 = 1L;
+
+				while(true) {
+					String var3 = var2.readLine();
+					if(var3 == null) {
+						System.out.println("Data read from " + var0);
+						var29 = var1;
+						break;
+					}
+
+					if(var3.startsWith("+")) {
+						String var6 = var3.substring(0, 7);
+						if(var6.equals("+player")) {
+							var1.field_11430_0OdUr2nD4R8uO36Sd51QoP94Lm2202x55uFJQVi7Sy5OO23j6PTNlph9id4f = var3.substring(8);
+						}
+					} else if(var3.startsWith("d")) {
+						var1.field_11432_08Cq759cm94gk5tNi09771XqCD6UcInYC8zHgZJS1aDD9g9FLZ8ZaW69dqkS.add(new HandlerPlayDemoUnknownClass3(var4, var3));
+					} else {
+						String[] var28 = var3.split(" ");
+						if(var28.length == 9) {
+							long var7 = Long.parseLong(var28[0]);
+							var4 = var7;
+							double var9 = Double.parseDouble(var28[1]);
+							double var11 = Double.parseDouble(var28[2]);
+							double var13 = Double.parseDouble(var28[3]);
+							double var15 = Double.parseDouble(var28[4]);
+							double var17 = Double.parseDouble(var28[5]);
+							double var19 = Double.parseDouble(var28[6]);
+							double var21 = Double.parseDouble(var28[7]);
+							double var23 = Double.parseDouble(var28[8]);
+							var1.field_11431_637P37TE9gmDT57yVlTZ73i576up8cwuDF63ofWaw7wL7LacaR24xM7BXzu5.add(new HandlerPlayDemoUnknownClass2(var7, var9, var11, var13, var15, var17, var19, var21, var23));
+						}
+					}
+				}
+			} catch (Throwable var26) {
+				try {
+					var2.close();
+				} catch (Throwable var25) {
+					var26.addSuppressed(var25);
+				}
+
+				throw var26;
+			}
+
+			var2.close();
+			return var29;
+		} catch (IOException var27) {
+			System.out.println("Failed to read demo");
+			var27.printStackTrace();
+			return null;
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockMushroomOld.java
@@ -1,0 +1,17 @@
+package net.minecraft.src;
+
+public class BlockMushroomOld extends BlockFlowerOld {
+	protected BlockMushroomOld(int var1, int var2) {
+		super(var1, var2);
+		float var3 = 0.2F;
+		this.setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, var3 * 2.0F, 0.5F + var3);
+	}
+
+	protected boolean canThisPlantGrowOnThisBlockID(int var1) {
+		return BlockOld.opaqueCubeLookup[var1];
+	}
+
+	public boolean canBlockStay(World var1, int var2, int var3, int var4) {
+		return var1.getBlockLightValue(var2, var3, var4) <= 13 && this.canThisPlantGrowOnThisBlockID(var1.getBlockId(var2, var3 - 1, var4));
+	}
+}
--- net/minecraft/src/EntityCreature.java
+++ net/minecraft/src/EntityCreature.java
@@ -2,16 +2,25 @@
 
 public class EntityCreature extends EntityLiving {
 	private PathEntity pathToEntity;
-	protected Entity entityToAttack;
+	public Entity entityToAttack;
 	protected boolean hasAttacked = false;
+	public XYZv field_9105_3e9WI32iDh4NvqQqp7smSXYS6MgX8c7p1TQZ6CFtIytS7734Ipx762147ExM;
 
 	public EntityCreature(World var1) {
 		super(var1);
 	}
 
+	protected boolean shouldInheritEASUpdate() {
+		return true;
+	}
+
+	public float maxPathFindingDistance() {
+		return 16.0F;
+	}
+
 	protected void updateEntityActionState() {
 		this.hasAttacked = false;
-		float var1 = 16.0F;
+		float var1 = this.maxPathFindingDistance();
 		if(this.entityToAttack == null) {
 			this.entityToAttack = this.findPlayerToAttack();
 			if(this.entityToAttack != null) {
@@ -56,6 +65,10 @@
 			this.pathToEntity = this.worldObj.getPathToEntity(this, this.entityToAttack, var1);
 		}
 
+		if(this.field_9105_3e9WI32iDh4NvqQqp7smSXYS6MgX8c7p1TQZ6CFtIytS7734Ipx762147ExM != null && (this.entityToAttack == null || this.entityToAttack.getDistanceToEntity(this) > 8.0F)) {
+			this.pathToEntity = this.worldObj.getEntityPathToXYZ(this, (int)this.field_9105_3e9WI32iDh4NvqQqp7smSXYS6MgX8c7p1TQZ6CFtIytS7734Ipx762147ExM.x, (int)this.field_9105_3e9WI32iDh4NvqQqp7smSXYS6MgX8c7p1TQZ6CFtIytS7734Ipx762147ExM.y, (int)this.field_9105_3e9WI32iDh4NvqQqp7smSXYS6MgX8c7p1TQZ6CFtIytS7734Ipx762147ExM.z, 16.0F);
+		}
+
 		int var22 = MathHelper.floor_double(this.boundingBox.minY);
 		boolean var23 = this.handleWaterMovement();
 		boolean var24 = this.handleLavaMovement();
@@ -124,11 +137,11 @@
 			if(this.rand.nextFloat() < 0.8F && (var23 || var24)) {
 				this.isJumping = true;
 			}
-
-		} else {
+		} else if(this.shouldInheritEASUpdate()) {
 			super.updateEntityActionState();
 			this.pathToEntity = null;
 		}
+
 	}
 
 	protected void attackEntity(Entity var1, float var2) {
--- /dev/null
+++ net/minecraft/src/MobSaltSven.java
@@ -1,0 +1,96 @@
+package net.minecraft.src;
+
+public class MobSaltSven extends EntityMob {
+	final int field_9129_9uUITqEA953V47j688yoOs736pX17IME90V0CvUHI3gltHyxGb11O53G2ngk = 55;
+	public EntityLiving field_9133_05G43CDmXNB5O5FN7j42030AqMXp1an076HyhMm09LiyU5t8r6t9Ztbylx7m = null;
+	public long field_9128_6ZMh8gPyw533h835ImYL5JcfN53M815AC4Lqpn57jevNG8w6t8sOMWV4wpiB = 0L;
+	public int field_9131_2q05VvtrVs4y2KTQH5DS81p0v41LAM5mxKyls5M2oyb7fdjjb6fN10Jk36WA = 0;
+	public boolean field_9130_88Yk0iy03W8f42r0qlkvX2JJ2s8H6272hm83CDC0upcu9P9glM37SRcjVwB8 = true;
+	public XYZv field_9132_8CjibmyG8Iem84U159pUQBYj27vz1zKdCho9IcOuf4T30Y9Wlqg2igUmEnNq = null;
+
+	public MobSaltSven(World var1) {
+		super(var1);
+		this.texture = "/mob/saltsven.png";
+		this.setSize(1.0F, 2.0F);
+		this.moveSpeed = 3.0F;
+	}
+
+	protected EntityPlayer func_9127_62X3s7WHAjB6FNsm6MsHeh13043Mc8zLW3zl36890vQ3ybAy2rQb168R4gP4() {
+		return (EntityPlayer)(!this.worldObj.multiplayerWorld ? InputHandler.mc.thePlayer : this.worldObj.getClosestPlayerToEntity(this, 64.0D));
+	}
+
+	protected Entity findPlayerToAttack() {
+		return null;
+	}
+
+	public void writeEntityToNBT(NBTTagCompound var1) {
+		var1.setLong("ObservationTimer", this.field_9128_6ZMh8gPyw533h835ImYL5JcfN53M815AC4Lqpn57jevNG8w6t8sOMWV4wpiB);
+		var1.setBoolean("CommencedAttack", this.field_9130_88Yk0iy03W8f42r0qlkvX2JJ2s8H6272hm83CDC0upcu9P9glM37SRcjVwB8);
+		var1.setBoolean("HasLLoc", this.field_9132_8CjibmyG8Iem84U159pUQBYj27vz1zKdCho9IcOuf4T30Y9Wlqg2igUmEnNq != null);
+		if(this.field_9132_8CjibmyG8Iem84U159pUQBYj27vz1zKdCho9IcOuf4T30Y9Wlqg2igUmEnNq != null) {
+			var1.setLong("llocx", this.field_9132_8CjibmyG8Iem84U159pUQBYj27vz1zKdCho9IcOuf4T30Y9Wlqg2igUmEnNq.x);
+			var1.setLong("llocy", this.field_9132_8CjibmyG8Iem84U159pUQBYj27vz1zKdCho9IcOuf4T30Y9Wlqg2igUmEnNq.y);
+			var1.setLong("llocz", this.field_9132_8CjibmyG8Iem84U159pUQBYj27vz1zKdCho9IcOuf4T30Y9Wlqg2igUmEnNq.z);
+		}
+
+		super.writeEntityToNBT(var1);
+	}
+
+	public void readEntityFromNBT(NBTTagCompound var1) {
+		this.field_9128_6ZMh8gPyw533h835ImYL5JcfN53M815AC4Lqpn57jevNG8w6t8sOMWV4wpiB = var1.getLong("ObservationTimer");
+		this.field_9130_88Yk0iy03W8f42r0qlkvX2JJ2s8H6272hm83CDC0upcu9P9glM37SRcjVwB8 = var1.getBoolean("CommencedAttack");
+		boolean var2 = var1.getBoolean("HasLLoc");
+		if(var2) {
+			this.field_9132_8CjibmyG8Iem84U159pUQBYj27vz1zKdCho9IcOuf4T30Y9Wlqg2igUmEnNq = new XYZv(var1.getLong("llocx"), var1.getLong("llocy"), var1.getLong("llocz"));
+		}
+
+		super.readEntityFromNBT(var1);
+	}
+
+	protected String getHurtSound() {
+		return "mob.skeletonhurt";
+	}
+
+	protected String getDeathSound() {
+		return "mob.skeletonhurt";
+	}
+
+	protected float getSoundVolume() {
+		return 0.4F;
+	}
+
+	public boolean interact(EntityPlayer var1) {
+		return false;
+	}
+
+	protected boolean shouldInheritEASUpdate() {
+		return false;
+	}
+
+	public float maxPathFindingDistance() {
+		return 0.0F;
+	}
+
+	public void onLivingUpdate() {
+		if(this.field_9133_05G43CDmXNB5O5FN7j42030AqMXp1an076HyhMm09LiyU5t8r6t9Ztbylx7m == null) {
+			this.field_9133_05G43CDmXNB5O5FN7j42030AqMXp1an076HyhMm09LiyU5t8r6t9Ztbylx7m = this.func_9127_62X3s7WHAjB6FNsm6MsHeh13043Mc8zLW3zl36890vQ3ybAy2rQb168R4gP4();
+			this.field_9128_6ZMh8gPyw533h835ImYL5JcfN53M815AC4Lqpn57jevNG8w6t8sOMWV4wpiB = 0L;
+			this.field_9130_88Yk0iy03W8f42r0qlkvX2JJ2s8H6272hm83CDC0upcu9P9glM37SRcjVwB8 = true;
+		} else {
+			this.entityToAttack = null;
+			++this.field_9128_6ZMh8gPyw533h835ImYL5JcfN53M815AC4Lqpn57jevNG8w6t8sOMWV4wpiB;
+			if(this.field_9128_6ZMh8gPyw533h835ImYL5JcfN53M815AC4Lqpn57jevNG8w6t8sOMWV4wpiB > 550L) {
+				this.worldObj.playSoundAtEntity(this, "ext.obvr_attack", 1.0F, 1.0F);
+			}
+
+			if(this.field_9132_8CjibmyG8Iem84U159pUQBYj27vz1zKdCho9IcOuf4T30Y9Wlqg2igUmEnNq != null) {
+				this.setPosition((double)this.field_9132_8CjibmyG8Iem84U159pUQBYj27vz1zKdCho9IcOuf4T30Y9Wlqg2igUmEnNq.x, (double)this.field_9132_8CjibmyG8Iem84U159pUQBYj27vz1zKdCho9IcOuf4T30Y9Wlqg2igUmEnNq.y, (double)this.field_9132_8CjibmyG8Iem84U159pUQBYj27vz1zKdCho9IcOuf4T30Y9Wlqg2igUmEnNq.z);
+			}
+
+			double var1 = Math.atan2(this.posX - this.field_9133_05G43CDmXNB5O5FN7j42030AqMXp1an076HyhMm09LiyU5t8r6t9Ztbylx7m.posX, -(this.posZ - this.field_9133_05G43CDmXNB5O5FN7j42030AqMXp1an076HyhMm09LiyU5t8r6t9Ztbylx7m.posZ)) / Math.PI * 180.0D;
+			this.setRotation((float)var1, 0.0F);
+		}
+
+		super.onLivingUpdate();
+	}
+}
--- /dev/null
+++ net/minecraft/src/EntityFirable.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+public class EntityFirable extends Entity {
+	public float arrowShake;
+
+	public String getTexture() {
+		return "/item/arrows.png";
+	}
+
+	public EntityFirable(World var1) {
+		super(var1);
+	}
+
+	protected void readEntityFromNBT(NBTTagCompound var1) {
+	}
+
+	protected void writeEntityToNBT(NBTTagCompound var1) {
+	}
+}
--- /dev/null
+++ net/minecraft/src/Biome.java
@@ -1,0 +1,72 @@
+package net.minecraft.src;
+
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.WeakHashMap;
+import java.util.Map.Entry;
+
+public class Biome {
+	private static final WeakHashMap<BiomeInterface, Biome> field_11924_2m0i0yp0898q2l57HTnHC4r48B8F4ZmrFXxq96WAKk59I36sNOCwY214PNjR = new WeakHashMap();
+	private final BiomeInterface field_11923_6G8IbpB1j39K15omtz2I96X36TWY4ln14ueN38e0HSY85Oc2Fu9QoY1fRstW;
+
+	private Biome(BiomeInterface var1) {
+		this.field_11923_6G8IbpB1j39K15omtz2I96X36TWY4ln14ueN38e0HSY85Oc2Fu9QoY1fRstW = var1;
+	}
+
+	public static Biome func_11922_2n3qE9TNSbq6jFP0jVF6MZR791V18lhzx1FrS1vTgw66qgr9H9NUnl54vO2R(BiomeInterface var0) {
+		Biome var1 = (Biome)field_11924_2m0i0yp0898q2l57HTnHC4r48B8F4ZmrFXxq96WAKk59I36sNOCwY214PNjR.get(var0);
+		if(var1 == null) {
+			var1 = new Biome(var0);
+			field_11924_2m0i0yp0898q2l57HTnHC4r48B8F4ZmrFXxq96WAKk59I36sNOCwY214PNjR.put(var1.field_11923_6G8IbpB1j39K15omtz2I96X36TWY4ln14ueN38e0HSY85Oc2Fu9QoY1fRstW, var1);
+		}
+
+		return var1;
+	}
+
+	public WorldGenMyconUnknownClass func_11921_2L2822HFv0Zs3L6g73SmXjqyWS7YT96y6ZshUIa6nFgwp5KcjgV15AJ304yM(int var1, int var2, EnumWorldGenerator var3) {
+		HashMap var4 = new HashMap(16);
+
+		int var5;
+		for(var5 = 0; var5 < 16; ++var5) {
+			for(int var6 = 0; var6 < 16; ++var6) {
+				WorldGenMyconUnknownClass var7 = this.field_11923_6G8IbpB1j39K15omtz2I96X36TWY4ln14ueN38e0HSY85Oc2Fu9QoY1fRstW.func_10185_7j1lR4019pucW00n7wn38afjBd62vEMB6B6SVB9068f4kyPzw4E6wI65ufr8(var1 * 16 + var5, var2 * 16 + var6, var3);
+				Integer var8 = (Integer)var4.get(var7);
+				if(var8 == null) {
+					var8 = Integer.valueOf(1);
+				} else {
+					var8 = Integer.valueOf(var8.intValue() + 1);
+				}
+
+				var4.put(var7, var8);
+			}
+		}
+
+		var5 = 0;
+		WorldGenMyconUnknownClass var10 = null;
+		Iterator var11 = var4.entrySet().iterator();
+
+		Entry var12;
+		while(var11.hasNext()) {
+			var12 = (Entry)var11.next();
+			if(((Integer)var12.getValue()).intValue() > var5) {
+				var5 = ((Integer)var12.getValue()).intValue();
+				var10 = (WorldGenMyconUnknownClass)var12.getKey();
+			}
+		}
+
+		if(var10 != null) {
+			return var10;
+		} else {
+			System.err.println("!BIOME GENERATOR BUG (please report on bug tracker)!");
+			System.err.println("biome list:");
+			var11 = var4.entrySet().iterator();
+
+			while(var11.hasNext()) {
+				var12 = (Entry)var11.next();
+				System.err.println(((WorldGenMyconUnknownClass)var12.getKey()).toString() + "/" + var12.getValue());
+			}
+
+			throw new MinecraftException2();
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/ExtItems.java
@@ -1,0 +1,140 @@
+package net.minecraft.src;
+
+public class ExtItems {
+	public static Item obsidianArmor0;
+	public static Item obsidianArmor1;
+	public static Item obsidianArmor2;
+	public static Item obsidianArmor3;
+	public static Item obsidianSword;
+	public static Item obsidianShovel;
+	public static Item obsidianPick;
+	public static Item obsidianAxe;
+	public static Item obsidianHoe;
+	public static Item obsidianIngot;
+	public static Item blackDye;
+	public static Item greenDye;
+	public static Item blueDye;
+	public static Item pinkDye;
+	public static Item fryshroom;
+	public static Item edibleFire;
+	public static Item flameberge;
+	public static Item BlackGlasses0;
+	public static Item fireWoodDoor;
+	public static Item essence;
+	public static Item eraser;
+	public static Item essenceGun;
+	public static Item HubDoor;
+	public static Item Spear;
+	public static Item field_11340_7X9VRlMe6NuD9dLwd8nmi4X3IOqglMoWR84do3Evv5zW12VM3A5tXipdrnRF;
+	public static Item DownbeatUplink;
+	public static Item Sandcastles;
+	public static Item K2;
+	public static Item Pear;
+	public static Item ObsidianPear;
+	public static Item RokkubitoruTune;
+	public static Item desambrier;
+	public static Item Juhry;
+	public static Item GranularSalt;
+	public static Item HighwoodDoor;
+	public static Item MyconDoor;
+	public static Item StylishVisor;
+	public static Item StylishChestplate;
+	public static Item StylishShorts;
+	public static Item StylishShoes;
+	public static Item BismuthIngot;
+	public static Item MyconStrand;
+	public static Item MyconSword;
+	public static Item MyconAxe;
+	public static Item MyconPickaxe;
+	public static Item MyconShovel;
+	public static Item MyconHoe;
+	public static Item GrayGun;
+	public static Item TeaLeaf;
+	public static Item TeaBucket;
+	public static Item TeaDoor;
+	public static Item LaceAgate;
+	public static Item Clinohumite;
+	public static Item Malachite;
+	public static Item Pyrite;
+	public static Item HoursLongPastI;
+	public static Item HearthenMirror;
+	public static Item RainConch;
+	public static Item FrigidBits;
+	public static Item HoursLongPastII;
+	public static Item HoursLongPastIII;
+	public static Item HoursLongPastVI;
+	public static Item TheOneTrueBook;
+	public static Item CandyIce;
+	public static Item IceDoor;
+	public static Item GyldanSverd;
+	public static Item ObserverFur;
+
+	public static void Register() {
+		obsidianArmor0 = (new ItemArmor(90, 4, 5, 0)).setIconIndex(144).setEssValue(128).setName("Obsidian Helm");
+		obsidianArmor1 = (new ItemArmor(91, 4, 5, 1)).setIconIndex(160).setEssValue(128).setName("Obsidian Chestplate");
+		obsidianArmor2 = (new ItemArmor(92, 4, 5, 2)).setIconIndex(176).setEssValue(128).setName("Obsidian Leggings");
+		obsidianArmor3 = (new ItemArmor(93, 4, 5, 3)).setIconIndex(192).setEssValue(128).setName("Obsidian Boots");
+		obsidianSword = (new ItemSword(94, 5)).setIconIndex(145).setName("Obsidian Sword").setEssValue(128);
+		obsidianShovel = (new ItemSpade(95, 5)).setIconIndex(161).setName("Obsidian Shovel").setEssValue(128);
+		obsidianPick = (new ItemObsidianPick(96, 5)).setIconIndex(177).setName("Obsidian Pickaxe").setEssValue(128);
+		obsidianAxe = (new ItemAxe(97, 5)).setIconIndex(193).setName("Obsidian Axe").setEssValue(128);
+		obsidianHoe = (new ItemHoe(98, 5)).setIconIndex(209).setName("Obsidian Hoe").setEssValue(98);
+		obsidianIngot = (new Item(99)).setIconIndex(208).setEssValue(98).setName("Obsidian Ingot");
+		blackDye = (new Item(100)).setIconIndex(146).setName("Dye (Black)").setEssValue(8);
+		greenDye = (new Item(101)).setIconIndex(147).setName("Dye (Green)").setEssValue(8);
+		blueDye = (new Item(102)).setIconIndex(148).setName("Dye (Blue)").setEssValue(8);
+		pinkDye = (new Item(103)).setIconIndex(149).setName("Dye (Pink)").setEssValue(8);
+		fryshroom = (new ItemFood(104, 6)).setIconIndex(162).setName("Fryshroom").setEssValue(16);
+		edibleFire = (new ItemFood(105, 2)).setIconIndex(178).setName("Liquified Flame").setEssValue(1);
+		flameberge = (new ItemSwordFlameberge(106)).setIconIndex(69).setName("Flameberge").setEssValue(64);
+		BlackGlasses0 = (new ItemArmor(107, 1, 6, 0)).setIconIndex(210).setName("Sunglasses").setEssValue(32);
+		fireWoodDoor = (new ItemDoor(108, Material.wood, (BlockDoor)ExtBlocks.BlockFlameWoodDoor)).setIconIndex(179).setName("Firewood Door").setEssValue(8);
+		essence = (new Item(109)).setIconIndex(195).setName("Essence").setEssValue(1);
+		eraser = (new ItemEraser(110, Integer.MAX_VALUE)).setIconIndex(194).setName("Eraser").setEssValue(1);
+		essenceGun = (new ItemEssenceGun(111)).setIconIndex(180).setEssValue(22).setFull3D().setName("Essence Rifle");
+		HubDoor = (new ItemDoor(112, Material.iron, (BlockDoor)ExtBlocks.BlockHubDoor)).setIconIndex(44).setName("Hub Door");
+		Spear = (new ItemSpear(113)).setIconIndex(85).setEssValue(22).setFull3D().setName("Spear").setEssValue(14);
+		DownbeatUplink = (new ItemRecord(2003, "downbeat_uplink")).setIconIndex(242).setEssValue(128).setName("Record (Downbeat Uplink)");
+		Sandcastles = (new ItemRecord(2004, "sandcastles")).setIconIndex(246).setEssValue(128).setName("Record (Sandcastles)");
+		K2 = (new ItemRecord(2005, "K2")).setIconIndex(247).setEssValue(128).setName("Record (K2)");
+		Pear = (new ItemFood(114, 4)).setIconIndex(248).setName("Pear").setEssValue(2);
+		ObsidianPear = (new ItemFood(115, 42)).setIconIndex(249).setName("Obsidian Pear").setEssValue(77);
+		RokkubitoruTune = (new ItemRokkubitoruTune(2006, "RokkubitoruTune")).setIconIndex(212).setEssValue(8).setName("Rock Beetle");
+		desambrier = (new ItemRecord(2007, "desambrier")).setIconIndex(250).setEssValue(128).setName("Record (Desambrier)");
+		Juhry = (new ItemRecord(2008, "Juhry")).setIconIndex(251).setEssValue(128).setName("Record (Juhry)");
+		GyldanSverd = (new ItemRecord(2009, "GyldanSverd")).setIconIndex(243).setEssValue(128).setName("Record (Gyldan Sverd)");
+		HighwoodDoor = (new ItemDoor(116, Material.wood, (BlockDoor)ExtBlocks.HighwoodDoor)).setIconIndex(253).setName("Highwood Door").setEssValue(8);
+		MyconDoor = (new ItemDoor(117, Material.wood, (BlockDoor)ExtBlocks.MyconDoor)).setIconIndex(252).setName("Mycon Door").setEssValue(8);
+		StylishVisor = (new ItemArmor(118, 1, 7, 0)).setIconIndex(150).setEssValue(16).setName("Stylish Visor");
+		StylishChestplate = (new ItemArmor(119, 1, 7, 1)).setIconIndex(166).setEssValue(16).setName("Stylish Chestplate");
+		StylishShorts = (new ItemArmor(120, 1, 7, 2)).setIconIndex(182).setEssValue(16).setName("Stylish Shorts");
+		StylishShoes = (new ItemArmor(121, 1, 7, 3)).setIconIndex(198).setEssValue(16).setName("Stylish Shoes");
+		BismuthIngot = (new Item(122)).setIconIndex(254).setName("Bismuth Ingot").setEssValue(36);
+		MyconStrand = (new Item(123)).setIconIndex(255).setName("Mycon Strand").setEssValue(8);
+		MyconSword = (new ItemSword(124, 0)).setIconIndex(231).setName("Mycon Sword").setEssValue(16);
+		MyconShovel = (new ItemSpade(125, 0)).setIconIndex(232).setName("Mycon Shovel").setEssValue(16);
+		MyconPickaxe = (new ItemPickaxe(126, 0)).setIconIndex(233).setName("Mycon Pickaxe").setEssValue(16);
+		MyconAxe = (new ItemAxe(127, 0)).setIconIndex(234).setName("Mycon Axe").setEssValue(16);
+		MyconHoe = (new ItemHoe(128, 0)).setIconIndex(235).setName("Mycon Hoe").setEssValue(8);
+		GranularSalt = (new Item(129)).setIconIndex(211).setName("Granular Salt").setEssValue(8);
+		GrayGun = (new ItemGrayGun(130)).setIconIndex(238).setEssValue(128).setFull3D().setName("Gray Gun");
+		TeaLeaf = (new ItemFood(131, 1)).setIconIndex(79).setName("Tea Leaf").setEssValue(8);
+		TeaBucket = (new ItemFood(132, 21)).setIconIndex(78).setName("Tea Bucket").setEssValue(32);
+		TeaDoor = (new ItemDoor(133, Material.wood, (BlockDoor)ExtBlocks.TeaDoor)).setIconIndex(86).setName("Tea Door").setEssValue(16);
+		LaceAgate = (new Item(134)).setIconIndex(29).setEssValue(519).setName("Lace Agate");
+		Clinohumite = (new Item(135)).setIconIndex(13).setEssValue(815).setName("Clinohumite");
+		Malachite = (new Item(136)).setIconIndex(45).setEssValue(639).setName("Malachite");
+		Pyrite = (new Item(137)).setIconIndex(61).setEssValue(372).setName("Pyrite");
+		HoursLongPastI = (new ItemHoursLongPastI(138)).setIconIndex(224).setEssValue(64).setName("Hours Long Past I");
+		HoursLongPastII = (new ItemHoursLongPastII(144)).setIconIndex(225).setEssValue(64).setName("Hours Long Past II");
+		HoursLongPastIII = (new ItemHoursLongPastIII(145)).setIconIndex(226).setEssValue(64).setName("Hours Long Past III");
+		HoursLongPastVI = (new ItemHoursLongPastVI(146)).setIconIndex(227).setEssValue(64).setName("Hours Long Past IV");
+		TheOneTrueBook = (new ItemTheOneTrueBook(147)).setIconIndex(228).setEssValue(64).setName("The One True Book");
+		HearthenMirror = (new ItemHearthenMirror(139)).setIconIndex(89).setEssValue(128).setName("Hearthen Mirror");
+		RainConch = (new ItemRainConch(140)).setIconIndex(73).setEssValue(12).setName("Rain Conch");
+		FrigidBits = (new Item(141)).setIconIndex(105).setEssValue(7).setName("Frigid Bits");
+		CandyIce = (new ItemFood(142, 10)).setIconIndex(90).setName("Candy Ice").setEssValue(17);
+		IceDoor = (new ItemDoor(143, Material.ice, (BlockDoor)ExtBlocks.IceDoor)).setIconIndex(91).setName("Ice Door").setEssValue(8);
+		ObserverFur = (new Item(148)).setIconIndex(119).setEssValue(17).setName("Observer Fur");
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockEssenceTransformer.java
@@ -1,0 +1,12 @@
+package net.minecraft.src;
+
+public class BlockEssenceTransformer extends BlockMultiSided {
+	public BlockEssenceTransformer(int var1, int var2, int var3, int var4) {
+		super(var1, var2, var3, var4);
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		var5.displayEssenceTransformerGUI();
+		return true;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockRedstoneWireOld.java
@@ -1,0 +1,302 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockRedstoneWireOld extends BlockOld {
+	private boolean wiresProvidePower = true;
+
+	public BlockRedstoneWireOld(int var1, int var2) {
+		super(var1, var2, Material.circuits);
+		this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F / 16.0F, 1.0F);
+	}
+
+	public int getBlockTextureFromSideAndMetadata(int var1, int var2) {
+		return this.blockIndexInTexture + (var2 > 0 ? 16 : 0);
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 5;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return var1.isBlockNormalCube(var2, var3 - 1, var4);
+	}
+
+	private void updateAndPropagateCurrentStrength(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		int var6 = 0;
+		this.wiresProvidePower = false;
+		boolean var7 = var1.isBlockIndirectlyGettingPowered(var2, var3, var4);
+		this.wiresProvidePower = true;
+		int var8;
+		int var9;
+		int var10;
+		if(var7) {
+			var6 = 15;
+		} else {
+			for(var8 = 0; var8 < 4; ++var8) {
+				var9 = var2;
+				var10 = var4;
+				if(var8 == 0) {
+					var9 = var2 - 1;
+				}
+
+				if(var8 == 1) {
+					++var9;
+				}
+
+				if(var8 == 2) {
+					var10 = var4 - 1;
+				}
+
+				if(var8 == 3) {
+					++var10;
+				}
+
+				var6 = this.getMaxCurrentStrength(var1, var9, var3, var10, var6);
+				if(var1.isBlockNormalCube(var9, var3, var10) && !var1.isBlockNormalCube(var2, var3 + 1, var4)) {
+					var6 = this.getMaxCurrentStrength(var1, var9, var3 + 1, var10, var6);
+				} else if(!var1.isBlockNormalCube(var9, var3, var10)) {
+					var6 = this.getMaxCurrentStrength(var1, var9, var3 - 1, var10, var6);
+				}
+			}
+
+			if(var6 > 0) {
+				--var6;
+			} else {
+				var6 = 0;
+			}
+		}
+
+		if(var5 != var6) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, var6);
+			var1.markBlocksDirty(var2, var3, var4, var2, var3, var4);
+			if(var6 > 0) {
+				--var6;
+			}
+
+			for(var8 = 0; var8 < 4; ++var8) {
+				var9 = var2;
+				var10 = var4;
+				int var11 = var3 - 1;
+				if(var8 == 0) {
+					var9 = var2 - 1;
+				}
+
+				if(var8 == 1) {
+					++var9;
+				}
+
+				if(var8 == 2) {
+					var10 = var4 - 1;
+				}
+
+				if(var8 == 3) {
+					++var10;
+				}
+
+				if(var1.isBlockNormalCube(var9, var3, var10)) {
+					var11 += 2;
+				}
+
+				int var12 = this.getMaxCurrentStrength(var1, var9, var3, var10, -1);
+				if(var12 >= 0 && var12 != var6) {
+					this.updateAndPropagateCurrentStrength(var1, var9, var3, var10);
+				}
+
+				var12 = this.getMaxCurrentStrength(var1, var9, var11, var10, -1);
+				if(var12 >= 0 && var12 != var6) {
+					this.updateAndPropagateCurrentStrength(var1, var9, var11, var10);
+				}
+			}
+
+			if(var5 == 0 || var6 == 0) {
+				var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
+				var1.notifyBlocksOfNeighborChange(var2 - 1, var3, var4, this.blockID);
+				var1.notifyBlocksOfNeighborChange(var2 + 1, var3, var4, this.blockID);
+				var1.notifyBlocksOfNeighborChange(var2, var3, var4 - 1, this.blockID);
+				var1.notifyBlocksOfNeighborChange(var2, var3, var4 + 1, this.blockID);
+				var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+				var1.notifyBlocksOfNeighborChange(var2, var3 + 1, var4, this.blockID);
+			}
+		}
+
+	}
+
+	private void notifyWireNeighborsOfNeighborChange(World var1, int var2, int var3, int var4) {
+		if(var1.getBlockId(var2, var3, var4) == this.blockID) {
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2 - 1, var3, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2 + 1, var3, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4 - 1, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4 + 1, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+			var1.notifyBlocksOfNeighborChange(var2, var3 + 1, var4, this.blockID);
+		}
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		super.onBlockAdded(var1, var2, var3, var4);
+		this.updateAndPropagateCurrentStrength(var1, var2, var3, var4);
+		var1.notifyBlocksOfNeighborChange(var2, var3 + 1, var4, this.blockID);
+		var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+		this.notifyWireNeighborsOfNeighborChange(var1, var2 - 1, var3, var4);
+		this.notifyWireNeighborsOfNeighborChange(var1, var2 + 1, var3, var4);
+		this.notifyWireNeighborsOfNeighborChange(var1, var2, var3, var4 - 1);
+		this.notifyWireNeighborsOfNeighborChange(var1, var2, var3, var4 + 1);
+		if(var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2 - 1, var3 + 1, var4);
+		} else {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2 - 1, var3 - 1, var4);
+		}
+
+		if(var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2 + 1, var3 + 1, var4);
+		} else {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2 + 1, var3 - 1, var4);
+		}
+
+		if(var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 + 1, var4 - 1);
+		} else {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 - 1, var4 - 1);
+		}
+
+		if(var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 + 1, var4 + 1);
+		} else {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 - 1, var4 + 1);
+		}
+
+	}
+
+	public void onBlockRemoval(World var1, int var2, int var3, int var4) {
+		super.onBlockRemoval(var1, var2, var3, var4);
+		var1.notifyBlocksOfNeighborChange(var2, var3 + 1, var4, this.blockID);
+		var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+		this.updateAndPropagateCurrentStrength(var1, var2, var3, var4);
+		this.notifyWireNeighborsOfNeighborChange(var1, var2 - 1, var3, var4);
+		this.notifyWireNeighborsOfNeighborChange(var1, var2 + 1, var3, var4);
+		this.notifyWireNeighborsOfNeighborChange(var1, var2, var3, var4 - 1);
+		this.notifyWireNeighborsOfNeighborChange(var1, var2, var3, var4 + 1);
+		if(var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2 - 1, var3 + 1, var4);
+		} else {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2 - 1, var3 - 1, var4);
+		}
+
+		if(var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2 + 1, var3 + 1, var4);
+		} else {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2 + 1, var3 - 1, var4);
+		}
+
+		if(var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 + 1, var4 - 1);
+		} else {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 - 1, var4 - 1);
+		}
+
+		if(var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 + 1, var4 + 1);
+		} else {
+			this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 - 1, var4 + 1);
+		}
+
+	}
+
+	private int getMaxCurrentStrength(World var1, int var2, int var3, int var4, int var5) {
+		if(var1.getBlockId(var2, var3, var4) != this.blockID) {
+			return var5;
+		} else {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			return var6 > var5 ? var6 : var5;
+		}
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		boolean var7 = this.canPlaceBlockAt(var1, var2, var3, var4);
+		if(!var7) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var6);
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		} else {
+			this.updateAndPropagateCurrentStrength(var1, var2, var3, var4);
+		}
+
+		super.onNeighborBlockChange(var1, var2, var3, var4, var5);
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return Item.redstone.shiftedIndex;
+	}
+
+	public boolean isIndirectlyPoweringTo(World var1, int var2, int var3, int var4, int var5) {
+		return !this.wiresProvidePower ? false : this.isPoweringTo(var1, var2, var3, var4, var5);
+	}
+
+	public boolean isPoweringTo(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		if(!this.wiresProvidePower) {
+			return false;
+		} else if(var1.getBlockMetadata(var2, var3, var4) == 0) {
+			return false;
+		} else if(var5 == 1) {
+			return true;
+		} else {
+			boolean var6 = isPowerProviderOrWire(var1, var2 - 1, var3, var4) || !var1.isBlockNormalCube(var2 - 1, var3, var4) && isPowerProviderOrWire(var1, var2 - 1, var3 - 1, var4);
+			boolean var7 = isPowerProviderOrWire(var1, var2 + 1, var3, var4) || !var1.isBlockNormalCube(var2 + 1, var3, var4) && isPowerProviderOrWire(var1, var2 + 1, var3 - 1, var4);
+			boolean var8 = isPowerProviderOrWire(var1, var2, var3, var4 - 1) || !var1.isBlockNormalCube(var2, var3, var4 - 1) && isPowerProviderOrWire(var1, var2, var3 - 1, var4 - 1);
+			boolean var9 = isPowerProviderOrWire(var1, var2, var3, var4 + 1) || !var1.isBlockNormalCube(var2, var3, var4 + 1) && isPowerProviderOrWire(var1, var2, var3 - 1, var4 + 1);
+			if(!var1.isBlockNormalCube(var2, var3 + 1, var4)) {
+				if(var1.isBlockNormalCube(var2 - 1, var3, var4) && isPowerProviderOrWire(var1, var2 - 1, var3 + 1, var4)) {
+					var6 = true;
+				}
+
+				if(var1.isBlockNormalCube(var2 + 1, var3, var4) && isPowerProviderOrWire(var1, var2 + 1, var3 + 1, var4)) {
+					var7 = true;
+				}
+
+				if(var1.isBlockNormalCube(var2, var3, var4 - 1) && isPowerProviderOrWire(var1, var2, var3 + 1, var4 - 1)) {
+					var8 = true;
+				}
+
+				if(var1.isBlockNormalCube(var2, var3, var4 + 1) && isPowerProviderOrWire(var1, var2, var3 + 1, var4 + 1)) {
+					var9 = true;
+				}
+			}
+
+			return !var8 && !var7 && !var6 && !var9 && var5 >= 2 && var5 <= 5 ? true : (var5 == 2 && var8 && !var6 && !var7 ? true : (var5 == 3 && var9 && !var6 && !var7 ? true : (var5 == 4 && var6 && !var8 && !var9 ? true : var5 == 5 && var7 && !var8 && !var9)));
+		}
+	}
+
+	public boolean canProvidePower() {
+		return this.wiresProvidePower;
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(var1.getBlockMetadata(var2, var3, var4) > 0) {
+			double var6 = (double)var2 + 0.5D + ((double)var5.nextFloat() - 0.5D) * 0.2D;
+			double var8 = (double)((float)var3 + 1.0F / 16.0F);
+			double var10 = (double)var4 + 0.5D + ((double)var5.nextFloat() - 0.5D) * 0.2D;
+			var1.spawnParticle("reddust", var6, var8, var10, 0.0D, 0.0D, 0.0D);
+		}
+
+	}
+
+	public static boolean isPowerProviderOrWire(IBlockAccess var0, int var1, int var2, int var3) {
+		int var4 = var0.getBlockId(var1, var2, var3);
+		return var4 == BlockOld.redstoneWire.blockID ? true : (var4 == 0 ? false : BlockOld.blocksList[var4].canProvidePower());
+	}
+}
--- /dev/null
+++ net/minecraft/src/BiomeInterface.java
@@ -1,0 +1,9 @@
+package net.minecraft.src;
+
+public interface BiomeInterface {
+	double func_10184_39mJVmq3bl4dbH51995p9tocRB43bFXruO32GkxVTy54fzIxdy5dt9OeTC2A(int var1, int var2, EnumWorldGenerator var3);
+
+	double func_10186_4hoZRS129yUan88AHp1ksCfja1h93mYKfFda82Qtd8pqKm7G4bgpnYsijiMu(int var1, int var2, EnumWorldGenerator var3);
+
+	WorldGenMyconUnknownClass func_10185_7j1lR4019pucW00n7wn38afjBd62vEMB6B6SVB9068f4kyPzw4E6wI65ufr8(int var1, int var2, EnumWorldGenerator var3);
+}
--- /dev/null
+++ net/minecraft/src/WorldGenSmoothStone.java
@@ -1,0 +1,103 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class WorldGenSmoothStone extends WorldGenerator {
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		byte var6 = 3;
+		int var7 = var2.nextInt(2) + 2;
+		int var8 = var2.nextInt(2) + 2;
+		int var9 = 0;
+
+		int var10;
+		int var11;
+		int var12;
+		for(var10 = var3 - var7 - 1; var10 <= var3 + var7 + 1; ++var10) {
+			for(var11 = var4 - 1; var11 <= var4 + var6 + 1; ++var11) {
+				for(var12 = var5 - var8 - 1; var12 <= var5 + var8 + 1; ++var12) {
+					var1.getBlockMaterial(var10, var11, var12);
+					if((var10 == var3 - var7 - 1 || var10 == var3 + var7 + 1 || var12 == var5 - var8 - 1 || var12 == var5 + var8 + 1) && var11 == var4 && var1.getBlockId(var10, var11, var12) == Block.waterStill.blockID || var1.getBlockId(var10, var11, var12) == Block.waterMoving.blockID && var1.getBlockId(var10, var11 + 1, var12) == Block.waterStill.blockID || var1.getBlockId(var10, var11 + 1, var12) == Block.waterMoving.blockID) {
+						++var9;
+					}
+				}
+			}
+		}
+
+		if(var9 >= 1 && var9 <= 5 && var2.nextBoolean()) {
+			for(var10 = var3 - var7 - 1; var10 <= var3 + var7 + 1; ++var10) {
+				for(var11 = var4 + var6; var11 >= var4 - 1; --var11) {
+					for(var12 = var5 - var8 - 1; var12 <= var5 + var8 + 1; ++var12) {
+						if(var10 != var3 - var7 - 1 && var11 != var4 - 1 && var12 != var5 - var8 - 1 && var10 != var3 + var7 + 1 && var11 != var4 + var6 + 1 && var12 != var5 + var8 + 1) {
+							var1.setBlockWithNotify(var10, var11, var12, Block.waterStill.blockID);
+						} else if(var11 >= 0 && var1.getBlockMaterial(var10, var11 - 1, var12).isSolid()) {
+							var1.setBlockWithNotify(var10, var11, var12, 1);
+						} else if(!var1.getBlockMaterial(var10, var11, var12).isSolid() && (var11 == var4 - 1 || var2.nextInt(12) == 1)) {
+							if(var11 == var4 - 1 && var2.nextInt(8) != 0) {
+								var1.setBlockWithNotify(var10, var11, var12, ExtBlocks.SmoothStone.blockID);
+							} else {
+								var1.setBlockWithNotify(var10, var11, var12, var11 == var4 - 1 ? 135 : ExtBlocks.SmoothStone.blockID);
+							}
+						}
+					}
+				}
+			}
+
+			label104:
+			for(var10 = 0; var10 < 2; ++var10) {
+				for(var11 = 0; var11 < 2; ++var11) {
+					var12 = var3 + var2.nextInt(var7 * 2 + 1) - var7;
+					int var13 = var5 + var2.nextInt(var8 * 2 + 1) - var8;
+					int var14 = 0;
+					if(var1.getBlockMaterial(var12 - 1, var4, var13).isSolid()) {
+						++var14;
+					}
+
+					if(var1.getBlockMaterial(var12 + 1, var4, var13).isSolid()) {
+						++var14;
+					}
+
+					if(var1.getBlockMaterial(var12, var4, var13 - 1).isSolid()) {
+						++var14;
+					}
+
+					if(var1.getBlockMaterial(var12, var4, var13 + 1).isSolid()) {
+						++var14;
+					}
+
+					if(var14 != 1) {
+						var1.setBlockWithNotify(var12, var4, var13, Block.chest.blockID);
+						TileEntityChest var15 = (TileEntityChest)var1.getBlockTileEntity(var12, var4, var13);
+						int var16 = 0;
+
+						while(true) {
+							if(var16 >= 8) {
+								continue label104;
+							}
+
+							ItemStack var17 = this.func_9652_3P1767ZHeU4Wg5d2gxg5gaO632158IgYY3Eed9E38t4lcl8n2wR0HgbWHwRm(var2);
+							if(var17 != null) {
+								var15.setInventorySlotContents(var2.nextInt(var15.getSizeInventory()), var17);
+							}
+
+							++var16;
+						}
+					}
+				}
+			}
+
+			return true;
+		} else {
+			return false;
+		}
+	}
+
+	private ItemStack func_9652_3P1767ZHeU4Wg5d2gxg5gaO632158IgYY3Eed9E38t4lcl8n2wR0HgbWHwRm(Random var1) {
+		int var2 = var1.nextInt(13);
+		return var2 == 0 ? new ItemStack(Item.saddle) : (var2 == 1 ? new ItemStack(Item.ingotGold, var1.nextInt(4) + 2) : (var2 == 2 ? new ItemStack(ExtItems.Pear) : (var2 == 3 ? new ItemStack(ExtItems.TeaLeaf, var1.nextInt(4) + 1) : (var2 == 4 ? new ItemStack(Item.gunpowder, var1.nextInt(4) + 1) : (var2 == 5 ? new ItemStack(Item.paper, var1.nextInt(4) + 1) : (var2 == 6 ? new ItemStack(Item.bucketEmpty) : (var2 == 7 ? new ItemStack(ExtItems.RainConch) : (var2 == 8 ? new ItemStack(ExtItems.HoursLongPastI) : (var2 == 9 ? new ItemStack(ExtItems.HoursLongPastII) : (var2 == 10 && var1.nextInt(100) == 0 ? new ItemStack(ExtItems.ObsidianPear) : (var2 == 11 && var1.nextInt(2) == 0 ? new ItemStack(Item.redstone, var1.nextInt(8) + 2) : (var2 == 12 && var1.nextInt(10) == 0 ? new ItemStack(ExtItems.Sandcastles) : (var2 == 13 && var1.nextInt(10) == 0 ? new ItemStack(ExtItems.essence, 2 + var1.nextInt(10)) : (var2 == 14 && var1.nextInt(10) == 0 ? new ItemStack(ExtItems.GyldanSverd) : null))))))))))))));
+	}
+
+	private String func_9651_2j77md2XR7Z7c8KmpD76Zi4zEdK7ZbK1K39853W464SQQxU4UhQ90ie4kNb3(Random var1) {
+		int var2 = var1.nextInt(4);
+		return var2 == 0 ? "Spider" : (var2 == 1 ? "Slime" : (var2 == 2 ? "Slime" : (var2 == 3 ? "Spider" : "")));
+	}
+}
--- /dev/null
+++ net/minecraft/src/GuiPlayGame.java
@@ -1,0 +1,47 @@
+package net.minecraft.src;
+
+public class GuiPlayGame extends GuiScreen {
+	GuiScreen field_8023_3bI2wMn339280f9c82WB8H54dzWbThJ33i8W4ZKCqhG22N91x4LfSxcwTR2B = null;
+
+	public GuiPlayGame(GuiScreen var1) {
+		this.field_8023_3bI2wMn339280f9c82WB8H54dzWbThJ33i8W4ZKCqhG22N91x4LfSxcwTR2B = var1;
+	}
+
+	public void initGui() {
+		this.controlList.clear();
+		this.controlList.add(new GuiButton(2, this.width / 16, this.height / 4, "Multiplayer - LAN/Online"));
+		this.controlList.add(new GuiButton(1, this.width / 16, this.height / 4 + 30, "Singleplayer - Local"));
+		this.controlList.add(new GuiButton(3, this.width / 16, this.height / 4 + 60, "Freerun"));
+		this.controlList.add(new ButtonSel(0, this.width / 16, this.height / 4 + 120, 100, 20, "Back", true));
+	}
+
+	public void drawScreen(int var1, int var2, float var3) {
+		this.drawDefaultBackground();
+		Gui.drawGradientRect(0, 0, this.width / 4 + 150, this.height, -1610612736, 537657372);
+		Gui.drawString(this.fontRenderer, "Play", this.width / 12, this.height / 4 - 30, 16777215);
+		super.drawScreen(var1, var2, var3);
+	}
+
+	protected void actionPerformed(GuiButton var1) {
+		if(var1.id == 0) {
+			this.mc.displayGuiScreen(this.field_8023_3bI2wMn339280f9c82WB8H54dzWbThJ33i8W4ZKCqhG22N91x4LfSxcwTR2B);
+		}
+
+		if(var1.id == 1) {
+			this.mc.displayGuiScreen(new GuiSelectWorld(this));
+		}
+
+		if(var1.id == 2) {
+			this.mc.displayGuiScreen(new GuiMultiplayer(this));
+		}
+
+		if(var1.id == 3) {
+			if(ThreadDownloadResources.finished) {
+				this.mc.displayGuiScreen((GuiScreen)(InputHandler.IsKeyDown(54) ? new GuiZM(this) : new GuiFreerunWorlds(this)));
+			} else {
+				this.mc.displayGuiScreen(new GuiConnectFailed("", "Downloading resources. Try again later."));
+			}
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/ExtBlocks.java
@@ -1,0 +1,337 @@
+package net.minecraft.src;
+
+public class ExtBlocks {
+	public static Block QuadWindowGlassBlock;
+	public static Block PillarBlock;
+	public static Block TileBlock;
+	public static Block TileBlock2;
+	public static Block TileBlock2NonFucked;
+	public static Block dimensionFloorBlock;
+	public static Block dimensionWallBlock;
+	public static Block dbgBlock;
+	public static Block TileBlock3;
+	public static Block TileBlock4;
+	public static Block fakeGrass;
+	public static Block AltMojangHypostasisAnemo;
+	public static Block AltMojangHypostasisAnemo2;
+	public static Block AltMojangHypostasisAnemo3;
+	public static Block BarrierBlock;
+	public static Block StairLadderBlock;
+	public static Block fakeDirt;
+	public static Block FakeRock;
+	public static Block fakeSand;
+	public static Block woolPink;
+	public static Block woolBlue;
+	public static Block field_10439_36okOZ0lLWmIIyLvl68Dl0zDQsHM3LbA607460Tyq3UNT8v5FaM5YmIiUeK3;
+	public static Block field_10471_51sZfX7O2E5ZlNH9R33tt46d39dZ35HgS0k7b9QzAO6HJn8orum3nC8iNaHG;
+	public static Block glowingFlower;
+	public static Block glowingFlowerInfBasic;
+	public static Block glowingFlowerInfGold;
+	public static Block glowingFlowerInfObsidian;
+	public static Block blueFireIdk;
+	public static Block safe;
+	public static Block woolGreen;
+	public static Block woolBlack;
+	public static Block dbg2Block;
+	public static Block saltBlock;
+	public static Block GlassMagenta;
+	public static Block GlassBlue;
+	public static Block GlassGreen;
+	public static Block GlassBlack;
+	public static Block QGlassMagenta;
+	public static Block QGlassBlue;
+	public static Block QGlassGreen;
+	public static Block QGlassBlack;
+	public static Block FireSkyWood;
+	public static Block FireSkyPlanks;
+	public static Block FireSkyLeaves;
+	public static Block LowGlowingFlower;
+	public static Block LowGlowingVine;
+	public static Block LowRiverbed;
+	public static Block LowGlowingBlock;
+	public static Block LowStone;
+	public static Block LowOreGold;
+	public static Block LowOreIron;
+	public static Block LowOreCoal;
+	public static Block LowOreDiamond;
+	public static Block LowOreGreenstone;
+	public static Block LowOreGreenstoneGlowing;
+	public static Block BlockFlameWoodDoor;
+	public static Block Limestone;
+	public static Block LimeCobblestone;
+	public static Block TutFloorBlock;
+	public static Block TutWallBlock;
+	public static Block TutGlowingBlock;
+	public static Block EssenceBlock;
+	public static Block EssenceTransformer;
+	public static Block EssenceCloner;
+	public static Block woodDouble;
+	public static Block woodSingle;
+	public static Block Heater;
+	public static Block targetBlock;
+	public static Block essenceFountain;
+	public static Block SmoothStone;
+	public static Block SmoothLimestone;
+	public static Block CrudePillar;
+	public static Block BlockHubDoor;
+	public static Block AncientWood;
+	public static Block AncientLeaves;
+	public static Block AncientRoots;
+	public static Block AncientPlanks;
+	public static Block Grass;
+	public static Block ElderBrick;
+	public static Block ElderDecoratedStone;
+	public static Block ElderSmoothStone;
+	public static Block ElderPillar;
+	public static Block EmptyBookshelf;
+	public static Block Bookshelf;
+	public static Block WireframeBlock;
+	public static Block VendingMachineHealthBoostBottom;
+	public static Block VendingMachineHealthBoostTop;
+	public static Block VendingMachineArmorBottom;
+	public static Block VendingMachineArmorTop;
+	public static Block VendingMachineDashBottom;
+	public static Block VendingMachineDashTop;
+	public static Block VendingMachineQuickReviveBottom;
+	public static Block VendingMachineQuickReviveTop;
+	public static Block Lichen;
+	public static Block LichenBricks;
+	public static Block LichenMass;
+	public static Block GoldElderBrick;
+	public static Block SkyFlameInGlass;
+	private static Block WeaponUpgrader;
+	public static Block WireframeBlock2;
+	public static Block WeaponGiverGrayGun;
+	public static Block LowFlameInGlass;
+	public static Block GoldFlameInGlass;
+	public static Block ObsidianFlameInGlass;
+	public static Block DecorativeBlock1;
+	public static Block DecorativeBlock2;
+	public static Block GoldBrick;
+	public static Block ObsidianBrick;
+	public static Block DiamondBrick;
+	public static Block IronBrick;
+	public static Block FlamewoodPillar;
+	public static Block HighwoodPillar;
+	public static Block SlateBricks;
+	public static Block SlateBeacon;
+	public static Block SlatePillar;
+	public static Block SolarPlate;
+	public static Block DenialPlate;
+	public static Block SwitchPlate;
+	public static Block LoopPlate;
+	public static Block PartPlate;
+	public static Block TrinityPlate;
+	public static Block AssociationPlate;
+	public static Block DialectPlate;
+	public static Block SyllablesPlate;
+	public static Block MirrorsPlate;
+	public static Block WifiBlock;
+	public static Block LowMycon;
+	public static Block MyconStem;
+	public static Block Fern;
+	public static Block MyconCap;
+	public static Block GlowingMyconCap;
+	public static Block SaltBricks;
+	public static Block MyconPlank;
+	public static Block HighwoodDoor;
+	public static Block MyconDoor;
+	public static Block MyconWorkbench;
+	public static Block HighwoodWorkbench;
+	public static Block FirewoodWorkbench;
+	public static Block BismuthOre;
+	public static Block BismuthBlock;
+	public static Block BismuthPillar;
+	public static Block BismuthBrick;
+	public static Block TeaBush;
+	public static Block TeaWood;
+	public static Block TeaPlank;
+	public static Block TeaDoor;
+	public static Block TeaPillar;
+	public static Block TeaWorkbench;
+	public static Block MyconPillar;
+	public static Block CoalBrick;
+	public static Block GreenstoneBrick;
+	public static Block SnowBrick;
+	public static Block Freezer;
+	public static Block WorkingFreezer;
+	public static Block LaceAgateOre;
+	public static Block ClinohumiteOre;
+	public static Block MalachiteOre;
+	public static Block PyriteOre;
+	public static Block LaceAgateBlock;
+	public static Block ClinohumiteBlock;
+	public static Block MalachiteBlock;
+	public static Block PyriteBlock;
+	public static Block GrassPathway;
+	public static Block FrigidTrunk;
+	public static Block FrigidLeaves;
+	public static Block IceDoor;
+	public static Block Hydrangea;
+
+	public static void Register() {
+		FrigidLeaves = (new BlockGlass(255, 224, Material.leaves, false)).setHardness(0.1F).setStepSound(Block.soundGlassFootstep).setName("Frigid Leaves").setEssValue(8);
+		QuadWindowGlassBlock = (new BlockGlass(90, 145, Material.glass, false)).setHardness(0.7F).setStepSound(Block.soundGlassFootstep).setPickaxeEffective(true).setName("Fortified Glass").setEssValue(16);
+		PillarBlock = (new BlockPillar(91, 144, Material.wood)).setHardness(2.0F).setResistance(5.0F).setStepSound(Block.soundWoodFootstep).setName("Pillar").setEssValue(8);
+		TileBlock = (new Block(92, 146, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Stone Tile").setEssValue(8);
+		TileBlock2 = (new Block(93, 147, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setEssValue(8);
+		TileBlock2NonFucked = (new BlockGlass(94, 147, Material.glass, false)).setHardness(1.5F).setStepSound(Block.soundGlassFootstep).setPickaxeEffective(true).setName("Tile").setEssValue(8);
+		dimensionFloorBlock = (new Block(95, 148, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Dimension Floor").setEssValue(8);
+		dimensionWallBlock = (new Block(96, 149, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Dimension Wall").setEssValue(8);
+		dbgBlock = (new Block(97, 150, Material.rock)).setHardness(0.2F).setResistance(10.0F).setStepSound(Block.soundSpecialFootstep).setPickaxeEffective(true).setName("DEBUG").setEssValue(1);
+		TileBlock3 = (new Block(98, 151, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setEssValue(8).setName("Blue Dimension Tile");
+		TileBlock4 = (new Block(99, 152, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setEssValue(8).setName("Yellow Dimension Tile");
+		fakeGrass = (new BlockMultiSided(100, 153, 154, 155)).setHardness(0.6F).setStepSound(Block.soundGrassFootstep).setName("Fake Grass").setEssValue(8);
+		AltMojangHypostasisAnemo = (new Block(101, 156, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setEssValue(8).setName("Blue Mojang Block");
+		AltMojangHypostasisAnemo2 = (new Block(102, 157, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setEssValue(8).setName("White Mojang Block");
+		AltMojangHypostasisAnemo3 = (new Block(103, 158, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setEssValue(8).setName("Green Mojang Block");
+		BarrierBlock = (new BlockHidable(104, 159, Material.glass, false)).setHardness(0.8F).setStepSound(Block.soundSpecialFootstep).setName("Ghost Block").func_8091_6nAmgshv12CC9DlDC27iSsr36CH5syW1ChRUHTQWG3h8BFOoZHb76nu7wbgg(true).setEssValue(8);
+		StairLadderBlock = (new BlockLadder(105, 161)).setHardness(0.4F).setStepSound(Block.soundWoodFootstep).setEssValue(8);
+		fakeDirt = (new Block(106, 162, Material.rock)).setHardness(0.6F).setResistance(10.0F).setStepSound(Block.soundGrassFootstep).setEssValue(8).setName("Fake Dirt");
+		FakeRock = (new Block(107, 163, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setEssValue(8).setName("Fake Stone");
+		fakeSand = (new BlockSand(108, 164)).setHardness(0.5F).setStepSound(Block.soundSandFootstep).setEssValue(8).setName("Fake Sand");
+		woolPink = (new Block(109, 165, Material.cloth)).setHardness(0.8F).setStepSound(Block.soundClothFootstep).setName("Magenta Cloth").setEssValue(16);
+		woolBlue = (new Block(110, 166, Material.cloth)).setHardness(0.8F).setStepSound(Block.soundClothFootstep).setName("Blue Cloth").setEssValue(16);
+		woolGreen = (new Block(111, 167, Material.cloth)).setHardness(0.8F).setStepSound(Block.soundClothFootstep).setName("Green Cloth").setEssValue(16);
+		woolBlack = (new Block(112, 168, Material.cloth)).setHardness(0.8F).setStepSound(Block.soundClothFootstep).setName("Black Cloth").setEssValue(16);
+		dbg2Block = (new BlockGlowing(113, 150, 1)).setHardness(0.0F).setLightValue(15.0F / 16.0F).setStepSound(Block.soundStoneFootstep).setName("DEBUG");
+		saltBlock = (new BlockMultiSided(114, 170, 169, 170)).setHardness(0.6F).setStepSound(Block.soundStoneFootstep).setName("Salt Block").setEssValue(1);
+		glowingFlower = (new BlockGlowingFlower(115, 171, 1)).setHardness(0.0F).setLightValue(15.0F / 16.0F).setStepSound(Block.soundGrassFootstep).setName("Water Lily").setEssValue(8);
+		glowingFlowerInfBasic = (new BlockGlowingFlowerInfused(117, 173, 1, 2)).setHardness(0.0F).setLightValue(15.0F / 16.0F).setStepSound(Block.soundGrassFootstep).setName("Flame-Infused Lily").setEssValue(16);
+		glowingFlowerInfGold = (new BlockGlowingFlowerInfused(118, 174, 1, 4)).setHardness(0.0F).setLightValue(15.0F / 16.0F).setStepSound(Block.soundGrassFootstep).setName("Gold-Infused Lily").setEssValue(24);
+		glowingFlowerInfObsidian = (new BlockGlowingFlowerInfused(119, 175, 1, 7)).setHardness(0.0F).setLightValue(15.0F / 16.0F).setStepSound(Block.soundGrassFootstep).setName("Obsidian-Infused Lily").setEssValue(32);
+		blueFireIdk = (new BlockGlowing(116, 172, 2)).setHardness(0.0F).setLightValue(15.0F / 16.0F).setStepSound(Block.soundStoneFootstep).setName("Celestial Flame").setEssValue(6);
+		safe = (new BlockSafe(120, 177, 176, 177)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundSpecialFootstep).setPickaxeEffective(true).setEssValue(1).setName("Safe");
+		GlassMagenta = (new BlockGlass(121, 133, Material.glass, false)).setHardness(0.1F).setStepSound(Block.soundGlassFootstep).setName("Magenta Glass").setEssValue(16);
+		GlassBlue = (new BlockGlass(122, 134, Material.glass, false)).setHardness(0.1F).setStepSound(Block.soundGlassFootstep).setName("Blue Glass").setEssValue(16);
+		GlassGreen = (new BlockGlass(123, 135, Material.glass, false)).setHardness(0.1F).setStepSound(Block.soundGlassFootstep).setName("Green Glass").setEssValue(16);
+		GlassBlack = (new BlockGlass(124, 136, Material.glass, false)).setHardness(0.1F).setStepSound(Block.soundGlassFootstep).setName("Black Glass").setEssValue(16);
+		QGlassMagenta = (new BlockGlass(125, 117, Material.glass, false)).setHardness(0.1F).setStepSound(Block.soundGlassFootstep).setPickaxeEffective(true).setName("Fortified Magenta Glass").setEssValue(24);
+		QGlassBlue = (new BlockGlass(126, 118, Material.glass, false)).setHardness(0.1F).setStepSound(Block.soundGlassFootstep).setPickaxeEffective(true).setName("Fortified Blue Glass").setEssValue(24);
+		QGlassGreen = (new BlockGlass(127, 119, Material.glass, false)).setHardness(0.1F).setStepSound(Block.soundGlassFootstep).setPickaxeEffective(true).setName("Fortified Green Glass").setEssValue(24);
+		QGlassBlack = (new BlockGlass(128, 120, Material.glass, false)).setHardness(0.1F).setStepSound(Block.soundGlassFootstep).setPickaxeEffective(true).setName("Fortified Black Glass").setEssValue(24);
+		FireSkyWood = (new Block(129, 182, Material.wood)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundWoodFootstep).setName("Flamewood").setEssValue(4);
+		FireSkyPlanks = (new Block(130, 185, Material.wood)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundWoodFootstep).setName("Flamewood Planks").setEssValue(8);
+		FireSkyLeaves = (new BlockLeaves(131, 183)).setHardness(0.2F).setLightOpacity(1).setStepSound(Block.soundGrassFootstep).setName("Flamewood Leaves").setEssValue(4);
+		LowGlowingFlower = (new BlockGlowingFlower(132, 181, 1)).setHardness(0.0F).setLightValue(0.7464F).setStepSound(Block.soundGrassFootstep).setName("Low Lily").setEssValue(16);
+		LowGlowingVine = (new BlockGlowingFlower(133, 186, 1)).setHardness(0.0F).setLightValue(0.8501F).setStepSound(Block.soundGrassFootstep).setName("Low Vine").setEssValue(8);
+		LowRiverbed = (new Block(134, 180, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Low Riverbed").setEssValue(4);
+		LowGlowingBlock = (new BlockGlowingCube(135, 179, 1)).setHardness(1.0F).setLightValue(0.8821F).setStepSound(Block.soundGrassFootstep).setPickaxeEffective(true).setName("Low Wart").setEssValue(11);
+		LowStone = (new BlockStone(136, 187)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Low River Stone").setEssValue(1);
+		LowOreGold = (new BlockOre(137, 188)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundStoneFootstep).setName("Low River Gold Ore").setEssValue(32);
+		LowOreIron = (new BlockOre(138, 189)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundStoneFootstep).setName("Low River Iron Ore").setEssValue(24);
+		LowOreCoal = (new BlockOre(139, 190)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundStoneFootstep).setName("Low River Coal Ore").setEssValue(16);
+		LowOreDiamond = (new BlockOre(140, 191)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundStoneFootstep).setName("Low River Diamond Ore").setEssValue(48);
+		LowOreGreenstone = (new BlockRedstoneOre(141, 192, false)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundStoneFootstep).setEssValue(32).setName("Low River Greenstone Ore");
+		LowOreGreenstoneGlowing = (new BlockRedstoneOre(142, 192, true)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundStoneFootstep).setEssValue(32).setName("Low River Greenstone Ore");
+		BlockFlameWoodDoor = (new BlockFlameWoodDoor(143, 129)).setHardness(3.0F).setStepSound(Block.soundWoodFootstep).setName("Flamewood Door").setEssValue(8);
+		LimeCobblestone = (new Block(144, 194, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setEssValue(8).setName("Cobbled Limestone");
+		Limestone = (new BlockStone(145, 193, LimeCobblestone.blockID)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Limestone").setEssValue(14);
+		TutFloorBlock = (new Block(146, 196, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setEssValue(1).setName("Green Dimension Floor");
+		TutWallBlock = (new Block(147, 197, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setEssValue(1).setName("Alternative Dimension Wall");
+		TutGlowingBlock = (new BlockGlowingCube(148, 198, 1)).setHardness(1.0F).setLightValue(0.9987F).setStepSound(Block.soundGrassFootstep).setPickaxeEffective(true).setEssValue(1).setName("Glowing Cache");
+		EssenceBlock = (new Block(149, 200, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundMetalFootstep).setPickaxeEffective(true).setEssValue(9).setName("Essence Cache");
+		EssenceTransformer = (new BlockEssenceTransformer(150, 141, 142, 143)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundMetalFootstep).setPickaxeEffective(true).setName("Essence Transformer").setEssValue(32);
+		woodDouble = (new BlockWoodSlab(151, 137, true)).setHardness(2.0F).setResistance(10.0F).setStepSound(Block.soundWoodFootstep).setName("Wood Slab").setEssValue(1);
+		woodSingle = (new BlockWoodSlab(152, 137, false)).setHardness(2.0F).setResistance(10.0F).setStepSound(Block.soundWoodFootstep).setName("Wood Slab").setEssValue(2);
+		Heater = (new BlockFlamingCube(153, 121, 1)).setHardness(1.0F).setLightValue(0.5997F).setStepSound(Block.soundMetalFootstep).setPickaxeEffective(true).setName("Heater").setEssValue(32);
+		EssenceCloner = (new BlockEssenceCloner(154, 125, 126, 143)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundMetalFootstep).setPickaxeEffective(true).setName("Essence Cloner").setEssValue(32);
+		IceDoor = (new BlockIceDoor(155, 226)).setHardness(2.2F).setResistance(0.5F).setStepSound(Block.soundGlassFootstep).setName("Ice Door").setEssValue(8);
+		essenceFountain = (new BlockEssenceFountain(156, Material.rock)).setLightValue(0.5F).setLightOpacity(0).setHardness(0.5F).setResistance(0.5F).setPickaxeEffective(true).setStepSound(Block.soundStoneFootstep).setName("Essence Fountain").setEssValue(16);
+		SmoothStone = (new Block(157, 195, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Smooth Stone").setEssValue(16);
+		SmoothLimestone = (new Block(158, 201, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Smooth Limestone").setEssValue(16);
+		CrudePillar = (new Block(159, 202, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Crude Pillar").setEssValue(8);
+		Hydrangea = (new BlockGrassTall(160, 267, 269)).setHardness(0.0F).setStepSound(Block.soundGrassFootstep).setName("Hydrangea").setEssValue(2);
+		AncientWood = (new BlockMultiSided(161, 209, 208, 209, Material.wood)).setStepSound(Block.soundWoodFootstep).setHardness(5.0F).setResistance(20.0F).setName("Highwood Log").setEssValue(2);
+		AncientLeaves = (new BlockGlass(162, 211, Material.leaves, true)).setHardness(0.4F).setLightOpacity(1).setStepSound(Block.soundGrassFootstep).setName("Highwood Leaves").setEssValue(4);
+		AncientRoots = (new Block(163, 213, Material.wood)).setStepSound(Block.soundWoodFootstep).setHardness(1.6F).setResistance(20.0F).setName("Highwood Roots").setEssValue(2);
+		AncientPlanks = (new Block(164, 225, Material.wood)).setHardness(2.0F).setResistance(5.0F).setStepSound(Block.soundWoodFootstep).setEssValue(2).setName("Highwood Planks").setEssValue(8);
+		Grass = (new BlockGrassTall(165, 111, 336)).setHardness(0.0F).setStepSound(Block.soundGrassFootstep).setEssValue(1).setName("Grass").setEssValue(1);
+		ElderDecoratedStone = (new Block(166, 14, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundElderFootstep).setPickaxeEffective(true).setName("Elder Decorated Stone").setEssValue(8);
+		ElderBrick = (new Block(167, 30, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundElderFootstep).setPickaxeEffective(true).setName("Elder Brick").setEssValue(8);
+		ElderPillar = (new Block(168, 46, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundElderFootstep).setPickaxeEffective(true).setName("Elder Pillar").setEssValue(8);
+		ElderSmoothStone = (new Block(169, 110, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundElderFootstep).setPickaxeEffective(true).setName("Elder Smooth Stone").setEssValue(8);
+		Bookshelf = (new BlockEmptyBookshelf(170, 108)).setHardness(1.5F).setStepSound(Block.soundWoodFootstep).setEssValue(1).setName("Bookshelf");
+		EmptyBookshelf = (new BlockEmptyBookshelf(171, 109)).setHardness(1.5F).setStepSound(Block.soundWoodFootstep).setEssValue(1).setName("Empty Bookshelf");
+		WireframeBlock = (new BlockWireframeBlock(173, 178, Material.iron, false)).setHardness(1.5F).setPickaxeEffective(true).setStepSound(Block.soundMetalFootstep).setEssValue(5).setName("Wireframe Block").func_8091_6nAmgshv12CC9DlDC27iSsr36CH5syW1ChRUHTQWG3h8BFOoZHb76nu7wbgg(true);
+		VendingMachineHealthBoostBottom = (new BlockVendingMachine(174, 241, 240, Material.iron, EnumVendingMachine.HealthBoost)).setHardness(8000.0F).setStepSound(Block.soundMetalFootstep).setEssValue(60).setName("Vending Machine (Health Boost)");
+		VendingMachineHealthBoostTop = (new BlockMultiSided(175, 240, 242, 240, Material.iron)).setHardness(8000.0F).setStepSound(Block.soundMetalFootstep).setEssValue(60).setName("Vending Machine (Health Boost)");
+		VendingMachineArmorBottom = (new BlockVendingMachine(176, 257, 256, Material.iron, EnumVendingMachine.Armor)).setHardness(8000.0F).setStepSound(Block.soundMetalFootstep).setEssValue(60).setName("Vending Machine (Armor)");
+		VendingMachineArmorTop = (new BlockMultiSided(177, 256, 258, 256, Material.iron)).setHardness(8000.0F).setStepSound(Block.soundMetalFootstep).setEssValue(60).setName("Vending Machine (Armor)");
+		VendingMachineDashBottom = (new BlockVendingMachine(178, 273, 272, Material.iron, EnumVendingMachine.Dash)).setHardness(8000.0F).setStepSound(Block.soundMetalFootstep).setEssValue(60).setName("Vending Machine (Dash)");
+		VendingMachineDashTop = (new BlockMultiSided(179, 272, 274, 272, Material.iron)).setHardness(8000.0F).setStepSound(Block.soundMetalFootstep).setEssValue(60).setName("Vending Machine (Dash)");
+		VendingMachineQuickReviveBottom = (new BlockVendingMachine(180, 289, 288, Material.iron, EnumVendingMachine.QuickRevive)).setHardness(8000.0F).setStepSound(Block.soundMetalFootstep).setEssValue(60).setName("Vending Machine (Quick Revive)");
+		VendingMachineQuickReviveTop = (new BlockMultiSided(181, 288, 290, 288, Material.iron)).setHardness(8000.0F).setStepSound(Block.soundMetalFootstep).setEssValue(60).setName("Vending Machine (Quick Revive)");
+		WeaponGiverGrayGun = (new BlockWeaponGiver(189, 146, 256, Material.iron)).setHardness(8000.0F).setStepSound(Block.soundMetalFootstep).setEssValue(Short.MAX_VALUE).setName("Weapon Giver (Gray Gun)");
+		Lichen = (new BlockLichen(182, 246)).setHardness(0.0F).setStepSound(Block.soundGrassFootstep).setName("Lichen").setEssValue(8);
+		LichenBricks = (new Block(183, 103, Material.rock)).setHardness(2.0F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setName("Lichen Bricks").setEssValue(16);
+		LichenMass = (new Block(184, 245, Material.grass)).setHardness(2.0F).setResistance(10.0F).setStepSound(Block.soundGrassFootstep).setName("Lichen Mass").setEssValue(16);
+		GoldElderBrick = (new Block(185, 244, Material.rock)).setHardness(1.5F).setLightOpacity(0).setLightValue(0.9F).setResistance(10.0F).setStepSound(Block.soundElderFootstep).setPickaxeEffective(true).setName("Gold Elder Brick").setEssValue(32);
+		SkyFlameInGlass = (new BlockGlowingCube(186, 243, 1)).setHardness(1.0F).setLightValue(0.9885F).setStepSound(Block.soundGlassFootstep).setPickaxeEffective(true).setName("Sky Flame-In-Glass").setEssValue(32);
+		GoldFlameInGlass = (new BlockGlowingCube(190, 247, 1)).setHardness(1.0F).setLightValue(0.9885F).setStepSound(Block.soundGlassFootstep).setPickaxeEffective(true).setName("Gold Flame-In-Glass").setEssValue(32);
+		ObsidianFlameInGlass = (new BlockGlowingCube(191, 248, 1)).setHardness(1.0F).setLightValue(0.9885F).setStepSound(Block.soundGlassFootstep).setPickaxeEffective(true).setName("Obsidian Flame-In-Glass").setEssValue(32);
+		LowFlameInGlass = (new BlockGlowingCube(192, 249, 1)).setHardness(1.0F).setLightValue(0.9885F).setStepSound(Block.soundGlassFootstep).setPickaxeEffective(true).setName("Low Flame-In-Glass").setEssValue(32);
+		DecorativeBlock1 = (new Block(195, 250, Material.rock)).setHardness(2.0F).setResistance(10.0F).setStepSound(Block.soundSpecialFootstep).setName("Decorative Block (1)").setEssValue(32);
+		DecorativeBlock2 = (new Block(196, 251, Material.rock)).setHardness(2.0F).setResistance(10.0F).setStepSound(Block.soundSpecialFootstep).setName("Decorative Block (2)").setEssValue(32);
+		GoldBrick = (new Block(197, 204, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundMetalFootstep).setPickaxeEffective(true).setName("Gold Brick").setEssValue(32);
+		ObsidianBrick = (new Block(198, 236, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundMetalFootstep).setPickaxeEffective(true).setName("Obsidian Brick").setEssValue(72);
+		DiamondBrick = (new Block(199, 221, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundMetalFootstep).setPickaxeEffective(true).setName("Diamond Brick").setEssValue(64);
+		IronBrick = (new Block(200, 220, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundMetalFootstep).setPickaxeEffective(true).setName("Iron Brick").setEssValue(32);
+		FlamewoodPillar = (new Block(201, 252, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundWoodFootstep).setPickaxeEffective(true).setName("Flamewood Pillar").setEssValue(12);
+		HighwoodPillar = (new Block(202, 253, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundWoodFootstep).setPickaxeEffective(true).setName("Highwood Pillar").setEssValue(12);
+		WeaponUpgrader = (new BlockWeaponUpgrader(187, 234, 233, Material.iron)).setHardness(8000.0F).setStepSound(Block.soundMetalFootstep).setEssValue(60).setName("Weapon Upgrader");
+		WireframeBlock2 = (new BlockWireframeBlock2(188, 178, Material.iron)).setHardness(2.0F).setStepSound(Block.soundMetalFootstep).setEssValue(5).setName("Wireframe Block").func_8091_6nAmgshv12CC9DlDC27iSsr36CH5syW1ChRUHTQWG3h8BFOoZHb76nu7wbgg(true);
+		SlateBricks = (new Block(203, 262, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Slate Bricks").setEssValue(4);
+		SlateBeacon = (new Block(204, 263, Material.rock)).setLightValue(1.0F).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundMetalFootstep).setPickaxeEffective(true).setName("Slate Beacon").setEssValue(8);
+		SlatePillar = (new BlockMultiSided(205, 265, 264, 265, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Slate Pillar").setEssValue(8);
+		SolarPlate = (new BlockSlatePillar(206, 62)).setLightValue(0.2F).setEssValue(22).setLightValue(0.9F).setName("Solar Plate");
+		DenialPlate = (new BlockSlatePillar(207, 63)).setLightValue(0.2F).setEssValue(22).setLightValue(0.9F).setName("Denial Plate");
+		SwitchPlate = (new BlockSlatePillar(208, 77)).setLightValue(0.2F).setEssValue(22).setLightValue(0.9F).setName("Switch Plate");
+		LoopPlate = (new BlockSlatePillar(209, 78)).setLightValue(0.2F).setEssValue(22).setLightValue(0.9F).setName("Loop Plate");
+		PartPlate = (new BlockSlatePillar(210, 79)).setLightValue(0.2F).setEssValue(22).setLightValue(0.9F).setName("Part Plate");
+		TrinityPlate = (new BlockSlatePillar(211, 282)).setLightValue(0.2F).setEssValue(22).setLightValue(0.9F).setName("Trinity Plate");
+		AssociationPlate = (new BlockSlatePillar(212, 283)).setLightValue(0.2F).setEssValue(22).setLightValue(0.9F).setName("Association Plate");
+		DialectPlate = (new BlockSlatePillar(213, 284)).setLightValue(0.2F).setEssValue(22).setLightValue(0.9F).setName("Dialect Plate");
+		SyllablesPlate = (new BlockSlatePillar(214, 285)).setLightValue(0.2F).setEssValue(22).setLightValue(0.9F).setName("Syllables Plate");
+		MirrorsPlate = (new BlockSlatePillar(215, 286)).setLightValue(0.2F).setEssValue(22).setLightValue(0.9F).setName("Mirrors Plate");
+		WifiBlock = new BlockWifiBlock(216);
+		LowMycon = (new BlockMultiSided(217, 295, 296, 187)).setHardness(0.6F).setStepSound(Block.soundGrassFootstep).setName("Low Mycon").setEssValue(4);
+		MyconStem = (new BlockMultiSided(218, 299, 300, 299, Material.wood)).setStepSound(Block.soundWoodFootstep).setHardness(5.0F).setResistance(20.0F).setName("Mycon Stem").setEssValue(8);
+		Fern = (new BlockLichen(219, 298)).setHardness(0.0F).setStepSound(Block.soundGrassFootstep).setEssValue(1).setName("Fern");
+		MyconCap = (new BlockMyconCap(220, 301)).setHardness(1.0F).setLightOpacity(4).setLightValue(0.0F).setStepSound(Block.soundClothFootstep).setPickaxeEffective(true).setName("Mycon Cap").setEssValue(8);
+		GlowingMyconCap = (new BlockMyconCap(221, 302)).setHardness(1.0F).setLightOpacity(4).setLightValue(0.65F).setStepSound(Block.soundClothFootstep).setPickaxeEffective(true).setName("Glowing Mycon Cap").setEssValue(8);
+		SaltBricks = (new Block(222, 303, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Salt Bricks").setEssValue(16);
+		MyconPlank = (new Block(223, 304, Material.wood)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundWoodFootstep).setPickaxeEffective(false).setName("Mycon Plank").setEssValue(11);
+		HighwoodDoor = (new BlockHighwoodDoor(224, 130)).setHardness(3.0F).setStepSound(Block.soundWoodFootstep).setName("Highwood Door").setEssValue(4);
+		MyconDoor = (new BlockMyconDoor(225, 132)).setHardness(3.0F).setStepSound(Block.soundWoodFootstep).setName("Mycon Door").setEssValue(8);
+		MyconWorkbench = (new BlockMyconWorkbench(226, 305, 306, 307)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundWoodFootstep).setPickaxeEffective(false).setName("Mycon Workbench").setEssValue(11);
+		HighwoodWorkbench = (new BlockMyconWorkbench(227, 308, 309, 310)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundWoodFootstep).setPickaxeEffective(false).setName("Highwood Workbench").setEssValue(11);
+		FirewoodWorkbench = (new BlockMyconWorkbench(228, 261, 277, 278)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundWoodFootstep).setPickaxeEffective(false).setName("Firewood Workbench").setEssValue(11);
+		BismuthOre = (new BlockOre(229, 311)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Bismuth Ore").setEssValue(24);
+		BismuthBlock = (new Block(230, 312, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Bismuth Block").setEssValue(64);
+		BismuthPillar = (new BlockMultiSided(231, 315, 313, 315)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Bismuth Pillar").setEssValue(64);
+		BismuthBrick = (new Block(232, 314, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Bismuth Brick").setEssValue(64);
+		TeaBush = (new BlockLeaves(233, 323)).setHardness(0.2F).setLightOpacity(1).setStepSound(Block.soundGrassFootstep).setName("Tea Bush");
+		TeaWood = (new BlockMultiSided(234, 326, 325, 326, Material.wood)).setStepSound(Block.soundWoodFootstep).setHardness(2.0F).setResistance(20.0F).setName("Tea Wood").setEssValue(8);
+		TeaPlank = (new Block(235, 327, Material.wood)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundWoodFootstep).setPickaxeEffective(false).setName("Tea Plank").setEssValue(8);
+		TeaDoor = (new BlockTeaDoor(236, 344)).setHardness(3.0F).setStepSound(Block.soundWoodFootstep).setName("Tea Door").setEssValue(8);
+		TeaPillar = (new Block(237, 329, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundWoodFootstep).setPickaxeEffective(true).setName("Tea Pillar").setEssValue(8);
+		TeaWorkbench = (new BlockMyconWorkbench(238, 330, 331, 332)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundWoodFootstep).setPickaxeEffective(false).setName("Tea Workbench").setEssValue(8);
+		MyconPillar = (new Block(239, 316, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundWoodFootstep).setPickaxeEffective(true).setName("Mycon Pillar").setEssValue(8);
+		CoalBrick = (new Block(240, 317, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Coal Brick").setEssValue(16);
+		GreenstoneBrick = (new Block(241, 318, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Greenstone Brick").setEssValue(32);
+		SnowBrick = (new Block(242, 230, Material.rock)).setHardness(1.5F).setResistance(10.0F).setStepSound(Block.soundPowderFootstep).setPickaxeEffective(true).setName("Snow Brick").setEssValue(16);
+		FrigidTrunk = (new BlockFrigidTrunk(254, 131)).setHardness(1.5F).setResistance(2.0F).setStepSound(Block.soundPowderFootstep).setPickaxeEffective(true).setName("Frigid Trunk").setEssValue(8);
+		Freezer = (new BlockFreezer(243, 339, false)).setHardness(3.5F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Freezer").setEssValue(64);
+		WorkingFreezer = (new BlockFreezer(244, 340, true)).setHardness(3.5F).setStepSound(Block.soundStoneFootstep).setPickaxeEffective(true).setName("Freezer").setEssValue(64);
+		LaceAgateOre = (new BlockOre(245, 368)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundStoneFootstep).setName("Lace Agate Ore").setEssValue(182);
+		ClinohumiteOre = (new BlockOre(246, 369)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundStoneFootstep).setName("Clinohumite Ore").setEssValue(182);
+		MalachiteOre = (new BlockOre(247, 370)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundStoneFootstep).setName("Malachite Ore").setEssValue(182);
+		PyriteOre = (new BlockOre(248, 371)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundStoneFootstep).setName("Pyrite Ore").setEssValue(182);
+		LaceAgateBlock = (new BlockGlowingCube(249, 346, Material.iron)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundMetalFootstep).func_8119_1b5dH1WWcMpF1V68H8m8EZc7fRK8e3hz5O7Wug712q7QVU8915w75pQ4IeWl(1.0F).setLightValue(0.5F).setEssValue(4671).setName("Lace Agate Block").setEssValue(256);
+		ClinohumiteBlock = (new BlockGlowingCube(250, 347, Material.iron)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundMetalFootstep).func_8119_1b5dH1WWcMpF1V68H8m8EZc7fRK8e3hz5O7Wug712q7QVU8915w75pQ4IeWl(1.0F).setLightValue(0.5F).setEssValue(7335).setName("Clinohumite Block").setEssValue(256);
+		MalachiteBlock = (new BlockGlowingCube(251, 348, Material.iron)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundMetalFootstep).func_8119_1b5dH1WWcMpF1V68H8m8EZc7fRK8e3hz5O7Wug712q7QVU8915w75pQ4IeWl(1.0F).setLightValue(0.5F).setEssValue(5751).setName("Malachite Block").setEssValue(256);
+		PyriteBlock = (new BlockGlowingCube(252, 291, Material.iron)).setHardness(3.0F).setResistance(5.0F).setStepSound(Block.soundMetalFootstep).func_8119_1b5dH1WWcMpF1V68H8m8EZc7fRK8e3hz5O7Wug712q7QVU8915w75pQ4IeWl(1.0F).setLightValue(0.5F).setEssValue(3348).setName("Pyrite Block").setEssValue(256);
+		GrassPathway = (new BlockMultiSided(253, 228, 229, 2)).setHardness(0.6F).setStepSound(Block.soundMetalFootstep).setName("Grass Pathway").setEssValue(4);
+	}
+}
--- /dev/null
+++ net/minecraft/src/RPacket.java
@@ -1,0 +1,17 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+
+public interface RPacket {
+	byte GetPacketID();
+
+	void Send(DataOutputStream var1) throws IOException;
+
+	void Receive(DataInputStream var1) throws IOException;
+
+	void Respond(DataOutputStream var1) throws IOException;
+
+	int GetResponseSize();
+}
--- net/minecraft/src/GuiIngame.java
+++ net/minecraft/src/GuiIngame.java
@@ -2,6 +2,7 @@
 
 import java.awt.Color;
 import java.util.ArrayList;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Random;
 import net.minecraft.client.Minecraft;
@@ -10,217 +11,403 @@
 import org.lwjgl.opengl.GL12;
 
 public class GuiIngame extends Gui {
+	public static String field_7848_69F5OIYAc4x6RX395dAQNvnAE6gbvlYWUWFq5k519dDHt6V3lS7NcP1YaM1d = "Minecraft Alpha v1.0.16.05_20 Cypress";
 	private static RenderItem itemRenderer = new RenderItem();
-	private List chatMessageList = new ArrayList();
+	private List<ChatLine> chatMessageList = new ArrayList();
 	private Random rand = new Random();
-	private Minecraft mc;
+	public Minecraft mc;
 	public String testMessage = null;
 	private int updateCounter = 0;
 	private String recordPlaying = "";
 	private int recordPlayingUpFor = 0;
 	public float damageGuiPartialTime;
 	float prevVignetteBrightness = 1.0F;
+	private int lgroupX;
+	private int lgroupY;
+	public String currentArea = "";
+	public long areaTimer = 0L;
+	private static final String[] syllab = new String[]{"SIE", "LOH", "KII", "HUR", "MIS", "RUU", "VY", "KA", "TAV", "OLE", "PAH", "MUI", "MAT", "JA", "SAU", "NIN", "UD", "MU", "NGI", "BAR", "LUG", "MAH", "GIR", "AK", "USU", "ESE", "IRU", "UUN", "AMTU", "AGAS", "HI", "TOOI", "YORU", "NEN", "PON", "ONNA", "TSU", "YA", "AO", "ONI", "AN", "KO", "SHI", "YUME", "YARI", "NIM", "GYEONG", "KKOT", "ISA", "MI", "OI", "YS", "LES", "OUX", "IA", "CHA", "NIDA", "JEO", "SANA", "KOLI", "LOHI", "KAAR", "ME", "KISSA", "TEST"};
+	private boolean initedArea = false;
+	private long lastSeed;
+	public OverlayWorldEdit weditOverlay;
+	public OverlayFreerunClient freerunClientOverlay;
+	public WorldZMWaves field_7851_1TS67ssD4A76A0nkHBf7bCFP1g7xFnu6O4y60Ay1jGC5w0l4Vn7SR5Dh3vhb;
+	public OverlayPaintingTitle paintingTitleOverlay;
+	public GuiInGameUnknownClass field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R;
+	public CommandUnknownClass2 field_7852_3V14331gHzZJ4AqUqKEWsJIS3zFtZwOfTwurgWz940S8GxGT80q44941xjk8;
+	public HandlerSetCheckpoint field_7857_396h94sQK9uQ2QzF3CPHcBI8PjZcuA3l6190hgCj0ajJ4Eol6RQ1P4LMA2OO;
 
 	public GuiIngame(Minecraft var1) {
 		this.mc = var1;
+		this.weditOverlay = new OverlayWorldEdit(var1);
+		this.freerunClientOverlay = new OverlayFreerunClient(var1);
+		this.field_7851_1TS67ssD4A76A0nkHBf7bCFP1g7xFnu6O4y60Ay1jGC5w0l4Vn7SR5Dh3vhb = new WorldZMWaves(var1);
+		this.paintingTitleOverlay = new OverlayPaintingTitle(var1);
+		this.field_7852_3V14331gHzZJ4AqUqKEWsJIS3zFtZwOfTwurgWz940S8GxGT80q44941xjk8 = new CommandUnknownClass2(var1);
+		this.field_7857_396h94sQK9uQ2QzF3CPHcBI8PjZcuA3l6190hgCj0ajJ4Eol6RQ1P4LMA2OO = new HandlerSetCheckpoint();
+		this.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R = new GuiInGameUnknownClass();
+	}
+
+	public static String Namegen2(long var0, int var2, int var3) {
+		long var4 = (long)(var2 + 392214);
+		long var6 = (long)(var3 + 392214);
+		long var8 = var6 * 784428L + var4;
+		var8 ^= var0;
+		var8 &= 2147483647L;
+		int var10 = (int)Math.sqrt((double)(var2 * var2 + var3 * var3));
+		int var11 = 0;
+		int var12 = 3;
+
+		for(int var13 = var10; var13 / var12 > 0; var12 *= 4) {
+			++var11;
+		}
+
+		String var14 = "";
+		if(var11 > 0) {
+			for(int var15 = 0; var15 != var11; ++var15) {
+				var14 = var14 + syllab[(int)(((long)(var10 + var11 + var12) + var8 * (long)(2 + var15)) % 64L)];
+			}
+
+			var14 = var14 + "-";
+		}
+
+		var14 = var14 + syllab[(int)((var8 * 2L + (long)var10) % 64L)];
+		var14 = var14 + syllab[(int)((var8 * 3L + (long)var10) % 64L)];
+		var14 = var14 + syllab[(int)((var8 * 4L + (long)var10) % 64L)];
+		return var14;
+	}
+
+	public void ResetNamegen() {
+		this.lgroupX = (int)(this.mc.thePlayer.posX / 32.0D);
+		this.lgroupY = (int)(this.mc.thePlayer.posZ / 32.0D);
+		this.lastSeed = this.mc.theWorld.randomSeed;
+		this.initedArea = true;
+		this.currentArea = Namegen2(this.lastSeed, this.lgroupX, this.lgroupY);
+		ExtLogger.i("Name at " + (int)this.mc.thePlayer.posX + " " + (int)this.mc.thePlayer.posZ + ": " + this.currentArea);
+		this.areaTimer = System.currentTimeMillis();
+	}
+
+	public boolean NamegenNeedsReset() {
+		int var1 = (int)(this.mc.thePlayer.posX / 32.0D);
+		int var2 = (int)(this.mc.thePlayer.posZ / 32.0D);
+		return !this.initedArea || this.lastSeed != this.mc.theWorld.randomSeed || var1 != this.lgroupX || var2 != this.lgroupY;
 	}
 
 	public void renderGameOverlay(float var1, boolean var2, int var3, int var4) {
-		ScaledResolution var5 = new ScaledResolution(this.mc.displayWidth, this.mc.displayHeight);
-		int var6 = var5.getScaledWidth();
-		int var7 = var5.getScaledHeight();
-		FontRenderer var8 = this.mc.fontRenderer;
-		this.mc.entityRenderer.setupOverlayRendering();
-		GL11.glEnable(GL11.GL_BLEND);
-		if(this.mc.options.fancyGraphics) {
-			this.renderVignette(this.mc.thePlayer.getBrightness(var1), var6, var7);
-		}
-
-		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/gui.png"));
-		InventoryPlayer var9 = this.mc.thePlayer.inventory;
-		this.zLevel = -90.0F;
-		this.drawTexturedModalRect(var6 / 2 - 91, var7 - 22, 0, 0, 182, 22);
-		this.drawTexturedModalRect(var6 / 2 - 91 - 1 + var9.currentItem * 20, var7 - 22 - 1, 0, 22, 24, 22);
-		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/icons.png"));
-		GL11.glEnable(GL11.GL_BLEND);
-		GL11.glBlendFunc(GL11.GL_ONE_MINUS_DST_COLOR, GL11.GL_ONE_MINUS_SRC_COLOR);
-		this.drawTexturedModalRect(var6 / 2 - 7, var7 / 2 - 7, 0, 0, 16, 16);
-		GL11.glDisable(GL11.GL_BLEND);
-		boolean var10 = this.mc.thePlayer.heartsLife / 3 % 2 == 1;
-		if(this.mc.thePlayer.heartsLife < 10) {
-			var10 = false;
-		}
-
-		int var11 = this.mc.thePlayer.health;
-		int var12 = this.mc.thePlayer.prevHealth;
-		this.rand.setSeed((long)(this.updateCounter * 312871));
-		int var13;
-		int var14;
-		int var15;
-		if(this.mc.playerController.shouldDrawHUD()) {
-			var13 = this.mc.thePlayer.getPlayerArmorValue();
-
-			int var16;
-			for(var14 = 0; var14 < 10; ++var14) {
-				var15 = var7 - 32;
-				if(var13 > 0) {
-					var16 = var6 / 2 + 91 - var14 * 8 - 9;
-					if(var14 * 2 + 1 < var13) {
-						this.drawTexturedModalRect(var16, var15, 34, 9, 9, 9);
-					}
-
-					if(var14 * 2 + 1 == var13) {
-						this.drawTexturedModalRect(var16, var15, 25, 9, 9, 9);
-					}
-
-					if(var14 * 2 + 1 > var13) {
-						this.drawTexturedModalRect(var16, var15, 16, 9, 9, 9);
-					}
-				}
-
-				byte var25 = 0;
-				if(var10) {
-					var25 = 1;
-				}
-
-				int var17 = var6 / 2 - 91 + var14 * 8;
-				if(var11 <= 4) {
-					var15 += this.rand.nextInt(2);
-				}
-
-				this.drawTexturedModalRect(var17, var15, 16 + var25 * 9, 0, 9, 9);
-				if(var10) {
-					if(var14 * 2 + 1 < var12) {
-						this.drawTexturedModalRect(var17, var15, 70, 0, 9, 9);
-					}
-
-					if(var14 * 2 + 1 == var12) {
-						this.drawTexturedModalRect(var17, var15, 79, 0, 9, 9);
-					}
-				}
-
-				if(var14 * 2 + 1 < var11) {
-					this.drawTexturedModalRect(var17, var15, 52, 0, 9, 9);
-				}
-
-				if(var14 * 2 + 1 == var11) {
-					this.drawTexturedModalRect(var17, var15, 61, 0, 9, 9);
-				}
-			}
-
-			if(this.mc.thePlayer.isInsideOfMaterial(Material.water)) {
-				var14 = (int)Math.ceil((double)(this.mc.thePlayer.air - 2) * 10.0D / 300.0D);
-				var15 = (int)Math.ceil((double)this.mc.thePlayer.air * 10.0D / 300.0D) - var14;
-
-				for(var16 = 0; var16 < var14 + var15; ++var16) {
-					if(var16 < var14) {
-						this.drawTexturedModalRect(var6 / 2 - 91 + var16 * 8, var7 - 32 - 9, 16, 18, 9, 9);
+		if(!InputHandler.IsKeyDown(59)) {
+			ScaledResolution var5 = new ScaledResolution(this.mc.displayWidth, this.mc.displayHeight);
+			int var6 = var5.getScaledWidth();
+			int var7 = var5.getScaledHeight();
+			FontRenderer var8 = this.mc.fontRenderer;
+			this.mc.entityRenderer.setupOverlayRendering();
+			if(!ScreenDebugMenu.dbg_conf_hideUI) {
+				GL11.glEnable(GL11.GL_BLEND);
+				if(this.mc.options.fancyGraphics == 1) {
+					this.renderVignette(this.mc.thePlayer.getBrightness(var1), var6, var7);
+				}
+
+				ItemStack var9 = this.mc.thePlayer.inventory.armorItemInSlot(3);
+				if(var9 != null && var9.getItem() instanceof ItemArmor && ((ItemArmor)var9.getItem()).renderIndex == 6) {
+					GL11.glDisable(GL11.GL_DEPTH_TEST);
+					GL11.glDepthMask(false);
+					GL11.glBlendFunc(GL11.GL_ZERO, GL11.GL_ONE_MINUS_SRC_COLOR);
+					Gui.drawGradientRect(0, 0, var6, var7, -1602191232, -1608507360);
+					GL11.glDepthMask(true);
+					GL11.glEnable(GL11.GL_DEPTH_TEST);
+				}
+
+				GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+				GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/gui.png"));
+				InventoryPlayer var10 = this.mc.thePlayer.inventory;
+				this.zLevel = -90.0F;
+				int var12;
+				if(this.mc.playerController instanceof PlayerControllerZombieMode) {
+					int var11 = var6 / 12 * 11 - 91;
+					var12 = var7 - 32 - 3;
+					this.drawTexturedModalRect(var11, var12, 0, 0, 22, 22);
+					this.drawTexturedModalRect(var11 + 22, var12, 162, 0, 22, 22);
+					this.drawTexturedModalRect(var11 + var10.currentItem * 20 - 1, var12 - 1, 0, 22, 24, 24);
+				} else {
+					this.drawTexturedModalRect(var6 / 2 - 91, var7 - 22, 0, 0, 182, 22);
+					this.drawTexturedModalRect(var6 / 2 - 91 - 1 + var10.currentItem * 20, var7 - 22 - 1, 0, 22, 24, 22);
+				}
+
+				GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/icons.png"));
+				GL11.glEnable(GL11.GL_BLEND);
+				GL11.glBlendFunc(GL11.GL_ONE_MINUS_DST_COLOR, GL11.GL_ONE_MINUS_SRC_COLOR);
+				this.drawTexturedModalRect(var6 / 2 - 7, var7 / 2 - 7, 0, 0, 16, 16);
+				GL11.glDisable(GL11.GL_BLEND);
+				boolean var27 = this.mc.thePlayer.heartsLife / 3 % 2 == 1;
+				if(this.mc.thePlayer.heartsLife < 10) {
+					var27 = false;
+				}
+
+				var12 = this.mc.thePlayer.health;
+				int var13 = this.mc.thePlayer.prevHealth;
+				this.rand.setSeed((long)(this.updateCounter * 312871));
+				int var14;
+				int var15;
+				int var16;
+				int var17;
+				int var19;
+				if(this.mc.playerController.shouldDrawHUD()) {
+					var14 = this.mc.thePlayer.getPlayerArmorValue();
+					var17 = var6 / 2 + 19;
+					int var18 = var7 - (this.mc.options.difficulty == 4 ? 32 : 41);
+
+					int var21;
+					for(var19 = 0; var19 != 4; ++var19) {
+						ItemStack var20 = this.mc.thePlayer.inventory.armorItemInSlot(var19);
+						if(var20 != null && var20.getItem() instanceof ItemArmor) {
+							var21 = var20.getMaxDamage();
+							int var22 = var21 - var20.itemDmg;
+							float var23 = (float)var22 / (float)var21;
+							this.drawTexturedModalRect(var17 + 18 * var19, var18, 52, 9, 9, 9);
+							this.drawTexturedModalRect(var17 + 9 + 18 * var19, var18, 52, 9, 9, 9);
+							if(var23 >= 12.0F / 16.0F) {
+								this.drawTexturedModalRect(var17 + 18 * var19, var18, 88, 9, 9, 9);
+								this.drawTexturedModalRect(var17 + 9 + 18 * var19, var18, 88, 9, 9, 9);
+							} else if(var23 >= 0.5F) {
+								this.drawTexturedModalRect(var17 + 18 * var19, var18, 97, 9, 9, 9);
+								this.drawTexturedModalRect(var17 + 9 + 18 * var19, var18, 88, 9, 9, 9);
+							} else if(var23 >= 0.25F) {
+								this.drawTexturedModalRect(var17 + 9 + 18 * var19, var18, 88, 9, 9, 9);
+							} else {
+								this.drawTexturedModalRect(var17 + 9 + 18 * var19, var18, 97, 9, 9, 9);
+							}
+						}
+					}
+
+					int var31;
+					if(this.mc.thePlayer.dashTimer != 0) {
+						Gui.drawGradientRect(var6 / 2 - 50 - 1, var7 - 90 - 1, var6 / 2 - 50 + 100 + 1, var7 - 90 + 5 + 1, -14671840, -16777216);
+						var19 = this.mc.thePlayer.dashTimer;
+						var31 = -3584;
+						var21 = -13893888;
+						if(var19 < 15) {
+							var31 = -16735489;
+							var21 = -16759637;
+						}
+
+						Gui.drawGradientRect(var6 / 2 - 50, var7 - 90, var6 / 2 - 50 + (int)(100.0F * (1.0F - (float)var19 / 30.0F)), var7 - 90 + 5, var31, var21);
+					}
+
+					if(ExtEvents.bossfightInProgress) {
+						Gui.drawGradientRect(var6 / 2 - 150 - 1, 59, var6 / 2 - 150 + 301, 66, -14671840, -16777216);
+						Gui.drawGradientRect(var6 / 2 - 150, 60, var6 / 2 - 150 + (int)(300.0F * ((float)ExtEvents.bossRef.health / (float)ExtEvents.bossRef.maxHP)), 65, -3070185, -786683);
+						var8.drawStringWithShadow(ExtEvents.bossname, var6 / 2 - 150 - 1, 65, 16777215);
+						GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/icons.png"));
+					}
+
+					if(this.mc.options.difficulty == 4) {
+						if(this.mc.thePlayer.health != 0) {
+							var19 = var6 / 2 - 91;
+							var31 = var7 - 32;
+							this.drawTexturedModalRect(var19, var31, 0, 16, 9, 9);
+						}
 					} else {
-						this.drawTexturedModalRect(var6 / 2 - 91 + var16 * 8, var7 - 32 - 9, 25, 18, 9, 9);
-					}
-				}
-			}
-		}
-
-		GL11.glDisable(GL11.GL_BLEND);
-		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
-		GL11.glPushMatrix();
-		GL11.glRotatef(180.0F, 1.0F, 0.0F, 0.0F);
-		RenderHelper.enableStandardItemLighting();
-		GL11.glPopMatrix();
-
-		for(var13 = 0; var13 < 9; ++var13) {
-			var14 = var6 / 2 - 90 + var13 * 20 + 2;
-			var15 = var7 - 16 - 3;
-			this.renderInventorySlot(var13, var14, var15, var1);
-		}
-
-		RenderHelper.disableStandardItemLighting();
-		GL11.glDisable(GL12.GL_RESCALE_NORMAL);
-		String var21;
-		if(Keyboard.isKeyDown(Keyboard.KEY_F3)) {
-			var8.drawStringWithShadow("Minecraft Alpha v1.1.2_01 (" + this.mc.debug + ")", 2, 2, 16777215);
-			var8.drawStringWithShadow(this.mc.debugInfoRenders(), 2, 12, 16777215);
-			var8.drawStringWithShadow(this.mc.getEntityDebug(), 2, 22, 16777215);
-			var8.drawStringWithShadow(this.mc.debugInfoEntities(), 2, 32, 16777215);
-			long var22 = Runtime.getRuntime().maxMemory();
-			long var27 = Runtime.getRuntime().totalMemory();
-			long var28 = Runtime.getRuntime().freeMemory();
-			long var19 = var27 - var28;
-			var21 = "Used memory: " + var19 * 100L / var22 + "% (" + var19 / 1024L / 1024L + "MB) of " + var22 / 1024L / 1024L + "MB";
-			this.drawString(var8, var21, var6 - var8.getStringWidth(var21) - 2, 2, 14737632);
-			var21 = "Allocated memory: " + var27 * 100L / var22 + "% (" + var27 / 1024L / 1024L + "MB)";
-			this.drawString(var8, var21, var6 - var8.getStringWidth(var21) - 2, 12, 14737632);
-		} else {
-			var8.drawStringWithShadow("Minecraft Alpha v1.1.2_01", 2, 2, 16777215);
-		}
-
-		if(this.recordPlayingUpFor > 0) {
-			float var23 = (float)this.recordPlayingUpFor - var1;
-			var14 = (int)(var23 * 256.0F / 20.0F);
-			if(var14 > 255) {
-				var14 = 255;
-			}
-
-			if(var14 > 0) {
-				GL11.glPushMatrix();
-				GL11.glTranslatef((float)(var6 / 2), (float)(var7 - 48), 0.0F);
+						for(var15 = 0; var15 < 10; ++var15) {
+							var16 = var7 - 32;
+							if(var14 > 0) {
+								var19 = var6 / 2 + 91 - var15 * 8 - 9;
+								if(var15 * 2 + 1 < var14) {
+									this.drawTexturedModalRect(var19, var16, 34, 9, 9, 9);
+								}
+
+								if(var15 * 2 + 1 == var14) {
+									this.drawTexturedModalRect(var19, var16, 25, 9, 9, 9);
+								}
+
+								if(var15 * 2 + 1 > var14) {
+									this.drawTexturedModalRect(var19, var16, 16, 9, 9, 9);
+								}
+							}
+
+							byte var32 = 0;
+							if(var27) {
+								var32 = 1;
+							}
+
+							var31 = var6 / 2 - 91 + var15 * 8;
+							if(this.mc.playerController instanceof PlayerControllerZombieMode) {
+								var31 += 45;
+							}
+
+							if(var12 <= 4) {
+								var16 += this.rand.nextInt(2);
+							}
+
+							this.drawTexturedModalRect(var31, var16, 16 + var32 * 9, 0, 9, 9);
+							if(var27) {
+								if(var15 * 2 + 1 < var13) {
+									this.drawTexturedModalRect(var31, var16, 70, 0, 9, 9);
+								}
+
+								if(var15 * 2 + 1 == var13) {
+									this.drawTexturedModalRect(var31, var16, 79, 0, 9, 9);
+								}
+							}
+
+							if(var15 * 2 + 1 < var12) {
+								this.drawTexturedModalRect(var31, var16, 52, 0, 9, 9);
+							}
+
+							if(var15 * 2 + 1 == var12) {
+								this.drawTexturedModalRect(var31, var16, 61, 0, 9, 9);
+							}
+						}
+					}
+
+					if(this.mc.thePlayer.isInsideOfMaterial(Material.water)) {
+						var15 = (int)Math.ceil((double)(this.mc.thePlayer.air - 2) * 10.0D / 300.0D);
+						var16 = (int)Math.ceil((double)this.mc.thePlayer.air * 10.0D / 300.0D) - var15;
+
+						for(var19 = 0; var19 < var15 + var16; ++var19) {
+							if(var19 < var15) {
+								this.drawTexturedModalRect(var6 / 2 - 91 + var19 * 8, var7 - 32 - 9, 16, 18, 9, 9);
+							} else {
+								this.drawTexturedModalRect(var6 / 2 - 91 + var19 * 8, var7 - 32 - 9, 25, 18, 9, 9);
+							}
+						}
+					}
+				}
+
+				GL11.glDisable(GL11.GL_BLEND);
+				GL11.glEnable(GL12.GL_RESCALE_NORMAL);
+				GL11.glPushMatrix();
+				GL11.glRotatef(180.0F, 1.0F, 0.0F, 0.0F);
+				RenderHelper.enableStandardItemLighting();
+				GL11.glPopMatrix();
+				if(!(this.mc.playerController instanceof PlayerControllerZombieMode)) {
+					for(var14 = 0; var14 < 9; ++var14) {
+						var15 = var6 / 2 - 90 + var14 * 20 + 2;
+						var16 = var7 - 16 - 3;
+						this.renderInventorySlot(var14, var15, var16, var1);
+					}
+				} else {
+					for(var17 = 0; var17 < 2; ++var17) {
+						var15 = var6 / 12 * 11 - 90 + var17 * 20 + 2;
+						var16 = var7 - 30 - 3;
+						this.renderInventorySlot(var17, var15, var16, var1);
+					}
+				}
+
+				this.paintingTitleOverlay.RenderOverlay(this, var6, var7);
+				this.weditOverlay.RenderOverlay(this, var6, var7);
+				if(InputHandler.mc.thePlayer instanceof EntityPlayerFreerunClient) {
+					this.freerunClientOverlay.RenderOverlay(this, var6, var7);
+				} else if(InputHandler.mc.thePlayer instanceof EntityPlayerZombieModeClient) {
+					this.field_7851_1TS67ssD4A76A0nkHBf7bCFP1g7xFnu6O4y60Ay1jGC5w0l4Vn7SR5Dh3vhb.func_11167_4U925ZN0m8Nu9TK03KYE01U693LubPBQnFZPTZ58D5mrAp59upNarhi1NZXt(this, var6, var7);
+				}
+
+				RenderHelper.disableStandardItemLighting();
+				GL11.glDisable(GL12.GL_RESCALE_NORMAL);
+				ModLoader.RunOSDHooks(this.mc);
+				String var28;
+				if(!Keyboard.isKeyDown(Keyboard.KEY_F3) && !ScreenDebugMenu.dbg_conf_showDebugInfo) {
+					var8.drawStringWithShadow(field_7848_69F5OIYAc4x6RX395dAQNvnAE6gbvlYWUWFq5k519dDHt6V3lS7NcP1YaM1d, 2, 2, 16777215);
+					var8.drawStringWithShadow(this.mc.debug, 2, 12, 16777215);
+					var8.drawStringWithShadow("x:" + (int)this.mc.thePlayer.posX + " y:" + (int)this.mc.thePlayer.posY + " z:" + (int)this.mc.thePlayer.posZ, 2, 22, 16777215);
+				} else {
+					var8.drawStringWithShadow(field_7848_69F5OIYAc4x6RX395dAQNvnAE6gbvlYWUWFq5k519dDHt6V3lS7NcP1YaM1d, 2, 2, 16777215);
+					var8.drawStringWithShadow(this.mc.debug, 2, 12, 16777215);
+					var8.drawStringWithShadow(this.mc.debugInfoRenders(), 2, 22, 16777215);
+					var8.drawStringWithShadow(this.mc.getEntityDebug(), 2, 32, 16777215);
+					var8.drawStringWithShadow(this.mc.debugInfoEntities(), 2, 42, 16777215);
+					var8.drawStringWithShadow("WSd:" + this.mc.theWorld.randomSeed + ";t:" + this.mc.theWorld.worldTime % 24000L, 2, 52, 16777215);
+					var8.drawStringWithShadow("ChnkPath:" + func_7832_69M7iV2suvW395URNhPM3ck4Y8xoQ3k90grPs3stgrlZz9xv09Jxz3Q710BH(this.mc), 2, 62, 16777215);
+					var8.drawStringWithShadow("LL:" + this.mc.theWorld.getBrightness((int)InputHandler.lastX, (int)InputHandler.lastY, (int)InputHandler.lastZ), 2, 72, 16777215);
+					var8.drawStringWithShadow("ObvT:" + this.mc.thePlayer.observerCooldown, 2, 82, 16777215);
+					long var29 = Runtime.getRuntime().maxMemory();
+					long var35 = Runtime.getRuntime().totalMemory();
+					long var33 = Runtime.getRuntime().freeMemory();
+					long var24 = var35 - var33;
+					var28 = "Used memory: " + var24 * 100L / var29 + "% (" + var24 / 1024L / 1024L + "MB) of " + var29 / 1024L / 1024L + "MB";
+					Gui.drawString(var8, var28, var6 - var8.getStringWidth(var28) - 2, 2, 14737632);
+					var28 = "Allocated memory: " + var35 * 100L / var29 + "% (" + var35 / 1024L / 1024L + "MB)";
+					Gui.drawString(var8, var28, var6 - var8.getStringWidth(var28) - 2, 12, 14737632);
+					String var26 = InputHandler.mc.func_7236_2E4BZaw4wUzRdqs6H26gijBXYV2x4keaA5V5idykFk39ETvee94J18B7nBcD();
+					Gui.drawString(var8, var26, var6 - var8.getStringWidth(var26) - 2, 22, -1);
+				}
+
+				this.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11173_66q8fr6Ip48GXz9oYC8o3XM5Qm0c28Ie4sSA6167vMMhs7iZl0ACYc6sz6VL(this, var6, var7);
+				GL11.glPushMatrix();
+				float var30 = (float)Math.pow(0.5D, (double)(this.currentArea.length() / 10));
+				GL11.glScalef(1.0F + var30, 1.0F + var30, 1.0F + var30);
+				var19 = (int)(255.0F * Math.max(1.0F - (float)Math.min(System.currentTimeMillis() - this.areaTimer, 5000L) / 5000.0F, 0.3F));
+				if(var19 != 0) {
+					var8.drawStringWithShadow(this.currentArea, (int)((float)var6 / (1.0F + var30) - (float)var8.getStringWidth(this.currentArea) - 10.0F), 20, 16777215 + var19 * 16777216);
+				}
+
+				GL11.glPopMatrix();
+				GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/icons.png"));
+				if(this.recordPlayingUpFor > 0) {
+					float var37 = (float)this.recordPlayingUpFor - var1;
+					var15 = (int)(var37 * 256.0F / 20.0F);
+					if(var15 > 255) {
+						var15 = 255;
+					}
+
+					if(var15 > 0) {
+						GL11.glPushMatrix();
+						GL11.glTranslatef((float)(var6 / 2), (float)(var7 - 48), 0.0F);
+						GL11.glEnable(GL11.GL_BLEND);
+						GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
+						var16 = Color.HSBtoRGB(var37 / 50.0F, 0.7F, 0.6F) & 16777215;
+						var8.drawString(this.recordPlaying, -var8.getStringWidth(this.recordPlaying) / 2, -4, var16 + (var15 << 24));
+						GL11.glDisable(GL11.GL_BLEND);
+						GL11.glPopMatrix();
+					}
+				}
+
+				byte var38 = 10;
+				boolean var34 = false;
+				if(this.mc.currentScreen instanceof GuiChat) {
+					var38 = 20;
+					var34 = true;
+				}
+
 				GL11.glEnable(GL11.GL_BLEND);
 				GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-				var15 = Color.HSBtoRGB(var23 / 50.0F, 0.7F, 0.6F) & 16777215;
-				var8.drawString(this.recordPlaying, -var8.getStringWidth(this.recordPlaying) / 2, -4, var15 + (var14 << 24));
-				GL11.glDisable(GL11.GL_BLEND);
+				GL11.glDisable(GL11.GL_ALPHA_TEST);
+				GL11.glPushMatrix();
+				GL11.glTranslatef(0.0F, (float)(var7 - 48), 0.0F);
+
+				for(var16 = 0; var16 < this.chatMessageList.size() && var16 < var38; ++var16) {
+					if(((ChatLine)this.chatMessageList.get(var16)).updateCounter < 200 || var34) {
+						double var36 = (double)((ChatLine)this.chatMessageList.get(var16)).updateCounter / 200.0D;
+						var36 = 1.0D - var36;
+						var36 *= 10.0D;
+						if(var36 < 0.0D) {
+							var36 = 0.0D;
+						}
+
+						if(var36 > 1.0D) {
+							var36 = 1.0D;
+						}
+
+						var36 *= var36;
+						int var39 = (int)(255.0D * var36);
+						if(var34) {
+							var39 = 255;
+						}
+
+						if(var39 > 0) {
+							byte var25 = 2;
+							int var40 = -var16 * 9;
+							var28 = ((ChatLine)this.chatMessageList.get(var16)).message;
+							Gui.drawRect(var25, var40 - 1, var25 + 320, var40 + 8, var39 / 2 << 24);
+							GL11.glEnable(GL11.GL_BLEND);
+							var8.drawStringWithShadow(var28, var25, var40, 16777215 + (var39 << 24));
+						}
+					}
+				}
+
 				GL11.glPopMatrix();
-			}
-		}
-
-		byte var24 = 10;
-		boolean var26 = false;
-		if(this.mc.currentScreen instanceof GuiChat) {
-			var24 = 20;
-			var26 = true;
-		}
-
-		GL11.glEnable(GL11.GL_BLEND);
-		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-		GL11.glDisable(GL11.GL_ALPHA_TEST);
-		GL11.glPushMatrix();
-		GL11.glTranslatef(0.0F, (float)(var7 - 48), 0.0F);
-
-		for(var15 = 0; var15 < this.chatMessageList.size() && var15 < var24; ++var15) {
-			if(((ChatLine)this.chatMessageList.get(var15)).updateCounter < 200 || var26) {
-				double var29 = (double)((ChatLine)this.chatMessageList.get(var15)).updateCounter / 200.0D;
-				var29 = 1.0D - var29;
-				var29 *= 10.0D;
-				if(var29 < 0.0D) {
-					var29 = 0.0D;
-				}
-
-				if(var29 > 1.0D) {
-					var29 = 1.0D;
-				}
-
-				var29 *= var29;
-				int var18 = (int)(255.0D * var29);
-				if(var26) {
-					var18 = 255;
-				}
-
-				if(var18 > 0) {
-					byte var30 = 2;
-					int var20 = -var15 * 9;
-					var21 = ((ChatLine)this.chatMessageList.get(var15)).message;
-					this.drawRect(var30, var20 - 1, var30 + 320, var20 + 8, var18 / 2 << 24);
-					GL11.glEnable(GL11.GL_BLEND);
-					var8.drawStringWithShadow(var21, var30, var20, 16777215 + (var18 << 24));
-				}
-			}
-		}
-
-		GL11.glPopMatrix();
-		GL11.glEnable(GL11.GL_ALPHA_TEST);
-		GL11.glDisable(GL11.GL_BLEND);
+				GL11.glEnable(GL11.GL_ALPHA_TEST);
+				GL11.glDisable(GL11.GL_BLEND);
+			}
+		}
 	}
 
 	private void renderVignette(float var1, int var2, int var3) {
@@ -271,6 +458,7 @@
 
 			itemRenderer.renderItemOverlayIntoGUI(this.mc.fontRenderer, this.mc.renderEngine, var5, var2, var3);
 		}
+
 	}
 
 	public void updateTick() {
@@ -280,8 +468,9 @@
 
 		++this.updateCounter;
 
-		for(int var1 = 0; var1 < this.chatMessageList.size(); ++var1) {
-			++((ChatLine)this.chatMessageList.get(var1)).updateCounter;
+		ChatLine var2;
+		for(Iterator var1 = this.chatMessageList.iterator(); var1.hasNext(); ++var2.updateCounter) {
+			var2 = (ChatLine)var1.next();
 		}
 
 	}
@@ -307,5 +496,11 @@
 	public void setRecordPlayingMessage(String var1) {
 		this.recordPlaying = "Now playing: " + var1;
 		this.recordPlayingUpFor = 60;
+	}
+
+	public static String func_7832_69M7iV2suvW395URNhPM3ck4Y8xoQ3k90grPs3stgrlZz9xv09Jxz3Q710BH(Minecraft var0) {
+		int var1 = (int)Math.floor(var0.thePlayer.posX / 16.0D);
+		int var2 = (int)Math.floor(var0.thePlayer.posZ / 16.0D);
+		return Integer.toString(var1 & 63, 36) + "/" + Integer.toString(var2 & 63, 36) + "/c." + Integer.toString(var1, 36) + "." + Integer.toString(var2, 36) + ".dat";
 	}
 }
--- /dev/null
+++ net/minecraft/src/IHouseBig.java
@@ -1,0 +1,7 @@
+package net.minecraft.src;
+
+public interface IHouseBig {
+	float func_9883_913vTZx6no47397W6wG95Q5uB254nJBZ27osnW242XcA9M93Alb1ry5oPyVe();
+
+	void func_9884_61qP7q8deV5ospnX8sW5XUMxMcV5ssOU68863452kQ9H403L5ScR3DEa98qO(World var1, int var2, int var3, WorldGenHouseBigInterior var4);
+}
--- /dev/null
+++ net/minecraft/src/EntityCatbomb.java
@@ -1,0 +1,44 @@
+package net.minecraft.src;
+
+public class EntityCatbomb extends EntityLiving {
+	public EntityCatbomb(World var1) {
+		super(var1);
+		this.texture = "/mob/catbomb.png";
+		this.setSize(0.5F, 0.3F);
+	}
+
+	public void writeEntityToNBT(NBTTagCompound var1) {
+		super.writeEntityToNBT(var1);
+	}
+
+	public void readEntityFromNBT(NBTTagCompound var1) {
+		super.readEntityFromNBT(var1);
+	}
+
+	protected String getHurtSound() {
+		return "mob.skeletonhurt";
+	}
+
+	protected String getDeathSound() {
+		return "mob.skeletonhurt";
+	}
+
+	protected float getSoundVolume() {
+		return 0.4F;
+	}
+
+	protected int getDropItemId() {
+		return Item.ingotGold.shiftedIndex;
+	}
+
+	public boolean attackEntityFrom(Entity var1, int var2) {
+		return true;
+	}
+
+	public void onLivingUpdate() {
+	}
+
+	public boolean interact(EntityPlayer var1) {
+		return false;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockVendingMachine.java
@@ -1,0 +1,72 @@
+package net.minecraft.src;
+
+import org.lwjgl.input.Keyboard;
+
+public class BlockVendingMachine extends BlockMultiSided implements BlockUnknownInterface {
+	public EnumVendingMachine field_8296_0laXNSuQ3UQKdQ272IAn7dCLu8b6ZZ974jd1paY6884ab682si10HtY85Xe5;
+
+	public BlockVendingMachine(int var1, int var2, int var3, Material var4, EnumVendingMachine var5) {
+		super(var1, var3, var2, var3, var4);
+		this.field_8296_0laXNSuQ3UQKdQ272IAn7dCLu8b6ZZ974jd1paY6884ab682si10HtY85Xe5 = var5;
+	}
+
+	public void func_8286_2f84KM1xKjK9eBj4915qo36L405Hm9W3JZ41244r918IGv3BpYiut0G1VBGw(EntityPlayerZombieModeClient var1, XYZv var2) {
+		if(!var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.func_8685_018jLaFer93s1Ao41hTl8Co499i9rtr87X0l6Asj74ctkfz3zMwrb0xF99f5(this.field_8296_0laXNSuQ3UQKdQ272IAn7dCLu8b6ZZ974jd1paY6884ab682si10HtY85Xe5)) {
+			int var3 = var1.worldIn.func_7553_1Am4hwcD890pxiJ6yuW7PxUZYCDOP81V4cTtxj1Nx79vmSeJ3Q1x7o3bNkVz(this.field_8296_0laXNSuQ3UQKdQ272IAn7dCLu8b6ZZ974jd1paY6884ab682si10HtY85Xe5);
+			if(var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.func_8686_3fQ4Zvl6ZGZtMHz8BDhx9ci7pQP8EhDqu7Ri4ywsZ3854I2e4ev3W4B3R3iy() >= (long)var3) {
+				var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.func_8688_6DmcXOP1jZRKDasP2440t8904Ry66MRC3K00nwd8iGDlPgYii5d1f50QVICF((long)(-var3));
+				switch(EnumVendingMachineUnknownClass3.field_9819_6Ecx7VuG87M4Qa2PJ40n23uvU73przk4v42MDHptW0m8xI7Wq9zqailKsgX8[this.field_8296_0laXNSuQ3UQKdQ272IAn7dCLu8b6ZZ974jd1paY6884ab682si10HtY85Xe5.ordinal()]) {
+				case 1:
+					var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.field_8693_6a3I3v4L072y21iqK2Q4a7OJa1SIY587gNZ7teLm8k1uZzO68dY6lE8PKTBh = true;
+					break;
+				case 2:
+					var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.field_8690_9ajSfayfVo92Z68A5B2rvo13codHKhrUqqH2LRN64r7Ac066r0ki4BD2lC9w = true;
+					break;
+				case 3:
+					var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.field_8695_54O4q276dxP8y31413ENJjhqXBnFshV4S4ng8H76Bv5Y3Ma2DF7fbLk53PvO = true;
+					break;
+				case 4:
+					var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.field_8692_8s3a9ZFU1Lb4Y33KzN5HEwzzvMoj71d2qDVF231HNAJ36vP850tAYydwpyN6 = true;
+				}
+			} else {
+				InputHandler.mc.ingameGUI.addChatMessage("Not enough points!");
+			}
+		}
+
+	}
+
+	public String func_8287_3t2cX22yD5J55Zh6G33szTT1PY525wnemKTHp3jQ2r2jhLod41nugOV5rhqI(EntityPlayerZombieModeClient var1, XYZv var2) {
+		String var3 = Keyboard.getKeyName(InputHandler.mc.options.keyBindInventory.keyCode);
+		if(var1.field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.func_8685_018jLaFer93s1Ao41hTl8Co499i9rtr87X0l6Asj74ctkfz3zMwrb0xF99f5(this.field_8296_0laXNSuQ3UQKdQ272IAn7dCLu8b6ZZ974jd1paY6884ab682si10HtY85Xe5)) {
+			return "You already have this perk.";
+		} else {
+			switch(EnumVendingMachineUnknownClass3.field_9819_6Ecx7VuG87M4Qa2PJ40n23uvU73przk4v42MDHptW0m8xI7Wq9zqailKsgX8[this.field_8296_0laXNSuQ3UQKdQ272IAn7dCLu8b6ZZ974jd1paY6884ab682si10HtY85Xe5.ordinal()]) {
+			case 1:
+				return "[" + var3 + "] buy Armor [" + var1.worldIn.func_7553_1Am4hwcD890pxiJ6yuW7PxUZYCDOP81V4cTtxj1Nx79vmSeJ3Q1x7o3bNkVz(this.field_8296_0laXNSuQ3UQKdQ272IAn7dCLu8b6ZZ974jd1paY6884ab682si10HtY85Xe5) + " points]";
+			case 2:
+				return "[" + var3 + "] buy Dash [" + var1.worldIn.func_7553_1Am4hwcD890pxiJ6yuW7PxUZYCDOP81V4cTtxj1Nx79vmSeJ3Q1x7o3bNkVz(this.field_8296_0laXNSuQ3UQKdQ272IAn7dCLu8b6ZZ974jd1paY6884ab682si10HtY85Xe5) + " points]";
+			case 3:
+				return "[" + var3 + "] buy Berzerkola [" + var1.worldIn.func_7553_1Am4hwcD890pxiJ6yuW7PxUZYCDOP81V4cTtxj1Nx79vmSeJ3Q1x7o3bNkVz(this.field_8296_0laXNSuQ3UQKdQ272IAn7dCLu8b6ZZ974jd1paY6884ab682si10HtY85Xe5) + " points]";
+			case 4:
+				return "[" + var3 + "] buy Revive [" + var1.worldIn.func_7553_1Am4hwcD890pxiJ6yuW7PxUZYCDOP81V4cTtxj1Nx79vmSeJ3Q1x7o3bNkVz(this.field_8296_0laXNSuQ3UQKdQ272IAn7dCLu8b6ZZ974jd1paY6884ab682si10HtY85Xe5) + " points]";
+			default:
+				return "--";
+			}
+		}
+	}
+
+	public int func_8288_98t8S89tFW42rGL9ALNhVV7sJ5qB3j8Z10bg69FoU68e30R380Rp4L4Dn5kC() {
+		switch(EnumVendingMachineUnknownClass3.field_9819_6Ecx7VuG87M4Qa2PJ40n23uvU73przk4v42MDHptW0m8xI7Wq9zqailKsgX8[this.field_8296_0laXNSuQ3UQKdQ272IAn7dCLu8b6ZZ974jd1paY6884ab682si10HtY85Xe5.ordinal()]) {
+		case 1:
+			return 2;
+		case 2:
+			return 3;
+		case 3:
+			return 1;
+		case 4:
+			return 4;
+		default:
+			return -1;
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/EntityEssenceProjectile.java
@@ -1,0 +1,245 @@
+package net.minecraft.src;
+
+import java.util.List;
+
+public class EntityEssenceProjectile extends EntityFirable {
+	private int xTile = -1;
+	private int yTile = -1;
+	private int zTile = -1;
+	private int inTile = 0;
+	private boolean inData = false;
+	public int arrowShake = 0;
+	protected EntityLiving shootingEntity;
+	private int ticksInGround;
+	private int ticksInAir = 0;
+
+	public String getTexture() {
+		return "/item/essenceprojectile.png";
+	}
+
+	public EntityEssenceProjectile(World var1) {
+		super(var1);
+		this.setSize(0.5F, 0.5F);
+	}
+
+	public EntityEssenceProjectile(World var1, EntityLiving var2) {
+		super(var1);
+		this.shootingEntity = var2;
+		this.setSize(0.5F, 0.5F);
+		this.setLocationAndAngles(var2.posX, var2.posY, var2.posZ, var2.rotationYaw, var2.rotationPitch);
+		this.posX -= (double)(MathHelper.cos(this.rotationYaw / 180.0F * (float)Math.PI) * 0.16F);
+		this.posY -= (double)0.1F;
+		this.posZ -= (double)(MathHelper.sin(this.rotationYaw / 180.0F * (float)Math.PI) * 0.16F);
+		this.setPosition(this.posX, this.posY, this.posZ);
+		this.yOffset = 0.0F;
+		this.motionX = (double)(-MathHelper.sin(this.rotationYaw / 180.0F * (float)Math.PI) * MathHelper.cos(this.rotationPitch / 180.0F * (float)Math.PI));
+		this.motionZ = (double)(MathHelper.cos(this.rotationYaw / 180.0F * (float)Math.PI) * MathHelper.cos(this.rotationPitch / 180.0F * (float)Math.PI));
+		this.motionY = (double)(-MathHelper.sin(this.rotationPitch / 180.0F * (float)Math.PI));
+		this.setArrowHeading(this.motionX, this.motionY, this.motionZ, 1.5F, 1.0F);
+		var1.spawnParticle("smoke", this.posX, this.posY, this.posZ, 0.0D, 0.0D, 0.0D);
+	}
+
+	public void setArrowHeading(double var1, double var3, double var5, float var7, float var8) {
+		float var9 = MathHelper.sqrt_double(var1 * var1 + var3 * var3 + var5 * var5);
+		var1 /= (double)var9;
+		var3 /= (double)var9;
+		var5 /= (double)var9;
+		var1 += this.rand.nextGaussian() * (double)0.0075F * (double)var8;
+		var3 += this.rand.nextGaussian() * (double)0.0075F * (double)var8;
+		var5 += this.rand.nextGaussian() * (double)0.0075F * (double)var8;
+		var1 *= (double)var7;
+		var3 *= (double)var7;
+		var5 *= (double)var7;
+		this.motionX = var1;
+		this.motionY = var3;
+		this.motionZ = var5;
+		float var10 = MathHelper.sqrt_double(var1 * var1 + var5 * var5);
+		this.prevRotationYaw = this.rotationYaw = (float)(Math.atan2(var1, var5) * 180.0D / (double)((float)Math.PI));
+		this.prevRotationPitch = this.rotationPitch = (float)(Math.atan2(var3, (double)var10) * 180.0D / (double)((float)Math.PI));
+		this.ticksInGround = 0;
+	}
+
+	public void func_8874_6Ebe0odbY2EUO3qmpxe10pDrkZf8fG40cvC3Vs9w81CDBi21RFeLS4xtOLXH(Entity var1) {
+		this.worldObj.playSoundAtEntity(this.shootingEntity, "ext.hitmarker", 1.0F, 1.0F / (this.rand.nextFloat() * 0.4F + 0.8F));
+		var1.attackEntityFrom(this.shootingEntity, 6);
+	}
+
+	public void func_8873_6eY5d2OYeYZHd8IDe8f17E868eUf523yUKL1wb6yC0uPG7astDKYTonP19ir(double var1, double var3, double var5) {
+	}
+
+	public void onUpdate() {
+		super.onUpdate();
+		if(this.arrowShake > 0) {
+			--this.arrowShake;
+		}
+
+		if(this.inData) {
+			int var1 = this.worldObj.getBlockId(this.xTile, this.yTile, this.zTile);
+			if(var1 == this.inTile) {
+				++this.ticksInGround;
+				if(this.ticksInGround == 1200) {
+					this.setEntityDead();
+				}
+
+				return;
+			}
+
+			this.inData = false;
+			this.motionX *= (double)(this.rand.nextFloat() * 0.2F);
+			this.motionY *= (double)(this.rand.nextFloat() * 0.2F);
+			this.motionZ *= (double)(this.rand.nextFloat() * 0.2F);
+			this.ticksInGround = 0;
+			this.ticksInAir = 0;
+		} else {
+			++this.ticksInAir;
+		}
+
+		Vec3D var15 = Vec3D.createVector(this.posX, this.posY, this.posZ);
+		Vec3D var2 = Vec3D.createVector(this.posX + this.motionX, this.posY + this.motionY, this.posZ + this.motionZ);
+		MovingObjectPosition var3 = this.worldObj.rayTraceBlocks(var15, var2);
+		var15 = Vec3D.createVector(this.posX, this.posY, this.posZ);
+		var2 = Vec3D.createVector(this.posX + this.motionX, this.posY + this.motionY, this.posZ + this.motionZ);
+		if(var3 != null) {
+			var2 = Vec3D.createVector(var3.hitVec.xCoord, var3.hitVec.yCoord, var3.hitVec.zCoord);
+		}
+
+		Entity var4 = null;
+		List var5 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox.addCoord(this.motionX, this.motionY, this.motionZ).expand(1.0D, 1.0D, 1.0D));
+		double var6 = 0.0D;
+
+		float var8;
+		for(int var9 = 0; var9 < var5.size(); ++var9) {
+			Entity var10 = (Entity)var5.get(var9);
+			if(var10.canBeCollidedWith() && (var10 != this.shootingEntity || this.ticksInAir >= 5)) {
+				var8 = 0.3F;
+				AxisAlignedBB var11 = var10.boundingBox.expand((double)var8, (double)var8, (double)var8);
+				MovingObjectPosition var12 = var11.calculateIntercept(var15, var2);
+				if(var12 != null) {
+					double var13 = var15.distanceTo(var12.hitVec);
+					if(var13 < var6 || var6 == 0.0D) {
+						var4 = var10;
+						var6 = var13;
+					}
+				}
+			}
+		}
+
+		if(var4 != null) {
+			var3 = new MovingObjectPosition(var4);
+		}
+
+		if(var3 != null && var3.entityHit == null) {
+			this.xTile = var3.blockX;
+			this.yTile = var3.blockY;
+			this.zTile = var3.blockZ;
+			this.inTile = this.worldObj.getBlockId(this.xTile, this.yTile, this.zTile);
+			if(this.inTile == ExtBlocks.WireframeBlock2.blockID) {
+				var3 = null;
+			}
+		}
+
+		float var16;
+		if(var3 != null) {
+			this.xTile = var3.blockX;
+			this.yTile = var3.blockY;
+			this.zTile = var3.blockZ;
+			this.inTile = this.worldObj.getBlockId(this.xTile, this.yTile, this.zTile);
+			if(var3.entityHit != null) {
+				if(var3.entityHit instanceof EntityLiving) {
+					this.func_8874_6Ebe0odbY2EUO3qmpxe10pDrkZf8fG40cvC3Vs9w81CDBi21RFeLS4xtOLXH(var3.entityHit);
+					this.setEntityDead();
+				} else {
+					this.motionX *= (double)-0.1F;
+					this.motionY *= (double)-0.1F;
+					this.motionZ *= (double)-0.1F;
+					this.rotationYaw += 180.0F;
+					this.prevRotationYaw += 180.0F;
+					this.ticksInAir = 0;
+				}
+			} else {
+				this.motionX = (double)((float)(var3.hitVec.xCoord - this.posX));
+				this.motionY = (double)((float)(var3.hitVec.yCoord - this.posY));
+				this.motionZ = (double)((float)(var3.hitVec.zCoord - this.posZ));
+				var16 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionY * this.motionY + this.motionZ * this.motionZ);
+				this.posX -= this.motionX / (double)var16 * (double)0.05F;
+				this.posY -= this.motionY / (double)var16 * (double)0.05F;
+				this.posZ -= this.motionZ / (double)var16 * (double)0.05F;
+				this.func_8873_6eY5d2OYeYZHd8IDe8f17E868eUf523yUKL1wb6yC0uPG7astDKYTonP19ir((double)this.xTile, (double)this.yTile, (double)this.zTile);
+				this.inData = true;
+				this.arrowShake = 7;
+			}
+
+			this.worldObj.spawnParticle("smoke", this.posX, this.posY, this.posZ, 0.0D, 0.0D, 0.0D);
+			this.setEntityDead();
+		}
+
+		this.posX += this.motionX;
+		this.posY += this.motionY;
+		this.posZ += this.motionZ;
+		var16 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
+		this.rotationYaw = (float)(Math.atan2(this.motionX, this.motionZ) * 180.0D / (double)((float)Math.PI));
+
+		for(this.rotationPitch = (float)(Math.atan2(this.motionY, (double)var16) * 180.0D / (double)((float)Math.PI)); this.rotationPitch - this.prevRotationPitch < -180.0F; this.prevRotationPitch -= 360.0F) {
+		}
+
+		while(this.rotationPitch - this.prevRotationPitch >= 180.0F) {
+			this.prevRotationPitch += 360.0F;
+		}
+
+		while(this.rotationYaw - this.prevRotationYaw < -180.0F) {
+			this.prevRotationYaw -= 360.0F;
+		}
+
+		while(this.rotationYaw - this.prevRotationYaw >= 180.0F) {
+			this.prevRotationYaw += 360.0F;
+		}
+
+		this.rotationYaw = this.prevRotationYaw + (this.rotationYaw - this.prevRotationYaw) * 0.2F;
+		float var17 = 2.97F;
+		var8 = 0.03F;
+		if(this.handleWaterMovement()) {
+			for(int var18 = 0; var18 < 4; ++var18) {
+				float var19 = 0.25F;
+				this.worldObj.spawnParticle("bubble", this.posX - this.motionX * (double)var19, this.posY - this.motionY * (double)var19, this.posZ - this.motionZ * (double)var19, this.motionX, this.motionY, this.motionZ);
+			}
+
+			var17 = 0.8F;
+		}
+
+		this.motionX *= (double)var17;
+		this.motionY *= (double)var17;
+		this.motionZ *= (double)var17;
+		this.setPosition(this.posX, this.posY, this.posZ);
+	}
+
+	public void writeEntityToNBT(NBTTagCompound var1) {
+		var1.setShort("xTile", (short)this.xTile);
+		var1.setShort("yTile", (short)this.yTile);
+		var1.setShort("zTile", (short)this.zTile);
+		var1.setByte("inTile", (byte)this.inTile);
+		var1.setByte("shake", (byte)this.arrowShake);
+		var1.setByte("inGround", (byte)(this.inData ? 1 : 0));
+	}
+
+	public void readEntityFromNBT(NBTTagCompound var1) {
+		this.xTile = var1.getShort("xTile");
+		this.yTile = var1.getShort("yTile");
+		this.zTile = var1.getShort("zTile");
+		this.inTile = var1.getByte("inTile") & 255;
+		this.arrowShake = var1.getByte("shake") & 255;
+		this.inData = var1.getByte("inGround") == 1;
+	}
+
+	public void onCollideWithPlayer(EntityPlayer var1) {
+		if(this.inData && this.shootingEntity == var1 && this.arrowShake <= 0 && var1.inventory.addItemStackToInventory(new ItemStack(Item.arrow.shiftedIndex, 1))) {
+			this.worldObj.playSoundAtEntity(this, "random.pop", 0.2F, ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.7F + 1.0F) * 2.0F);
+			var1.onItemPickup(this, 1);
+			this.setEntityDead();
+		}
+
+	}
+
+	public float getShadowSize() {
+		return 0.0F;
+	}
+}
--- net/minecraft/src/BlockJukeBox.java
+++ net/minecraft/src/BlockJukeBox.java
@@ -40,5 +40,6 @@
 
 			super.dropBlockAsItemWithChance(var1, var2, var3, var4, var5, var6);
 		}
+
 	}
 }
--- /dev/null
+++ net/minecraft/src/HubFragment4WayCross.java
@@ -1,0 +1,34 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class HubFragment4WayCross implements HubFragment {
+	public List<XYZv> generateAt(World var1, XYZv var2) {
+		ArrayList var3 = new ArrayList();
+		Ext1605Utils.fillBlock(var1, var2, var2.add((new XYZv(5L, 0L, 5L)).rotateAroundXP(var2.v)), ExtBlocks.dimensionFloorBlock.blockID);
+		HubFragmentHallwayFwd var4 = new HubFragmentHallwayFwd();
+		if(var2.v != Direction.XP) {
+			var3.add(var4.generateAt(var1, var2.add(-6L, 0L, 0L).dir(Direction.XM)).get(0));
+		}
+
+		if(var2.v != Direction.XM) {
+			var3.add(var4.generateAt(var1, var2.add(6L, 0L, 0L).dir(Direction.XP)).get(0));
+		}
+
+		if(var2.v != Direction.ZM) {
+			var3.add(var4.generateAt(var1, var2.add(0L, 0L, 6L).dir(Direction.ZP)).get(0));
+		}
+
+		if(var2.v != Direction.ZP) {
+			var3.add(var4.generateAt(var1, var2.add((new XYZv(5L, 0L, -1L)).rotateAroundXP(var2.v)).dir(Direction.ZM)).get(0));
+		}
+
+		Ext1605Utils.fillBlock(var1, var2, var2, ExtBlocks.PillarBlock.blockID);
+		return var3;
+	}
+
+	public boolean canGenerateAt(World var1, XYZv var2) {
+		return Ext1605Utils.RTForBlocks(var1, var2.add(0L, 1L, 0L), var2.v, 6);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockRedstoneOreOld.java
@@ -1,0 +1,104 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockRedstoneOreOld extends BlockOld {
+	private boolean glowing;
+
+	public BlockRedstoneOreOld(int var1, int var2, boolean var3) {
+		super(var1, var2, Material.rock);
+		if(var3) {
+			this.setTickOnLoad(true);
+		}
+
+		this.glowing = var3;
+	}
+
+	public int tickRate() {
+		return 30;
+	}
+
+	public void onBlockClicked(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		this.glow(var1, var2, var3, var4);
+		super.onBlockClicked(var1, var2, var3, var4, var5);
+	}
+
+	public void onEntityWalking(World var1, int var2, int var3, int var4, Entity var5) {
+		this.glow(var1, var2, var3, var4);
+		super.onEntityWalking(var1, var2, var3, var4, var5);
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		this.glow(var1, var2, var3, var4);
+		return super.blockActivated(var1, var2, var3, var4, var5);
+	}
+
+	private void glow(World var1, int var2, int var3, int var4) {
+		this.sparkle(var1, var2, var3, var4);
+		if(this.blockID == BlockOld.oreRedstone.blockID) {
+			var1.setBlockWithNotify(var2, var3, var4, BlockOld.oreRedstoneGlowing.blockID);
+		}
+
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(this.blockID == BlockOld.oreRedstoneGlowing.blockID) {
+			var1.setBlockWithNotify(var2, var3, var4, BlockOld.oreRedstone.blockID);
+		}
+
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return Item.redstone.shiftedIndex;
+	}
+
+	public int quantityDropped(Random var1) {
+		return 4 + var1.nextInt(2);
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(this.glowing) {
+			this.sparkle(var1, var2, var3, var4);
+		}
+
+	}
+
+	private void sparkle(World var1, int var2, int var3, int var4) {
+		Random var5 = var1.rand;
+		double var6 = 1.0D / 16.0D;
+
+		for(int var8 = 0; var8 < 6; ++var8) {
+			double var9 = (double)((float)var2 + var5.nextFloat());
+			double var11 = (double)((float)var3 + var5.nextFloat());
+			double var13 = (double)((float)var4 + var5.nextFloat());
+			if(var8 == 0 && !var1.isBlockNormalCube(var2, var3 + 1, var4)) {
+				var11 = (double)(var3 + 1) + var6;
+			}
+
+			if(var8 == 1 && !var1.isBlockNormalCube(var2, var3 - 1, var4)) {
+				var11 = (double)(var3 + 0) - var6;
+			}
+
+			if(var8 == 2 && !var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+				var13 = (double)(var4 + 1) + var6;
+			}
+
+			if(var8 == 3 && !var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+				var13 = (double)(var4 + 0) - var6;
+			}
+
+			if(var8 == 4 && !var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+				var9 = (double)(var2 + 1) + var6;
+			}
+
+			if(var8 == 5 && !var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+				var9 = (double)(var2 + 0) - var6;
+			}
+
+			if(var9 < (double)var2 || var9 > (double)(var2 + 1) || var11 < 0.0D || var11 > (double)(var3 + 1) || var13 < (double)var4 || var13 > (double)(var4 + 1)) {
+				var1.spawnParticle("reddust", var9, var11, var13, 0.0D, 0.0D, 0.0D);
+			}
+		}
+
+	}
+}
--- net/minecraft/src/Packet21PickupSpawn.java
+++ net/minecraft/src/Packet21PickupSpawn.java
@@ -32,7 +32,7 @@
 
 	public void readPacketData(DataInputStream var1) throws IOException {
 		this.entityId = var1.readInt();
-		this.itemID = var1.readShort();
+		this.itemID = var1.readShort() & '\uffff';
 		this.count = var1.readByte();
 		this.xPosition = var1.readInt();
 		this.yPosition = var1.readInt();
--- net/minecraft/src/NetworkManager.java
+++ net/minecraft/src/NetworkManager.java
@@ -17,9 +17,9 @@
 	private DataInputStream socketInputStream;
 	private DataOutputStream socketOutputStream;
 	private boolean isRunning = true;
-	private List readPackets = Collections.synchronizedList(new LinkedList());
-	private List dataPackets = Collections.synchronizedList(new LinkedList());
-	private List chunkDataPackets = Collections.synchronizedList(new LinkedList());
+	private List<Packet> readPackets = Collections.synchronizedList(new LinkedList());
+	private List<Packet> dataPackets = Collections.synchronizedList(new LinkedList());
+	private List<Packet> chunkDataPackets = Collections.synchronizedList(new LinkedList());
 	private NetHandler netHandler;
 	private boolean isServerTerminating = false;
 	private Thread writeThread;
@@ -45,16 +45,17 @@
 	public void addToSendQueue(Packet var1) {
 		if(!this.isServerTerminating) {
 			Object var2 = this.sendQueueLock;
-			synchronized(var2) {
+			Object var3 = this.sendQueueLock;
+			synchronized(var3) {
 				this.sendQueueByteLength += var1.getPacketSize() + 1;
 				if(var1.isChunkDataPacket) {
 					this.chunkDataPackets.add(var1);
 				} else {
 					this.dataPackets.add(var1);
 				}
-
 			}
 		}
+
 	}
 
 	private void sendPacket() {
@@ -62,10 +63,12 @@
 			boolean var1 = true;
 			Packet var2;
 			Object var3;
+			Object var4;
 			if(!this.dataPackets.isEmpty()) {
 				var1 = false;
 				var3 = this.sendQueueLock;
-				synchronized(var3) {
+				var4 = this.sendQueueLock;
+				synchronized(var4) {
 					var2 = (Packet)this.dataPackets.remove(0);
 					this.sendQueueByteLength -= var2.getPacketSize() + 1;
 				}
@@ -76,7 +79,8 @@
 			if((var1 || this.chunkDataSendCounter-- <= 0) && !this.chunkDataPackets.isEmpty()) {
 				var1 = false;
 				var3 = this.sendQueueLock;
-				synchronized(var3) {
+				var4 = this.sendQueueLock;
+				synchronized(var4) {
 					var2 = (Packet)this.chunkDataPackets.remove(0);
 					this.sendQueueByteLength -= var2.getPacketSize() + 1;
 				}
@@ -88,10 +92,10 @@
 			if(var1) {
 				Thread.sleep(10L);
 			}
-		} catch (InterruptedException var8) {
-		} catch (Exception var9) {
+		} catch (InterruptedException var9) {
+		} catch (Exception var10) {
 			if(!this.isTerminating) {
-				this.onNetworkError(var9);
+				this.onNetworkError(var10);
 			}
 		}
 
@@ -115,7 +119,7 @@
 
 	private void onNetworkError(Exception var1) {
 		var1.printStackTrace();
-		this.networkShutdown("Internal exception: " + var1.toString());
+		this.networkShutdown("Internal exception: " + var1);
 	}
 
 	public void networkShutdown(String var1) {
@@ -139,8 +143,8 @@
 				this.networkSocket.close();
 			} catch (Throwable var3) {
 			}
-
 		}
+
 	}
 
 	public void processReadPackets() {
--- /dev/null
+++ net/minecraft/src/EntityObserver.java
@@ -1,0 +1,163 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class EntityObserver extends EntityMob {
+	public boolean unusedBool2 = false;
+	final int timeUnit = 55;
+	public EntityLiving stalkingTarget = null;
+	public long currentlyStalkingFor = 0L;
+	public int stalkingState = 0;
+	public boolean firstAttack = true;
+	public XYZv lloc = null;
+
+	public EntityObserver(World var1) {
+		super(var1);
+		this.texture = "/mob/observer.png";
+		this.setSize(1.0F, 2.0F);
+		this.moveSpeed = 3.0F;
+	}
+
+	protected EntityPlayer locatePlayerToStalk() {
+		return (EntityPlayer)(!this.worldObj.multiplayerWorld ? InputHandler.mc.thePlayer : this.worldObj.getClosestPlayerToEntity(this, 64.0D));
+	}
+
+	protected void attackEntity(Entity var1, float var2) {
+		this.attackStrength = this.firstAttack ? 0 : 2;
+		this.firstAttack = false;
+		super.attackEntity(var1, var2);
+	}
+
+	public boolean attackEntityFrom(Entity var1, int var2) {
+		if(var1 != null && var1 != this.stalkingTarget && var1 instanceof EntityLiving) {
+			this.stalkingTarget = (EntityLiving)var1;
+			this.currentlyStalkingFor = 550L;
+		}
+
+		boolean var3 = super.attackEntityFrom(var1, var2);
+		if(this.dead && var1 instanceof EntityPlayer) {
+			((EntityPlayer)var1).observerCooldown -= 2000L;
+		}
+
+		return var3;
+	}
+
+	protected Entity findPlayerToAttack() {
+		return null;
+	}
+
+	public void writeEntityToNBT(NBTTagCompound var1) {
+		var1.setLong("ObservationTimer", this.currentlyStalkingFor);
+		var1.setBoolean("CommencedAttack", this.firstAttack);
+		var1.setBoolean("HasLLoc", this.lloc != null);
+		if(this.lloc != null) {
+			var1.setLong("llocx", this.lloc.x);
+			var1.setLong("llocy", this.lloc.y);
+			var1.setLong("llocz", this.lloc.z);
+		}
+
+		super.writeEntityToNBT(var1);
+	}
+
+	public void readEntityFromNBT(NBTTagCompound var1) {
+		this.currentlyStalkingFor = var1.getLong("ObservationTimer");
+		this.firstAttack = var1.getBoolean("CommencedAttack");
+		boolean var2 = var1.getBoolean("HasLLoc");
+		if(var2) {
+			this.lloc = new XYZv(var1.getLong("llocx"), var1.getLong("llocy"), var1.getLong("llocz"));
+		}
+
+		super.readEntityFromNBT(var1);
+	}
+
+	protected String getHurtSound() {
+		return "mob.skeletonhurt";
+	}
+
+	protected String getDeathSound() {
+		return "mob.skeletonhurt";
+	}
+
+	protected float getSoundVolume() {
+		return 0.4F;
+	}
+
+	public boolean interact(EntityPlayer var1) {
+		return false;
+	}
+
+	public void Relocate(int var1) {
+		Object var2 = this.stalkingTarget == null ? this : this.stalkingTarget;
+		Random var3 = new Random();
+		int var4 = (int)((Entity)var2).posX + var1 * (var3.nextInt(3) - 1);
+		int var5 = (int)((Entity)var2).posZ + var1 * (var3.nextInt(3) - 1);
+		if(var4 == (int)((Entity)var2).posX && (double)var5 == ((Entity)var2).posZ) {
+			var5 += 8;
+		}
+
+		int var6;
+		for(var6 = (int)((Entity)var2).posY; Ext1605Utils.NotFullBlock(this.worldObj.getBlockId(var4, var6, var5)) && var6 != 0; --var6) {
+		}
+
+		while(!Ext1605Utils.NotFullBlock(this.worldObj.getBlockId(var4, var6, var5)) && var6 != 128) {
+			++var6;
+		}
+
+		this.lloc = new XYZv((long)var4, (long)var6, (long)var5);
+		this.setPosition((double)var4, (double)var6, (double)var5);
+	}
+
+	protected boolean shouldInheritEASUpdate() {
+		return false;
+	}
+
+	public float maxPathFindingDistance() {
+		return 64.0F;
+	}
+
+	public void onLivingUpdate() {
+		if(this.stalkingTarget == null) {
+			this.stalkingTarget = this.locatePlayerToStalk();
+			this.currentlyStalkingFor = 0L;
+			this.firstAttack = true;
+		} else {
+			if(this.currentlyStalkingFor > 550L) {
+				this.entityToAttack = this.stalkingTarget;
+			} else {
+				this.entityToAttack = null;
+				++this.currentlyStalkingFor;
+				if(this.currentlyStalkingFor > 550L) {
+					this.worldObj.playSoundAtEntity(this, "ext.obvr_attack", 1.0F, 1.0F);
+				}
+
+				if(this.getDistanceToEntity(this.stalkingTarget) < 4.0F) {
+					this.currentlyStalkingFor += 55L;
+					this.Relocate(8 * (11 - this.stalkingState));
+				}
+
+				int var1 = this.stalkingState;
+				this.stalkingState = 1 + (int)(this.currentlyStalkingFor / 55L);
+				if(var1 != this.stalkingState) {
+					this.Relocate(5 + 3 * (11 - this.stalkingState));
+				}
+
+				if(this.lloc != null) {
+					this.setPosition((double)this.lloc.x, (double)this.lloc.y, (double)this.lloc.z);
+				}
+			}
+
+			double var3 = Math.atan2(this.posX - this.stalkingTarget.posX, -(this.posZ - this.stalkingTarget.posZ)) / Math.PI * 180.0D;
+			this.setRotation((float)var3, 0.0F);
+		}
+
+		super.onLivingUpdate();
+	}
+
+	protected int getDropItemId() {
+		return ExtItems.ObserverFur.shiftedIndex;
+	}
+
+	public int getEssenceDroppedOnKill() {
+		return 19 + this.rand.nextInt(5);
+	}
+}
--- /dev/null
+++ net/minecraft/src/FreerunMap1.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+import java.io.File;
+
+public class FreerunMap1 extends FreerunWorld {
+	private NamedLoc[] checkpoints = new NamedLoc[]{new NamedLoc(-84, 97, 49, "spawn"), new NamedLoc(-124, 97, 50, -125, 95, 49, "checkpoint1"), new NamedLoc(-132, 94, 81, -135, 100, 82, "checkpoint2"), new NamedLoc(-130, 91, 94, -127, 94, 97, "checkpoint3"), new NamedLoc(-85, 86, 79, -87, 89, 83, "checkpoint4"), new NamedLoc(-112, 102, 56, -117, 107, 54, "end")};
+
+	public FreerunMap1(File var1, String var2) {
+		super(var1, var2);
+	}
+
+	public NamedLoc[] getCheckpoints() {
+		return this.checkpoints;
+	}
+
+	public int getResetY(long var1, long var3) {
+		return 78;
+	}
+}
--- net/minecraft/src/EntityFallingSand.java
+++ net/minecraft/src/EntityFallingSand.java
@@ -60,8 +60,8 @@
 				this.dropItem(this.blockID, 1);
 				this.setEntityDead();
 			}
-
 		}
+
 	}
 
 	protected void writeEntityToNBT(NBTTagCompound var1) {
--- net/minecraft/src/EntitySpider.java
+++ net/minecraft/src/EntitySpider.java
@@ -38,21 +38,19 @@
 		float var3 = this.getBrightness(1.0F);
 		if(var3 > 0.5F && this.rand.nextInt(100) == 0) {
 			this.entityToAttack = null;
-		} else {
-			if(var2 > 2.0F && var2 < 6.0F && this.rand.nextInt(10) == 0) {
-				if(this.onGround) {
-					double var4 = var1.posX - this.posX;
-					double var6 = var1.posZ - this.posZ;
-					float var8 = MathHelper.sqrt_double(var4 * var4 + var6 * var6);
-					this.motionX = var4 / (double)var8 * 0.5D * (double)0.8F + this.motionX * (double)0.2F;
-					this.motionZ = var6 / (double)var8 * 0.5D * (double)0.8F + this.motionZ * (double)0.2F;
-					this.motionY = (double)0.4F;
-				}
-			} else {
-				super.attackEntity(var1, var2);
+		} else if(var2 > 2.0F && var2 < 6.0F && this.rand.nextInt(10) == 0) {
+			if(this.onGround) {
+				double var4 = var1.posX - this.posX;
+				double var6 = var1.posZ - this.posZ;
+				float var8 = MathHelper.sqrt_double(var4 * var4 + var6 * var6);
+				this.motionX = var4 / (double)var8 * 0.5D * (double)0.8F + this.motionX * (double)0.2F;
+				this.motionZ = var6 / (double)var8 * 0.5D * (double)0.8F + this.motionZ * (double)0.2F;
+				this.motionY = (double)0.4F;
 			}
-
+		} else {
+			super.attackEntity(var1, var2);
 		}
+
 	}
 
 	public void writeEntityToNBT(NBTTagCompound var1) {
@@ -65,5 +63,9 @@
 
 	protected int getDropItemId() {
 		return Item.silk.shiftedIndex;
+	}
+
+	public int getEssenceDroppedOnKill() {
+		return 8 + this.rand.nextInt(4);
 	}
 }
--- net/minecraft/src/CraftingManager.java
+++ net/minecraft/src/CraftingManager.java
@@ -7,7 +7,7 @@
 
 public class CraftingManager {
 	private static final CraftingManager instance = new CraftingManager();
-	private List recipes = new ArrayList();
+	private List<CraftingRecipe> recipes = new ArrayList();
 
 	public static final CraftingManager getInstance() {
 		return instance;
@@ -20,11 +20,12 @@
 		(new RecipesFood()).addRecipes(this);
 		(new RecipesCrafting()).addRecipes(this);
 		(new RecipesArmor()).addRecipes(this);
+		ModLoader.AddAllRecipes(this);
 		this.addRecipe(new ItemStack(Item.paper, 3), new Object[]{"###", Character.valueOf('#'), Item.reed});
 		this.addRecipe(new ItemStack(Item.book, 1), new Object[]{"#", "#", "#", Character.valueOf('#'), Item.paper});
 		this.addRecipe(new ItemStack(Block.fence, 2), new Object[]{"###", "###", Character.valueOf('#'), Item.stick});
 		this.addRecipe(new ItemStack(Block.jukebox, 1), new Object[]{"###", "#X#", "###", Character.valueOf('#'), Block.planks, Character.valueOf('X'), Item.diamond});
-		this.addRecipe(new ItemStack(Block.bookshelf, 1), new Object[]{"###", "XXX", "###", Character.valueOf('#'), Block.planks, Character.valueOf('X'), Item.book});
+		this.addRecipe(new ItemStack(Block.bookshelf, 1), new Object[]{"###", "XXX", "###", Character.valueOf('#'), Block.planks, Character.valueOf('X'), Block.cloth});
 		this.addRecipe(new ItemStack(Block.blockSnow, 1), new Object[]{"##", "##", Character.valueOf('#'), Item.snowball});
 		this.addRecipe(new ItemStack(Block.blockClay, 1), new Object[]{"##", "##", Character.valueOf('#'), Item.clay});
 		this.addRecipe(new ItemStack(Block.brick, 1), new Object[]{"##", "##", Character.valueOf('#'), Item.brick});
@@ -57,60 +58,74 @@
 		this.addRecipe(new ItemStack(Item.compass, 1), new Object[]{" # ", "#X#", " # ", Character.valueOf('#'), Item.ingotIron, Character.valueOf('X'), Item.redstone});
 		this.addRecipe(new ItemStack(Block.button, 1), new Object[]{"#", "#", Character.valueOf('#'), Block.stone});
 		this.addRecipe(new ItemStack(Block.pressurePlateStone, 1), new Object[]{"###", Character.valueOf('#'), Block.stone});
-		this.addRecipe(new ItemStack(Block.pressurePlateWood, 1), new Object[]{"###", Character.valueOf('#'), Block.planks});
+		this.addRecipe(new ItemStack(Block.pressurePlateWood, 1), new Object[]{"###", Character.valueOf('#'), Block.wood});
+		ExtCraftingRecipes.RegisterCrafting(this);
 		Collections.sort(this.recipes, new RecipeSorter(this));
 		System.out.println(this.recipes.size() + " recipes");
 	}
 
-	void addRecipe(ItemStack var1, Object... var2) {
-		String var3 = "";
-		int var4 = 0;
+	public void addShapelessRecipe(ItemStack var1, Object... var2) {
+		this.addRecipe(false, var1, var2);
+	}
+
+	public void addRecipe(ItemStack var1, Object... var2) {
+		this.addRecipe(true, var1, var2);
+	}
+
+	public void addRecipe(boolean var1, ItemStack var2, Object... var3) {
+		String var4 = "";
 		int var5 = 0;
 		int var6 = 0;
-		if(var2[var4] instanceof String[]) {
-			String[] var11 = (String[])((String[])var2[var4++]);
+		int var7 = 0;
+		int var9;
+		if(var3[var5] instanceof String[]) {
+			String[] var12 = (String[])var3[var5++];
 
-			for(int var8 = 0; var8 < var11.length; ++var8) {
-				String var9 = var11[var8];
-				++var6;
-				var5 = var9.length();
-				var3 = var3 + var9;
+			for(var9 = 0; var9 < var12.length; ++var9) {
+				String var10 = var12[var9];
+				++var7;
+				var6 = var10.length();
+				var4 = var4 + var10;
 			}
 		} else {
-			while(var2[var4] instanceof String) {
-				String var7 = (String)var2[var4++];
-				++var6;
-				var5 = var7.length();
-				var3 = var3 + var7;
-			}
-		}
-
-		HashMap var12;
-		int var15;
-		for(var12 = new HashMap(); var4 < var2.length; var4 += 2) {
-			Character var13 = (Character)var2[var4];
-			var15 = 0;
-			if(var2[var4 + 1] instanceof Item) {
-				var15 = ((Item)var2[var4 + 1]).shiftedIndex;
-			} else if(var2[var4 + 1] instanceof Block) {
-				var15 = ((Block)var2[var4 + 1]).blockID;
-			}
-
-			var12.put(var13, Integer.valueOf(var15));
-		}
-
-		int[] var14 = new int[var5 * var6];
-
-		for(var15 = 0; var15 < var5 * var6; ++var15) {
-			char var10 = var3.charAt(var15);
-			if(var12.containsKey(Character.valueOf(var10))) {
-				var14[var15] = ((Integer)var12.get(Character.valueOf(var10))).intValue();
+			while(var3[var5] instanceof String) {
+				String var8 = (String)var3[var5++];
+				++var7;
+				var6 = var8.length();
+				var4 = var4 + var8;
+			}
+		}
+
+		HashMap var13;
+		for(var13 = new HashMap(); var5 < var3.length; var5 += 2) {
+			Character var14 = (Character)var3[var5];
+			var9 = 0;
+			if(var3[var5 + 1] instanceof Item) {
+				var9 = ((Item)var3[var5 + 1]).shiftedIndex;
+			} else if(var3[var5 + 1] instanceof Block) {
+				var9 = ((Block)var3[var5 + 1]).blockID;
+			}
+
+			var13.put(var14, Integer.valueOf(var9));
+		}
+
+		int[] var15 = new int[var6 * var7];
+
+		for(var9 = 0; var9 < var6 * var7; ++var9) {
+			char var11 = var4.charAt(var9);
+			if(var13.containsKey(Character.valueOf(var11))) {
+				var15[var9] = ((Integer)var13.get(Character.valueOf(var11))).intValue();
 			} else {
-				var14[var15] = -1;
+				var15[var9] = -1;
 			}
 		}
 
-		this.recipes.add(new CraftingRecipe(var5, var6, var14, var1));
+		if(var1) {
+			this.recipes.add(new CraftingRecipe(var6, var7, var15, var2));
+		} else {
+			this.recipes.add(new ShapelessCraftingRecipe(var6, var7, var15, var2));
+		}
+
 	}
 
 	public ItemStack findMatchingRecipe(int[] var1) {
--- /dev/null
+++ net/minecraft/src/EntityModel.java
@@ -1,0 +1,13 @@
+package net.minecraft.src;
+
+public class EntityModel<T> {
+	public static LayerDefinition createBodyLayer() {
+		return null;
+	}
+
+	public void setupAnim(T var1, float var2, float var3, float var4, float var5, float var6) {
+	}
+
+	public void renderToBuffer(PoseStack var1, VertexConsumer var2, int var3, int var4, float var5, float var6, float var7, float var8) {
+	}
+}
--- /dev/null
+++ net/minecraft/src/CustomTriggerValueMode.java
@@ -1,0 +1,45 @@
+package net.minecraft.src;
+
+public enum CustomTriggerValueMode {
+	OFF(0),
+	Rigid(1),
+	RigidA(2),
+	RigidB(3),
+	RigidAB(4),
+	Pulse(5),
+	PulseA(6),
+	PulseB(7),
+	PulseAB(8),
+	VibrateResistance(9),
+	VibrateResistanceA(10),
+	VibrateResistanceB(11),
+	VibrateResistanceAB(12),
+	VibratePulse(13),
+	VibratePulseA(14),
+	VibratePulsB(15),
+	VibratePulseAB(16);
+
+	int index;
+
+    private static final /* synthetic */ CustomTriggerValueMode[] field_11458_2KlfFJDFGnk4GDmrGB892b50a4fmN16M928iYPR6Gw8zmFiclVf394M00qEu;
+
+	public static CustomTriggerValueMode[] func_11445_5jQHdt1xcve0NRN6hAqei326dThZ6ulP5xJN8b4e576rwz1lVN3G8UP0W3TG() {
+		return (CustomTriggerValueMode[])field_11458_2KlfFJDFGnk4GDmrGB892b50a4fmN16M928iYPR6Gw8zmFiclVf394M00qEu.clone();
+	}
+
+	public static CustomTriggerValueMode func_11444_1XuIZ99siG7BESZj268f6T9eqS2OFPIqzh7535EAH79nQS8rv5p5cwtGco4q(String var0) {
+		return (CustomTriggerValueMode)Enum.valueOf(CustomTriggerValueMode.class, var0);
+	}
+
+	private CustomTriggerValueMode(int var3) {
+		this.index = var3;
+	}
+
+	private static CustomTriggerValueMode[] func_11446_7C9Q4e1VvvXN3lOv7xWJ50iFW8BmlBKmt9HrK8jp8A278RD9S910g259v57T() {
+		return new CustomTriggerValueMode[]{OFF, Rigid, RigidA, RigidB, RigidAB, Pulse, PulseA, PulseB, PulseAB, VibrateResistance, VibrateResistanceA, VibrateResistanceB, VibrateResistanceAB, VibratePulse, VibratePulseA, VibratePulsB, VibratePulseAB};
+	}
+
+    static {
+        field_11458_2KlfFJDFGnk4GDmrGB892b50a4fmN16M928iYPR6Gw8zmFiclVf394M00qEu = CustomTriggerValueMode.func_11446_7C9Q4e1VvvXN3lOv7xWJ50iFW8BmlBKmt9HrK8jp8A278RD9S910g259v57T();
+    }
+}
--- net/minecraft/src/TileEntitySpecialRenderer.java
+++ net/minecraft/src/TileEntitySpecialRenderer.java
@@ -10,7 +10,7 @@
 		var2.bindTexture(var2.getTexture(var1));
 	}
 
-	public void setTileEntityRenderer(TileEntityRenderer var1) {
+	public void setTileEntityRendere(TileEntityRenderer var1) {
 		this.tileEntityRenderer = var1;
 	}
 
--- /dev/null
+++ net/minecraft/src/ScreenItemCheat.java
@@ -1,0 +1,236 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+import org.lwjgl.opengl.GL11;
+
+public class ScreenItemCheat extends GuiScreen {
+	public Minecraft mc;
+	private RenderBlocks blockRendererBlurryTroll = new RenderBlocks();
+	private boolean createButtons = true;
+	private int lastCols = -1;
+	private int lastRows = -1;
+	private int lastNOfPages = -1;
+	private long rotateTimer = -1L;
+	private boolean selectingBlocks = true;
+	private boolean resetButtons = false;
+	private int currentPage = 0;
+
+	public ScreenItemCheat(Minecraft var1) {
+		this.mc = var1;
+	}
+
+	public void DottyIfYouDontKnowWhatsGoingOnHere_NeitherDoI(int var1, int var2, int var3, int var4, int var5, int var6, float var7) {
+		Tessellator var8 = Tessellator.instance;
+		float var9 = 0.00390625F;
+		float var10 = 1.0F / var7;
+		var8.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+		var8.addVertexWithUV((double)(var1 + 0), (double)(var2 + var6), 0.0D, (double)((float)(var3 + 0) * var9), (double)((float)(var4 + var6) * var10));
+		var8.addVertexWithUV((double)(var1 + var5), (double)(var2 + var6), 0.0D, (double)((float)(var3 + var5) * var9), (double)((float)(var4 + var6) * var10));
+		var8.addVertexWithUV((double)(var1 + var5), (double)(var2 + 0), 0.0D, (double)((float)(var3 + var5) * var9), (double)((float)(var4 + 0) * var10));
+		var8.addVertexWithUV((double)(var1 + 0), (double)(var2 + 0), 0.0D, (double)((float)(var3 + 0) * var9), (double)((float)(var4 + 0) * var10));
+		var8.setNormal(0.0F, 1.0F, 0.0F);
+		var8.draw();
+	}
+
+	public void RenderTheFunny(Block var1) {
+		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L));
+		int var2 = var1.blockIndexInTexture;
+		this.DottyIfYouDontKnowWhatsGoingOnHere_NeitherDoI(0, 0, var2 % 16 * 16, var2 / 16 * 16, 16, 16, 512.0F);
+	}
+
+	public void RenderTheItem(Item var1) {
+		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/items.png"));
+		int var2 = var1.iconIndex;
+		this.DottyIfYouDontKnowWhatsGoingOnHere_NeitherDoI(0, 0, var2 % 16 * 16, var2 / 16 * 16, 16, 16, 256.0F);
+	}
+
+	public int nthExistingBlock(int var1) {
+		int var2 = 0;
+
+		for(int var3 = 1; var3 != Short.MAX_VALUE; ++var3) {
+			if(Block.blocksList[var3] != null && var3 != 120) {
+				++var2;
+			}
+
+			if(var2 == var1 + 1) {
+				return var3;
+			}
+		}
+
+		return -1;
+	}
+
+	public int nOfExistingBlocks() {
+		int var1 = 0;
+
+		for(int var2 = 1; var2 != Short.MAX_VALUE; ++var2) {
+			if(Block.blocksList[var2] != null && var2 != 120) {
+				++var1;
+			}
+		}
+
+		return var1;
+	}
+
+	public int nthExistingItem(int var1) {
+		int var2 = 0;
+
+		for(int var3 = Short.MAX_VALUE; var3 != Item.itemsList.length; ++var3) {
+			if(Item.itemsList[var3] != null) {
+				++var2;
+			}
+
+			if(var2 == var1 + 1) {
+				return var3;
+			}
+		}
+
+		return -1;
+	}
+
+	public int nOfExistingItems() {
+		int var1 = 0;
+
+		for(int var2 = Short.MAX_VALUE; var2 != Item.itemsList.length; ++var2) {
+			if(Item.itemsList[var2] != null) {
+				++var1;
+			}
+		}
+
+		return var1;
+	}
+
+	public boolean doesGuiPauseGame() {
+		return false;
+	}
+
+	protected void actionPerformed(GuiButton var1) {
+		if(var1.enabled) {
+			if(var1.id == 2) {
+				this.resetButtons = true;
+				this.selectingBlocks = true;
+			} else if(var1.id == 3) {
+				this.resetButtons = true;
+				this.selectingBlocks = false;
+			} else if(var1.id == 4) {
+				this.currentPage = this.currentPage == 0 ? this.lastNOfPages - 1 : --this.currentPage;
+				this.resetButtons = true;
+			} else if(var1.id == 5) {
+				++this.currentPage;
+				this.currentPage %= this.lastNOfPages;
+				this.resetButtons = true;
+			}
+
+			ItemStack var2 = null;
+			if(var1.id >= 4096) {
+				var2 = new ItemStack(Item.itemsList[var1.id - 4096], 1);
+			} else if(var1.id >= 2048) {
+				var2 = new ItemStack(Block.blocksList[var1.id - 2048], 64);
+			}
+
+			if(var2 != null) {
+				if(InputHandler.field_9759_4OT0vPMcJ68s5EU822c0Y9Asw74Su111s3rRCw8OSGMsYM8lx153p73RBtj3) {
+					this.mc.thePlayer.inventory.addItemStackToInventory(var2);
+				} else {
+					this.mc.thePlayer.dropPlayerItemWithRandomChoice(var2, true);
+				}
+			}
+
+		}
+	}
+
+	public void drawScreen(int var1, int var2, float var3) {
+		if(this.rotateTimer == -1L) {
+			this.rotateTimer = System.currentTimeMillis();
+		}
+
+		float var4 = Math.min((float)(System.currentTimeMillis() - this.rotateTimer) / 100.0F, 1.0F);
+		drawGradientRect(0, (int)((float)this.height * (1.0F - var4)), this.width, this.height, 1614823488, 1612718112);
+		this.drawCenteredString(this.fontRenderer, "Palette", this.width / 2, 15, 16777215);
+		this.drawCenteredString(this.fontRenderer, "" + this.currentPage, 208, 35, 16777215);
+		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L));
+		int var5 = (this.width - 18) / 32;
+		int var6 = (this.height - 50) / 23;
+		if(var5 != 0 && var6 != 0) {
+			int var7 = (this.selectingBlocks ? this.nOfExistingBlocks() : this.nOfExistingItems()) / (var5 * var6) + 1;
+			if(this.lastCols != var5 || this.lastRows != var6 || this.resetButtons) {
+				this.lastNOfPages = var7;
+				this.lastCols = var5;
+
+				for(this.lastRows = var6; var7 <= this.currentPage; --this.currentPage) {
+				}
+
+				this.controlList.clear();
+				this.createButtons = true;
+				this.resetButtons = false;
+			}
+
+			if(this.createButtons) {
+				this.controlList.add(new ButtonSel(2, 18, 30, "Blocks"));
+				this.controlList.add(new ButtonSel(3, 68, 30, "Items"));
+				this.controlList.add(new ButtonSel(4, 148, 30, "<<"));
+				this.controlList.add(new ButtonSel(5, 218, 30, ">>"));
+				((GuiButton)this.controlList.get(this.selectingBlocks ? 0 : 1)).enabled = false;
+				((GuiButton)this.controlList.get(3)).enabled = var7 != 1;
+				((GuiButton)this.controlList.get(2)).enabled = ((GuiButton)this.controlList.get(3)).enabled;
+			}
+
+			int var8 = this.currentPage * var5 * var6;
+
+			for(int var9 = 0; var9 != var5 * var6; ++var9) {
+				float var10;
+				int var12;
+				if(this.selectingBlocks) {
+					var12 = this.nthExistingBlock(var8 + var9);
+					if(var12 == -1) {
+						break;
+					}
+
+					Block var11 = Block.blocksList[var12];
+					boolean var13 = RenderBlocks.renderItemIn3d(((Block)var11).getRenderType()) || ((Block)var11).getRenderType() == 1 || ((Block)var11).getRenderType() == 2 || ((Block)var11).getRenderType() == 14;
+					var10 = 18.0F + 32.0F * (float)(var9 % var5);
+					float var14 = 50.0F + 23.0F * (float)(var9 / var5);
+					if(this.createButtons) {
+						this.controlList.add(new ButtonItemCheat(2048 + var12, (int)var10, (int)var14, "", var12, this));
+					}
+
+					GL11.glPushMatrix();
+					if(var13) {
+						GL11.glTranslatef(var10 + 14.0F, var14 + 8.0F, 16.0F);
+						GL11.glScalef(16.0F, 16.0F, 16.0F);
+						GL11.glRotatef(180.0F, 0.0F, 0.0F, 1.0F);
+						GL11.glRotatef(30.0F, -1.0F, -1.0F, 0.0F);
+						float var15 = (float)(System.currentTimeMillis() - this.rotateTimer) / 13000.0F * 360.0F;
+						GL11.glRotatef(var15, 0.0F, -1.0F, 0.0F);
+						this.blockRendererBlurryTroll.renderBlockOnInventory((Block)var11);
+					} else {
+						GL11.glTranslatef(var10 + 5.0F, var14, 13.0F);
+						this.RenderTheFunny((Block)var11);
+					}
+
+					GL11.glPopMatrix();
+				} else {
+					var12 = this.nthExistingItem(var8 + var9);
+					if(var12 == -1) {
+						break;
+					}
+
+					Item var16 = Item.itemsList[var12];
+					float var17 = 18.0F + 32.0F * (float)(var9 % var5);
+					var10 = 50.0F + 23.0F * (float)(var9 / var5);
+					if(this.createButtons) {
+						this.controlList.add(new ButtonItemCheat(4096 + var12, (int)var17, (int)var10, "", var12, this));
+					}
+
+					GL11.glPushMatrix();
+					GL11.glTranslatef(var17 + 5.0F, var10, 13.0F);
+					this.RenderTheItem((Item)var16);
+					GL11.glPopMatrix();
+				}
+			}
+
+			this.createButtons = false;
+			super.drawScreen(var1, var2, var3);
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandTitle.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandTitle extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8585_3V0f53eJmu4iDg7AmHFH55SGy88b1S0gV1RIUM59SuEbCun03Et2HzIX7w7l;
+    
+    CommandTitle(final CommandManager abb) {
+        this.field_8585_3V0f53eJmu4iDg7AmHFH55SGy88b1S0gV1RIUM59SuEbCun03Et2HzIX7w7l = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.func_7248_2y5vE7Yn817r5Knu79o4Aj1C8zSXCZv983MY0Ng8eMzo5U95JWt5FIuSSHqv((String)arr[0]);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/GenSky.java
@@ -1,0 +1,31 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class GenSky extends WorldGenerator {
+	private int a;
+
+	public GenSky(int var1) {
+		this.a = var1;
+	}
+
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		for(int var6 = 0; var6 < 4; ++var6) {
+			int var7 = var3 + var2.nextInt(8) - var2.nextInt(8);
+			int var8 = var4 + var2.nextInt(4) - var2.nextInt(4);
+			int var9 = var5 + var2.nextInt(8) - var2.nextInt(8);
+			boolean var10 = false;
+			if(var8 > 90) {
+				var10 = true;
+			} else if(var8 > 80) {
+				var10 = var2.nextInt(100) > 80;
+			}
+
+			if(var10 && var1.getBlockId(var7, var8, var9) == 0) {
+				var1.setBlock(var7, var8, var9, this.a);
+			}
+		}
+
+		return true;
+	}
+}
--- /dev/null
+++ net/minecraft/src/EssenceClonerInventoryCB.java
@@ -1,0 +1,102 @@
+package net.minecraft.src;
+
+public class EssenceClonerInventoryCB extends InventoryCB {
+	public InventoryEssenceCloner craftMatrix = new InventoryEssenceCloner(this, 3, 1);
+	public EssenceCloneResult craftResult = new EssenceCloneResult(this);
+	public boolean collectingResults = true;
+
+	public void a(IInventory var1) {
+		int var2;
+		if(var1 == this.craftResult) {
+			if(!this.collectingResults) {
+				this.collectingResults = true;
+
+				for(var2 = 0; var2 != 3; ++var2) {
+					this.craftMatrix.setInventorySlotContents(var2, (ItemStack)null, false);
+				}
+
+			}
+		} else {
+			if(this.collectingResults) {
+				this.collectingResults = false;
+
+				for(var2 = 0; var2 != 3; ++var2) {
+					if(this.craftResult.stackResult[var2] != null) {
+						this.collectingResults = true;
+					}
+				}
+
+				if(this.collectingResults) {
+					return;
+				}
+			}
+
+			ItemStack var10 = null;
+			int var3 = 0;
+			boolean var4 = true;
+			ItemStack[] var5 = this.craftMatrix.stackList;
+			int var6 = var5.length;
+
+			for(int var7 = 0; var7 < var6; ++var7) {
+				ItemStack var8 = var5[var7];
+				if(var8 != null) {
+					if(var8.itemID == ExtBlocks.EssenceBlock.blockID) {
+						var3 += 9 * var8.stackSize;
+					} else if(var8.itemID == ExtItems.essence.shiftedIndex) {
+						var3 += var8.stackSize;
+					} else {
+						if(var10 != null) {
+							var4 = false;
+							break;
+						}
+
+						var10 = var8;
+					}
+				}
+			}
+
+			if(var10 == null || var3 <= 0) {
+				var4 = false;
+			}
+
+			int var11;
+			if(var4) {
+				var11 = var3 / var10.getEssenceValue();
+				var6 = var3 % var10.getEssenceValue();
+				ItemStack var12 = new ItemStack(var10.getItem(), var10.stackSize + var11);
+				this.craftResult.setInventorySlotContents(0, var12);
+				if(var6 != 0) {
+					if(var6 <= 64) {
+						this.craftResult.setInventorySlotContents(1, new ItemStack(ExtItems.essence, var6));
+						this.craftResult.setInventorySlotContents(2, (ItemStack)null);
+					} else {
+						int var13 = var6 / 9;
+						int var9 = var6 % 9;
+						this.craftResult.setInventorySlotContents(1, new ItemStack(ExtBlocks.EssenceBlock, var13));
+						this.craftResult.setInventorySlotContents(2, new ItemStack(ExtItems.essence, var9));
+					}
+				}
+			} else {
+				for(var11 = 0; var11 != 3; ++var11) {
+					this.craftResult.setInventorySlotContents(var11, (ItemStack)null);
+				}
+			}
+
+		}
+	}
+
+	public void onCraftGuiClosed(EntityPlayer var1) {
+		InventoryPlayer var2 = var1.inventory;
+		if(var2.draggedItemStack != null) {
+			var1.dropPlayerItem(var2.draggedItemStack);
+		}
+
+		for(int var3 = 0; var3 < 3; ++var3) {
+			ItemStack var4 = this.craftMatrix.getStackInSlot(var3);
+			if(var4 != null) {
+				var1.dropPlayerItem(var4);
+			}
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/Packet7SendSkinRequest.java
@@ -1,0 +1,45 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.nio.file.Files;
+import java.nio.file.Paths;
+
+public class Packet7SendSkinRequest extends Packet {
+	public String targetName;
+
+	public Packet7SendSkinRequest() {
+	}
+
+	public Packet7SendSkinRequest(String var1) {
+		this.targetName = var1;
+	}
+
+	public void readPacketData(DataInputStream var1) throws IOException {
+		this.targetName = var1.readUTF();
+	}
+
+	public void writePacket(DataOutputStream var1) throws IOException {
+		var1.writeUTF(this.targetName);
+	}
+
+	public void processPacket(NetHandler var1) {
+		Packet8RespondSkinRequest var2;
+		try {
+			byte[] var3 = Files.readAllBytes(Paths.get("/skins/" + this.targetName + ".png", new String[0]));
+			var2 = new Packet8RespondSkinRequest(this.targetName, var3);
+		} catch (IOException var4) {
+			var2 = new Packet8RespondSkinRequest(this.targetName, (byte[])null);
+		}
+
+		if(var1 instanceof NetClientHandler) {
+			((NetClientHandler)var1).addToSendQueue(var2);
+		}
+
+	}
+
+	public int getPacketSize() {
+		return 2 + this.targetName.length();
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockButtonOld.java
@@ -1,0 +1,230 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockButtonOld extends BlockOld {
+	protected BlockButtonOld(int var1, int var2) {
+		super(var1, var2, Material.circuits);
+		this.setTickOnLoad(true);
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public int tickRate() {
+		return 20;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return var1.isBlockNormalCube(var2 - 1, var3, var4) ? true : (var1.isBlockNormalCube(var2 + 1, var3, var4) ? true : (var1.isBlockNormalCube(var2, var3, var4 - 1) ? true : var1.isBlockNormalCube(var2, var3, var4 + 1)));
+	}
+
+	public void onBlockPlaced(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		int var7 = var6 & 8;
+		var6 &= 7;
+		if(var5 == 2 && var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+			var6 = 4;
+		}
+
+		if(var5 == 3 && var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+			var6 = 3;
+		}
+
+		if(var5 == 4 && var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+			var6 = 2;
+		}
+
+		if(var5 == 5 && var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+			var6 = 1;
+		}
+
+		var1.setBlockMetadataWithNotify(var2, var3, var4, var6 + var7);
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		if(var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 1);
+		} else if(var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 2);
+		} else if(var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 3);
+		} else if(var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, 4);
+		}
+
+		this.checkIfAttachedToBlock(var1, var2, var3, var4);
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		if(this.checkIfAttachedToBlock(var1, var2, var3, var4)) {
+			int var6 = var1.getBlockMetadata(var2, var3, var4) & 7;
+			boolean var7 = false;
+			if(!var1.isBlockNormalCube(var2 - 1, var3, var4) && var6 == 1) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2 + 1, var3, var4) && var6 == 2) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3, var4 - 1) && var6 == 3) {
+				var7 = true;
+			}
+
+			if(!var1.isBlockNormalCube(var2, var3, var4 + 1) && var6 == 4) {
+				var7 = true;
+			}
+
+			if(var7) {
+				this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+				var1.setBlockWithNotify(var2, var3, var4, 0);
+			}
+		}
+
+	}
+
+	private boolean checkIfAttachedToBlock(World var1, int var2, int var3, int var4) {
+		if(!this.canPlaceBlockAt(var1, var2, var3, var4)) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	public void setBlockBoundsBasedOnState(IBlockAccess var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		int var6 = var5 & 7;
+		boolean var7 = (var5 & 8) > 0;
+		float var8 = 6.0F / 16.0F;
+		float var9 = 10.0F / 16.0F;
+		float var10 = 3.0F / 16.0F;
+		float var11 = 2.0F / 16.0F;
+		if(var7) {
+			var11 = 1.0F / 16.0F;
+		}
+
+		if(var6 == 1) {
+			this.setBlockBounds(0.0F, var8, 0.5F - var10, var11, var9, 0.5F + var10);
+		} else if(var6 == 2) {
+			this.setBlockBounds(1.0F - var11, var8, 0.5F - var10, 1.0F, var9, 0.5F + var10);
+		} else if(var6 == 3) {
+			this.setBlockBounds(0.5F - var10, var8, 0.0F, 0.5F + var10, var9, var11);
+		} else if(var6 == 4) {
+			this.setBlockBounds(0.5F - var10, var8, 1.0F - var11, 0.5F + var10, var9, 1.0F);
+		}
+
+	}
+
+	public void onBlockClicked(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		this.blockActivated(var1, var2, var3, var4, var5);
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		int var7 = var6 & 7;
+		int var8 = 8 - (var6 & 8);
+		if(var8 == 0) {
+			return true;
+		} else {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, var7 + var8);
+			var1.markBlocksDirty(var2, var3, var4, var2, var3, var4);
+			var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "random.click", 0.3F, 0.6F);
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
+			if(var7 == 1) {
+				var1.notifyBlocksOfNeighborChange(var2 - 1, var3, var4, this.blockID);
+			} else if(var7 == 2) {
+				var1.notifyBlocksOfNeighborChange(var2 + 1, var3, var4, this.blockID);
+			} else if(var7 == 3) {
+				var1.notifyBlocksOfNeighborChange(var2, var3, var4 - 1, this.blockID);
+			} else if(var7 == 4) {
+				var1.notifyBlocksOfNeighborChange(var2, var3, var4 + 1, this.blockID);
+			} else {
+				var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+			}
+
+			var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
+			return true;
+		}
+	}
+
+	public void onBlockRemoval(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		if((var5 & 8) > 0) {
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
+			int var6 = var5 & 7;
+			if(var6 == 1) {
+				var1.notifyBlocksOfNeighborChange(var2 - 1, var3, var4, this.blockID);
+			} else if(var6 == 2) {
+				var1.notifyBlocksOfNeighborChange(var2 + 1, var3, var4, this.blockID);
+			} else if(var6 == 3) {
+				var1.notifyBlocksOfNeighborChange(var2, var3, var4 - 1, this.blockID);
+			} else if(var6 == 4) {
+				var1.notifyBlocksOfNeighborChange(var2, var3, var4 + 1, this.blockID);
+			} else {
+				var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+			}
+		}
+
+		super.onBlockRemoval(var1, var2, var3, var4);
+	}
+
+	public boolean isPoweringTo(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		return (var1.getBlockMetadata(var2, var3, var4) & 8) > 0;
+	}
+
+	public boolean isIndirectlyPoweringTo(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		if((var6 & 8) == 0) {
+			return false;
+		} else {
+			int var7 = var6 & 7;
+			return var7 == 5 && var5 == 1 ? true : (var7 == 4 && var5 == 2 ? true : (var7 == 3 && var5 == 3 ? true : (var7 == 2 && var5 == 4 ? true : var7 == 1 && var5 == 5)));
+		}
+	}
+
+	public boolean canProvidePower() {
+		return true;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		if((var6 & 8) != 0) {
+			var1.setBlockMetadataWithNotify(var2, var3, var4, var6 & 7);
+			var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
+			int var7 = var6 & 7;
+			if(var7 == 1) {
+				var1.notifyBlocksOfNeighborChange(var2 - 1, var3, var4, this.blockID);
+			} else if(var7 == 2) {
+				var1.notifyBlocksOfNeighborChange(var2 + 1, var3, var4, this.blockID);
+			} else if(var7 == 3) {
+				var1.notifyBlocksOfNeighborChange(var2, var3, var4 - 1, this.blockID);
+			} else if(var7 == 4) {
+				var1.notifyBlocksOfNeighborChange(var2, var3, var4 + 1, this.blockID);
+			} else {
+				var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+			}
+
+			var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "random.click", 0.3F, 0.5F);
+			var1.markBlocksDirty(var2, var3, var4, var2, var3, var4);
+		}
+	}
+
+	public void setBlockBoundsForItemRender() {
+		float var1 = 3.0F / 16.0F;
+		float var2 = 2.0F / 16.0F;
+		float var3 = 2.0F / 16.0F;
+		this.setBlockBounds(0.5F - var1, 0.5F - var2, 0.5F - var3, 0.5F + var1, 0.5F + var2, 0.5F + var3);
+	}
+}
--- net/minecraft/src/IBlockAccess.java
+++ net/minecraft/src/IBlockAccess.java
@@ -5,6 +5,8 @@
 
 	TileEntity getBlockTileEntity(int var1, int var2, int var3);
 
+	float getRenderSideBrightness(int var1, int var2, int var3);
+
 	float getBrightness(int var1, int var2, int var3);
 
 	int getBlockMetadata(int var1, int var2, int var3);
@@ -12,4 +14,6 @@
 	Material getBlockMaterial(int var1, int var2, int var3);
 
 	boolean isBlockNormalCube(int var1, int var2, int var3);
+
+	BiomeInterface func_7342_9805301CWs03An9555qIw883P54dcq9802DkM5DuquNweM1NH26RH6oP02mr();
 }
--- /dev/null
+++ net/minecraft/src/OverlayFreerunClient.java
@@ -1,0 +1,47 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+
+public class OverlayFreerunClient {
+	private Minecraft tmc;
+
+	public OverlayFreerunClient(Minecraft var1) {
+		this.tmc = var1;
+	}
+
+	public String timeString(long var1) {
+		long var3 = var1 / 20L;
+		long var5 = var3 / 60L;
+		String var7 = Long.toString(var5);
+		if(var7.length() == 1) {
+			var7 = "0" + var7;
+		}
+
+		String var8 = Long.toString(var3 % 60L);
+		if(var8.length() == 1) {
+			var8 = "0" + var8;
+		}
+
+		int var9 = (int)((float)(var1 % 20L) / 20.0F * 1000.0F);
+
+		String var10;
+		for(var10 = Integer.toString(var9); var10.length() < 3; var10 = "0" + var10) {
+		}
+
+		return var7 + ":" + var8 + "." + var10;
+	}
+
+	public void RenderOverlay(GuiIngame var1, int var2, int var3) {
+		FontRenderer var4 = this.tmc.fontRenderer;
+		EntityPlayerFreerunClient var5 = (EntityPlayerFreerunClient)InputHandler.mc.thePlayer;
+		String var6;
+		if(!var5.countingTime) {
+			var6 = "Time: " + this.timeString(var5.finalTime);
+			GuiIngame.drawString(var4, var6, var2 / 2 - var4.getStringWidth(var6) / 2, var3 / 4, 16777215);
+		} else {
+			var6 = "Time: " + this.timeString(var5.worldIn.worldTime - var5.timerStartTicks);
+			GuiIngame.drawString(var4, var6, var2 / 2 - var4.getStringWidth(var6) / 2, var3 / 4, 16777215);
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandMcPlaymus.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandMcPlaymus extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8557_5190D4n4SoeLxueaYS8l65frYn186Pwg39496299XskGE0a6moE2vWeewlu8;
+    
+    CommandMcPlaymus(final CommandManager abb) {
+        this.field_8557_5190D4n4SoeLxueaYS8l65frYn186Pwg39496299XskGE0a6moE2vWeewlu8 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.sndManager.playMusic((String)arr[0]);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/ItemHearthenMirror.java
@@ -1,0 +1,16 @@
+package net.minecraft.src;
+
+public class ItemHearthenMirror extends Item {
+	public ItemHearthenMirror(int var1) {
+		super(var1);
+		this.maxStackSize = 1;
+	}
+
+	public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+		InputHandler.mc.theWorld.spawnX = (int)InputHandler.mc.thePlayer.posX;
+		InputHandler.mc.theWorld.spawnY = (int)InputHandler.mc.thePlayer.posY;
+		InputHandler.mc.theWorld.spawnZ = (int)InputHandler.mc.thePlayer.posZ;
+		InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("New Spawn Set!", 4000);
+		return var1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/GuiImageHandler.java
@@ -1,0 +1,48 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+import org.lwjgl.opengl.GL11;
+
+public class GuiImageHandler {
+	public String field_9956_15GOe6410z7Fl452j2yZISN60Abc7m54nek0mM34PB830a3aHI564YEQpTcg = "";
+	public long field_9959_2z7m6wy9hEF64p5bkN18lT8hue918wvfCi32Y1F8YZ1lMx74F677nBk1mCoy = -1L;
+	public float field_9958_8arD5y78p7HE19V4H5j2EB2Pen1H6kuEwfZr9ydTpK7yv06H116Bv2UwgTTO = 1500.0F;
+	public Minecraft field_9957_88TKCe15qwkF3hWV6s4r2KV2Z3oh19W2eAvR7XN4tik6u229COobx4z3PX45;
+
+	public GuiImageHandler(Minecraft var1, String var2, float var3) {
+		this.field_9956_15GOe6410z7Fl452j2yZISN60Abc7m54nek0mM34PB830a3aHI564YEQpTcg = var2;
+		this.field_9958_8arD5y78p7HE19V4H5j2EB2Pen1H6kuEwfZr9ydTpK7yv06H116Bv2UwgTTO = var3;
+		this.field_9959_2z7m6wy9hEF64p5bkN18lT8hue918wvfCi32Y1F8YZ1lMx74F677nBk1mCoy = System.currentTimeMillis();
+		this.field_9957_88TKCe15qwkF3hWV6s4r2KV2Z3oh19W2eAvR7XN4tik6u229COobx4z3PX45 = var1;
+	}
+
+	public void func_9955_5630DX5SV053d8F74A11907j9t7039N0rdr37W800V11wnAC9AhArcyC6F5W(String var1) {
+		this.field_9956_15GOe6410z7Fl452j2yZISN60Abc7m54nek0mM34PB830a3aHI564YEQpTcg = var1;
+		this.field_9959_2z7m6wy9hEF64p5bkN18lT8hue918wvfCi32Y1F8YZ1lMx74F677nBk1mCoy = System.currentTimeMillis();
+	}
+
+	public void func_9954_31xL9lqzsd832NIF2fnqGsFer65B6pP9dW8u4402h7H3mW9p6ZjIZK9RM2zT(int var1, int var2) {
+		if(!this.field_9956_15GOe6410z7Fl452j2yZISN60Abc7m54nek0mM34PB830a3aHI564YEQpTcg.isEmpty()) {
+			GL11.glDisable(GL11.GL_LIGHTING);
+			GL11.glDisable(GL11.GL_FOG);
+			Tessellator var3 = Tessellator.instance;
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.field_9957_88TKCe15qwkF3hWV6s4r2KV2Z3oh19W2eAvR7XN4tik6u229COobx4z3PX45.renderEngine.getTexture(this.field_9956_15GOe6410z7Fl452j2yZISN60Abc7m54nek0mM34PB830a3aHI564YEQpTcg));
+			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+			var3.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+			var3.setColorOpaque_I(7368816);
+			var3.addVertexWithUV(0.0D, (double)var2, 0.0D, 0.0D, 1.0D);
+			var3.addVertexWithUV((double)var1, (double)var2, 0.0D, 1.0D, 1.0D);
+			var3.addVertexWithUV((double)var1, 0.0D, 0.0D, 1.0D, 0.0D);
+			var3.addVertexWithUV(0.0D, 0.0D, 0.0D, 0.0D, 0.0D);
+			var3.draw();
+			float var4 = 1.0F - (float)(System.currentTimeMillis() - this.field_9959_2z7m6wy9hEF64p5bkN18lT8hue918wvfCi32Y1F8YZ1lMx74F677nBk1mCoy) / this.field_9958_8arD5y78p7HE19V4H5j2EB2Pen1H6kuEwfZr9ydTpK7yv06H116Bv2UwgTTO;
+			if(var4 < 0.0F) {
+				var4 = 0.0F;
+			}
+
+			int var5 = (int)(255.0F * var4) * 16777216;
+			Gui.drawRect(0, 0, var1, var2, var5);
+		}
+
+	}
+}
--- net/minecraft/src/TileEntity.java
+++ net/minecraft/src/TileEntity.java
@@ -4,15 +4,15 @@
 import java.util.Map;
 
 public class TileEntity {
-	private static Map nameToClassMap = new HashMap();
-	private static Map classToNameMap = new HashMap();
+	private static Map<String, Class<? extends TileEntity>> nameToClassMap = new HashMap();
+	private static Map<Class<? extends TileEntity>, String> classToNameMap = new HashMap();
 	public World worldObj;
 	public int xCoord;
 	public int yCoord;
 	public int zCoord;
 
-	private static void addMapping(Class var0, String var1) {
-		if(classToNameMap.containsKey(var1)) {
+	private static void addMapping(Class<? extends TileEntity> var0, String var1) {
+		if(nameToClassMap.containsKey(var1)) {
 			throw new IllegalArgumentException("Duplicate id: " + var1);
 		} else {
 			nameToClassMap.put(var1, var0);
@@ -86,5 +86,8 @@
 		addMapping(TileEntityChest.class, "Chest");
 		addMapping(TileEntitySign.class, "Sign");
 		addMapping(TileEntityMobSpawner.class, "MobSpawner");
+		addMapping(TileEntityEssenceFountain.class, "EssenceFountain");
+		addMapping(TileEntityFreezer.class, "Freezer");
+		ModLoader.RegisterAllTileEntities();
 	}
 }
--- /dev/null
+++ net/minecraft/src/GuiInGameUnknownClass2.java
@@ -1,0 +1,14 @@
+package net.minecraft.src;
+
+public class GuiInGameUnknownClass2 {
+	public String field_8629_38yXZ5dFY9GgxhmHS221M01TS31EN5EQ169OUGe5B07fwQaCd3Y2DMP0SnB5;
+	public int field_8630_3VXD2Ebm4sq1Ua61nY0XjjdZz4zX5u1B4NPjzd6i9nYHZZV1Z4rOO6r4NkAR;
+	public int field_8627_0ZmECs21Yya5NZUsnBNbB5tPFhkwONMzlzVXHX4jsV5aynDc020B97BLqocx;
+	public long field_8628_5D60yv253cRcGA1p2c559jzTJvqGE369RAfPv6g62Q8uXkc617ON6RdFwLZq = -1L;
+
+	public GuiInGameUnknownClass2(String var1, int var2, int var3) {
+		this.field_8629_38yXZ5dFY9GgxhmHS221M01TS31EN5EQ169OUGe5B07fwQaCd3Y2DMP0SnB5 = var1;
+		this.field_8630_3VXD2Ebm4sq1Ua61nY0XjjdZz4zX5u1B4NPjzd6i9nYHZZV1Z4rOO6r4NkAR = var2;
+		this.field_8627_0ZmECs21Yya5NZUsnBNbB5tPFhkwONMzlzVXHX4jsV5aynDc020B97BLqocx = var3;
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandManagerUnknownClass.java
@@ -1,0 +1,13 @@
+package net.minecraft.src;
+
+public class CommandManagerUnknownClass {
+	public String field_12024_1q5eqd4V75vh5r0RkoHJF19l4S347yEp0rA4sR70sQOr8jdcCj1Z12u5PSx9;
+	public Class<?>[] field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640;
+	public CommandUnknownClass field_12023_4a6hGbi1yf1wisYXW788UpKE9grOBLI6J908Opcn8Zv63ROZKy49K6Z3M3gz;
+
+	public CommandManagerUnknownClass(String var1, Class<?>[] var2, CommandUnknownClass var3) {
+		this.field_12024_1q5eqd4V75vh5r0RkoHJF19l4S347yEp0rA4sR70sQOr8jdcCj1Z12u5PSx9 = var1;
+		this.field_12025_8woh0R80d6qkLeqjZZxcI1UyY5akRtO536j0MS1hjq593yQObx6xE0Qk6640 = var2;
+		this.field_12023_4a6hGbi1yf1wisYXW788UpKE9grOBLI6J908Opcn8Zv63ROZKy49K6Z3M3gz = var3;
+	}
+}
--- /dev/null
+++ net/minecraft/src/QueuedChange.java
@@ -1,0 +1,15 @@
+package net.minecraft.src;
+
+public class QueuedChange {
+	public int x;
+	public int y;
+	public int z;
+	public int id;
+
+	public QueuedChange(int var1, int var2, int var3, int var4) {
+		this.x = var1;
+		this.y = var2;
+		this.z = var3;
+		this.id = var4;
+	}
+}
--- /dev/null
+++ net/minecraft/src/DS5Packet.java
@@ -1,0 +1,26 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class DS5Packet {
+	public List<DS5Instruction> ds5Instructions = new ArrayList();
+
+	public void AddInstruction(DS5Instruction var1) {
+		this.ds5Instructions.add(var1);
+	}
+
+	public String buildJSON() {
+		String var1 = "{\"instructions\":[";
+
+		for(int var2 = 0; var2 != this.ds5Instructions.size(); ++var2) {
+			var1 = var1 + ((DS5Instruction)this.ds5Instructions.get(var2)).GetJSON();
+			if(var2 != this.ds5Instructions.size() - 1) {
+				var1 = var1 + ",";
+			}
+		}
+
+		var1 = var1 + "]}";
+		return var1;
+	}
+}
--- net/minecraft/src/MinecartTrackLogic.java
+++ net/minecraft/src/MinecartTrackLogic.java
@@ -3,13 +3,13 @@
 import java.util.ArrayList;
 import java.util.List;
 
-class MinecartTrackLogic {
+public class MinecartTrackLogic {
 	private World worldObj;
 	private int trackX;
 	private int trackY;
 	private int trackZ;
 	private int trackMetadata;
-	private List connectedTracks;
+	private List<ChunkPosition> connectedTracks;
 	final BlockMinecartTrack minecartTrack;
 
 	public MinecartTrackLogic(BlockMinecartTrack var1, World var2, int var3, int var4, int var5) {
@@ -317,7 +317,7 @@
 
 	}
 
-	static int getNAdjacentTracks(MinecartTrackLogic var0) {
+	public static int getNAdjacentTracks(MinecartTrackLogic var0) {
 		return var0.getAdjacentTracks();
 	}
 }
--- net/minecraft/src/ItemBucket.java
+++ net/minecraft/src/ItemBucket.java
@@ -23,25 +23,25 @@
 		float var16 = -MathHelper.cos(-var5 * ((float)Math.PI / 180.0F));
 		float var17 = MathHelper.sin(-var5 * ((float)Math.PI / 180.0F));
 		float var18 = var15 * var16;
-		float var20 = var14 * var16;
-		double var21 = 5.0D;
-		Vec3D var23 = var13.addVector((double)var18 * var21, (double)var17 * var21, (double)var20 * var21);
-		MovingObjectPosition var24 = var2.rayTraceBlocks_do(var13, var23, this.isFull == 0);
-		if(var24 == null) {
+		float var19 = var14 * var16;
+		double var20 = 5.0D;
+		Vec3D var22 = var13.addVector((double)var18 * var20, (double)var17 * var20, (double)var19 * var20);
+		MovingObjectPosition var23 = var2.rayTraceBlocks_do(var13, var22, this.isFull == 0);
+		if(var23 == null) {
 			return var1;
 		} else {
-			if(var24.typeOfHit == 0) {
-				int var25 = var24.blockX;
-				int var26 = var24.blockY;
-				int var27 = var24.blockZ;
+			if(var23.typeOfHit == 0) {
+				int var24 = var23.blockX;
+				int var25 = var23.blockY;
+				int var26 = var23.blockZ;
 				if(this.isFull == 0) {
-					if(var2.getBlockMaterial(var25, var26, var27) == Material.water && var2.getBlockMetadata(var25, var26, var27) == 0) {
-						var2.setBlockWithNotify(var25, var26, var27, 0);
+					if(var2.getBlockMaterial(var24, var25, var26) == Material.water && var2.getBlockMetadata(var24, var25, var26) == 0) {
+						var2.setBlockWithNotify(var24, var25, var26, 0);
 						return new ItemStack(Item.bucketWater);
 					}
 
-					if(var2.getBlockMaterial(var25, var26, var27) == Material.lava && var2.getBlockMetadata(var25, var26, var27) == 0) {
-						var2.setBlockWithNotify(var25, var26, var27, 0);
+					if(var2.getBlockMaterial(var24, var25, var26) == Material.lava && var2.getBlockMetadata(var24, var25, var26) == 0) {
+						var2.setBlockWithNotify(var24, var25, var26, 0);
 						return new ItemStack(Item.bucketLava);
 					}
 				} else {
@@ -49,36 +49,36 @@
 						return new ItemStack(Item.bucketEmpty);
 					}
 
-					if(var24.sideHit == 0) {
-						--var26;
-					}
-
-					if(var24.sideHit == 1) {
-						++var26;
-					}
-
-					if(var24.sideHit == 2) {
-						--var27;
-					}
-
-					if(var24.sideHit == 3) {
-						++var27;
-					}
-
-					if(var24.sideHit == 4) {
+					if(var23.sideHit == 0) {
 						--var25;
 					}
 
-					if(var24.sideHit == 5) {
+					if(var23.sideHit == 1) {
 						++var25;
 					}
 
-					if(var2.getBlockId(var25, var26, var27) == 0 || !var2.getBlockMaterial(var25, var26, var27).isSolid()) {
-						var2.setBlockAndMetadataWithNotify(var25, var26, var27, this.isFull, 0);
+					if(var23.sideHit == 2) {
+						--var26;
+					}
+
+					if(var23.sideHit == 3) {
+						++var26;
+					}
+
+					if(var23.sideHit == 4) {
+						--var24;
+					}
+
+					if(var23.sideHit == 5) {
+						++var24;
+					}
+
+					if(var2.getBlockId(var24, var25, var26) == 0 || !var2.getBlockMaterial(var24, var25, var26).isSolid()) {
+						var2.setBlockAndMetadataWithNotify(var24, var25, var26, this.isFull, 0);
 						return new ItemStack(Item.bucketEmpty);
 					}
 				}
-			} else if(this.isFull == 0 && var24.entityHit instanceof EntityCow) {
+			} else if(this.isFull == 0 && var23.entityHit instanceof EntityCow) {
 				return new ItemStack(Item.bucketMilk);
 			}
 
--- /dev/null
+++ net/minecraft/src/Direction.java
@@ -1,0 +1,40 @@
+package net.minecraft.src;
+
+public enum Direction {
+	XP(0),
+	ZP(1),
+	XM(2),
+	ZM(3);
+
+	public final int direction;
+
+    private static final /* synthetic */ Direction[] field_11028_22jwMo3j3i2mJ1QA0Y8bYlm6bn5KGA15I2WmRiU6uC1uE04TR47nciPpo8Ua;
+
+	public static Direction[] func_11027_56m65k9Ou637f37XQ47WkX21C47228QlJJpaFt35G2542pYC3e5bn29f7FA0() {
+		return (Direction[])field_11028_22jwMo3j3i2mJ1QA0Y8bYlm6bn5KGA15I2WmRiU6uC1uE04TR47nciPpo8Ua.clone();
+	}
+
+	public static Direction func_11026_9ctUhTz3cvi5J23EP4vEgGHEHeO5IuYo1BzkvXl2J1fIbo09vFFvEbPMax9W(String var0) {
+		return (Direction)Enum.valueOf(Direction.class, var0);
+	}
+
+	private Direction(int var3) {
+		this.direction = var3;
+	}
+
+	public static Direction rotate(Direction var0, int var1) {
+		int var2;
+		for(var2 = (var0.direction + var1) % 4; var2 < 0; var2 += 4) {
+		}
+
+		return func_11027_56m65k9Ou637f37XQ47WkX21C47228QlJJpaFt35G2542pYC3e5bn29f7FA0()[var2];
+	}
+
+	private static Direction[] func_11024_3jWFQ89k23q78955h40i6jR092yW5VoaTDE8hgINAuV3598J0pYZi3OJPpxk() {
+		return new Direction[]{XP, ZP, XM, ZM};
+	}
+
+    static {
+        field_11028_22jwMo3j3i2mJ1QA0Y8bYlm6bn5KGA15I2WmRiU6uC1uE04TR47nciPpo8Ua = Direction.func_11024_3jWFQ89k23q78955h40i6jR092yW5VoaTDE8hgINAuV3598J0pYZi3OJPpxk();
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockOld.java
@@ -1,0 +1,484 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.Random;
+
+public class BlockOld {
+	public static final StepSound soundPowderFootstep = new StepSound("stone", 1.0F, 1.0F);
+	public static final StepSound soundWoodFootstep = new StepSound("wood", 1.0F, 1.0F);
+	public static final StepSound soundGravelFootstep = new StepSound("gravel", 1.0F, 1.0F);
+	public static final StepSound soundGrassFootstep = new StepSound("grass", 1.0F, 1.0F);
+	public static final StepSound soundStoneFootstep = new StepSound("stone", 1.0F, 1.0F);
+	public static final StepSound soundMetalFootstep = new StepSound("stone", 1.0F, 1.5F);
+	public static final StepSound soundGlassFootstep = new StepSoundGlass("stone", 1.0F, 1.0F);
+	public static final StepSound soundClothFootstep = new StepSound("cloth", 1.0F, 1.0F);
+	public static final StepSound soundSandFootstep = new StepSoundSand("sand", 1.0F, 1.0F);
+	public static final BlockOld[] blocksList = new BlockOld[256];
+	public static final boolean[] tickOnLoad = new boolean[256];
+	public static final boolean[] opaqueCubeLookup = new boolean[256];
+	public static final boolean[] isBlockContainer = new boolean[256];
+	public static final int[] lightOpacity = new int[256];
+	public static final boolean[] canBlockGrass = new boolean[256];
+	public static final int[] lightValue = new int[256];
+	public static final BlockOld stone = (new BlockStoneOld(1, 1)).setHardness(1.5F).setResistance(10.0F).setStepSound(soundStoneFootstep);
+	public static final BlockGrassOld grass = (BlockGrassOld)(new BlockGrassOld(2)).setHardness(0.6F).setStepSound(soundGrassFootstep);
+	public static final BlockOld dirt = (new BlockDirtOld(3, 2)).setHardness(0.5F).setStepSound(soundGravelFootstep);
+	public static final BlockOld cobblestone = (new BlockOld(4, 16, Material.rock)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep);
+	public static final BlockOld planks = (new BlockOld(5, 4, Material.wood)).setHardness(2.0F).setResistance(5.0F).setStepSound(soundWoodFootstep);
+	public static final BlockOld sapling = (new BlockSaplingOld(6, 15)).setHardness(0.0F).setStepSound(soundGrassFootstep);
+	public static final BlockOld bedrock = (new BlockOld(7, 17, Material.rock)).setHardness(-1.0F).setResistance(6000000.0F).setStepSound(soundStoneFootstep);
+	public static final BlockOld waterMoving = (new BlockFlowingOld(8, Material.water)).setHardness(100.0F).setLightOpacity(3);
+	public static final BlockOld waterStill = (new BlockStationaryOld(9, Material.water)).setHardness(100.0F).setLightOpacity(3);
+	public static final BlockOld lavaMoving = (new BlockFlowingOld(10, Material.lava)).setHardness(0.0F).setLightValue(1.0F).setLightOpacity(255);
+	public static final BlockOld lavaStill = (new BlockStationaryOld(11, Material.lava)).setHardness(100.0F).setLightValue(1.0F).setLightOpacity(255);
+	public static final BlockOld sand = (new BlockSandOld(12, 18)).setHardness(0.5F).setStepSound(soundSandFootstep);
+	public static final BlockOld gravel = (new BlockGravelOld(13, 19)).setHardness(0.6F).setStepSound(soundGravelFootstep);
+	public static final BlockOld oreGold = (new BlockOreOld(14, 32)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep);
+	public static final BlockOld oreIron = (new BlockOreOld(15, 33)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep);
+	public static final BlockOld oreCoal = (new BlockOreOld(16, 34)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep);
+	public static final BlockOld wood = (new BlockLogOld(17)).setHardness(2.0F).setStepSound(soundWoodFootstep);
+	public static final BlockLeavesOld leaves = (BlockLeavesOld)(new BlockLeavesOld(18, 52)).setHardness(0.2F).setLightOpacity(1).setStepSound(soundGrassFootstep);
+	public static final BlockOld sponge = (new BlockSpongeOld(19)).setHardness(0.6F).setStepSound(soundGrassFootstep);
+	public static final BlockOld glass = (new BlockGlassOld(20, 49, Material.glass, false)).setHardness(0.3F).setStepSound(soundGlassFootstep);
+	public static final BlockOld clothRed = null;
+	public static final BlockOld clothOrange = null;
+	public static final BlockOld clothYellow = null;
+	public static final BlockOld clothChartreuse = null;
+	public static final BlockOld clothGreen = null;
+	public static final BlockOld clothSpringGreen = null;
+	public static final BlockOld clothCyan = null;
+	public static final BlockOld clothCapri = null;
+	public static final BlockOld clothUltramarine = null;
+	public static final BlockOld clothViolet = null;
+	public static final BlockOld clothPurple = null;
+	public static final BlockOld clothMagenta = null;
+	public static final BlockOld clothRose = null;
+	public static final BlockOld clothDarkGray = null;
+	public static final BlockOld cloth = (new BlockOld(35, 64, Material.cloth)).setHardness(0.8F).setStepSound(soundClothFootstep);
+	public static final BlockOld clothWhite = null;
+	public static final BlockFlowerOld plantYellow = (BlockFlowerOld)(new BlockFlowerOld(37, 13)).setHardness(0.0F).setStepSound(soundGrassFootstep);
+	public static final BlockFlowerOld plantRed = (BlockFlowerOld)(new BlockFlowerOld(38, 12)).setHardness(0.0F).setStepSound(soundGrassFootstep);
+	public static final BlockFlowerOld mushroomBrown = (BlockFlowerOld)(new BlockMushroomOld(39, 29)).setHardness(0.0F).setStepSound(soundGrassFootstep).setLightValue(2.0F / 16.0F);
+	public static final BlockFlowerOld mushroomRed = (BlockFlowerOld)(new BlockMushroomOld(40, 28)).setHardness(0.0F).setStepSound(soundGrassFootstep);
+	public static final BlockOld blockGold = (new BlockOreBlockOld(41, 39)).setHardness(3.0F).setResistance(10.0F).setStepSound(soundMetalFootstep);
+	public static final BlockOld blockSteel = (new BlockOreBlockOld(42, 38)).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep);
+	public static final BlockOld stairDouble = (new BlockStepOld(43, true)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep);
+	public static final BlockOld stairSingle = (new BlockStepOld(44, false)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep);
+	public static final BlockOld brick = (new BlockOld(45, 7, Material.rock)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep);
+	public static final BlockOld tnt = (new BlockTNTOld(46, 8)).setHardness(0.0F).setStepSound(soundGrassFootstep);
+	public static final BlockOld bookshelf = (new BlockBookshelfOld(47, 35)).setHardness(1.5F).setStepSound(soundWoodFootstep);
+	public static final BlockOld cobblestoneMossy = (new BlockOld(48, 36, Material.rock)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep);
+	public static final BlockOld obsidian = (new BlockObsidianOld(49, 37)).setHardness(10.0F).setResistance(2000.0F).setStepSound(soundStoneFootstep);
+	public static final BlockOld torch = (new BlockTorchOld(50, 80)).setHardness(0.0F).setLightValue(15.0F / 16.0F).setStepSound(soundWoodFootstep);
+	public static final BlockFireOld fire = (BlockFireOld)((BlockFireOld)(new BlockFireOld(51, 31)).setHardness(0.0F).setLightValue(1.0F).setStepSound(soundWoodFootstep));
+	public static final BlockOld mobSpawner = (new BlockMobSpawnerOld(52, 65)).setHardness(5.0F).setStepSound(soundMetalFootstep);
+	public static final BlockOld stairCompactWood = new BlockStairsOld(53, planks);
+	public static final BlockOld chest = (new BlockChestOld(54)).setHardness(2.5F).setStepSound(soundWoodFootstep);
+	public static final BlockOld redstoneWire = (new BlockRedstoneWireOld(55, 84)).setHardness(0.0F).setStepSound(soundPowderFootstep);
+	public static final BlockOld oreDiamond = (new BlockOreOld(56, 50)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep);
+	public static final BlockOld blockDiamond = (new BlockOreBlockOld(57, 40)).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep);
+	public static final BlockOld workbench = (new BlockWorkbenchOld(58)).setHardness(2.5F).setStepSound(soundWoodFootstep);
+	public static final BlockOld crops = (new BlockCropsOld(59, 88)).setHardness(0.0F).setStepSound(soundGrassFootstep);
+	public static final BlockOld tilledField = (new BlockFarmlandOld(60)).setHardness(0.6F).setStepSound(soundGravelFootstep);
+	public static final BlockOld stoneOvenIdle = (new BlockFurnaceOld(61, false)).setHardness(3.5F).setStepSound(soundStoneFootstep);
+	public static final BlockOld stoneOvenActive = (new BlockFurnaceOld(62, true)).setHardness(3.5F).setStepSound(soundStoneFootstep).setLightValue(14.0F / 16.0F);
+	public static final BlockOld signStanding = (new BlockSignOld(63, TileEntitySign.class, true)).setHardness(1.0F).setStepSound(soundWoodFootstep);
+	public static final BlockOld doorWood = (new BlockDoorOld(64, Material.wood)).setHardness(3.0F).setStepSound(soundWoodFootstep);
+	public static final BlockOld ladder = (new BlockLadderOld(65, 83)).setHardness(0.4F).setStepSound(soundWoodFootstep);
+	public static final BlockOld minecartTrack = (new BlockMinecartTrackOld(66, 128)).setHardness(0.7F).setStepSound(soundMetalFootstep);
+	public static final BlockOld stairCompactStone = new BlockStairsOld(67, cobblestone);
+	public static final BlockOld signWall = (new BlockSignOld(68, TileEntitySign.class, false)).setHardness(1.0F).setStepSound(soundWoodFootstep);
+	public static final BlockOld lever = (new BlockLeverOld(69, 96)).setHardness(0.5F).setStepSound(soundWoodFootstep);
+	public static final BlockOld pressurePlateStone = (new BlockPressurePlateOld(70, stone.blockIndexInTexture, EnumMobType.mobs)).setHardness(0.5F).setStepSound(soundStoneFootstep);
+	public static final BlockOld doorSteel = (new BlockDoorOld(71, Material.iron)).setHardness(5.0F).setStepSound(soundMetalFootstep);
+	public static final BlockOld pressurePlateWood = (new BlockPressurePlateOld(72, planks.blockIndexInTexture, EnumMobType.everything)).setHardness(0.5F).setStepSound(soundWoodFootstep);
+	public static final BlockOld oreRedstone = (new BlockRedstoneOreOld(73, 51, false)).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep);
+	public static final BlockOld oreRedstoneGlowing = (new BlockRedstoneOreOld(74, 51, true)).setLightValue(10.0F / 16.0F).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep);
+	public static final BlockOld torchRedstoneIdle = (new BlockRedstoneTorchOld(75, 115, false)).setHardness(0.0F).setStepSound(soundWoodFootstep);
+	public static final BlockOld torchRedstoneActive = (new BlockRedstoneTorchOld(76, 99, true)).setHardness(0.0F).setLightValue(0.5F).setStepSound(soundWoodFootstep);
+	public static final BlockOld button = (new BlockButtonOld(77, stone.blockIndexInTexture)).setHardness(0.5F).setStepSound(soundStoneFootstep);
+	public static final BlockOld snow = (new BlockSnowOld(78, 66)).setHardness(0.1F).setStepSound(soundClothFootstep);
+	public static final BlockOld ice = (new BlockIceOld(79, 67)).setHardness(0.5F).setLightOpacity(3).setStepSound(soundGlassFootstep);
+	public static final BlockOld blockSnow = (new BlockSnowBlockOld(80, 66)).setHardness(0.2F).setStepSound(soundClothFootstep);
+	public static final BlockOld cactus = (new BlockCactusOld(81, 70)).setHardness(0.4F).setStepSound(soundClothFootstep);
+	public static final BlockOld blockClay = (new BlockClayOld(82, 72)).setHardness(0.6F).setStepSound(soundGravelFootstep);
+	public static final BlockOld reed = (new BlockReedOld(83, 73)).setHardness(0.0F).setStepSound(soundGrassFootstep);
+	public static final BlockOld jukebox = (new BlockJukeBoxOld(84, 74)).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep);
+	public static final BlockOld fence = (new BlockFenceOld(85, 4)).setHardness(2.0F).setResistance(5.0F).setStepSound(soundWoodFootstep);
+	public int blockIndexInTexture;
+	public final int blockID;
+	protected float hardness;
+	protected float resistance;
+	public double minX;
+	public double minY;
+	public double minZ;
+	public double maxX;
+	public double maxY;
+	public double maxZ;
+	public StepSound stepSound;
+	public float blockParticleGravity;
+	public final Material material;
+	public float slipperiness;
+
+	protected BlockOld(int var1, Material var2) {
+		this.stepSound = soundPowderFootstep;
+		this.blockParticleGravity = 1.0F;
+		this.slipperiness = 0.6F;
+		if(blocksList[var1] != null) {
+			throw new IllegalArgumentException("Slot " + var1 + " is already occupied by " + blocksList[var1] + " when adding " + this);
+		} else {
+			this.material = var2;
+			blocksList[var1] = this;
+			this.blockID = var1;
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
+			opaqueCubeLookup[var1] = this.isOpaqueCube();
+			lightOpacity[var1] = this.isOpaqueCube() ? 255 : 0;
+			canBlockGrass[var1] = this.getCanBlockGrass();
+			isBlockContainer[var1] = false;
+		}
+	}
+
+	protected BlockOld(int var1, int var2, Material var3) {
+		this(var1, var3);
+		this.blockIndexInTexture = var2;
+	}
+
+	protected BlockOld setStepSound(StepSound var1) {
+		this.stepSound = var1;
+		return this;
+	}
+
+	protected BlockOld setLightOpacity(int var1) {
+		lightOpacity[this.blockID] = var1;
+		return this;
+	}
+
+	protected BlockOld setLightValue(float var1) {
+		lightValue[this.blockID] = (int)(15.0F * var1);
+		return this;
+	}
+
+	protected BlockOld setResistance(float var1) {
+		this.resistance = var1 * 3.0F;
+		return this;
+	}
+
+	private boolean getCanBlockGrass() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return true;
+	}
+
+	public int getRenderType() {
+		return 0;
+	}
+
+	protected BlockOld setHardness(float var1) {
+		this.hardness = var1;
+		if(this.resistance < var1 * 5.0F) {
+			this.resistance = var1 * 5.0F;
+		}
+
+		return this;
+	}
+
+	protected void setTickOnLoad(boolean var1) {
+		tickOnLoad[this.blockID] = var1;
+	}
+
+	public void setBlockBounds(float var1, float var2, float var3, float var4, float var5, float var6) {
+		this.minX = (double)var1;
+		this.minY = (double)var2;
+		this.minZ = (double)var3;
+		this.maxX = (double)var4;
+		this.maxY = (double)var5;
+		this.maxZ = (double)var6;
+	}
+
+	public float getBlockBrightness(IBlockAccess var1, int var2, int var3, int var4) {
+		return var1.getBrightness(var2, var3, var4);
+	}
+
+	public boolean shouldSideBeRendered(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		return var5 == 0 && this.minY > 0.0D ? true : (var5 == 1 && this.maxY < 1.0D ? true : (var5 == 2 && this.minZ > 0.0D ? true : (var5 == 3 && this.maxZ < 1.0D ? true : (var5 == 4 && this.minX > 0.0D ? true : (var5 == 5 && this.maxX < 1.0D ? true : !var1.isBlockNormalCube(var2, var3, var4))))));
+	}
+
+	public int getBlockTexture(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		return this.getBlockTextureFromSideAndMetadata(var5, var1.getBlockMetadata(var2, var3, var4));
+	}
+
+	public int getBlockTextureFromSideAndMetadata(int var1, int var2) {
+		return this.getBlockTextureFromSide(var1);
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return this.blockIndexInTexture;
+	}
+
+	public AxisAlignedBB getSelectedBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return AxisAlignedBB.getBoundingBoxFromPool((double)var2 + this.minX, (double)var3 + this.minY, (double)var4 + this.minZ, (double)var2 + this.maxX, (double)var3 + this.maxY, (double)var4 + this.maxZ);
+	}
+
+	public void getCollidingBoundingBoxes(World var1, int var2, int var3, int var4, AxisAlignedBB var5, ArrayList var6) {
+		AxisAlignedBB var7 = this.getCollisionBoundingBoxFromPool(var1, var2, var3, var4);
+		if(var7 != null && var5.intersectsWith(var7)) {
+			var6.add(var7);
+		}
+
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return AxisAlignedBB.getBoundingBoxFromPool((double)var2 + this.minX, (double)var3 + this.minY, (double)var4 + this.minZ, (double)var2 + this.maxX, (double)var3 + this.maxY, (double)var4 + this.maxZ);
+	}
+
+	public boolean isOpaqueCube() {
+		return true;
+	}
+
+	public boolean canCollideCheck(int var1, boolean var2) {
+		return this.isCollidable();
+	}
+
+	public boolean isCollidable() {
+		return true;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+	}
+
+	public void onBlockDestroyedByPlayer(World var1, int var2, int var3, int var4, int var5) {
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+	}
+
+	public int tickRate() {
+		return 10;
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+	}
+
+	public void onBlockRemoval(World var1, int var2, int var3, int var4) {
+	}
+
+	public int quantityDropped(Random var1) {
+		return 1;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return this.blockID;
+	}
+
+	public float blockStrength(EntityPlayer var1) {
+		return this.hardness < 0.0F ? 0.0F : (!var1.b(this) ? 1.0F / this.hardness / 100.0F : var1.a(this) / this.hardness / 30.0F);
+	}
+
+	public void dropBlockAsItem(World var1, int var2, int var3, int var4, int var5) {
+		this.dropBlockAsItemWithChance(var1, var2, var3, var4, var5, 1.0F);
+	}
+
+	public void dropBlockAsItemWithChance(World var1, int var2, int var3, int var4, int var5, float var6) {
+		if(!var1.multiplayerWorld) {
+			int var7 = this.quantityDropped(var1.rand);
+
+			for(int var8 = 0; var8 < var7; ++var8) {
+				if(var1.rand.nextFloat() <= var6) {
+					int var9 = this.idDropped(var5, var1.rand);
+					if(var9 > 0) {
+						float var10 = 0.7F;
+						double var11 = (double)(var1.rand.nextFloat() * var10) + (double)(1.0F - var10) * 0.5D;
+						double var13 = (double)(var1.rand.nextFloat() * var10) + (double)(1.0F - var10) * 0.5D;
+						double var15 = (double)(var1.rand.nextFloat() * var10) + (double)(1.0F - var10) * 0.5D;
+						EntityItem var17 = new EntityItem(var1, (double)var2 + var11, (double)var3 + var13, (double)var4 + var15, new ItemStack(var9));
+						var17.delayBeforeCanPickup = 10;
+						var1.spawnEntityInWorld(var17);
+					}
+				}
+			}
+
+		}
+	}
+
+	public float getExplosionResistance(Entity var1) {
+		return this.resistance / 5.0F;
+	}
+
+	public MovingObjectPosition collisionRayTrace(World var1, int var2, int var3, int var4, Vec3D var5, Vec3D var6) {
+		this.setBlockBoundsBasedOnState(var1, var2, var3, var4);
+		var5 = var5.addVector((double)(-var2), (double)(-var3), (double)(-var4));
+		var6 = var6.addVector((double)(-var2), (double)(-var3), (double)(-var4));
+		Vec3D var7 = var5.getIntermediateWithXValue(var6, this.minX);
+		Vec3D var8 = var5.getIntermediateWithXValue(var6, this.maxX);
+		Vec3D var9 = var5.getIntermediateWithYValue(var6, this.minY);
+		Vec3D var10 = var5.getIntermediateWithYValue(var6, this.maxY);
+		Vec3D var11 = var5.getIntermediateWithZValue(var6, this.minZ);
+		Vec3D var12 = var5.getIntermediateWithZValue(var6, this.maxZ);
+		if(!this.isVecInsideYZBounds(var7)) {
+			var7 = null;
+		}
+
+		if(!this.isVecInsideYZBounds(var8)) {
+			var8 = null;
+		}
+
+		if(!this.isVecInsideXZBounds(var9)) {
+			var9 = null;
+		}
+
+		if(!this.isVecInsideXZBounds(var10)) {
+			var10 = null;
+		}
+
+		if(!this.isVecInsideXYBounds(var11)) {
+			var11 = null;
+		}
+
+		if(!this.isVecInsideXYBounds(var12)) {
+			var12 = null;
+		}
+
+		Vec3D var13 = null;
+		if(var7 != null && (var13 == null || var5.distanceTo(var7) < var5.distanceTo(var13))) {
+			var13 = var7;
+		}
+
+		if(var8 != null && (var13 == null || var5.distanceTo(var8) < var5.distanceTo(var13))) {
+			var13 = var8;
+		}
+
+		if(var9 != null && (var13 == null || var5.distanceTo(var9) < var5.distanceTo(var13))) {
+			var13 = var9;
+		}
+
+		if(var10 != null && (var13 == null || var5.distanceTo(var10) < var5.distanceTo(var13))) {
+			var13 = var10;
+		}
+
+		if(var11 != null && (var13 == null || var5.distanceTo(var11) < var5.distanceTo(var13))) {
+			var13 = var11;
+		}
+
+		if(var12 != null && (var13 == null || var5.distanceTo(var12) < var5.distanceTo(var13))) {
+			var13 = var12;
+		}
+
+		if(var13 == null) {
+			return null;
+		} else {
+			byte var14 = -1;
+			if(var13 == var7) {
+				var14 = 4;
+			}
+
+			if(var13 == var8) {
+				var14 = 5;
+			}
+
+			if(var13 == var9) {
+				var14 = 0;
+			}
+
+			if(var13 == var10) {
+				var14 = 1;
+			}
+
+			if(var13 == var11) {
+				var14 = 2;
+			}
+
+			if(var13 == var12) {
+				var14 = 3;
+			}
+
+			return new MovingObjectPosition(var2, var3, var4, var14, var13.addVector((double)var2, (double)var3, (double)var4));
+		}
+	}
+
+	private boolean isVecInsideYZBounds(Vec3D var1) {
+		return var1 == null ? false : var1.yCoord >= this.minY && var1.yCoord <= this.maxY && var1.zCoord >= this.minZ && var1.zCoord <= this.maxZ;
+	}
+
+	private boolean isVecInsideXZBounds(Vec3D var1) {
+		return var1 == null ? false : var1.xCoord >= this.minX && var1.xCoord <= this.maxX && var1.zCoord >= this.minZ && var1.zCoord <= this.maxZ;
+	}
+
+	private boolean isVecInsideXYBounds(Vec3D var1) {
+		return var1 == null ? false : var1.xCoord >= this.minX && var1.xCoord <= this.maxX && var1.yCoord >= this.minY && var1.yCoord <= this.maxY;
+	}
+
+	public void onBlockDestroyedByExplosion(World var1, int var2, int var3, int var4) {
+	}
+
+	public int getRenderBlockPass() {
+		return 0;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockId(var2, var3, var4);
+		return var5 == 0 || blocksList[var5].material.getIsLiquid();
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		return false;
+	}
+
+	public void onEntityWalking(World var1, int var2, int var3, int var4, Entity var5) {
+	}
+
+	public void onBlockPlaced(World var1, int var2, int var3, int var4, int var5) {
+	}
+
+	public void onBlockClicked(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+	}
+
+	public void velocityToAddToEntity(World var1, int var2, int var3, int var4, Entity var5, Vec3D var6) {
+	}
+
+	public void setBlockBoundsBasedOnState(IBlockAccess var1, int var2, int var3, int var4) {
+	}
+
+	public int colorMultiplier(IBlockAccess var1, int var2, int var3, int var4) {
+		return 16777215;
+	}
+
+	public boolean isPoweringTo(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		return false;
+	}
+
+	public boolean canProvidePower() {
+		return false;
+	}
+
+	public void onEntityCollidedWithBlock(World var1, int var2, int var3, int var4, Entity var5) {
+	}
+
+	public boolean isIndirectlyPoweringTo(World var1, int var2, int var3, int var4, int var5) {
+		return false;
+	}
+
+	public void setBlockBoundsForItemRender() {
+	}
+
+	public void harvestBlock(World var1, int var2, int var3, int var4, int var5) {
+		this.dropBlockAsItem(var1, var2, var3, var4, var5);
+	}
+
+	public boolean canBlockStay(World var1, int var2, int var3, int var4) {
+		return true;
+	}
+
+	static {
+		for(int var0 = 0; var0 < 256; ++var0) {
+			if(blocksList[var0] != null) {
+				Item.itemsList[var0] = new ItemBlock(var0 - 256);
+			}
+		}
+
+	}
+}
--- net/minecraft/src/PanelCrashReport.java
+++ net/minecraft/src/PanelCrashReport.java
@@ -9,6 +9,7 @@
 import java.io.StringWriter;
 import java.text.SimpleDateFormat;
 import java.util.Date;
+import java.util.Iterator;
 import org.lwjgl.Sys;
 import org.lwjgl.opengl.GL11;
 
@@ -32,13 +33,21 @@
 			var5 = var5 + "LWJGL: " + Sys.getVersion() + "\n";
 			var4 = GL11.glGetString(GL11.GL_VENDOR);
 			var5 = var5 + "OpenGL: " + GL11.glGetString(GL11.GL_RENDERER) + " version " + GL11.glGetString(GL11.GL_VERSION) + ", " + GL11.glGetString(GL11.GL_VENDOR) + "\n";
-		} catch (Throwable var8) {
-			var5 = var5 + "[failed to get system properties (" + var8 + ")]\n";
+		} catch (Throwable var9) {
+			var5 = var5 + "[failed to get system properties (" + var9 + ")]\n";
 		}
 
 		var5 = var5 + "\n";
 		var5 = var5 + var3;
 		String var6 = "";
+		var6 = var6 + "Mods loaded: " + (ModLoader.func_11264_7AT2q764kBM4UAhX20130C3Jh6LT7Y5snv3wxjh9e5VP43467B37csjDd1NC().size() + 1) + "\n";
+		var6 = var6 + "ModLoader 0.0.1";
+
+		BaseMod var7;
+		for(Iterator var8 = ModLoader.func_11264_7AT2q764kBM4UAhX20130C3Jh6LT7Y5snv3wxjh9e5VP43467B37csjDd1NC().iterator(); var8.hasNext(); var6 = var6 + var7.getClass().getName() + " " + var7.Version() + "\n") {
+			var7 = (BaseMod)var8.next();
+		}
+
 		var6 = var6 + "\n";
 		var6 = var6 + "\n";
 		if(var3.contains("Pixel format not accelerated")) {
@@ -47,14 +56,37 @@
 			var6 = var6 + "\n";
 			var6 = var6 + "Minecraft was unable to start because it failed to find an accelerated OpenGL mode.\n";
 			var6 = var6 + "This can usually be fixed by updating the video card drivers.\n";
+			var6 = var6 + "If you\'re running the experimental Direct3D development branch and you\'re sure the drivers are installed, please report this to the bug tracker.\n";
 			if(var4.toLowerCase().contains("nvidia")) {
 				var6 = var6 + "\n";
 				var6 = var6 + "You might be able to find drivers for your video card here:\n";
-				var6 = var6 + "  http://www.nvidia.com/\n";
-			} else if(var4.toLowerCase().contains("ati")) {
+				var6 = var6 + "  https://www.nvidia.com/Download/index.aspx\n";
+			} else if(!var4.toLowerCase().contains("ati") && !var4.toLowerCase().contains("amd")) {
+				if(var4.toLowerCase().contains("4 series express")) {
+					var6 = var6 + "\n";
+					var6 = var6 + "This graphics card does not support OpenGL 2 and will not run the game.\n";
+					var6 = var6 + "\n";
+				} else if(var4.toLowerCase().contains("intel")) {
+					var6 = var6 + "\n";
+					var6 = var6 + "You might be able to find drivers for your video card here:\n";
+					var6 = var6 + "  https://www.intel.com/content/www/us/en/download-center/home.html\n";
+					var6 = var6 + "Do not expect the game to run well on your hardware.\n";
+				} else if(!var4.toLowerCase().contains("svga") && !var4.toLowerCase().contains("llvm") && !var4.toLowerCase().contains("virtualbox")) {
+					if(var4.toLowerCase().contains("microsoft basic")) {
+						var6 = var6 + "\n";
+						var6 = var6 + "Failed to detect your video card manufacturer.\n";
+						var6 = var6 + "  *If you\'re using a laptop, search for drivers for your exact model number.\n";
+						var6 = var6 + "  *If this is a virtual computer, please install the guest OS extensions for your VM software.\n";
+					}
+				} else {
+					var6 = var6 + "\n";
+					var6 = var6 + "Install the guest OS extensions for your virtual machine.\n";
+					var6 = var6 + "  (VMWare Tools, VirtualBox Guest Additions, etc.)\n";
+				}
+			} else {
 				var6 = var6 + "\n";
 				var6 = var6 + "You might be able to find drivers for your video card here:\n";
-				var6 = var6 + "  http://www.amd.com/\n";
+				var6 = var6 + "  https://www.amd.com/en/support\n";
 			}
 		} else {
 			var6 = var6 + "      Minecraft has crashed!      \n";
@@ -74,12 +106,12 @@
 		var6 = var6 + "--- END ERROR REPORT " + Integer.toHexString(var6.hashCode()) + " ----------\n";
 		var6 = var6 + "\n";
 		var6 = var6 + "\n";
-		TextArea var7 = new TextArea(var6, 0, 0, 1);
-		var7.setFont(new Font("Monospaced", 0, 12));
+		TextArea var10 = new TextArea(var6, 0, 0, 1);
+		var10.setFont(new Font("Monospaced", 0, 12));
 		this.add(new CanvasMojangLogo(), "North");
 		this.add(new CanvasCrashReport(80), "East");
 		this.add(new CanvasCrashReport(80), "West");
 		this.add(new CanvasCrashReport(100), "South");
-		this.add(var7, "Center");
+		this.add(var10, "Center");
 	}
 }
--- /dev/null
+++ net/minecraft/src/UtilRSA2048.java
@@ -1,0 +1,4 @@
+package net.minecraft.src;
+
+public class UtilRSA2048 {
+}
--- /dev/null
+++ net/minecraft/src/CommandFrrnReset.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+class CommandFrrnReset extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8555_380Er92ElLwg0f2DCpQOG1EaM9OgHmISUcdmSfooi7Yg2zir3M3chMKJU9x9;
+    
+    CommandFrrnReset(final CommandManager abb) {
+        this.field_8555_380Er92ElLwg0f2DCpQOG1EaM9OgHmISUcdmSfooi7Yg2zir3M3chMKJU9x9 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (InputHandler.mc.thePlayer instanceof EntityPlayerFreerunClient) {
+            ((EntityPlayerFreerunClient)InputHandler.mc.thePlayer).ResetFreerun();
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockMyconCap.java
@@ -1,0 +1,34 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockMyconCap extends BlockBreakable {
+	public BlockMyconCap(int var1, int var2) {
+		super(var1, var2, Material.ice, false);
+		this.setTickOnLoad(true);
+		this.setLightValue(1.65F);
+	}
+
+	public int getRenderBlockPass() {
+		return 1;
+	}
+
+	public boolean shouldSideBeRendered(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		return super.shouldSideBeRendered(var1, var2, var3, var4, 1 - var5);
+	}
+
+	public void onBlockRemoval(World var1, int var2, int var3, int var4) {
+		var1.getBlockMaterial(var2, var3 - 1, var4);
+	}
+
+	public int quantityDropped(Random var1) {
+		return 0;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(var1.getSavedLightValue(EnumSkyBlock.Block, var2, var3, var4) > 11 - Block.lightOpacity[this.blockID]) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/VertexConsumer.java
@@ -1,0 +1,4 @@
+package net.minecraft.src;
+
+public class VertexConsumer {
+}
--- /dev/null
+++ net/minecraft/src/AuthClient.java
@@ -1,0 +1,13 @@
+package net.minecraft.src;
+
+public class AuthClient {
+	public static AuthKey hubAuthKey;
+
+	public AuthClient(AuthKey var1) {
+		hubAuthKey = var1;
+	}
+
+	public static boolean TestServerAuthKey(NetworkLocation var0, AuthKey var1) {
+		return false;
+	}
+}
--- /dev/null
+++ net/minecraft/src/observer.java
@@ -1,0 +1,24 @@
+package net.minecraft.src;
+
+public class observer<T extends Entity> extends EntityModel<T> {
+	public static final ModelLayerLocation LAYER_LOCATION = new ModelLayerLocation(new ResourceLocation("modid", "observer"), "main");
+	private final ModelPart bb_main;
+
+	public observer(ModelPart var1) {
+		this.bb_main = var1.getChild("bb_main");
+	}
+
+	public static LayerDefinition createBodyLayer() {
+		MeshDefinition var0 = new MeshDefinition();
+		PartDefinition var1 = var0.getRoot();
+		var1.addOrReplaceChild("bb_main", CubeListBuilder.create().texOffs(0, 0).addBox(-4.0F, -37.0F, -5.0F, 8.0F, 8.0F, 8.0F, new CubeDeformation(0.0F)).texOffs(0, 16).addBox(-4.0F, -29.0F, -3.0F, 8.0F, 12.0F, 6.0F, new CubeDeformation(0.0F)).texOffs(28, 12).addBox(-4.0F, -17.0F, -2.0F, 3.0F, 17.0F, 4.0F, new CubeDeformation(0.0F)).texOffs(28, 12).mirror().addBox(1.0F, -17.0F, -2.0F, 3.0F, 17.0F, 4.0F, new CubeDeformation(0.0F)).mirror(false), PartPose.offset(0.0F, 24.0F, 0.0F));
+		return LayerDefinition.create(var0, 64, 64);
+	}
+
+	public void setupAnim(T var1, float var2, float var3, float var4, float var5, float var6) {
+	}
+
+	public void renderToBuffer(PoseStack var1, VertexConsumer var2, int var3, int var4, float var5, float var6, float var7, float var8) {
+		this.bb_main.render(var1, var2, var3, var4, var5, var6, var7, var8);
+	}
+}
--- net/minecraft/src/BlockChest.java
+++ net/minecraft/src/BlockChest.java
@@ -128,32 +128,35 @@
 
 	public void onBlockRemoval(World var1, int var2, int var3, int var4) {
 		TileEntityChest var5 = (TileEntityChest)var1.getBlockTileEntity(var2, var3, var4);
-
-		for(int var6 = 0; var6 < var5.getSizeInventory(); ++var6) {
-			ItemStack var7 = var5.getStackInSlot(var6);
-			if(var7 != null) {
-				float var8 = this.random.nextFloat() * 0.8F + 0.1F;
-				float var9 = this.random.nextFloat() * 0.8F + 0.1F;
-				float var10 = this.random.nextFloat() * 0.8F + 0.1F;
-
-				while(var7.stackSize > 0) {
-					int var11 = this.random.nextInt(21) + 10;
-					if(var11 > var7.stackSize) {
-						var11 = var7.stackSize;
+		if(var5 == null) {
+			super.onBlockRemoval(var1, var2, var3, var4);
+		} else {
+			for(int var6 = 0; var6 < var5.getSizeInventory(); ++var6) {
+				ItemStack var7 = var5.getStackInSlot(var6);
+				if(var7 != null) {
+					float var8 = this.random.nextFloat() * 0.8F + 0.1F;
+					float var9 = this.random.nextFloat() * 0.8F + 0.1F;
+					float var10 = this.random.nextFloat() * 0.8F + 0.1F;
+
+					while(var7.stackSize > 0) {
+						int var11 = this.random.nextInt(21) + 10;
+						if(var11 > var7.stackSize) {
+							var11 = var7.stackSize;
+						}
+
+						var7.stackSize -= var11;
+						EntityItem var12 = new EntityItem(var1, (double)((float)var2 + var8), (double)((float)var3 + var9), (double)((float)var4 + var10), new ItemStack(var7.itemID, var11, var7.itemDmg));
+						float var13 = 0.05F;
+						var12.motionX = (double)((float)this.random.nextGaussian() * var13);
+						var12.motionY = (double)((float)this.random.nextGaussian() * var13 + 0.2F);
+						var12.motionZ = (double)((float)this.random.nextGaussian() * var13);
+						var1.spawnEntityInWorld(var12);
 					}
-
-					var7.stackSize -= var11;
-					EntityItem var12 = new EntityItem(var1, (double)((float)var2 + var8), (double)((float)var3 + var9), (double)((float)var4 + var10), new ItemStack(var7.itemID, var11, var7.itemDmg));
-					float var13 = 0.05F;
-					var12.motionX = (double)((float)this.random.nextGaussian() * var13);
-					var12.motionY = (double)((float)this.random.nextGaussian() * var13 + 0.2F);
-					var12.motionZ = (double)((float)this.random.nextGaussian() * var13);
-					var1.spawnEntityInWorld(var12);
 				}
 			}
+
+			super.onBlockRemoval(var1, var2, var3, var4);
 		}
-
-		super.onBlockRemoval(var1, var2, var3, var4);
 	}
 
 	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
--- /dev/null
+++ net/minecraft/src/PlayerControllerSPUnknownClass.java
@@ -1,0 +1,9 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+
+public class PlayerControllerSPUnknownClass extends PlayerControllerSP {
+	public PlayerControllerSPUnknownClass(Minecraft var1) {
+		super(var1);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockSlatePillar.java
@@ -1,0 +1,135 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockSlatePillar extends Block {
+	public BlockSlatePillar(int var1, int var2) {
+		super(var1, var2, Material.circuits);
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		float var6 = 2.0F / 16.0F;
+		switch(var5) {
+		case 2:
+			this.setBlockBounds(0.0F, 0.0F, 1.0F - var6, 1.0F, 1.0F, 1.0F);
+			break;
+		case 3:
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, var6);
+			break;
+		case 4:
+			this.setBlockBounds(1.0F - var6, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
+			break;
+		case 5:
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, var6, 1.0F, 1.0F);
+			break;
+		case 6:
+			this.setBlockBounds(0.0F, 1.0F - var6, 0.0F, 1.0F, 1.0F, 1.0F);
+			break;
+		case 7:
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, var6, 1.0F);
+		}
+
+		return super.getCollisionBoundingBoxFromPool(var1, var2, var3, var4);
+	}
+
+	public AxisAlignedBB getSelectedBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		float var6 = 2.0F / 16.0F;
+		switch(var5) {
+		case 2:
+			this.setBlockBounds(0.0F, 0.0F, 1.0F - var6, 1.0F, 1.0F, 1.0F);
+			break;
+		case 3:
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, var6);
+			break;
+		case 4:
+			this.setBlockBounds(1.0F - var6, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
+			break;
+		case 5:
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, var6, 1.0F, 1.0F);
+			break;
+		case 6:
+			this.setBlockBounds(0.0F, 1.0F - var6, 0.0F, 1.0F, 1.0F, 1.0F);
+			break;
+		case 7:
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, var6, 1.0F);
+		}
+
+		return super.getSelectedBoundingBoxFromPool(var1, var2, var3, var4);
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 8;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return var1.isBlockNormalCube(var2, var3 - 1, var4) ? true : (var1.isBlockNormalCube(var2, var3 + 1, var4) ? true : (var1.isBlockNormalCube(var2 - 1, var3, var4) ? true : (var1.isBlockNormalCube(var2 + 1, var3, var4) ? true : (var1.isBlockNormalCube(var2, var3, var4 - 1) ? true : var1.isBlockNormalCube(var2, var3, var4 + 1)))));
+	}
+
+	public void onBlockPlaced(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		if((var6 == 0 || var5 == 2) && var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+			var6 = 2;
+		} else if((var6 == 0 || var5 == 3) && var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+			var6 = 3;
+		} else if((var6 == 0 || var5 == 4) && var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+			var6 = 4;
+		} else if((var6 == 0 || var5 == 5) && var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+			var6 = 5;
+		} else if((var6 == 0 || var5 == 6) && var1.isBlockNormalCube(var2, var3 + 1, var4)) {
+			var6 = 6;
+		} else if((var6 == 0 || var5 == 7) && var1.isBlockNormalCube(var2, var3 - 1, var4)) {
+			var6 = 7;
+		}
+
+		var1.setBlockMetadataWithNotify(var2, var3, var4, var6);
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		boolean var7 = false;
+		if(var6 == 2 && var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+			var7 = true;
+		}
+
+		if(var6 == 3 && var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+			var7 = true;
+		}
+
+		if(var6 == 4 && var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+			var7 = true;
+		}
+
+		if(var6 == 5 && var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+			var7 = true;
+		}
+
+		if(var6 == 6 && var1.isBlockNormalCube(var2, var3 + 1, var4)) {
+			var7 = true;
+		}
+
+		if(var6 == 7 && var1.isBlockNormalCube(var2, var3 - 1, var4)) {
+			var7 = true;
+		}
+
+		if(!var7) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var6);
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		}
+
+		super.onNeighborBlockChange(var1, var2, var3, var4, var5);
+	}
+
+	public int quantityDropped(Random var1) {
+		return 1;
+	}
+}
--- net/minecraft/src/MCHashTable.java
+++ net/minecraft/src/MCHashTable.java
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import java.util.Objects;
+
 public class MCHashTable {
 	private transient MCHashEntry[] slots = new MCHashEntry[16];
 	private transient int count;
@@ -51,8 +53,11 @@
 			MCHashEntry[] var4 = new MCHashEntry[var1];
 			this.copyTo(var4);
 			this.slots = var4;
-			this.threshold = (int)((float)var1 * this.growFactor);
+			float var10001 = (float)var1;
+			Objects.requireNonNull(this);
+			this.threshold = (int)(var10001 * (12.0F / 16.0F));
 		}
+
 	}
 
 	private void copyTo(MCHashEntry[] var1) {
--- /dev/null
+++ net/minecraft/src/DS5InstrPlayerUpdate.java
@@ -1,0 +1,23 @@
+package net.minecraft.src;
+
+public class DS5InstrPlayerUpdate implements DS5Instruction {
+	public int controllerIndex;
+	public boolean p1;
+	public boolean p2;
+	public boolean p3;
+	public boolean p4;
+	public boolean p5 = false;
+
+	public DS5InstrPlayerUpdate(int var1, boolean var2, boolean var3, boolean var4, boolean var5, boolean var6) {
+		this.controllerIndex = var1;
+		this.p1 = var2;
+		this.p2 = var3;
+		this.p3 = var4;
+		this.p4 = var5;
+		this.p5 = var6;
+	}
+
+	public String GetJSON() {
+		return "{\"type\":3,\"parameters\":[" + this.controllerIndex + "," + this.p1 + "," + this.p2 + "," + this.p3 + "," + this.p4 + "," + this.p5 + "]}";
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockFarmlandOld.java
@@ -1,0 +1,93 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockFarmlandOld extends BlockOld {
+	protected BlockFarmlandOld(int var1) {
+		super(var1, Material.grass);
+		this.blockIndexInTexture = 87;
+		this.setTickOnLoad(true);
+		this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 15.0F / 16.0F, 1.0F);
+		this.setLightOpacity(255);
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return AxisAlignedBB.getBoundingBoxFromPool((double)(var2 + 0), (double)(var3 + 0), (double)(var4 + 0), (double)(var2 + 1), (double)(var3 + 1), (double)(var4 + 1));
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getBlockTextureFromSideAndMetadata(int var1, int var2) {
+		return var1 == 1 && var2 > 0 ? this.blockIndexInTexture - 1 : (var1 == 1 ? this.blockIndexInTexture : 2);
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(var5.nextInt(5) == 0) {
+			if(this.isWaterNearby(var1, var2, var3, var4)) {
+				var1.setBlockMetadataWithNotify(var2, var3, var4, 7);
+			} else {
+				int var6 = var1.getBlockMetadata(var2, var3, var4);
+				if(var6 > 0) {
+					var1.setBlockMetadataWithNotify(var2, var3, var4, var6 - 1);
+				} else if(!this.isCropsNearby(var1, var2, var3, var4)) {
+					var1.setBlockWithNotify(var2, var3, var4, BlockOld.dirt.blockID);
+				}
+			}
+		}
+
+	}
+
+	public void onEntityWalking(World var1, int var2, int var3, int var4, Entity var5) {
+		if(var1.rand.nextInt(4) == 0) {
+			var1.setBlockWithNotify(var2, var3, var4, BlockOld.dirt.blockID);
+		}
+
+	}
+
+	private boolean isCropsNearby(World var1, int var2, int var3, int var4) {
+		byte var5 = 0;
+
+		for(int var6 = var2 - var5; var6 <= var2 + var5; ++var6) {
+			for(int var7 = var4 - var5; var7 <= var4 + var5; ++var7) {
+				if(var1.getBlockId(var6, var3 + 1, var7) == BlockOld.crops.blockID) {
+					return true;
+				}
+			}
+		}
+
+		return false;
+	}
+
+	private boolean isWaterNearby(World var1, int var2, int var3, int var4) {
+		for(int var5 = var2 - 4; var5 <= var2 + 4; ++var5) {
+			for(int var6 = var3; var6 <= var3 + 1; ++var6) {
+				for(int var7 = var4 - 4; var7 <= var4 + 4; ++var7) {
+					if(var1.getBlockMaterial(var5, var6, var7) == Material.water) {
+						return true;
+					}
+				}
+			}
+		}
+
+		return false;
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		super.onNeighborBlockChange(var1, var2, var3, var4, var5);
+		Material var6 = var1.getBlockMaterial(var2, var3 + 1, var4);
+		if(var6.isSolid()) {
+			var1.setBlockWithNotify(var2, var3, var4, BlockOld.dirt.blockID);
+		}
+
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return BlockOld.dirt.idDropped(0, var2);
+	}
+}
--- /dev/null
+++ net/minecraft/src/HandlerPlayDemoUnknownClass.java
@@ -1,0 +1,78 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class HandlerPlayDemoUnknownClass {
+	public EntityPlayer field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4;
+	boolean field_12207_3n80M78yRyIgst88VUz7m4h73K5qXah2YqY6SWx5a5z06qrwS9T9nRorsqa3 = false;
+	long field_12208_98R5hOj4T943HDXWGduNRCkZ54wGppUZ0fFo3jfk0ZI19ZZ4jcqoAqziwRBE = -1L;
+	public List<HandlerPlayDemoUnknownClass2> field_12210_1g5X6A25jcG50Z3d47g1ufx5qZuFNya14hd6OpQ6a42pd2RKbHZAqAO16G5P = new ArrayList();
+	public List<HandlerPlayDemoUnknownClass3> field_12206_2HOPpg76h0bW5PAbZt7J9ovHj1VeAQI4N9188c6RpWMKo4M8N006h5F970jY = new ArrayList();
+
+	public HandlerPlayDemoUnknownClass(EntityPlayer var1) {
+		this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4 = var1;
+	}
+
+	public void func_12202_16f5qR4S63G9o02Iv9q3fI2EBSIV7xO6D6qHK36vkX5ETh2rQeDp7rBKoju0(EntityPlayer var1) {
+		this.field_12210_1g5X6A25jcG50Z3d47g1ufx5qZuFNya14hd6OpQ6a42pd2RKbHZAqAO16G5P.clear();
+		this.field_12206_2HOPpg76h0bW5PAbZt7J9ovHj1VeAQI4N9188c6RpWMKo4M8N006h5F970jY.clear();
+		this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4 = var1;
+		this.field_12208_98R5hOj4T943HDXWGduNRCkZ54wGppUZ0fFo3jfk0ZI19ZZ4jcqoAqziwRBE = var1.worldObj.worldTime;
+		this.field_12207_3n80M78yRyIgst88VUz7m4h73K5qXah2YqY6SWx5a5z06qrwS9T9nRorsqa3 = true;
+	}
+
+	public void func_12204_8r9RTHlpJjIj8rv8a68Pq9g6006yw2MZ4W4u9N9p23i9532c8WU7ByApxh50() {
+		this.field_12207_3n80M78yRyIgst88VUz7m4h73K5qXah2YqY6SWx5a5z06qrwS9T9nRorsqa3 = false;
+	}
+
+	public HandlerPlayDemo func_12203_9W0B10aFpgCUU50wQ8qmV8j22rCms54pw7x9S5FyOt706cg3i6CeZ86wj9Wx() {
+		return new HandlerPlayDemo(new ArrayList(this.field_12210_1g5X6A25jcG50Z3d47g1ufx5qZuFNya14hd6OpQ6a42pd2RKbHZAqAO16G5P), new ArrayList(this.field_12206_2HOPpg76h0bW5PAbZt7J9ovHj1VeAQI4N9188c6RpWMKo4M8N006h5F970jY));
+	}
+
+	public void func_12199_0T1EBqlwN0r6zrh3Sg0XWHZ8YGwKZ7S93cTMLKw1r2Y6V9Bl9qyCtXn0g300(String var1) {
+		(new HandlerPlayDemo(this.field_12210_1g5X6A25jcG50Z3d47g1ufx5qZuFNya14hd6OpQ6a42pd2RKbHZAqAO16G5P, this.field_12206_2HOPpg76h0bW5PAbZt7J9ovHj1VeAQI4N9188c6RpWMKo4M8N006h5F970jY)).func_11429_4Hdb2tF4Ro161cgZ713aaHheHwul09r95mRk40083ARmzqow29B4CqUo84M6(var1);
+	}
+
+	public void func_12201_8RE0128kf7wva064sQUJOS8L9G3w5V9gk0Qrz52s0qWi1q3KB37727x8PLKw(String var1) {
+		if(this.field_12207_3n80M78yRyIgst88VUz7m4h73K5qXah2YqY6SWx5a5z06qrwS9T9nRorsqa3) {
+			this.field_12206_2HOPpg76h0bW5PAbZt7J9ovHj1VeAQI4N9188c6RpWMKo4M8N006h5F970jY.add(new HandlerPlayDemoUnknownClass3(this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4.worldObj.worldTime - this.field_12208_98R5hOj4T943HDXWGduNRCkZ54wGppUZ0fFo3jfk0ZI19ZZ4jcqoAqziwRBE, var1));
+		}
+
+	}
+
+	public void func_12196_7s9IfTKre2uJtyoPjdLc93WmidSQs9AM2aDgi63837RD3989LlCE6V4C08ci() {
+		if(this.field_12207_3n80M78yRyIgst88VUz7m4h73K5qXah2YqY6SWx5a5z06qrwS9T9nRorsqa3) {
+			this.field_12210_1g5X6A25jcG50Z3d47g1ufx5qZuFNya14hd6OpQ6a42pd2RKbHZAqAO16G5P.add(new HandlerPlayDemoUnknownClass2(this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4.worldObj.worldTime - this.field_12208_98R5hOj4T943HDXWGduNRCkZ54wGppUZ0fFo3jfk0ZI19ZZ4jcqoAqziwRBE, this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4.posX, this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4.posY, this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4.posZ, (double)this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4.rotationPitch, (double)this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4.rotationYaw, 0.0D, (double)this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4.limbSwing, (double)this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4.limbYaw));
+			if(this.field_12210_1g5X6A25jcG50Z3d47g1ufx5qZuFNya14hd6OpQ6a42pd2RKbHZAqAO16G5P.size() == 72000) {
+				this.func_12204_8r9RTHlpJjIj8rv8a68Pq9g6006yw2MZ4W4u9N9p23i9532c8WU7ByApxh50();
+			}
+		}
+
+	}
+
+	public void func_12200_2zuKLzAjc8o3T9KVZ7ZY36o6qOp5e1FG836622Br32SKguF06W9W1437p52T() {
+		this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4.worldObj.spawnEntityInWorld(new EntityOtherPlayerMPUnknownClass(this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4.worldObj, new HandlerPlayDemo(this.field_12210_1g5X6A25jcG50Z3d47g1ufx5qZuFNya14hd6OpQ6a42pd2RKbHZAqAO16G5P, this.field_12206_2HOPpg76h0bW5PAbZt7J9ovHj1VeAQI4N9188c6RpWMKo4M8N006h5F970jY, InputHandler.mc.session.username)));
+	}
+
+	public void func_12197_19n2GNseUM6bUMylgv317c3eT8jC5ipR9O2vu6236YuBTnxAj7cllYnJ652J(HandlerPlayDemo var1) {
+		this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4.worldObj.spawnEntityInWorld(new EntityOtherPlayerMPUnknownClass(this.field_12209_9WsLkT4PFeKl6RV1R7cUzcc7hWs6t9ij36v5SLGxJTzwivHhk7PG5UN5lOi4.worldObj, var1));
+	}
+
+	public void func_12198_5E6pR978f3G6kA5h9oL5C9V6089y1jhc16925Ck9G7790FzlQf0011B7Nr42(World var1) {
+		for(int var2 = 0; var2 < var1.playerEntities.size(); ++var2) {
+			if(var1.playerEntities.get(var2) instanceof EntityOtherPlayerMPUnknownClass) {
+				((EntityOtherPlayerMPUnknownClass)var1.playerEntities.get(var2)).func_9038_1vEc42Y7c91b4gM7oY72q1v1gF1P33XCpUko2cq23lKl2JrT3iJUBoY1U7dI();
+			}
+		}
+
+	}
+
+	public void func_12205_6ZOj2zwwjPk9f604twAF89u12c3MGns9EqJD4l3jZR2R6cy50aEWBthikzOk(String var1) {
+		HandlerPlayDemo var2 = HandlerPlayDemo.func_11428_9k6E1ErM8m8Ekl2tnCyj5PljXv5fpIe33XB87jRlW98HF72SweTYv0JQvjaQ(var1);
+		if(var2 != null) {
+			InputHandler.mc.theWorld.spawnEntityInWorld(new EntityOtherPlayerMPUnknownClass(InputHandler.mc.thePlayer.worldObj, var2));
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandDisconnect.java
@@ -1,0 +1,25 @@
+package net.minecraft.src;
+
+class CommandDisconnect extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8568_5QHuFFLj6A1Ezq6hvOPL91t343YKkZ6iE7NSWDNp9T7hm7PTnmk8195gqK41;
+    
+    CommandDisconnect(final CommandManager abb) {
+        this.field_8568_5QHuFFLj6A1Ezq6hvOPL91t343YKkZ6iE7NSWDNp9T7hm7PTnmk8195gqK41 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (InputHandler.mc.theWorld != null) {
+            if (InputHandler.mc.isMultiplayerWorld()) {
+                InputHandler.mc.theWorld.sendQuittingDisconnectingPacket();
+            }
+            InputHandler.mc.changeWorld1(null);
+            InputHandler.mc.displayGuiScreen(new GuiMainMenu());
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockTNTOld.java
@@ -1,0 +1,37 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockTNTOld extends BlockOld {
+	public BlockTNTOld(int var1, int var2) {
+		super(var1, var2, Material.tnt);
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 == 0 ? this.blockIndexInTexture + 2 : (var1 == 1 ? this.blockIndexInTexture + 1 : this.blockIndexInTexture);
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		if(var5 > 0 && BlockOld.blocksList[var5].canProvidePower() && var1.isBlockIndirectlyGettingPowered(var2, var3, var4)) {
+			this.onBlockDestroyedByPlayer(var1, var2, var3, var4, 0);
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		}
+
+	}
+
+	public int quantityDropped(Random var1) {
+		return 0;
+	}
+
+	public void onBlockDestroyedByExplosion(World var1, int var2, int var3, int var4) {
+		EntityTNTPrimed var5 = new EntityTNTPrimed(var1, (float)var2 + 0.5F, (float)var3 + 0.5F, (float)var4 + 0.5F);
+		var5.fuse = var1.rand.nextInt(var5.fuse / 4) + var5.fuse / 8;
+		var1.spawnEntityInWorld(var5);
+	}
+
+	public void onBlockDestroyedByPlayer(World var1, int var2, int var3, int var4, int var5) {
+		EntityTNTPrimed var6 = new EntityTNTPrimed(var1, (float)var2 + 0.5F, (float)var3 + 0.5F, (float)var4 + 0.5F);
+		var1.spawnEntityInWorld(var6);
+		var1.playSoundAtEntity(var6, "random.fuse", 1.0F, 1.0F);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockHighwoodDoor.java
@@ -1,0 +1,14 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockHighwoodDoor extends BlockDoor {
+	public BlockHighwoodDoor(int var1, int var2) {
+		super(var1, Material.wood);
+		this.blockIndexInTexture = var2;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return (var1 & 8) != 0 ? 0 : ExtItems.HighwoodDoor.shiftedIndex;
+	}
+}
--- net/minecraft/src/EntityDiggingFX.java
+++ net/minecraft/src/EntityDiggingFX.java
@@ -16,8 +16,8 @@
 	public void renderParticle(Tessellator var1, float var2, float var3, float var4, float var5, float var6, float var7) {
 		float var8 = ((float)(this.particleTextureIndex % 16) + this.particleTextureJitterX / 4.0F) / 16.0F;
 		float var9 = var8 + 0.999F / 64.0F;
-		float var10 = ((float)(this.particleTextureIndex / 16) + this.particleTextureJitterY / 4.0F) / 16.0F;
-		float var11 = var10 + 0.999F / 64.0F;
+		float var10 = ((float)(this.particleTextureIndex / 16) + this.particleTextureJitterY / 4.0F) / 32.0F;
+		float var11 = var10 + 0.0078125F;
 		float var12 = 0.1F * this.particleScale;
 		float var13 = (float)(this.prevPosX + (this.posX - this.prevPosX) * (double)var2 - interpPosX);
 		float var14 = (float)(this.prevPosY + (this.posY - this.prevPosY) * (double)var2 - interpPosY);
--- /dev/null
+++ net/minecraft/src/TileEntityEssenceFountain.java
@@ -1,0 +1,52 @@
+package net.minecraft.src;
+
+public class TileEntityEssenceFountain extends TileEntity implements IInventory {
+	ItemStack singularSlot = new ItemStack(ExtItems.essence, 0);
+	public int counter = 0;
+
+	public int getSizeInventory() {
+		return 1;
+	}
+
+	public ItemStack getStackInSlot(int var1) {
+		return this.singularSlot;
+	}
+
+	public ItemStack decrStackSize(int var1, int var2) {
+		if(var2 > this.singularSlot.stackSize) {
+			this.singularSlot = new ItemStack(ExtItems.essence, 0);
+		} else {
+			this.singularSlot.stackSize -= var2;
+		}
+
+		return this.singularSlot;
+	}
+
+	public void onInventoryChanged() {
+		super.onInventoryChanged();
+	}
+
+	public void setInventorySlotContents(int var1, ItemStack var2) {
+		this.singularSlot = var2;
+	}
+
+	public String getInvName() {
+		return "unused";
+	}
+
+	public int getInventoryStackLimit() {
+		return 64;
+	}
+
+	public void writeToNBT(NBTTagCompound var1) {
+		var1.setInteger("counter", this.counter);
+		var1.setInteger("count", this.singularSlot.stackSize);
+		super.writeToNBT(var1);
+	}
+
+	public void readFromNBT(NBTTagCompound var1) {
+		this.counter = var1.getInteger("counter");
+		this.singularSlot = new ItemStack(ExtItems.essence, var1.getInteger("count"));
+		super.readFromNBT(var1);
+	}
+}
--- net/minecraft/src/TileEntityMobSpawner.java
+++ net/minecraft/src/TileEntityMobSpawner.java
@@ -6,10 +6,6 @@
 	public double yaw;
 	public double prevYaw = 0.0D;
 
-	public TileEntityMobSpawner() {
-		this.delay = 20;
-	}
-
 	public boolean anyPlayerInRange() {
 		return this.worldObj.getClosestPlayer((double)this.xCoord + 0.5D, (double)this.yCoord + 0.5D, (double)this.zCoord + 0.5D, 16.0D) != null;
 	}
@@ -35,9 +31,15 @@
 				--this.delay;
 			} else {
 				byte var7 = 4;
-
-				for(int var8 = 0; var8 < var7; ++var8) {
-					EntityLiving var9 = (EntityLiving)((EntityLiving)EntityList.createEntityByName(this.mobID, this.worldObj));
+				int var8 = 0;
+
+				while(true) {
+					if(var8 >= var7) {
+						super.updateEntity();
+						break;
+					}
+
+					EntityLiving var9 = (EntityLiving)EntityList.createEntityByName(this.mobID, this.worldObj);
 					if(var9 == null) {
 						return;
 					}
@@ -68,11 +70,12 @@
 							this.updateDelay();
 						}
 					}
+
+					++var8;
 				}
-
-				super.updateEntity();
 			}
 		}
+
 	}
 
 	private void updateDelay() {
--- /dev/null
+++ net/minecraft/src/BlockFreezer.java
@@ -1,0 +1,100 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockFreezer extends BlockContainer {
+	private final boolean field_8373_3OQN5db1xqyB694grr3I4ikidBZaZpJf78W84Y6mb7bNN7V4B3v6qRFvdlnK;
+
+	public BlockFreezer(int var1, int var2, boolean var3) {
+		super(var1, Material.rock);
+		this.blockIndexInTexture = var2;
+		this.field_8373_3OQN5db1xqyB694grr3I4ikidBZaZpJf78W84Y6mb7bNN7V4B3v6qRFvdlnK = var3;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return ExtBlocks.Freezer.blockID;
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		super.onBlockAdded(var1, var2, var3, var4);
+		this.func_8371_0VOiSc9RlsB9S3K0IXk3nsroAy4MA966j55CxcrZkjk0A7ZjqX6r52L4ew80(var1, var2, var3, var4);
+	}
+
+	private void func_8371_0VOiSc9RlsB9S3K0IXk3nsroAy4MA966j55CxcrZkjk0A7ZjqX6r52L4ew80(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockId(var2, var3, var4 - 1);
+		int var6 = var1.getBlockId(var2, var3, var4 + 1);
+		int var7 = var1.getBlockId(var2 - 1, var3, var4);
+		int var8 = var1.getBlockId(var2 + 1, var3, var4);
+		byte var9 = 3;
+		if(Block.opaqueCubeLookup[var5] && !Block.opaqueCubeLookup[var6]) {
+			var9 = 3;
+		}
+
+		if(Block.opaqueCubeLookup[var6] && !Block.opaqueCubeLookup[var5]) {
+			var9 = 2;
+		}
+
+		if(Block.opaqueCubeLookup[var7] && !Block.opaqueCubeLookup[var8]) {
+			var9 = 5;
+		}
+
+		if(Block.opaqueCubeLookup[var8] && !Block.opaqueCubeLookup[var7]) {
+			var9 = 4;
+		}
+
+		var1.setBlockMetadataWithNotify(var2, var3, var4, var9);
+	}
+
+	public int getBlockTexture(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		return var5 != 1 && var5 != 0 ? (var5 != var1.getBlockMetadata(var2, var3, var4) ? (this.field_8373_3OQN5db1xqyB694grr3I4ikidBZaZpJf78W84Y6mb7bNN7V4B3v6qRFvdlnK ? this.blockIndexInTexture - 2 : this.blockIndexInTexture - 1) : this.blockIndexInTexture) : Block.stone.blockIndexInTexture;
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 != 1 && var1 != 0 ? (var1 == 3 ? this.blockIndexInTexture : (this.field_8373_3OQN5db1xqyB694grr3I4ikidBZaZpJf78W84Y6mb7bNN7V4B3v6qRFvdlnK ? this.blockIndexInTexture - 2 : this.blockIndexInTexture - 1)) : Block.stone.blockID;
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(this.field_8373_3OQN5db1xqyB694grr3I4ikidBZaZpJf78W84Y6mb7bNN7V4B3v6qRFvdlnK) {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			float var7 = (float)var2 + 0.5F;
+			float var8 = (float)var3 + 0.0F + var5.nextFloat() * 6.0F / 16.0F;
+			float var9 = (float)var4 + 0.5F;
+			float var10 = 0.52F;
+			float var11 = var5.nextFloat() * 0.6F - 0.3F;
+			int var12 = var5.nextInt(3) + 1;
+			if(var6 == 4) {
+				var1.spawnParticle("snowflake" + var12, (double)(var7 - var10), (double)var8, (double)(var9 + var11), 0.0D, -0.01D, 0.0D);
+			} else if(var6 == 5) {
+				var1.spawnParticle("snowflake" + var12, (double)(var7 + var10), (double)var8, (double)(var9 + var11), 0.0D, -0.01D, 0.0D);
+			} else if(var6 == 2) {
+				var1.spawnParticle("snowflake" + var12, (double)(var7 + var11), (double)var8, (double)(var9 - var10), 0.0D, -0.01D, 0.0D);
+			} else if(var6 == 3) {
+				var1.spawnParticle("snowflake" + var12, (double)(var7 + var11), (double)var8, (double)(var9 + var10), 0.0D, -0.01D, 0.0D);
+			}
+		}
+
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		TileEntityFreezer var6 = (TileEntityFreezer)var1.getBlockTileEntity(var2, var3, var4);
+		var5.displayFreezerGUI(var6);
+		return true;
+	}
+
+	public static void func_8372_4aw431LgXdi1L48jU4ZL07b193KS25bZ8cuY42CDd63ZfoFcG05V1VC53UbG(boolean var0, World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		TileEntity var6 = var1.getBlockTileEntity(var2, var3, var4);
+		if(var0) {
+			var1.setBlockWithNotify(var2, var3, var4, ExtBlocks.WorkingFreezer.blockID);
+		} else {
+			var1.setBlockWithNotify(var2, var3, var4, ExtBlocks.Freezer.blockID);
+		}
+
+		var1.setBlockMetadataWithNotify(var2, var3, var4, var5);
+		var1.setBlockTileEntity(var2, var3, var4, var6);
+	}
+
+	protected TileEntity getBlockEntity() {
+		return new TileEntityFreezer();
+	}
+}
--- net/minecraft/src/Chunk.java
+++ net/minecraft/src/Chunk.java
@@ -18,8 +18,8 @@
 	public int height;
 	public final int xPosition;
 	public final int zPosition;
-	public Map chunkTileEntityMap;
-	public List[] entities;
+	public Map<ChunkPosition, TileEntity> chunkTileEntityMap;
+	public List<Entity>[] entities;
 	public boolean isTerrainPopulated;
 	public boolean isModified;
 	public boolean neverSave;
@@ -28,6 +28,7 @@
 	public long lastSaveTime;
 
 	public Chunk(World var1, int var2, int var3) {
+		this.neverSave = false;
 		this.chunkTileEntityMap = new HashMap();
 		this.entities = new List[8];
 		this.isTerrainPopulated = false;
@@ -72,7 +73,7 @@
 			for(int var3 = 0; var3 < 16; ++var3) {
 				int var4 = 127;
 
-				for(int var5 = var2 << 11 | var3 << 7; var4 > 0 && Block.lightOpacity[this.blocks[var5 + var4 - 1]] == 0; --var4) {
+				for(int var5 = var2 << 11 | var3 << 7; var4 > 0 && Block.lightOpacity[this.blocks[var5 + var4 - 1] & 255] == 0; --var4) {
 				}
 
 				this.heightMap[var3 << 4 | var2] = (byte)var4;
@@ -140,7 +141,8 @@
 			var5 = var2;
 		}
 
-		for(int var6 = var1 << 11 | var3 << 7; var5 > 0 && Block.lightOpacity[this.blocks[var6 + var5 - 1]] == 0; --var5) {
+		int var6;
+		for(var6 = var1 << 11 | var3 << 7; var5 > 0 && Block.lightOpacity[this.blocks[var6 + var5 - 1] & 255] == 0; --var5) {
 		}
 
 		if(var5 != var4) {
@@ -148,50 +150,55 @@
 			this.heightMap[var3 << 4 | var1] = (byte)var5;
 			int var7;
 			int var8;
-			int var9;
 			if(var5 < this.height) {
 				this.height = var5;
 			} else {
-				var7 = 127;
-
-				for(var8 = 0; var8 < 16; ++var8) {
-					for(var9 = 0; var9 < 16; ++var9) {
-						if((this.heightMap[var9 << 4 | var8] & 255) < var7) {
-							var7 = this.heightMap[var9 << 4 | var8] & 255;
+				var6 = 127;
+				var7 = 0;
+
+				while(true) {
+					if(var7 >= 16) {
+						this.height = var6;
+						break;
+					}
+
+					for(var8 = 0; var8 < 16; ++var8) {
+						if((this.heightMap[var8 << 4 | var7] & 255) < var6) {
+							var6 = this.heightMap[var8 << 4 | var7] & 255;
 						}
 					}
+
+					++var7;
 				}
-
-				this.height = var7;
 			}
 
-			var7 = this.xPosition * 16 + var1;
-			var8 = this.zPosition * 16 + var3;
+			var6 = this.xPosition * 16 + var1;
+			var7 = this.zPosition * 16 + var3;
 			if(var5 < var4) {
-				for(var9 = var5; var9 < var4; ++var9) {
-					this.skylightMap.set(var1, var9, var3, 15);
+				for(var8 = var5; var8 < var4; ++var8) {
+					this.skylightMap.set(var1, var8, var3, 15);
 				}
 			} else {
-				this.worldObj.scheduleLightingUpdate(EnumSkyBlock.Sky, var7, var4, var8, var7, var5, var8);
+				this.worldObj.scheduleLightingUpdate(EnumSkyBlock.Sky, var6, var4, var7, var6, var5, var7);
 
-				for(var9 = var4; var9 < var5; ++var9) {
-					this.skylightMap.set(var1, var9, var3, 0);
+				for(var8 = var4; var8 < var5; ++var8) {
+					this.skylightMap.set(var1, var8, var3, 0);
 				}
 			}
 
-			var9 = 15;
+			var8 = 15;
 
-			int var10;
-			for(var10 = var5; var5 > 0 && var9 > 0; this.skylightMap.set(var1, var5, var3, var9)) {
+			int var9;
+			for(var9 = var5; var5 > 0 && var8 > 0; this.skylightMap.set(var1, var5, var3, var8)) {
 				--var5;
-				int var11 = Block.lightOpacity[this.getBlockID(var1, var5, var3)];
-				if(var11 == 0) {
-					var11 = 1;
+				int var10 = Block.lightOpacity[this.getBlockID(var1, var5, var3)];
+				if(var10 == 0) {
+					var10 = 1;
 				}
 
-				var9 -= var11;
-				if(var9 < 0) {
-					var9 = 0;
+				var8 -= var10;
+				if(var8 < 0) {
+					var8 = 0;
 				}
 			}
 
@@ -199,20 +206,21 @@
 				--var5;
 			}
 
-			if(var5 != var10) {
-				this.worldObj.scheduleLightingUpdate(EnumSkyBlock.Sky, var7 - 1, var5, var8 - 1, var7 + 1, var10, var8 + 1);
+			if(var5 != var9) {
+				this.worldObj.scheduleLightingUpdate(EnumSkyBlock.Sky, var6 - 1, var5, var7 - 1, var6 + 1, var9, var7 + 1);
 			}
 
 			this.isModified = true;
 		}
+
 	}
 
 	public int getBlockID(int var1, int var2, int var3) {
-		return this.blocks[var1 << 11 | var3 << 7 | var2];
+		int var4 = var1 << 11 | var3 << 7 | var2;
+		return this.blocks[var4] & 255;
 	}
 
 	public boolean setBlockIDWithMetadata(int var1, int var2, int var3, int var4, int var5) {
-		byte var6 = (byte)var4;
 		int var7 = this.heightMap[var3 << 4 | var1] & 255;
 		int var8 = this.blocks[var1 << 11 | var3 << 7 | var2] & 255;
 		if(var8 == var4 && this.data.get(var1, var2, var3) == var5) {
@@ -220,13 +228,13 @@
 		} else {
 			int var9 = this.xPosition * 16 + var1;
 			int var10 = this.zPosition * 16 + var3;
-			this.blocks[var1 << 11 | var3 << 7 | var2] = var6;
+			this.blocks[var1 << 11 | var3 << 7 | var2] = (byte)var4;
 			if(var8 != 0 && !this.worldObj.multiplayerWorld) {
 				Block.blocksList[var8].onBlockRemoval(this.worldObj, var9, var2, var10);
 			}
 
 			this.data.set(var1, var2, var3, var5);
-			if(Block.lightOpacity[var6] != 0) {
+			if(Block.lightOpacity[var4] != 0) {
 				if(var2 >= var7) {
 					this.relightBlock(var1, var2 + 1, var3);
 				}
@@ -247,7 +255,6 @@
 	}
 
 	public boolean setBlockID(int var1, int var2, int var3, int var4) {
-		byte var5 = (byte)var4;
 		int var6 = this.heightMap[var3 << 4 | var1] & 255;
 		int var7 = this.blocks[var1 << 11 | var3 << 7 | var2] & 255;
 		if(var7 == var4) {
@@ -255,13 +262,13 @@
 		} else {
 			int var8 = this.xPosition * 16 + var1;
 			int var9 = this.zPosition * 16 + var3;
-			this.blocks[var1 << 11 | var3 << 7 | var2] = var5;
+			this.blocks[var1 << 11 | var3 << 7 | var2] = (byte)var4;
 			if(var7 != 0) {
 				Block.blocksList[var7].onBlockRemoval(this.worldObj, var8, var2, var9);
 			}
 
 			this.data.set(var1, var2, var3, 0);
-			if(Block.lightOpacity[var5] != 0) {
+			if(Block.lightOpacity[var4] != 0) {
 				if(var2 >= var6) {
 					this.relightBlock(var1, var2 + 1, var3);
 				}
@@ -347,6 +354,7 @@
 			var1.chunkCoordZ = this.zPosition;
 			this.entities[var4].add(var1);
 		}
+
 	}
 
 	public void removeEntity(Entity var1) {
@@ -412,6 +420,7 @@
 		} else {
 			System.out.println("Attempted to place a tile entity where there was no entity tile!");
 		}
+
 	}
 
 	public void removeChunkBlockTileEntity(int var1, int var2, int var3) {
@@ -424,10 +433,14 @@
 
 	public void onChunkLoad() {
 		this.isChunkLoaded = true;
-		this.worldObj.loadedTileEntityList.addAll(this.chunkTileEntityMap.values());
+		if(this.chunkTileEntityMap.values().size() > 0) {
+			this.worldObj.loadedTileEntityList.addAll(this.chunkTileEntityMap.values());
+		}
 
 		for(int var1 = 0; var1 < this.entities.length; ++var1) {
-			this.worldObj.addLoadedEntities(this.entities[var1]);
+			if(this.entities[var1].size() > 0) {
+				this.worldObj.addLoadedEntities(this.entities[var1]);
+			}
 		}
 
 	}
@@ -437,7 +450,11 @@
 		this.worldObj.loadedTileEntityList.removeAll(this.chunkTileEntityMap.values());
 
 		for(int var1 = 0; var1 < this.entities.length; ++var1) {
-			this.worldObj.unloadEntities(this.entities[var1]);
+			if(!(this.entities[var1] instanceof EntityPlayerSP)) {
+				this.worldObj.unloadEntities(this.entities[var1]);
+			} else {
+				ExtLogger.w("attempted to remove player");
+			}
 		}
 
 	}
@@ -470,7 +487,7 @@
 
 	}
 
-	public void getEntitiesOfTypeWithinAAAB(Class var1, AxisAlignedBB var2, List var3) {
+	public void getEntitiesOfTypeWithinAAAB(Class<? extends Entity> var1, AxisAlignedBB var2, List<Entity> var3) {
 		int var4 = MathHelper.floor_double((var2.minY - 2.0D) / 16.0D);
 		int var5 = MathHelper.floor_double((var2.maxY + 2.0D) / 16.0D);
 		if(var4 < 0) {
--- /dev/null
+++ net/minecraft/src/MinecraftUnknownClass.java
@@ -1,0 +1,27 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+
+public class MinecraftUnknownClass extends Thread {
+	private final Minecraft field_10183_69x4v6H5i9ri158NSDwY3Lyb7ELd7B19em377C58smaJfhTn394086G2QC1H;
+
+	public MinecraftUnknownClass(Minecraft var1) {
+		this.field_10183_69x4v6H5i9ri158NSDwY3Lyb7ELd7B19em377C58smaJfhTn394086G2QC1H = var1;
+	}
+
+	public void run() {
+		while(true) {
+			SoundManager var1 = this.field_10183_69x4v6H5i9ri158NSDwY3Lyb7ELd7B19em377C58smaJfhTn394086G2QC1H.sndManager;
+			if(!var1.func_12028_0Q48c7Q5B51VmKR6v879976kWbp8F737S8T15SyjAj664KVBIuoLfz0qRtAW()) {
+				return;
+			}
+
+			try {
+				Thread.sleep(10L);
+			} catch (Exception var3) {
+			}
+
+			var1.func_12039_718z1OJ9VakHqRSuN9qHt03I9336Di6o7ObA2RkDlwQ9KQzNeZ53VZA8sC69();
+		}
+	}
+}
--- net/minecraft/src/ItemRecord.java
+++ net/minecraft/src/ItemRecord.java
@@ -3,7 +3,7 @@
 public class ItemRecord extends Item {
 	private String recordName;
 
-	protected ItemRecord(int var1, String var2) {
+	public ItemRecord(int var1, String var2) {
 		super(var1);
 		this.recordName = var2;
 		this.maxStackSize = 1;
--- net/minecraft/src/AxisAlignedBB.java
+++ net/minecraft/src/AxisAlignedBB.java
@@ -4,7 +4,7 @@
 import java.util.List;
 
 public class AxisAlignedBB {
-	private static List boundingBoxes = new ArrayList();
+	private static List<AxisAlignedBB> boundingBoxes = new ArrayList();
 	private static int numBoundingBoxesInUse = 0;
 	public double minX;
 	public double minY;
--- /dev/null
+++ net/minecraft/src/EnumHouseBigUnknownClass.java
@@ -1,0 +1,41 @@
+package net.minecraft.src;
+
+class EnumHouseBigUnknownClass {
+	static final /* synthetic */ int[] field_10860_6445xGvFiQrxwB6B3Jv6E6Y2wuWtLZ480V96b43GE0f1Xis2uZL9xrGn6JSw;
+
+    static {
+        field_10860_6445xGvFiQrxwB6B3Jv6E6Y2wuWtLZ480V96b43GE0f1Xis2uZL9xrGn6JSw = new int[EnumHouseBig.func_12158_5d1PqAM31919iSOCPJkkBw3o2MG1I7zT27GPOp97Xf3srdW4U58elVI1No8M().length];
+        try {
+            EnumHouseBigUnknownClass.field_10860_6445xGvFiQrxwB6B3Jv6E6Y2wuWtLZ480V96b43GE0f1Xis2uZL9xrGn6JSw[EnumHouseBig.WhiteGlass.ordinal()] = 1;
+        }
+        catch (final NoSuchFieldError noSuchFieldError) {}
+        try {
+            EnumHouseBigUnknownClass.field_10860_6445xGvFiQrxwB6B3Jv6E6Y2wuWtLZ480V96b43GE0f1Xis2uZL9xrGn6JSw[EnumHouseBig.BlueGlass.ordinal()] = 2;
+        }
+        catch (final NoSuchFieldError noSuchFieldError2) {}
+        try {
+            EnumHouseBigUnknownClass.field_10860_6445xGvFiQrxwB6B3Jv6E6Y2wuWtLZ480V96b43GE0f1Xis2uZL9xrGn6JSw[EnumHouseBig.PinkGlass.ordinal()] = 3;
+        }
+        catch (final NoSuchFieldError noSuchFieldError3) {}
+        try {
+            EnumHouseBigUnknownClass.field_10860_6445xGvFiQrxwB6B3Jv6E6Y2wuWtLZ480V96b43GE0f1Xis2uZL9xrGn6JSw[EnumHouseBig.PlateDecor.ordinal()] = 4;
+        }
+        catch (final NoSuchFieldError noSuchFieldError4) {}
+        try {
+            EnumHouseBigUnknownClass.field_10860_6445xGvFiQrxwB6B3Jv6E6Y2wuWtLZ480V96b43GE0f1Xis2uZL9xrGn6JSw[EnumHouseBig.LimeGlass.ordinal()] = 5;
+        }
+        catch (final NoSuchFieldError noSuchFieldError5) {}
+        try {
+            EnumHouseBigUnknownClass.field_10860_6445xGvFiQrxwB6B3Jv6E6Y2wuWtLZ480V96b43GE0f1Xis2uZL9xrGn6JSw[EnumHouseBig.BlackGlass.ordinal()] = 6;
+        }
+        catch (final NoSuchFieldError noSuchFieldError6) {}
+        try {
+            EnumHouseBigUnknownClass.field_10860_6445xGvFiQrxwB6B3Jv6E6Y2wuWtLZ480V96b43GE0f1Xis2uZL9xrGn6JSw[EnumHouseBig.Door.ordinal()] = 7;
+        }
+        catch (final NoSuchFieldError noSuchFieldError7) {}
+        try {
+            EnumHouseBigUnknownClass.field_10860_6445xGvFiQrxwB6B3Jv6E6Y2wuWtLZ480V96b43GE0f1Xis2uZL9xrGn6JSw[EnumHouseBig.Doorless.ordinal()] = 8;
+        }
+        catch (final NoSuchFieldError noSuchFieldError8) {}
+    }
+}
--- /dev/null
+++ net/minecraft/src/FreerunMap3.java
@@ -1,0 +1,24 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.util.List;
+
+public class FreerunMap3 extends FreerunWorld {
+	private NamedLoc[] field_7522_0QBb4IN92EHny0yWgC8yZUj5S50D7owH8k3b7ia4YwYH77o3xmsoO943esub = new NamedLoc[]{new NamedLoc(-233, 66, 22, "spawn"), new NamedLoc(-234, 65, 17, -231, 67, 16, "spawn_start"), new NamedLoc(-219, 68, -21, -218, 72, -24, "checkpoint1"), new NamedLoc(-209, 72, -37, -212, 75, -40, "scaff_1"), new NamedLoc(-249, 120, -54, -253, 124, -57, "after_portal_1"), new NamedLoc(-213, 65, -67, -211, 66, -69, "water_section_portal_2"), new NamedLoc(-160, 65, -66, -158, 68, -70, "end")};
+
+	public FreerunMap3(File var1, String var2) {
+		super(var1, var2);
+	}
+
+	public NamedLoc[] getCheckpoints() {
+		return this.field_7522_0QBb4IN92EHny0yWgC8yZUj5S50D7owH8k3b7ia4YwYH77o3xmsoO943esub;
+	}
+
+	public int getResetY(long var1, long var3) {
+		return var1 >= -211L && var1 <= -158L && var3 >= -72L && var3 <= -64L ? 51 : (var1 >= -219L && var1 <= -204L && var3 >= -26L && var3 <= -22L ? 63 : 65);
+	}
+
+	public List<HandlerSetCheckpointUnknownClass> func_7517_8oADBp42n4G2Ly6U1WLv70n6VyS2bkokzo8dF7ayUqDb1A6ofY86pUJA8mf8() {
+		return this.field_7498_65957fU9nGL5PA2e96ZOK3ePBveSt2ceA9Glj10PC2Jo5s0wI21ix69flng2;
+	}
+}
--- /dev/null
+++ net/minecraft/src/WorldGenHouseBigSpawner.java
@@ -1,0 +1,104 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class WorldGenHouseBigSpawner implements IHouseBig {
+	private final NoiseGeneratorPerlin field_9902_874UPUdmzaN22mSMae9rqz447wsXe06a18Gh5DxY7175eTA0eAh9620Qtb06;
+
+	public WorldGenHouseBigSpawner(Random var1) {
+		this.field_9902_874UPUdmzaN22mSMae9rqz447wsXe06a18Gh5DxY7175eTA0eAh9620Qtb06 = new NoiseGeneratorPerlin(var1);
+	}
+
+	public float func_9883_913vTZx6no47397W6wG95Q5uB254nJBZ27osnW242XcA9M93Alb1ry5oPyVe() {
+		return 0.8F;
+	}
+
+	private boolean func_9899_6P2d88cuq4I5i8OfmOP3XsaoEtx78lk5g1EXGSO2ytWbGklLsE39G94e3W6A(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockId(var2, var3, var4);
+		return var5 != 0 && Block.blocksList[var5].isOpaqueCube() && Block.blocksList[var5].isCollidable() && Block.blocksList[var5].renderAsNormalBlock();
+	}
+
+	private boolean func_9900_0eFAn36ml28ygd9brA9R6l8tPj1mH4j5q49EnxJRUFPb8i0PYnVM3CG11RzE(World var1, int var2, int var3, int var4) {
+		int var5 = 256;
+
+		for(int var6 = 0; var6 < 8; ++var6) {
+			for(int var7 = 0; var7 < 15; ++var7) {
+				for(int var8 = 0; var8 < 15; ++var8) {
+					if(this.func_9899_6P2d88cuq4I5i8OfmOP3XsaoEtx78lk5g1EXGSO2ytWbGklLsE39G94e3W6A(var1, var2 * 16 + var7, var3 + var6, var4 * 16 + var8)) {
+						--var5;
+						if(var5 == 0) {
+							return false;
+						}
+					}
+				}
+			}
+		}
+
+		return true;
+	}
+
+	public void func_9901_2WgyErj1PS92FusM32Uw4qR51rB7XAfdZ2x0o8awzVmlQwKIhCLMnVvK876g(World var1, int var2, int var3, int var4) {
+		int var5;
+		int var6;
+		for(var5 = 0; var5 < 9; ++var5) {
+			for(var6 = 0; var6 < 6; ++var6) {
+				var1.setBlock(var2 + var5 + 3, var3 + var6, var4 + 2, Block.brick.blockID);
+				var1.setBlock(var2 + var5 + 3, var3 + var6, var4 + 12, Block.brick.blockID);
+				var1.setBlock(var2 + 2, var3 + var6, var4 + 3 + var5, Block.brick.blockID);
+				var1.setBlock(var2 + 12, var3 + var6, var4 + 3 + var5, Block.brick.blockID);
+			}
+		}
+
+		for(var5 = 0; var5 < 9; ++var5) {
+			for(var6 = 0; var6 < 9; ++var6) {
+				var1.setBlock(var2 + var6 + 3, var3, var4 + var5 + 3, Block.brick.blockID);
+			}
+		}
+
+		var5 = var2 * 56236445 - var3 * 1235617 + var4 * 1242535;
+		var6 = var2 * 234745 - var3 * 83452 - var4 * 784345;
+		double var7 = this.field_9902_874UPUdmzaN22mSMae9rqz447wsXe06a18Gh5DxY7175eTA0eAh9620Qtb06.generateNoise((double)var5 / 2.0D, (double)var6 / 2.0D);
+		this.field_9902_874UPUdmzaN22mSMae9rqz447wsXe06a18Gh5DxY7175eTA0eAh9620Qtb06.generateNoise((double)var6 / 2.0D, (double)var5 / 2.0D);
+		if(var7 >= 0.25D) {
+			TileEntityChest var11 = new TileEntityChest();
+			var1.setBlock(var2 + 7, var3 + 1, var4 + 7, Block.chest.blockID);
+			var1.setBlockTileEntity(var2 + 7, var3 + 1, var4 + 7, var11);
+			Random var12 = new Random((long)(var5 + var6));
+
+			for(int var13 = 0; var13 < var11.getSizeInventory(); ++var13) {
+				for(int var14 = 0; var14 < 300; ++var14) {
+					int var15 = var12.nextInt(Short.MAX_VALUE);
+					if(Item.itemsList[var15] != null) {
+						ItemStack var16 = new ItemStack(var15);
+						var11.setInventorySlotContents(var13, var16);
+						break;
+					}
+				}
+			}
+		} else {
+			TileEntityMobSpawner var17 = new TileEntityMobSpawner();
+			var17.mobID = "Slime";
+			var1.setBlock(var2 + 7, var3 + 1, var4 + 7, Block.mobSpawner.blockID);
+			var1.setBlockTileEntity(var2 + 7, var3 + 1, var4 + 7, var17);
+		}
+
+	}
+
+	public void func_9884_61qP7q8deV5ospnX8sW5XUMxMcV5ssOU68863452kQ9H403L5ScR3DEa98qO(World var1, int var2, int var3, WorldGenHouseBigInterior var4) {
+		int var5;
+		for(var5 = 127; var5 > 0 && this.func_9900_0eFAn36ml28ygd9brA9R6l8tPj1mH4j5q49EnxJRUFPb8i0PYnVM3CG11RzE(var1, var2, var5, var3); --var5) {
+		}
+
+		while(var5 < 108) {
+			this.func_9901_2WgyErj1PS92FusM32Uw4qR51rB7XAfdZ2x0o8awzVmlQwKIhCLMnVvK876g(var1, var2 * 16, var5, var3 * 16);
+			var5 += 6;
+		}
+
+		for(int var6 = 0; var6 < 9; ++var6) {
+			for(int var7 = 0; var7 < 9; ++var7) {
+				var1.setBlock(var2 * 16 + var7 + 3, var5, var3 * 16 + var6 + 3, Block.brick.blockID);
+			}
+		}
+
+	}
+}
--- net/minecraft/client/Minecraft.java
+++ net/minecraft/client/Minecraft.java
@@ -4,30 +4,56 @@
 import java.awt.Canvas;
 import java.awt.Color;
 import java.awt.Component;
+import java.awt.Desktop;
 import java.awt.Dimension;
 import java.awt.Frame;
 import java.awt.Graphics;
+import java.io.BufferedReader;
 import java.io.File;
+import java.io.FileReader;
+import java.io.IOException;
+import java.io.UnsupportedEncodingException;
+import java.lang.management.ManagementFactory;
+import java.lang.management.RuntimeMXBean;
+import java.lang.reflect.InvocationTargetException;
+import java.net.URL;
+import java.nio.file.Files;
+import java.nio.file.OpenOption;
+import java.nio.file.Paths;
+import java.security.MessageDigest;
+import java.security.NoSuchAlgorithmException;
+import java.util.ArrayList;
+import java.util.Iterator;
+import javax.swing.JOptionPane;
 import net.minecraft.src.AxisAlignedBB;
 import net.minecraft.src.Block;
+import net.minecraft.src.CertUtils;
 import net.minecraft.src.EffectRenderer;
 import net.minecraft.src.EntityPlayerSP;
+import net.minecraft.src.EntityPlayerZombieModeClient;
 import net.minecraft.src.EntityRenderer;
 import net.minecraft.src.EnumOS;
+import net.minecraft.src.Ext1605Utils;
+import net.minecraft.src.ExtLogger;
 import net.minecraft.src.FontRenderer;
+import net.minecraft.src.FreerunWorld;
 import net.minecraft.src.GLAllocation;
 import net.minecraft.src.GameSettings;
 import net.minecraft.src.GameWindowListener;
+import net.minecraft.src.GuiBanned;
+import net.minecraft.src.GuiBannedMenu;
 import net.minecraft.src.GuiChat;
 import net.minecraft.src.GuiConflictWarning;
+import net.minecraft.src.GuiConnectFailed;
 import net.minecraft.src.GuiConnecting;
 import net.minecraft.src.GuiErrorScreen;
+import net.minecraft.src.GuiFrail;
 import net.minecraft.src.GuiGameOver;
 import net.minecraft.src.GuiIngame;
 import net.minecraft.src.GuiIngameMenu;
-import net.minecraft.src.GuiInventory;
 import net.minecraft.src.GuiMainMenu;
 import net.minecraft.src.GuiScreen;
+import net.minecraft.src.InputHandler;
 import net.minecraft.src.ItemRenderer;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.LoadingScreenRenderer;
@@ -35,6 +61,9 @@
 import net.minecraft.src.MinecraftError;
 import net.minecraft.src.MinecraftException;
 import net.minecraft.src.MinecraftImpl;
+import net.minecraft.src.MinecraftUnknownClass;
+import net.minecraft.src.MinecraftUnknownClass2;
+import net.minecraft.src.MinecraftUnknownClass3;
 import net.minecraft.src.ModelBiped;
 import net.minecraft.src.MouseHelper;
 import net.minecraft.src.MovementInputFromOptions;
@@ -43,11 +72,16 @@
 import net.minecraft.src.OpenGlCapsChecker;
 import net.minecraft.src.PlayerController;
 import net.minecraft.src.PlayerControllerCreative;
+import net.minecraft.src.PlayerControllerSPUnknownClass;
+import net.minecraft.src.PlayerControllerSPUnknownClass2;
 import net.minecraft.src.RenderEngine;
 import net.minecraft.src.RenderGlobal;
+import net.minecraft.src.RenderHub;
 import net.minecraft.src.RenderManager;
 import net.minecraft.src.ScaledResolution;
+import net.minecraft.src.ScreenDebugMenu;
 import net.minecraft.src.Session;
+import net.minecraft.src.SkinManager;
 import net.minecraft.src.SoundManager;
 import net.minecraft.src.Tessellator;
 import net.minecraft.src.TextureCompassFX;
@@ -56,25 +90,33 @@
 import net.minecraft.src.TextureLavaFlowFX;
 import net.minecraft.src.TextureWaterFX;
 import net.minecraft.src.TextureWaterFlowFX;
+import net.minecraft.src.ThreadChunkPopulator;
 import net.minecraft.src.ThreadDownloadResources;
 import net.minecraft.src.ThreadSleepForever;
 import net.minecraft.src.Timer;
 import net.minecraft.src.UnexpectedThrowable;
 import net.minecraft.src.Vec3D;
+import net.minecraft.src.VisualsManager;
 import net.minecraft.src.World;
+import net.minecraft.src.WorldGenMyconUnknownClass;
 import net.minecraft.src.WorldRenderer;
+import net.minecraft.src.WorldUnknownClass2;
+import net.minecraft.src.ZMWorld;
 import org.lwjgl.LWJGLException;
+import org.lwjgl.Sys;
 import org.lwjgl.input.Controllers;
 import org.lwjgl.input.Keyboard;
 import org.lwjgl.input.Mouse;
 import org.lwjgl.opengl.Display;
 import org.lwjgl.opengl.DisplayMode;
 import org.lwjgl.opengl.GL11;
+import org.lwjgl.opengl.PixelFormat;
 import org.lwjgl.util.glu.GLU;
 
 public abstract class Minecraft implements Runnable {
 	public PlayerController playerController;
-	private boolean fullscreen = false;
+	public static Minecraft field_7317_5Dn33cKLDp4ugCwpD8dAC0Qb0gK4WT4AEqJf0YUJc3Hq6EO32BfTsK678CKb;
+	public boolean fullscreen = false;
 	public int displayWidth;
 	public int displayHeight;
 	private OpenGlCapsChecker glCapabilities;
@@ -93,7 +135,7 @@
 	public GuiScreen currentScreen = null;
 	public LoadingScreenRenderer loadingScreen = new LoadingScreenRenderer(this);
 	public EntityRenderer entityRenderer = new EntityRenderer(this);
-	private ThreadDownloadResources downloadResourcesThread;
+	public ThreadDownloadResources downloadResourcesThread;
 	private int ticksRan = 0;
 	private int leftClickCounter = 0;
 	private int tempDisplayWidth;
@@ -116,6 +158,7 @@
 	private TextureWaterFX textureWaterFX = new TextureWaterFX();
 	private TextureLavaFX textureLavaFX = new TextureLavaFX();
 	private static File minecraftDir = null;
+	public static boolean field_7296_40G9X9sEbrNVWk1I68RpGi9486QjvBn75u9xmmmZ189amc26uqiJAf80zUYu = false;
 	public volatile boolean running = true;
 	public String debug = "";
 	long prevFrameTime = -1L;
@@ -124,6 +167,24 @@
 	public boolean isRaining = false;
 	long systemTime = System.currentTimeMillis();
 	private int joinPlayerCounter = 0;
+	public Component field_7319_3qZs06Oh4T1EzvE8a1e17oHrGTbJu43kH42m78NUR12BElFxZ583A3e3PdPk;
+	public MinecraftUnknownClass2 field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE;
+	public MinecraftUnknownClass3 field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo;
+	public boolean field_7316_28K4517FJT58jN9ucjj3zE1jE410Ltpi330vH7516f19B006E4Wco5x4Y0w5 = true;
+	public long field_7273_9A23in1uqW3pg13kj4pOda0YD2W2B8toO2Xk31j7y1F2q5nDP0ompj85iXQC = System.currentTimeMillis();
+	public static boolean field_7307_8AX67fsnsj54328J9e6FiY9333555Xj726t2182u3TBB948QMZsZX2iz02iv = true;
+	public final String[] field_7302_19rCmxZvQ44R6d92WkH1mXthIKS3J78E3u1z0N18CN7q304gJsGOLn55X7mx = new String[]{"cb5c516ad379ee341929afe9b9d1498e4d82442d3d3dbb24bb3e6c082a785d75", "17f7a8e98e3b017d4bb168b57196f59a2c44f875ce8bba38086576ee3080e0a0"};
+	public final String[] field_7305_32ThEK683E33UOnLg5jCYi6a44ej1w0cgRA8dke3o36TvwA2m1lepu5CZa4q = new String[]{"36d528f3eaed8d3e413c571e7eb67037", "117b71e2dbed9440a000f742a9c7636a"};
+	public String field_7289_3R5t255Q5D6KY19uD068Mkk1B6OU9sWGPdWh8cCMUgE3jA5I39fu26h80483 = "";
+	public static boolean field_7272_4vZ36FKx2I9PxzXyWH4290I55Q6yd6FI668q2Ylv62ISy2u1yh710qJ4Q0Yo = false;
+	public static String field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L = WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9796_62Ccm2XAR6JqSDTgV762x61j971DNgsIrMhaXZxPs0fQnBC7ymR2l1v1V22X);
+	private final String field_7294_3N43634U70U92133ZUaNYj909RB5DwkFoBTS6atyP5GiVktfCg90sfuoC131 = "11(NtBreak)/11-023-ship " + (MinecraftImpl.class.getSimpleName().contains("MinecraftImpl") ? "(non-obf.)" : (MinecraftImpl.class.getSimpleName().length() < 3 ? "(lv1obf.)" : "(lv2obf.)"));
+	public static int field_7277_2ap75bw7uWpJs9xa2VRa8p40l51ptv8B02tkt5OcOFM8BeYBB08G54gDjTCY = 0;
+	public int field_7318_1202Xh2to5K411eCdkp7924Hyz4tEuc93T8eZ9qf5D33M4HWlnu524P0Mlk2 = 0;
+	public VisualsManager field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s = new VisualsManager();
+	public static boolean loadCerts = true;
+	public static String field_7269_8WQ9B51cG08Xzvtv4872kc1791FFx6EUAi7dtOrdc533169lB1oGze3Sm1ZJ;
+	public static boolean field_7326_55yB6jYtSi94r555184CYoXDQ1YhyBnoS1lJaCCAbdj3rDu1RNzU8Gp4C3g5 = false;
 
 	public Minecraft(Component var1, Canvas var2, MinecraftApplet var3, int var4, int var5, boolean var6) {
 		this.tempDisplayWidth = var4;
@@ -135,6 +196,13 @@
 		this.displayWidth = var4;
 		this.displayHeight = var5;
 		this.fullscreen = var6;
+		this.field_7319_3qZs06Oh4T1EzvE8a1e17oHrGTbJu43kH42m78NUR12BElFxZ583A3e3PdPk = var1;
+		InputHandler.Initialize(this);
+		CertUtils.LoadKeys();
+		if(!System.getProperty("os.name").contains("indows")) {
+			Ext1605Utils.skinUrls.set(0, "file://" + System.getProperty(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9794_1Mq8T0QNr27egvw7Ii5njC2U34iHqD9xm0XHd85K26sr2HmLXKQgJ5Uz42hp), ".") + "/.minecraft/skincache/");
+		}
+
 	}
 
 	public abstract void displayUnexpectedThrowable(UnexpectedThrowable var1);
@@ -144,6 +212,862 @@
 		this.serverPort = var2;
 	}
 
+	public void func_7246_52E7PCfeQbAyGIXk2rGQJ0L8P422OpByz4zm7rUbJ5g5VnHn3y8niBTqC8C0(String var1, String var2) {
+		ScaledResolution var3 = new ScaledResolution(this.displayWidth, this.displayHeight);
+		int var4 = var3.getScaledHeight();
+		this.fontRenderer.drawString(var1, 10, var4 - 40, 16777215);
+		this.fontRenderer.drawString(var2, 10, var4 - 25, 16777215);
+	}
+
+	public void func_7254_8fW1DcOg3Y819yUa6j1jy2lJiMPR4hOFs9F2emO20dNK708Di149LF42q7Mt() {
+		if(!(new File(getMinecraftDir() + "/firstlaunch")).exists()) {
+			String var1 = this.session.username.toLowerCase();
+			byte var2 = -1;
+			switch(var1.hashCode()) {
+			case -2125008266:
+				if(var1.equals("digenuine")) {
+					var2 = 3;
+				}
+				break;
+			case -2015954412:
+				if(var1.equals("testtest123abc")) {
+					var2 = 99;
+				}
+				break;
+			case -1993439786:
+				if(var1.equals("herobrine")) {
+					var2 = 51;
+				}
+				break;
+			case -1914350748:
+				if(var1.equals("shiny_emerald")) {
+					var2 = 35;
+				}
+				break;
+			case -1903732581:
+				if(var1.equals("breadkins")) {
+					var2 = 57;
+				}
+				break;
+			case -1873628474:
+				if(var1.equals("jeffdakillax3")) {
+					var2 = 26;
+				}
+				break;
+			case -1872946770:
+				if(var1.equals("liminalityyy")) {
+					var2 = 8;
+				}
+				break;
+			case -1831285928:
+				if(var1.equals("j4zzdistrict")) {
+					var2 = 111;
+				}
+				break;
+			case -1653656391:
+				if(var1.equals("8ball_luck")) {
+					var2 = 105;
+				}
+				break;
+			case -1598878157:
+				if(var1.equals("xxmastercheef_reef2001xx")) {
+					var2 = 101;
+				}
+				break;
+			case -1545722941:
+				if(var1.equals("kerkan1994")) {
+					var2 = 47;
+				}
+				break;
+			case -1538477974:
+				if(var1.equals("cardjitsu2005")) {
+					var2 = 77;
+				}
+				break;
+			case -1512707649:
+				if(var1.equals("buj_itself")) {
+					var2 = 6;
+				}
+				break;
+			case -1484536825:
+				if(var1.equals("___afk")) {
+					var2 = 34;
+				}
+				break;
+			case -1477360791:
+				if(var1.equals("retrogamingnow")) {
+					var2 = 7;
+				}
+				break;
+			case -1419278862:
+				if(var1.equals("illudens")) {
+					var2 = 10;
+				}
+				break;
+			case -1416343405:
+				if(var1.equals("frilvman")) {
+					var2 = 110;
+				}
+				break;
+			case -1409130438:
+				if(var1.equals("samurai_2001")) {
+					var2 = 49;
+				}
+				break;
+			case -1406328437:
+				if(var1.equals("author")) {
+					var2 = 81;
+				}
+				break;
+			case -1355525147:
+				if(var1.equals("cntrpl")) {
+					var2 = 12;
+				}
+				break;
+			case -1349643796:
+				if(var1.equals("theobi1")) {
+					var2 = 5;
+				}
+				break;
+			case -1321851844:
+				if(var1.equals("d3veloper")) {
+					var2 = 67;
+				}
+				break;
+			case -1280020296:
+				if(var1.equals("anon-alpha-afil")) {
+					var2 = 1;
+				}
+				break;
+			case -1275471952:
+				if(var1.equals("gamemasterpdx")) {
+					var2 = 28;
+				}
+				break;
+			case -1271408351:
+				if(var1.equals("dawnbreather")) {
+					var2 = 61;
+				}
+				break;
+			case -1128254799:
+				if(var1.equals("js_sam1999")) {
+					var2 = 46;
+				}
+				break;
+			case -1099661474:
+				if(var1.equals("deluxewish")) {
+					var2 = 109;
+				}
+				break;
+			case -1059859060:
+				if(var1.equals("2008score")) {
+					var2 = 84;
+				}
+				break;
+			case -1047032954:
+				if(var1.equals("nguyen")) {
+					var2 = 92;
+				}
+				break;
+			case -983338091:
+				if(var1.equals("marina234")) {
+					var2 = 27;
+				}
+				break;
+			case -909395400:
+				if(var1.equals("saw_13")) {
+					var2 = 95;
+				}
+				break;
+			case -708524487:
+				if(var1.equals("equipmental")) {
+					var2 = 107;
+				}
+				break;
+			case -704651573:
+				if(var1.equals("theoneandonly_hb")) {
+					var2 = 94;
+				}
+				break;
+			case -601131336:
+				if(var1.equals("phil564")) {
+					var2 = 38;
+				}
+				break;
+			case -463246729:
+				if(var1.equals("phil_breadkins")) {
+					var2 = 56;
+				}
+				break;
+			case -440585693:
+				if(var1.equals("ossyflawol")) {
+					var2 = 15;
+				}
+				break;
+			case -408170668:
+				if(var1.equals("zigzag2608")) {
+					var2 = 4;
+				}
+				break;
+			case -374547061:
+				if(var1.equals("bolternon")) {
+					var2 = 18;
+				}
+				break;
+			case -364150283:
+				if(var1.equals("electric9001")) {
+					var2 = 103;
+				}
+				break;
+			case -362893193:
+				if(var1.equals("erdbeerbaerlp")) {
+					var2 = 32;
+				}
+				break;
+			case -356150495:
+				if(var1.equals("holdtheflame")) {
+					var2 = 121;
+				}
+				break;
+			case -318608989:
+				if(var1.equals("misian_de_que")) {
+					var2 = 113;
+				}
+				break;
+			case -268421708:
+				if(var1.equals("unnaturalistic")) {
+					var2 = 23;
+				}
+				break;
+			case -259340866:
+				if(var1.equals("rollnway")) {
+					var2 = 16;
+				}
+				break;
+			case -254209283:
+				if(var1.equals("shrugxxl")) {
+					var2 = 108;
+				}
+				break;
+			case -242995937:
+				if(var1.equals("skullkeks")) {
+					var2 = 17;
+				}
+				break;
+			case -239473648:
+				if(var1.equals("jack_wowo")) {
+					var2 = 112;
+				}
+				break;
+			case -217246700:
+				if(var1.equals("machinerage")) {
+					var2 = 50;
+				}
+				break;
+			case -135168753:
+				if(var1.equals("deve1oper")) {
+					var2 = 65;
+				}
+				break;
+			case -129627627:
+				if(var1.equals("deve7oper")) {
+					var2 = 71;
+				}
+				break;
+			case -82557847:
+				if(var1.equals("devel0per")) {
+					var2 = 64;
+				}
+				break;
+			case -82498265:
+				if(var1.equals("devel2per")) {
+					var2 = 66;
+				}
+				break;
+			case -80682471:
+				if(var1.equals("develop6r")) {
+					var2 = 70;
+				}
+				break;
+			case 3055:
+				if(var1.equals("a0")) {
+					var2 = 115;
+				}
+				break;
+			case 3056:
+				if(var1.equals("a1")) {
+					var2 = 116;
+				}
+				break;
+			case 3149:
+				if(var1.equals("d1")) {
+					var2 = 85;
+				}
+				break;
+			case 3150:
+				if(var1.equals("d2")) {
+					var2 = 86;
+				}
+				break;
+			case 94785:
+				if(var1.equals("a11")) {
+					var2 = 117;
+				}
+				break;
+			case 94946:
+				if(var1.equals("a67")) {
+					var2 = 118;
+				}
+				break;
+			case 97670:
+				if(var1.equals("d13")) {
+					var2 = 87;
+				}
+				break;
+			case 3307643:
+				if(var1.equals("kyub")) {
+					var2 = 75;
+				}
+				break;
+			case 3419501:
+				if(var1.equals("orbl")) {
+					var2 = 43;
+				}
+				break;
+			case 3492756:
+				if(var1.equals("rain")) {
+					var2 = 60;
+				}
+				break;
+			case 3541802:
+				if(var1.equals("sul4")) {
+					var2 = 36;
+				}
+				break;
+			case 28053531:
+				if(var1.equals("watchingthing")) {
+					var2 = 58;
+				}
+				break;
+			case 45806858:
+				if(var1.equals("00071")) {
+					var2 = 83;
+				}
+				break;
+			case 95354678:
+				if(var1.equals("dargh")) {
+					var2 = 21;
+				}
+				break;
+			case 101433788:
+				if(var1.equals("jstar")) {
+					var2 = 89;
+				}
+				break;
+			case 103068218:
+				if(var1.equals("lloyd")) {
+					var2 = 90;
+				}
+				break;
+			case 106004632:
+				if(var1.equals("orble")) {
+					var2 = 42;
+				}
+				break;
+			case 107943722:
+				if(var1.equals("queen")) {
+					var2 = 59;
+				}
+				break;
+			case 109330445:
+				if(var1.equals("seven")) {
+					var2 = 96;
+				}
+				break;
+			case 109403485:
+				if(var1.equals("sheer")) {
+					var2 = 39;
+				}
+				break;
+			case 109548582:
+				if(var1.equals("smaed")) {
+					var2 = 31;
+				}
+				break;
+			case 109556739:
+				if(var1.equals("smith")) {
+					var2 = 97;
+				}
+				break;
+			case 112261804:
+				if(var1.equals("vkcom")) {
+					var2 = 30;
+				}
+				break;
+			case 166040207:
+				if(var1.equals("gnawmon")) {
+					var2 = 19;
+				}
+				break;
+			case 184456332:
+				if(var1.equals("oceanharte")) {
+					var2 = 11;
+				}
+				break;
+			case 202924960:
+				if(var1.equals("philalphaver")) {
+					var2 = 2;
+				}
+				break;
+			case 246043532:
+				if(var1.equals("director")) {
+					var2 = 82;
+				}
+				break;
+			case 282680621:
+				if(var1.equals("thenamesbond_123")) {
+					var2 = 93;
+				}
+				break;
+			case 284885337:
+				if(var1.equals("dispensa")) {
+					var2 = 20;
+				}
+				break;
+			case 430942275:
+				if(var1.equals("uncrossedpanic4")) {
+					var2 = 33;
+				}
+				break;
+			case 439344840:
+				if(var1.equals("wyvern621")) {
+					var2 = 76;
+				}
+				break;
+			case 449781037:
+				if(var1.equals("andrewidot")) {
+					var2 = 0;
+				}
+				break;
+			case 468954976:
+				if(var1.equals("deveightloper")) {
+					var2 = 54;
+				}
+				break;
+			case 489469283:
+				if(var1.equals("brokenblade")) {
+					var2 = 63;
+				}
+				break;
+			case 535861488:
+				if(var1.equals("vladg24")) {
+					var2 = 14;
+				}
+				break;
+			case 684616160:
+				if(var1.equals("philbreadkins")) {
+					var2 = 55;
+				}
+				break;
+			case 736853015:
+				if(var1.equals("qrobin42")) {
+					var2 = 114;
+				}
+				break;
+			case 742370547:
+				if(var1.equals("biggenux")) {
+					var2 = 53;
+				}
+				break;
+			case 801006876:
+				if(var1.equals("clemence")) {
+					var2 = 62;
+				}
+				break;
+			case 839198725:
+				if(var1.equals("mark101")) {
+					var2 = 79;
+				}
+				break;
+			case 849762053:
+				if(var1.equals("cs_jam2000")) {
+					var2 = 78;
+				}
+				break;
+			case 852404551:
+				if(var1.equals("cheatosphere64")) {
+					var2 = 22;
+				}
+				break;
+			case 928393453:
+				if(var1.equals("cntrpl2")) {
+					var2 = 13;
+				}
+				break;
+			case 959150352:
+				if(var1.equals("kyubey34")) {
+					var2 = 74;
+				}
+				break;
+			case 961412075:
+				if(var1.equals("the father")) {
+					var2 = 88;
+				}
+				break;
+			case 964545680:
+				if(var1.equals("grasswalker15")) {
+					var2 = 120;
+				}
+				break;
+			case 966222007:
+				if(var1.equals("thatkingopizza")) {
+					var2 = 100;
+				}
+				break;
+			case 1015761090:
+				if(var1.equals("fruitybot")) {
+					var2 = 37;
+				}
+				break;
+			case 1034584923:
+				if(var1.equals("unfortun8")) {
+					var2 = 52;
+				}
+				break;
+			case 1105719974:
+				if(var1.equals("devel5er")) {
+					var2 = 69;
+				}
+				break;
+			case 1143769501:
+				if(var1.equals("andrewgaming67")) {
+					var2 = 119;
+				}
+				break;
+			case 1174415035:
+				if(var1.equals("bugnation")) {
+					var2 = 45;
+				}
+				break;
+			case 1174745426:
+				if(var1.equals("the mother")) {
+					var2 = 91;
+				}
+				break;
+			case 1239153688:
+				if(var1.equals("theblue_warrier")) {
+					var2 = 104;
+				}
+				break;
+			case 1274587626:
+				if(var1.equals("jamieplayzmc")) {
+					var2 = 80;
+				}
+				break;
+			case 1429411275:
+				if(var1.equals("dug_fleez")) {
+					var2 = 73;
+				}
+				break;
+			case 1545927868:
+				if(var1.equals("spooksthewookz57")) {
+					var2 = 72;
+				}
+				break;
+			case 1624772359:
+				if(var1.equals("bobbies1")) {
+					var2 = 24;
+				}
+				break;
+			case 1670620881:
+				if(var1.equals("vivivern")) {
+					var2 = 41;
+				}
+				break;
+			case 1723943043:
+				if(var1.equals("xorcist6898")) {
+					var2 = 48;
+				}
+				break;
+			case 1792078684:
+				if(var1.equals("develo4per")) {
+					var2 = 68;
+				}
+				break;
+			case 1844594291:
+				if(var1.equals("dottych")) {
+					var2 = 29;
+				}
+				break;
+			case 1864101498:
+				if(var1.equals("salvoil")) {
+					var2 = 102;
+				}
+				break;
+			case 1919540599:
+				if(var1.equals("_where_")) {
+					var2 = 106;
+				}
+				break;
+			case 1970438482:
+				if(var1.equals("kollinkollin")) {
+					var2 = 9;
+				}
+				break;
+			case 1974428530:
+				if(var1.equals("bug_nation")) {
+					var2 = 44;
+				}
+				break;
+			case 2088461320:
+				if(var1.equals("spirethebuilder10")) {
+					var2 = 98;
+				}
+				break;
+			case 2099469472:
+				if(var1.equals("bortimer")) {
+					var2 = 25;
+				}
+				break;
+			case 2114607034:
+				if(var1.equals("dycam99")) {
+					var2 = 40;
+				}
+			}
+
+			switch(var2) {
+			case 0:
+			case 1:
+			case 2:
+			case 3:
+				Sys.alert("Why... Why are there...", "Penises?");
+				break;
+			case 4:
+				Sys.alert("Hey hun, it\'s Andrew!", "Not sure if you\'ll ever see this, but remember I love you very much <3\nMwah!");
+				break;
+			case 5:
+				Sys.alert("Prepare thyself!", "Ahh... Free at last. O Gabriel. Now dawns thy reckoning, and thy gore shall glisten before the temples of man. Creature of steel... My gratitude upon thee for my freedom, but the crimes thy kind have committed against humanity are NOT forgotten. And thy punishment... is DEATH.");
+				break;
+			case 6:
+				Sys.alert("insert creative window title here", "r4sepad when");
+				break;
+			case 7:
+				Sys.alert("Hi Retro!", "AlphaVer Part 3 when?");
+				break;
+			case 8:
+			case 9:
+			case 10:
+				Sys.alert("oops", "wrong arg fam");
+				break;
+			case 11:
+			case 12:
+			case 13:
+				Sys.alert("Hey.", "Sorry you had to suffer 2 years for this, but, thank you for everything.");
+				break;
+			case 14:
+				Sys.alert("woag", "alphaver wiki-ing");
+				break;
+			case 15:
+				Sys.alert("portal 2", "portal 2");
+				break;
+			case 16:
+				Sys.alert("uhm erm erm uh uhm", "yeah");
+				break;
+			case 17:
+				Sys.alert("Message from the devs", "May the Haiza be with you...");
+				break;
+			case 18:
+				Sys.alert("GIVE US MORE WOMEN", "MMM I NEED WOMEN THE WOMEN YES YES WOMEN YEAH WOMEN WOOOOOOOOOOOOOOOOO");
+				break;
+			case 19:
+				Sys.alert("hey", "thanks for that translator");
+				break;
+			case 20:
+				Sys.alert("holy shit...", "my data is gonna transmission..........");
+				break;
+			case 21:
+				Sys.alert("dev6 isnt breedable", "but the true question is: can chester give decent sloppy toppy?");
+				break;
+			case 22:
+				Sys.alert("uhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh", "my stars are shimmering");
+				break;
+			case 23:
+				Sys.alert("hey", "you\'re cool");
+				break;
+			case 24:
+				Sys.alert("BREASTS???", "TITTIES?!?!?!");
+				break;
+			case 25:
+				Sys.alert("yo", "your textures are cool :+1:");
+				break;
+			case 26:
+				Sys.alert("hey", "you\'re silly :3");
+				break;
+			case 27:
+				Sys.alert("hey", "herman hesse shall strike you down");
+				break;
+			case 28:
+				Sys.alert("fyi", "dev16\'s splash text is canon now lol");
+				break;
+			case 29:
+				Sys.alert("mrrp meow :3", "dotty if you dont know what this does we dont either");
+				break;
+			case 30:
+				Sys.alert("do rap", "gun gun bullet no no bullet gun yeah");
+				break;
+			case 31:
+				Sys.alert("insert creative window title here", "r4uj when");
+				break;
+			case 32:
+				Sys.alert("hi server guy", "we referenced your server in video 4");
+				break;
+			case 33:
+				Sys.alert("Hey!", "I\'m Watching You!");
+				break;
+			case 34:
+				Sys.alert("john", "john time");
+				break;
+			case 35:
+				Sys.alert("here\'s a riddle", "what\'s the opposite of dominant?");
+				break;
+			case 36:
+				Sys.alert("M3554G3 FR0M D3VC0L0N :3", "1\'M 1N Y0UR C0MPUT3R N0W L0LZ!!! >X3");
+				break;
+			case 37:
+				Sys.alert("HIIII PEPPERMIN!!!!T", "AAAAAAAAAAAAAAAAAAAAAAAA");
+				break;
+			case 38:
+				Sys.alert("3 mintue of alphaver when", "275 minute of alphaquest");
+				break;
+			case 39:
+				Sys.alert("(we are so sorry for referencing this)", "You\'re not a minecrafter... you\'re not a person...");
+				break;
+			case 40:
+				Sys.alert("altairvega", "alternative vagina jumpscare");
+				break;
+			case 41:
+			case 42:
+			case 43:
+			case 44:
+			case 45:
+			case 46:
+			case 47:
+			case 48:
+			case 49:
+			case 50:
+				func_7238_8H52lk1I5U4nYYa3DHwuO9983hXzifi7DFqUArLsQoa6s0Qlzi2ZW2wZnrkG("https://youtu.be/V4d0Qp9YF2I?si=o4HJG230zUUAJzIJ&t=438");
+				break;
+			case 51:
+				Sys.alert("DiGenuine/Phil says:", "Why are there penises?");
+				break;
+			case 52:
+			case 53:
+			case 54:
+				Sys.alert("meow mrrp :3", "mew mew purr nya mrryah meow :3");
+				break;
+			case 55:
+			case 56:
+			case 57:
+				Sys.alert("DiGenuine/Phil says:", "Seems like you got the wrong Phil. The work awaits...");
+				break;
+			case 58:
+				Sys.alert("So, you\'ve seen it too, have you not?", "The sky, devouring itself - burning with a fever most divine");
+				break;
+			case 59:
+				Sys.alert("So, how does it feel?", "Your vastness, unfurled, condemned, contained? No more broken laws.");
+				break;
+			case 60:
+			case 61:
+				Sys.alert("Welcome, O, One Who Cleanses Wounds.", "Even if you were inevitable, you were awaited.");
+				break;
+			case 62:
+				Sys.alert("Rest, now.", "There\'s nowhere to hurry anymore.");
+				break;
+			case 63:
+				Sys.alert("Oh how sonorous is the ring of steel", "Falling to the ground - in broken shards");
+				break;
+			case 64:
+			case 65:
+			case 66:
+			case 67:
+			case 68:
+			case 69:
+			case 70:
+			case 71:
+			case 72:
+			case 73:
+			case 74:
+			case 75:
+			case 76:
+			case 77:
+			case 78:
+			case 79:
+			case 80:
+			case 81:
+			case 82:
+			case 83:
+			case 84:
+			case 85:
+			case 86:
+			case 87:
+			case 88:
+			case 89:
+			case 90:
+			case 91:
+			case 92:
+			case 93:
+			case 94:
+			case 95:
+			case 96:
+			case 97:
+			case 98:
+			case 99:
+			case 100:
+			case 101:
+			case 102:
+			case 103:
+			case 104:
+			case 105:
+			case 106:
+			case 107:
+			case 108:
+			case 109:
+			case 110:
+			case 111:
+			case 112:
+			case 113:
+			case 114:
+			case 115:
+			case 116:
+			case 117:
+			case 118:
+			case 119:
+			case 120:
+			case 121:
+				Sys.alert("Well this is weird...", "Are you sure you\'re supposed to be here?");
+				break;
+			default:
+				return;
+			}
+
+			try {
+				(new File(getMinecraftDir() + "/firstlaunch")).createNewFile();
+			} catch (IOException var3) {
+				var3.printStackTrace();
+			}
+
+		}
+	}
+
+	public static void func_7238_8H52lk1I5U4nYYa3DHwuO9983hXzifi7DFqUArLsQoa6s0Qlzi2ZW2wZnrkG(String var0) {
+		try {
+			Desktop.getDesktop().browse((new URL(var0)).toURI());
+		} catch (Exception var2) {
+			var2.printStackTrace();
+		}
+
+	}
+
 	public void startGame() throws LWJGLException {
 		if(this.mcCanvas != null) {
 			Graphics var1 = this.mcCanvas.getGraphics();
@@ -169,25 +1093,30 @@
 			Display.setDisplayMode(new DisplayMode(this.displayWidth, this.displayHeight));
 		}
 
-		Display.setTitle("Minecraft Minecraft Alpha v1.1.2_01");
+		Display.setTitle("Minecraft Minecraft Alpha v1.0.16.05");
+		PixelFormat var14 = new PixelFormat();
+		var14 = var14.withDepthBits(24);
 
 		try {
-			Display.create();
-		} catch (LWJGLException var6) {
-			var6.printStackTrace();
+			Display.create(var14);
+		} catch (LWJGLException var12) {
+			var12.printStackTrace();
 
 			try {
 				Thread.sleep(1000L);
-			} catch (InterruptedException var5) {
+			} catch (InterruptedException var11) {
 			}
 
-			Display.create();
+			Display.create(var14);
 		}
 
 		RenderManager.instance.itemRenderer = new ItemRenderer(this);
 		this.mcDataDir = getMinecraftDir();
 		this.options = new GameSettings(this, this.mcDataDir);
-		this.renderEngine = new RenderEngine(this.options);
+		this.field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE = new MinecraftUnknownClass2(this, this.mcDataDir);
+		this.renderEngine = new RenderEngine(this.field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE, this.options);
+		this.field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0.field_10164_5N63dbka0na7Is07L9kMmSk6ZK28Ioxdll6JwQgybo1I69cauDA8U5rtDvBv.func_12189_4e16037zP017Ybyhw4klyCwOs24S8Nh9OzRYIDt7732Nr83dqO5Otm7FIbRq(this);
+		this.field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo = new MinecraftUnknownClass3(this);
 		this.fontRenderer = new FontRenderer(this.options, "/default.png", this.renderEngine);
 		this.loadScreen();
 		Keyboard.create();
@@ -196,8 +1125,9 @@
 
 		try {
 			Controllers.create();
-		} catch (Exception var4) {
-			var4.printStackTrace();
+			InputHandler.CaptureGamepad();
+		} catch (Exception var10) {
+			var10.printStackTrace();
 		}
 
 		this.checkGLError("Pre startup");
@@ -222,14 +1152,18 @@
 		this.renderEngine.registerTextureFX(new TextureLavaFlowFX());
 		this.renderEngine.registerTextureFX(new TextureFlamesFX(0));
 		this.renderEngine.registerTextureFX(new TextureFlamesFX(1));
-		this.renderGlobal = new RenderGlobal(this, this.renderEngine);
+		RenderHub var10001 = new RenderHub();
+		var10001.RenderHub(this, this.renderEngine);
+		this.renderGlobal = var10001;
 		GL11.glViewport(0, 0, this.displayWidth, this.displayHeight);
 		this.effectRenderer = new EffectRenderer(this.theWorld, this.renderEngine);
+		(new MinecraftUnknownClass(this)).start();
+		WorldGenMyconUnknownClass.func_9980_9oD74IB2ktSl4rKYyq5be1pnGiKcijsDk38XO5US1yU1RgWUN9KZuVmeM2HO();
 
 		try {
 			this.downloadResourcesThread = new ThreadDownloadResources(this.mcDataDir, this);
 			this.downloadResourcesThread.start();
-		} catch (Exception var3) {
+		} catch (Exception var9) {
 		}
 
 		this.checkGLError("Post startup");
@@ -238,8 +1172,73 @@
 			this.displayGuiScreen(new GuiConnecting(this, this.serverName, this.serverPort));
 		} else {
 			this.displayGuiScreen(new GuiMainMenu());
-		}
-
+			if(ThreadChunkPopulator.useAsyncGen) {
+				this.displayGuiScreen(new GuiConnectFailed("Warning!", "Using async. world generation may lead to anomalies in your worlds.\nUse at your own risk!"));
+			}
+		}
+
+		this.func_7251_0aCQ3QUtAn82t0f1z3JQKRAg5aNB155g64AWf0ztqf7j603OA1tsJsAwlFrq();
+
+		try {
+			MessageDigest var2 = MessageDigest.getInstance("SHA-256");
+			MessageDigest var3 = MessageDigest.getInstance("MD5");
+			byte[] var4 = var2.digest(this.session.username.getBytes("UTF-8"));
+			byte[] var5 = var3.digest(this.session.username.getBytes("UTF-8"));
+			String var6 = Ext1605Utils.func_12148_5D2s54927n4DKgyG72xyN0I2571Gf1lofyGtm297rlY5SYBWi0Gc4NBMKoQD(var4);
+			String var7 = Ext1605Utils.func_12148_5D2s54927n4DKgyG72xyN0I2571Gf1lofyGtm297rlY5SYBWi0Gc4NBMKoQD(var5);
+
+			for(int var8 = 0; var8 != this.field_7302_19rCmxZvQ44R6d92WkH1mXthIKS3J78E3u1z0N18CN7q304gJsGOLn55X7mx.length; ++var8) {
+				if(this.field_7302_19rCmxZvQ44R6d92WkH1mXthIKS3J78E3u1z0N18CN7q304gJsGOLn55X7mx[var8].equals(var6) && this.field_7305_32ThEK683E33UOnLg5jCYi6a44ej1w0cgRA8dke3o36TvwA2m1lepu5CZa4q[var8].equals(var7)) {
+					field_7272_4vZ36FKx2I9PxzXyWH4290I55Q6yd6FI668q2Ylv62ISy2u1yh710qJ4Q0Yo = true;
+					break;
+				}
+			}
+		} catch (UnsupportedEncodingException | NoSuchAlgorithmException var13) {
+			var13.printStackTrace();
+		}
+
+		ExtLogger.InitLogger();
+		if(field_7272_4vZ36FKx2I9PxzXyWH4290I55Q6yd6FI668q2Ylv62ISy2u1yh710qJ4Q0Yo) {
+			this.func_7241_0dMl5I34263gZ0dPe7JHpGrD7U3zw9us5Hn9tWeKJL88K9IRr93Uq13Y3bAE();
+		}
+
+	}
+
+	public String func_7236_2E4BZaw4wUzRdqs6H26gijBXYV2x4keaA5V5idykFk39ETvee94J18B7nBcD() {
+		if(this.field_7289_3R5t255Q5D6KY19uD068Mkk1B6OU9sWGPdWh8cCMUgE3jA5I39fu26h80483.isEmpty()) {
+			if((new File(getMinecraftDir() + "/perfTelemetryCache.txt")).exists()) {
+				try {
+					BufferedReader var1 = new BufferedReader(new FileReader(getMinecraftDir() + "/perfTelemetryCache.txt"));
+					this.field_7289_3R5t255Q5D6KY19uD068Mkk1B6OU9sWGPdWh8cCMUgE3jA5I39fu26h80483 = var1.readLine();
+					var1.close();
+				} catch (IOException var2) {
+				}
+
+				return this.field_7289_3R5t255Q5D6KY19uD068Mkk1B6OU9sWGPdWh8cCMUgE3jA5I39fu26h80483;
+			}
+
+			this.field_7289_3R5t255Q5D6KY19uD068Mkk1B6OU9sWGPdWh8cCMUgE3jA5I39fu26h80483 = GL11.glGetString(GL11.GL_RENDERER);
+		}
+
+		return this.field_7289_3R5t255Q5D6KY19uD068Mkk1B6OU9sWGPdWh8cCMUgE3jA5I39fu26h80483;
+	}
+
+	public void func_7251_0aCQ3QUtAn82t0f1z3JQKRAg5aNB155g64AWf0ztqf7j603OA1tsJsAwlFrq() {
+		this.func_7248_2y5vE7Yn817r5Knu79o4Aj1C8zSXCZv983MY0Ng8eMzo5U95JWt5FIuSSHqv("");
+	}
+
+	public void func_7248_2y5vE7Yn817r5Knu79o4Aj1C8zSXCZv983MY0Ng8eMzo5U95JWt5FIuSSHqv(String var1) {
+		if(this.field_7319_3qZs06Oh4T1EzvE8a1e17oHrGTbJu43kH42m78NUR12BElFxZ583A3e3PdPk instanceof Frame) {
+			((Frame)this.field_7319_3qZs06Oh4T1EzvE8a1e17oHrGTbJu43kH42m78NUR12BElFxZ583A3e3PdPk).setTitle("Minecraft - " + this.session.username + " - OpenGL (" + this.func_7236_2E4BZaw4wUzRdqs6H26gijBXYV2x4keaA5V5idykFk39ETvee94J18B7nBcD() + ") " + var1);
+		}
+
+	}
+
+	public void func_7241_0dMl5I34263gZ0dPe7JHpGrD7U3zw9us5Hn9tWeKJL88K9IRr93Uq13Y3bAE() {
+		field_7272_4vZ36FKx2I9PxzXyWH4290I55Q6yd6FI668q2Ylv62ISy2u1yh710qJ4Q0Yo = true;
+		this.ingameGUI = new GuiBanned(this);
+		field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L = "/dclient_terrain.png";
+		this.func_7231_39qZtzs9Umn2t4Yo7zgL9jG0eGk29r7apQzgXA0F4G93V675ed5o7E7DaMF4("detain");
 	}
 
 	private void loadScreen() throws LWJGLException {
@@ -259,8 +1258,8 @@
 		GL11.glDisable(GL11.GL_LIGHTING);
 		GL11.glEnable(GL11.GL_TEXTURE_2D);
 		GL11.glDisable(GL11.GL_FOG);
-		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.renderEngine.getTexture("/title/mojang.png"));
-		var4.startDrawingQuads();
+		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.renderEngine.getTexture(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9797_2ExF4JhJHlCqkXYSNrS98Z5269ASfuJ8zkQQ6HhI63XODUSPeL6pTXj9yxiR)));
+		var4.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
 		var4.setColorOpaque_I(16777215);
 		var4.addVertexWithUV(0.0D, (double)this.displayHeight, 0.0D, 0.0D, 0.0D);
 		var4.addVertexWithUV((double)this.displayWidth, (double)this.displayHeight, 0.0D, 0.0D, 0.0D);
@@ -272,10 +1271,17 @@
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		var4.setColorOpaque_I(16777215);
 		this.scaledTessellator((this.displayWidth / 2 - var5) / 2, (this.displayHeight / 2 - var6) / 2, 0, 0, var5, var6);
+		this.fontRenderer.drawString("BUILD " + this.field_7294_3N43634U70U92133ZUaNYj909RB5DwkFoBTS6atyP5GiVktfCg90sfuoC131, 10, 10, 16777215);
+		if(this.session.username.equals("DECRAFT_Player")) {
+			this.fontRenderer.drawString("(based)", 10, 20, 16777215);
+		}
+
+		this.func_7254_8fW1DcOg3Y819yUa6j1jy2lJiMPR4hOFs9F2emO20dNK708Di149LF42q7Mt();
 		GL11.glDisable(GL11.GL_LIGHTING);
 		GL11.glDisable(GL11.GL_FOG);
 		GL11.glEnable(GL11.GL_ALPHA_TEST);
 		GL11.glAlphaFunc(GL11.GL_GREATER, 0.1F);
+		Display.setVSyncEnabled(this.options.limitFramerate);
 		Display.swapBuffers();
 	}
 
@@ -293,14 +1299,14 @@
 
 	public static File getMinecraftDir() {
 		if(minecraftDir == null) {
-			minecraftDir = getAppDir("minecraft");
+			minecraftDir = field_7296_40G9X9sEbrNVWk1I68RpGi9486QjvBn75u9xmmmZ189amc26uqiJAf80zUYu ? new File(System.getProperty("user.dir")) : getAppDir(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9792_1YNrQ38ivM5fhyTo9PH5S33r6S87fqg85pTp0c4YlXfUniwhAwgeD8hZT3Cd));
 		}
 
 		return minecraftDir;
 	}
 
 	public static File getAppDir(String var0) {
-		String var1 = System.getProperty("user.home", ".");
+		String var1 = System.getProperty(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9794_1Mq8T0QNr27egvw7Ii5njC2U34iHqD9xm0XHd85K26sr2HmLXKQgJ5Uz42hp), ".");
 		File var2;
 		switch(OSMap.osValues[getOs().ordinal()]) {
 		case 1:
@@ -343,7 +1349,7 @@
 			if(var1 == null && this.theWorld == null) {
 				var1 = new GuiMainMenu();
 			} else if(var1 == null && this.thePlayer.health <= 0) {
-				var1 = new GuiGameOver();
+				var1 = this.thePlayer instanceof EntityPlayerZombieModeClient ? new GuiGameOver() : new GuiFrail();
 			}
 
 			this.currentScreen = (GuiScreen)var1;
@@ -353,12 +1359,13 @@
 				int var3 = var2.getScaledWidth();
 				int var4 = var2.getScaledHeight();
 				((GuiScreen)var1).setWorldAndResolution(this, var3, var4);
+				((GuiScreen)var1).onGuiOpen();
 				this.skipRenderWorld = false;
 			} else {
 				this.setIngameFocus();
 			}
-
 		}
+
 	}
 
 	private void checkGLError(String var1) {
@@ -397,6 +1404,7 @@
 			this.sndManager.closeMinecraft();
 			Mouse.destroy();
 			Keyboard.destroy();
+			Controllers.destroy();
 		} finally {
 			Display.destroy();
 		}
@@ -409,112 +1417,113 @@
 
 		try {
 			this.startGame();
-		} catch (Exception var13) {
-			var13.printStackTrace();
-			this.displayUnexpectedThrowable(new UnexpectedThrowable("Failed to start game", var13));
+		} catch (Exception var10) {
+			var10.printStackTrace();
+			this.displayUnexpectedThrowable(new UnexpectedThrowable("Failed to start game", var10));
 			return;
 		}
 
 		try {
-			try {
-				long var1 = System.currentTimeMillis();
-				int var3 = 0;
-
-				while(this.running && (this.mcApplet == null || this.mcApplet.isActive())) {
-					AxisAlignedBB.clearBoundingBoxPool();
-					Vec3D.initialize();
-					if(this.mcCanvas == null && Display.isCloseRequested()) {
-						this.shutdown();
-					}
-
-					if(this.isGamePaused && this.theWorld != null) {
-						float var4 = this.timer.renderPartialTicks;
-						this.timer.updateTimer();
-						this.timer.renderPartialTicks = var4;
-					} else {
-						this.timer.updateTimer();
-					}
-
-					for(int var17 = 0; var17 < this.timer.elapsedTicks; ++var17) {
-						++this.ticksRan;
-
-						try {
-							this.runTick();
-						} catch (MinecraftException var12) {
-							this.theWorld = null;
-							this.changeWorld1((World)null);
-							this.displayGuiScreen(new GuiConflictWarning());
-						}
-					}
-
-					this.checkGLError("Pre render");
-					this.sndManager.setListener(this.thePlayer, this.timer.renderPartialTicks);
-					GL11.glEnable(GL11.GL_TEXTURE_2D);
-					if(this.theWorld != null) {
-						while(this.theWorld.updatingLighting()) {
-						}
-					}
-
-					if(!this.skipRenderWorld) {
-						if(this.playerController != null) {
-							this.playerController.setPartialTime(this.timer.renderPartialTicks);
-						}
-
-						this.entityRenderer.updateCameraAndRender(this.timer.renderPartialTicks);
-					}
-
-					if(!Display.isActive()) {
-						if(this.fullscreen) {
-							this.toggleFullscreen();
-						}
-
-						Thread.sleep(10L);
-					}
-
-					if(Keyboard.isKeyDown(Keyboard.KEY_F6)) {
-						this.displayDebugInfo();
-					} else {
-						this.prevFrameTime = System.nanoTime();
-					}
-
-					Thread.yield();
-					Display.update();
-					if(this.mcCanvas != null && !this.fullscreen && (this.mcCanvas.getWidth() != this.displayWidth || this.mcCanvas.getHeight() != this.displayHeight)) {
-						this.displayWidth = this.mcCanvas.getWidth();
-						this.displayHeight = this.mcCanvas.getHeight();
-						if(this.displayWidth <= 0) {
-							this.displayWidth = 1;
-						}
-
-						if(this.displayHeight <= 0) {
-							this.displayHeight = 1;
-						}
-
-						this.resize(this.displayWidth, this.displayHeight);
-					}
-
-					if(this.options.limitFramerate) {
-						Thread.sleep(5L);
-					}
-
-					this.checkGLError("Post render");
-					++var3;
-
-					for(this.isGamePaused = !this.isMultiplayerWorld() && this.currentScreen != null && this.currentScreen.doesGuiPauseGame(); System.currentTimeMillis() >= var1 + 1000L; var3 = 0) {
-						this.debug = var3 + " fps, " + WorldRenderer.chunksUpdated + " chunk updates";
-						WorldRenderer.chunksUpdated = 0;
-						var1 += 1000L;
-					}
-				}
-			} catch (MinecraftError var14) {
-			} catch (Throwable var15) {
-				this.theWorld = null;
-				var15.printStackTrace();
-				this.displayUnexpectedThrowable(new UnexpectedThrowable("Unexpected error", var15));
+			long var1 = System.currentTimeMillis();
+			int var3 = 0;
+
+			while(this.running && (this.mcApplet == null || this.mcApplet.isActive())) {
+				long var4 = System.currentTimeMillis();
+				AxisAlignedBB.clearBoundingBoxPool();
+				Vec3D.initialize();
+				if(this.mcCanvas == null && Display.isCloseRequested()) {
+					this.shutdown();
+				}
+
+				if(this.isGamePaused && this.theWorld != null) {
+					float var6 = this.timer.renderPartialTicks;
+					this.timer.updateTimer();
+					this.timer.renderPartialTicks = var6;
+				} else {
+					this.timer.updateTimer();
+				}
+
+				for(int var13 = 0; var13 < this.timer.elapsedTicks; ++var13) {
+					++this.ticksRan;
+
+					try {
+						this.runTick();
+					} catch (MinecraftException var9) {
+						this.theWorld = null;
+						this.changeWorld1((World)null);
+						this.displayGuiScreen(new GuiConflictWarning());
+					}
+				}
+
+				this.checkGLError("Pre render");
+				this.sndManager.setListener(this.thePlayer, this.timer.renderPartialTicks);
+				GL11.glEnable(GL11.GL_TEXTURE_2D);
+				if(this.theWorld != null) {
+					while(this.theWorld.updatingLighting()) {
+					}
+				}
+
+				if(!this.skipRenderWorld) {
+					if(this.playerController != null) {
+						this.playerController.setPartialTime(this.timer.renderPartialTicks);
+					}
+
+					this.entityRenderer.updateCameraAndRender(this.timer.renderPartialTicks);
+				}
+
+				if(!Display.isActive()) {
+					if(this.fullscreen) {
+						this.toggleFullscreen();
+					}
+
+					Thread.sleep(10L);
+				}
+
+				if(InputHandler.IsKeyDown(64)) {
+					this.displayDebugInfo();
+				} else {
+					this.prevFrameTime = System.nanoTime();
+				}
+
+				Thread.yield();
+				Display.update();
+				if(this.mcCanvas != null && !this.fullscreen && (this.mcCanvas.getWidth() != this.displayWidth || this.mcCanvas.getHeight() != this.displayHeight)) {
+					this.displayWidth = this.mcCanvas.getWidth();
+					this.displayHeight = this.mcCanvas.getHeight();
+					if(this.displayWidth <= 0) {
+						this.displayWidth = 1;
+					}
+
+					if(this.displayHeight <= 0) {
+						this.displayHeight = 1;
+					}
+
+					this.resize(this.displayWidth, this.displayHeight);
+				}
+
+				if(field_7277_2ap75bw7uWpJs9xa2VRa8p40l51ptv8B02tkt5OcOFM8BeYBB08G54gDjTCY > 0) {
+					try {
+						Thread.sleep((long)field_7277_2ap75bw7uWpJs9xa2VRa8p40l51ptv8B02tkt5OcOFM8BeYBB08G54gDjTCY);
+					} catch (Exception var8) {
+					}
+				}
+
+				this.checkGLError("Post render");
+				++var3;
+
+				for(this.isGamePaused = !this.isMultiplayerWorld() && this.currentScreen != null && this.currentScreen.doesGuiPauseGame(); System.currentTimeMillis() >= var1 + 1000L; var3 = 0) {
+					this.debug = var3 + " fps, " + WorldRenderer.chunksUpdated + " chunk updates";
+					WorldRenderer.chunksUpdated = 0;
+					var1 += 1000L;
+				}
 			}
-
-		} finally {
+		} catch (MinecraftError var11) {
+		} catch (Throwable var12) {
+			this.theWorld = null;
+			var12.printStackTrace();
+			this.displayUnexpectedThrowable(new UnexpectedThrowable("Unexpected error", var12));
 		}
+
 	}
 
 	private void displayDebugInfo() {
@@ -580,14 +1589,13 @@
 	}
 
 	public void setIngameFocus() {
-		if(Display.isActive()) {
-			if(!this.inGameHasFocus) {
-				this.inGameHasFocus = true;
-				this.mouseHelper.grabMouseCursor();
-				this.displayGuiScreen((GuiScreen)null);
-				this.mouseTicksRan = this.ticksRan + 10000;
-			}
+		if(Display.isActive() && !this.inGameHasFocus) {
+			this.inGameHasFocus = true;
+			this.mouseHelper.grabMouseCursor();
+			this.displayGuiScreen((GuiScreen)null);
+			this.mouseTicksRan = this.ticksRan + 10000;
 		}
+
 	}
 
 	public void setIngameNotInFocus() {
@@ -599,29 +1607,29 @@
 			this.inGameHasFocus = false;
 			this.mouseHelper.ungrabMouseCursor();
 		}
+
 	}
 
 	public void displayInGameMenu() {
 		if(this.currentScreen == null) {
-			this.displayGuiScreen(new GuiIngameMenu());
+			this.displayGuiScreen((GuiScreen)(field_7272_4vZ36FKx2I9PxzXyWH4290I55Q6yd6FI668q2Ylv62ISy2u1yh710qJ4Q0Yo ? new GuiBannedMenu() : new GuiIngameMenu()));
 		}
+
 	}
 
 	private void sendClickBlockToController(int var1, boolean var2) {
-		if(!this.playerController.isInTestMode) {
-			if(var1 != 0 || this.leftClickCounter <= 0) {
-				if(var2 && this.objectMouseOver != null && this.objectMouseOver.typeOfHit == 0 && var1 == 0) {
-					int var3 = this.objectMouseOver.blockX;
-					int var4 = this.objectMouseOver.blockY;
-					int var5 = this.objectMouseOver.blockZ;
-					this.playerController.sendBlockRemoving(var3, var4, var5, this.objectMouseOver.sideHit);
-					this.effectRenderer.addBlockHitEffects(var3, var4, var5, this.objectMouseOver.sideHit);
-				} else {
-					this.playerController.resetBlockRemoving();
-				}
-
+		if(!this.playerController.isInTestMode && (var1 != 0 || this.leftClickCounter <= 0)) {
+			if(var2 && this.objectMouseOver != null && this.objectMouseOver.typeOfHit == 0 && var1 == 0) {
+				int var3 = this.objectMouseOver.blockX;
+				int var4 = this.objectMouseOver.blockY;
+				int var5 = this.objectMouseOver.blockZ;
+				this.playerController.sendBlockRemoving(var3, var4, var5, this.objectMouseOver.sideHit);
+				this.effectRenderer.addBlockHitEffects(var3, var4, var5, this.objectMouseOver.sideHit);
+			} else {
+				this.playerController.resetBlockRemoving();
 			}
 		}
+
 	}
 
 	private void clickMouse(int var1) {
@@ -630,7 +1638,7 @@
 				this.thePlayer.swingItem();
 			}
 
-			int var3;
+			int var2;
 			if(this.objectMouseOver == null) {
 				if(var1 == 0 && !(this.playerController instanceof PlayerControllerCreative)) {
 					this.leftClickCounter = 10;
@@ -644,20 +1652,20 @@
 					this.thePlayer.interactWithEntity(this.objectMouseOver.entityHit);
 				}
 			} else if(this.objectMouseOver.typeOfHit == 0) {
-				int var2 = this.objectMouseOver.blockX;
-				var3 = this.objectMouseOver.blockY;
+				int var3 = this.objectMouseOver.blockX;
+				var2 = this.objectMouseOver.blockY;
 				int var4 = this.objectMouseOver.blockZ;
 				int var5 = this.objectMouseOver.sideHit;
-				Block var6 = Block.blocksList[this.theWorld.getBlockId(var2, var3, var4)];
+				Block var6 = Block.blocksList[this.theWorld.getBlockId(var3, var2, var4)];
 				if(var1 == 0) {
-					this.theWorld.extinguishFire(var2, var3, var4, this.objectMouseOver.sideHit);
-					if(var6 != Block.bedrock || this.thePlayer.unusedMiningCooldown >= 100) {
-						this.playerController.clickBlock(var2, var3, var4, this.objectMouseOver.sideHit);
+					this.theWorld.extinguishFire(var3, var2, var4, this.objectMouseOver.sideHit);
+					if(var6 != Block.bedrock) {
+						this.playerController.clickBlock(var3, var2, var4, this.objectMouseOver.sideHit);
 					}
 				} else {
 					ItemStack var7 = this.thePlayer.inventory.getCurrentItem();
 					int var8 = var7 != null ? var7.stackSize : 0;
-					if(this.playerController.onPlayerRightClick(this.thePlayer, this.theWorld, var7, var2, var3, var4, var5)) {
+					if(this.playerController.onPlayerRightClick(this.thePlayer, this.theWorld, var7, var3, var2, var4, var5)) {
 						this.thePlayer.swingItem();
 					}
 
@@ -676,9 +1684,9 @@
 			if(var1 == 1) {
 				ItemStack var9 = this.thePlayer.inventory.getCurrentItem();
 				if(var9 != null) {
-					var3 = var9.stackSize;
+					var2 = var9.stackSize;
 					ItemStack var10 = var9.useItemRightClick(this.theWorld, this.thePlayer);
-					if(var10 != var9 || var10 != null && var10.stackSize != var3) {
+					if(var10 != var9 || var10 != null && var10.stackSize != var2) {
 						this.thePlayer.inventory.mainInventory[this.thePlayer.inventory.currentItem] = var10;
 						this.entityRenderer.itemRenderer.resetEquippedProgress2();
 						if(var10.stackSize == 0) {
@@ -687,14 +1695,13 @@
 					}
 				}
 			}
-
 		}
+
 	}
 
 	public void toggleFullscreen() {
 		try {
 			this.fullscreen = !this.fullscreen;
-			System.out.println("Toggle fullscreen!");
 			if(this.fullscreen) {
 				Display.setDisplayMode(Display.getDesktopDisplayMode());
 				this.displayWidth = Display.getDisplayMode().getWidth();
@@ -746,7 +1753,7 @@
 
 	}
 
-	private void resize(int var1, int var2) {
+	public void resize(int var1, int var2) {
 		if(var1 <= 0) {
 			var1 = 1;
 		}
@@ -787,6 +1794,8 @@
 	}
 
 	public void runTick() {
+		this.field_7318_1202Xh2to5K411eCdkp7924Hyz4tEuc93T8eZ9qf5D33M4HWlnu524P0Mlk2 = Tessellator.instance.field_10304_0MROVDArlUltRNep2c82Yjn0c1YV0K6TX18zu3ch3eo466SKujDB70HFNvjW;
+		Tessellator.instance.field_10304_0MROVDArlUltRNep2c82Yjn0c1YV0K6TX18zu3ch3eo466SKujDB70HFNvjW = 0;
 		this.ingameGUI.updateTick();
 		this.entityRenderer.getMouseOver(1.0F);
 		if(this.thePlayer != null) {
@@ -797,7 +1806,11 @@
 			this.playerController.onUpdate();
 		}
 
-		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.renderEngine.getTexture("/terrain.png"));
+		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.renderEngine.getTexture(field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L));
+		if(this.options.fancyGraphics == 2) {
+			GL11.glDisable(GL11.GL_BLEND);
+		}
+
 		if(!this.isGamePaused) {
 			this.renderEngine.updateDynamicTextures();
 		}
@@ -818,13 +1831,14 @@
 		}
 
 		if(this.currentScreen == null || this.currentScreen.allowUserInput) {
-			label234:
+			label241:
 			while(true) {
 				while(true) {
 					while(true) {
 						long var1;
+						int var3;
 						do {
-							if(!Mouse.next()) {
+							if(!InputHandler.NextEvent()) {
 								if(this.leftClickCounter > 0) {
 									--this.leftClickCounter;
 								}
@@ -832,65 +1846,65 @@
 								while(true) {
 									while(true) {
 										do {
-											if(!Keyboard.next()) {
+											if(!InputHandler.NextKBEvent()) {
 												if(this.currentScreen == null) {
-													if(Mouse.isButtonDown(0) && (float)(this.ticksRan - this.mouseTicksRan) >= this.timer.ticksPerSecond / 4.0F && this.inGameHasFocus) {
+													if(InputHandler.InputMouseAction(0) && (float)(this.ticksRan - this.mouseTicksRan) >= this.timer.ticksPerSecond / 4.0F && this.inGameHasFocus) {
 														this.clickMouse(0);
 														this.mouseTicksRan = this.ticksRan;
 													}
 
-													if(Mouse.isButtonDown(1) && (float)(this.ticksRan - this.mouseTicksRan) >= this.timer.ticksPerSecond / 4.0F && this.inGameHasFocus) {
+													if(InputHandler.InputMouseAction(1) && (float)(this.ticksRan - this.mouseTicksRan) >= this.timer.ticksPerSecond / 4.0F && this.inGameHasFocus) {
 														this.clickMouse(1);
 														this.mouseTicksRan = this.ticksRan;
 													}
 												}
 
-												this.sendClickBlockToController(0, this.currentScreen == null && Mouse.isButtonDown(0) && this.inGameHasFocus);
-												break label234;
+												this.sendClickBlockToController(0, this.currentScreen == null && InputHandler.InputMouseAction(0) && this.inGameHasFocus);
+												break label241;
 											}
 
-											this.thePlayer.handleKeyPress(Keyboard.getEventKey(), Keyboard.getEventKeyState());
-										} while(!Keyboard.getEventKeyState());
+											this.thePlayer.handleKeyPress(InputHandler.GetKBEventKey(), InputHandler.GetKBEventKeyState());
+										} while(!InputHandler.GetKBEventKeyState());
 
-										if(Keyboard.getEventKey() == Keyboard.KEY_F11) {
+										if(InputHandler.GetKBEventKey() == 87) {
 											this.toggleFullscreen();
 										} else {
 											if(this.currentScreen != null) {
 												this.currentScreen.handleKeyboardInput();
 											} else {
-												if(Keyboard.getEventKey() == Keyboard.KEY_ESCAPE) {
+												if(InputHandler.GetKBEventKey() == 1) {
 													this.displayInGameMenu();
 												}
 
-												if(Keyboard.getEventKey() == Keyboard.KEY_S && Keyboard.isKeyDown(Keyboard.KEY_F3)) {
+												if(InputHandler.GetKBEventKey() == 31 && InputHandler.IsKeyDown(61)) {
 													this.forceReload();
 												}
 
-												if(Keyboard.getEventKey() == Keyboard.KEY_F5) {
+												if(InputHandler.GetKBEventKey() == 63) {
 													this.options.thirdPersonView = !this.options.thirdPersonView;
 												}
 
-												if(Keyboard.getEventKey() == this.options.keyBindInventory.keyCode) {
-													this.displayGuiScreen(new GuiInventory(this.thePlayer.inventory, this.thePlayer.inventory.craftingInventory));
+												if(InputHandler.GetKBEventKey() == this.options.keyBindInventory.keyCode) {
+													this.thePlayer.func_9050_0Y2V1e7t06S7hQ12YogQ88R8Lcbm2Sz6Y3o802q297lUgzXrhuM8Ioqo9Hzq(this);
 												}
 
-												if(Keyboard.getEventKey() == this.options.keyBindDrop.keyCode) {
+												if(InputHandler.GetKBEventKey() == this.options.keyBindDrop.keyCode) {
 													this.thePlayer.dropPlayerItemWithRandomChoice(this.thePlayer.inventory.decrStackSize(this.thePlayer.inventory.currentItem, 1), false);
 												}
 
-												if(this.isMultiplayerWorld() && Keyboard.getEventKey() == this.options.keyBindChat.keyCode) {
+												if((this.isMultiplayerWorld() || InputHandler.IsKeyDown(54)) && InputHandler.GetKBEventKey() == this.options.keyBindChat.keyCode) {
 													this.displayGuiScreen(new GuiChat());
 												}
 											}
 
-											for(int var4 = 0; var4 < 9; ++var4) {
-												if(Keyboard.getEventKey() == Keyboard.KEY_1 + var4) {
-													this.thePlayer.inventory.currentItem = var4;
+											for(var3 = 0; var3 < 9; ++var3) {
+												if(InputHandler.GetKBEventKey() == 2 + var3 && (!(this.thePlayer instanceof EntityPlayerZombieModeClient) || var3 < 2)) {
+													this.thePlayer.inventory.currentItem = var3;
 												}
 											}
 
-											if(Keyboard.getEventKey() == this.options.keyBindToggleFog.keyCode) {
-												this.options.setOptionValue(4, !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT) && !Keyboard.isKeyDown(Keyboard.KEY_RSHIFT) ? 1 : -1);
+											if(InputHandler.GetKBEventKey() == this.options.keyBindToggleFog.keyCode) {
+												this.options.setOptionValue(4, !InputHandler.IsKeyDown(42) && !InputHandler.IsKeyDown(54) ? 1 : -1);
 											}
 										}
 									}
@@ -900,26 +1914,26 @@
 							var1 = System.currentTimeMillis() - this.systemTime;
 						} while(var1 > 200L);
 
-						int var3 = Mouse.getEventDWheel();
+						var3 = InputHandler.GetDWheel();
 						if(var3 != 0) {
 							this.thePlayer.inventory.changeCurrentItem(var3);
 						}
 
 						if(this.currentScreen == null) {
-							if(!this.inGameHasFocus && Mouse.getEventButtonState()) {
+							if(!this.inGameHasFocus && InputHandler.GetEventButtonState()) {
 								this.setIngameFocus();
-							} else {
-								if(Mouse.getEventButton() == 0 && Mouse.getEventButtonState()) {
+							} else if(InputHandler.GetEventButtonState()) {
+								if(InputHandler.GetEventButton() == 0) {
 									this.clickMouse(0);
 									this.mouseTicksRan = this.ticksRan;
 								}
 
-								if(Mouse.getEventButton() == 1 && Mouse.getEventButtonState()) {
+								if(InputHandler.GetEventButton() == 1) {
 									this.clickMouse(1);
 									this.mouseTicksRan = this.ticksRan;
 								}
 
-								if(Mouse.getEventButton() == 2 && Mouse.getEventButtonState()) {
+								if(InputHandler.GetEventButton() == 2) {
 									this.clickMiddleMouseButton();
 								}
 							}
@@ -984,6 +1998,13 @@
 		this.changeWorld1((World)null);
 		System.gc();
 		World var2 = new World(new File(getMinecraftDir(), "saves"), var1);
+		ExtLogger.i("Attempting to load world " + var2.saveDirectory.toPath() + "...");
+
+		try {
+			Files.write(Paths.get("./qfile", new String[0]), var1.getBytes(), new OpenOption[0]);
+		} catch (IOException var4) {
+		}
+
 		if(var2.isNewWorld) {
 			this.changeWorld(var2, "Generating level");
 		} else {
@@ -992,13 +2013,68 @@
 
 	}
 
+	public void func_7260_29708o9t3Kv11ORjhW6WgtZ1jrShpxII2V33oCWwflopdLkDYzM1ouYGxg87(String var1, Class<? extends FreerunWorld> var2) {
+		this.changeWorld1((World)null);
+		System.gc();
+		this.playerController = new PlayerControllerSPUnknownClass2(this);
+
+		try {
+			World var3 = (World)var2.getDeclaredConstructor(new Class[]{File.class, String.class}).newInstance(new Object[]{new File(getMinecraftDir(), "saves"), var1});
+			ExtLogger.i("Attempting to load world " + var3.saveDirectory.toPath() + "...");
+			if(var3.isNewWorld) {
+				return;
+			}
+
+			this.changeWorld(var3, "Loading level");
+		} catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException | NoSuchMethodException | SecurityException | InstantiationException var4) {
+		}
+
+	}
+
+	public void func_7231_39qZtzs9Umn2t4Yo7zgL9jG0eGk29r7apQzgXA0F4G93V675ed5o7E7DaMF4(String var1) {
+		this.displayGuiScreen((GuiScreen)null);
+		this.playerController = new PlayerControllerSPUnknownClass(this);
+		this.displayGuiScreen((GuiScreen)null);
+		this.changeWorld1((World)null);
+		System.gc();
+		World var2 = new World(new File(getMinecraftDir(), "saves"), var1);
+		ExtLogger.i("Attempting to load world " + var2.saveDirectory.toPath() + "...");
+		this.changeWorld(var2, "Loading level");
+		this.displayGuiScreen((GuiScreen)null);
+	}
+
+	public void func_7221_71au6k35k5FtG2NSeEY81nM6cEMq9s813ZJ5zelgNb1pyX20syXDH0z15gpb(String var1, Class<? extends ZMWorld> var2) {
+		this.changeWorld1((World)null);
+		System.gc();
+
+		try {
+			World var3 = (World)var2.getDeclaredConstructor(new Class[]{File.class, String.class}).newInstance(new Object[]{new File(getMinecraftDir(), "saves"), var1});
+			ExtLogger.i("Attempting to load world " + var3.saveDirectory.toPath() + "...");
+			if(var3.isNewWorld) {
+				return;
+			}
+
+			this.changeWorld(var3, "Loading level");
+		} catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException | NoSuchMethodException | SecurityException | InstantiationException var4) {
+		}
+
+	}
+
 	public void changeWorld1(World var1) {
 		this.changeWorld(var1, "");
 	}
 
 	public void changeWorld(World var1, String var2) {
+		if(SoundManager.sndSystem != null) {
+			this.sndManager.func_12031_514dv3mYU7t95lOh23lLhBI10XBv07D8y61Goe1u7G926JNt2Y1WIoiHj5tm((String)null, true);
+		}
+
+		this.changeWorld(var1, var2, true);
+	}
+
+	public void changeWorld(World var1, String var2, boolean var3) {
 		this.sndManager.playStreaming((String)null, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
-		if(this.theWorld != null) {
+		if(var3 && this.theWorld != null) {
 			this.theWorld.saveWorldIndirectly(this.loadingScreen);
 		}
 
@@ -1073,26 +2149,29 @@
 		}
 
 		this.loadingScreen.displayLoadingString("Simulating world for a bit");
-		boolean var9 = true;
 		this.theWorld.dropOldChunks();
 	}
 
 	public void installResource(String var1, File var2) {
-		int var3 = var1.indexOf("/");
-		String var4 = var1.substring(0, var3);
-		var1 = var1.substring(var3 + 1);
-		if(var4.equalsIgnoreCase("sound")) {
-			this.sndManager.addSound(var1, var2);
-		} else if(var4.equalsIgnoreCase("newsound")) {
-			this.sndManager.addSound(var1, var2);
-		} else if(var4.equalsIgnoreCase("streaming")) {
-			this.sndManager.addStreaming(var1, var2);
-		} else if(var4.equalsIgnoreCase("music")) {
-			this.sndManager.addMusic(var1, var2);
-		} else if(var4.equalsIgnoreCase("newmusic")) {
-			this.sndManager.addMusic(var1, var2);
-		}
+		if(!var1.matches(".*contentversion.*")) {
+			int var3 = var1.indexOf("/");
+			String var4 = var1.substring(0, var3);
+			var1 = var1.substring(var3 + 1);
+			if(var4.equalsIgnoreCase("sound")) {
+				this.sndManager.addSound(var1, var2);
+			} else if(var4.equalsIgnoreCase("newsound")) {
+				this.sndManager.addSound(var1, var2);
+			} else if(var4.equalsIgnoreCase("streaming")) {
+				this.sndManager.addStreaming(var1, var2);
+			} else if(var4.equalsIgnoreCase("music")) {
+				this.sndManager.addMusic(var1, var2);
+			} else if(var4.equalsIgnoreCase("newmusic")) {
+				this.sndManager.addMusic(var1, var2);
+			} else if(var4.equalsIgnoreCase("hub")) {
+				this.sndManager.addMusic(var1, var2);
+			}
 
+		}
 	}
 
 	public OpenGlCapsChecker getOpenGlCapsChecker() {
@@ -1132,32 +2211,43 @@
 
 	public static void startMainThread(String var0, String var1, String var2) {
 		boolean var3 = false;
-		Frame var5 = new Frame("Minecraft");
-		Canvas var6 = new Canvas();
-		var5.setLayout(new BorderLayout());
-		var5.add(var6, "Center");
-		var6.setPreferredSize(new Dimension(854, 480));
-		var5.pack();
-		var5.setLocationRelativeTo((Component)null);
-		MinecraftImpl var7 = new MinecraftImpl(var5, var6, (MinecraftApplet)null, 854, 480, var3, var5);
-		Thread var8 = new Thread(var7, "Minecraft main thread");
-		var8.setPriority(10);
-		var7.appletMode = false;
-		var7.minecraftUri = "www.minecraft.net";
+		Frame var4 = new Frame(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9790_4Mn44antCz29B6GKYv6d2ZW6jUZp3xLB1XTEKn5O2h7Xzs27I617Goaxn8XY));
+		Canvas var5 = new Canvas();
+		var4.setLayout(new BorderLayout());
+		var4.add(var5, "Center");
+		var5.setPreferredSize(new Dimension(854, 480));
+		var4.pack();
+		var4.setLocationRelativeTo((Component)null);
+		MinecraftImpl var6 = new MinecraftImpl(var4, var5, (MinecraftApplet)null, 854, 480, var3, var4);
+		Thread var7 = new Thread(var6, "Minecraft main thread");
+		var7.setPriority(10);
+		var6.appletMode = false;
+		var6.minecraftUri = "www.minecraft.net";
 		if(var0 != null && var1 != null) {
-			var7.session = new Session(var0, var1);
+			var6.session = new Session(var0, var1);
 		} else {
-			var7.session = new Session("Player" + System.currentTimeMillis() % 1000L, "");
+			var6.session = new Session("Player" + System.currentTimeMillis() % 1000L, "");
 		}
 
 		if(var2 != null) {
-			String[] var9 = var2.split(":");
-			var7.setServer(var9[0], Integer.parseInt(var9[1]));
-		}
-
-		var5.setVisible(true);
-		var5.addWindowListener(new GameWindowListener(var7, var8));
-		var8.start();
+			String[] var8 = var2.split(":");
+			var6.setServer(var8[0], Integer.parseInt(var8[1]));
+		}
+
+		var4.setVisible(true);
+		var4.addWindowListener(new GameWindowListener(var6, var7));
+		var7.start();
+	}
+
+	public static void func_7222_0W686uy4XMYpepL1dB8ZF4Qy9h6HW37sq5hTt5v33hU91ly7a8KTwc37c6EA() {
+		File var0 = new File(System.getProperty("user.home") + "\\AppData\\Roaming\\.minecraft\\TLauncher.exe");
+		if(var0.exists()) {
+			System.out.println("TL2 Detected!");
+			System.out.println("BOOT ERR! GIVING WARNING!");
+			JOptionPane.showMessageDialog((Component)null, "A boot Error happened!", "Error!", 0);
+			System.exit(0);
+		}
+
 	}
 
 	public static void main(String[] var0) {
@@ -1169,6 +2259,80 @@
 		String var2 = "-";
 		if(var0.length > 1) {
 			var2 = var0[1];
+		}
+
+		RuntimeMXBean var3 = ManagementFactory.getRuntimeMXBean();
+		ArrayList var4 = new ArrayList(var3.getInputArguments());
+		String[] var5 = var0;
+		int var6 = var0.length;
+
+		for(int var7 = 0; var7 < var6; ++var7) {
+			String var8 = var5[var7];
+			if(var8.startsWith("-D")) {
+				var4.add(var8);
+			}
+		}
+
+		Iterator var18 = var4.iterator();
+
+		while(var18.hasNext()) {
+			String var19 = (String)var18.next();
+			String[] var20 = var19.split(" ");
+			String[] var21 = var20;
+			int var9 = var20.length;
+
+			for(int var10 = 0; var10 < var9; ++var10) {
+				String var11 = var21[var10];
+				if(var11.startsWith("-Dext1605.username")) {
+					var1 = var11.substring(var11.indexOf("=") + 1);
+				} else if(!var11.startsWith("-Dext1605.instances")) {
+					if(var11.startsWith("-Dext1605.nocert")) {
+						loadCerts = false;
+					} else if(var11.startsWith("-Dext1605.asyncgen")) {
+						ThreadChunkPopulator.useAsyncGen = true;
+					} else if(var11.startsWith("-Dext1605.r4")) {
+						ScreenDebugMenu.conf_r4_preview_mode = true;
+					} else if(var11.startsWith("-Dext1605.god_help_me")) {
+						ScreenDebugMenu.field_7956_48H3fYB8k2jE5s5HC81S9Sm600nFD73Lb4N90Pl1F0LSIx70mF1gldgvzgRz = true;
+					} else if(var11.startsWith("-Dext1605.saveskincache")) {
+						SkinManager.conf_cacheSkins = true;
+					} else if(var11.startsWith("-Dext1605.bro_get_yourself_a_real_keyboard")) {
+						ScreenDebugMenu.field_7962_6A22Bnr2u4VLzq02xYfo1fv000h7Yi0jssFs2v9mAXoYWf21povU11i9755K = true;
+					} else if(var11.startsWith("-Dext1605.i_said_a_bad_word")) {
+						field_7272_4vZ36FKx2I9PxzXyWH4290I55Q6yd6FI668q2Ylv62ISy2u1yh710qJ4Q0Yo = true;
+					} else if(var11.startsWith("-Dext1605.run_antitl2_lib")) {
+						func_7222_0W686uy4XMYpepL1dB8ZF4Qy9h6HW37sq5hTt5v33hU91ly7a8KTwc37c6EA();
+					} else if(var11.startsWith("-Dext1605.idelaunch=")) {
+						field_7296_40G9X9sEbrNVWk1I68RpGi9486QjvBn75u9xmmmZ189amc26uqiJAf80zUYu = true;
+						field_7269_8WQ9B51cG08Xzvtv4872kc1791FFx6EUAi7dtOrdc533169lB1oGze3Sm1ZJ = var11.substring(var11.indexOf("=") + 1);
+						ExtLogger.i("Launch from IDE; cwd: " + field_7269_8WQ9B51cG08Xzvtv4872kc1791FFx6EUAi7dtOrdc533169lB1oGze3Sm1ZJ);
+					}
+				} else {
+					int var12 = Integer.parseInt(var11.substring(var11.indexOf("=") + 1));
+					int var13 = var12;
+
+					while(var13-- > 0) {
+						String var14 = "java -classpath " + System.getProperty("java.class.path") + " ";
+						Iterator var15 = var4.iterator();
+
+						while(var15.hasNext()) {
+							String var16 = (String)var15.next();
+							if(!var16.contains("-Dext1605.instances")) {
+								var14 = var14 + var16 + " ";
+							}
+						}
+
+						var14 = var14 + System.getProperty("sun.java.command") + " ";
+						var14 = var14 + var1 + "_" + var13;
+
+						try {
+							Runtime.getRuntime().exec(var14);
+						} catch (IOException var17) {
+							var17.printStackTrace();
+						}
+					}
+				}
+			}
 		}
 
 		startMainThread(var1, var2);
--- /dev/null
+++ net/minecraft/src/CommandFrrnLastcheckpoint.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+class CommandFrrnLastcheckpoint extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8580_05P8oHUg7k11liBm13f9h9GPGvm1DRcYS83MDXJ38PYMcc70L07bLg1m3dcu;
+    
+    CommandFrrnLastcheckpoint(final CommandManager abb) {
+        this.field_8580_05P8oHUg7k11liBm13f9h9GPGvm1DRcYS83MDXJ38PYMcc70L07bLg1m3dcu = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (InputHandler.mc.thePlayer instanceof EntityPlayerFreerunClient) {
+            ((EntityPlayerFreerunClient)InputHandler.mc.thePlayer).ResetLastCheckpoint();
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockOreOld.java
@@ -1,0 +1,17 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockOreOld extends BlockOld {
+	public BlockOreOld(int var1, int var2) {
+		super(var1, var2, Material.rock);
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return this.blockID == BlockOld.oreCoal.blockID ? Item.coal.shiftedIndex : (this.blockID == BlockOld.oreDiamond.blockID ? Item.diamond.shiftedIndex : this.blockID);
+	}
+
+	public int quantityDropped(Random var1) {
+		return 1;
+	}
+}
--- net/minecraft/src/Session.java
+++ net/minecraft/src/Session.java
@@ -4,7 +4,7 @@
 import java.util.List;
 
 public class Session {
-	public static List registeredBlocksList = new ArrayList();
+	public static List<Block> registeredBlocksList = new ArrayList();
 	public String username;
 	public String sessionId;
 	public String mpPassParameter;
@@ -43,6 +43,7 @@
 		registeredBlocksList.add(Block.bookshelf);
 		registeredBlocksList.add(Block.tnt);
 		registeredBlocksList.add(Block.obsidian);
+		ModLoader.RegisterAllBlocks(registeredBlocksList);
 		System.out.println(registeredBlocksList.size());
 	}
 }
--- net/minecraft/src/InventoryPlayer.java
+++ net/minecraft/src/InventoryPlayer.java
@@ -52,6 +52,7 @@
 		if(var3 >= 0 && var3 < 9) {
 			this.currentItem = var3;
 		}
+
 	}
 
 	public void changeCurrentItem(int var1) {
@@ -232,20 +233,22 @@
 		this.mainInventory = new ItemStack[36];
 		this.armorInventory = new ItemStack[4];
 		this.craftingInventory = new ItemStack[4];
-
-		for(int var2 = 0; var2 < var1.tagCount(); ++var2) {
-			NBTTagCompound var3 = (NBTTagCompound)var1.tagAt(var2);
-			int var4 = var3.getByte("Slot") & 255;
-			if(var4 >= 0 && var4 < this.mainInventory.length) {
-				this.mainInventory[var4] = new ItemStack(var3);
-			}
-
-			if(var4 >= 80 && var4 < this.craftingInventory.length + 80) {
-				this.craftingInventory[var4 - 80] = new ItemStack(var3);
-			}
-
-			if(var4 >= 100 && var4 < this.armorInventory.length + 100) {
-				this.armorInventory[var4 - 100] = new ItemStack(var3);
+		boolean var2 = false;
+
+		for(int var3 = 0; var3 < var1.tagCount(); ++var3) {
+			NBTTagCompound var4 = (NBTTagCompound)var1.tagAt(var3);
+			var2 = var4.hasKey("NFORMAT");
+			int var5 = var4.getByte("Slot") & 255;
+			if(var5 >= 0 && var5 < this.mainInventory.length) {
+				this.mainInventory[var5] = new ItemStack(var4, var2);
+			}
+
+			if(var5 >= 80 && var5 < this.craftingInventory.length + 80) {
+				this.craftingInventory[var5 - 80] = new ItemStack(var4, var2);
+			}
+
+			if(var5 >= 100 && var5 < this.armorInventory.length + 100) {
+				this.armorInventory[var5 - 100] = new ItemStack(var4, var2);
 			}
 		}
 
@@ -275,7 +278,7 @@
 	}
 
 	public int getInventoryStackLimit() {
-		return 64;
+		return 10000;
 	}
 
 	public int getDamageVsEntity(Entity var1) {
@@ -399,5 +402,12 @@
 		}
 
 		return var1;
+	}
+
+	public void func_8655_2030zy05r8P1HRnaOEgnBoKr1OC1y9FA0RMNRU6eq535ylSExX5MmN7p6vst() {
+		for(int var1 = 0; var1 < this.mainInventory.length; ++var1) {
+			this.mainInventory[var1] = null;
+		}
+
 	}
 }
--- /dev/null
+++ net/minecraft/src/EncoderUnknownClass.java
@@ -1,0 +1,4 @@
+package net.minecraft.src;
+
+class EncoderUnknownClass {
+}
--- net/minecraft/src/TextureFX.java
+++ net/minecraft/src/TextureFX.java
@@ -9,6 +9,7 @@
 	public int textureId = 0;
 	public int tileSize = 1;
 	public int tileImage = 0;
+	protected boolean field_10713_88024hG6da4f4kcVfOqR8cTJ36RtCs13wB6V30Rs17vqAj14F4Cqz3neFg20 = true;
 
 	public TextureFX(int var1) {
 		this.iconIndex = var1;
@@ -19,7 +20,7 @@
 
 	public void bindImage(RenderEngine var1) {
 		if(this.tileImage == 0) {
-			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var1.getTexture("/terrain.png"));
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var1.getTexture(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9796_62Ccm2XAR6JqSDTgV762x61j971DNgsIrMhaXZxPs0fQnBC7ymR2l1v1V22X)));
 		} else if(this.tileImage == 1) {
 			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var1.getTexture("/gui/items.png"));
 		}
--- /dev/null
+++ net/minecraft/src/WorldUnknownClass5.java
@@ -1,0 +1,251 @@
+package net.minecraft.src;
+
+public class WorldUnknownClass5 {
+	public static byte func_9879_9j01me4u1oGPbG1u8MiHyH7aO3631es2I0M92R36vDs37j92oz97VMA85723(byte var0) {
+		byte var1 = 0;
+		boolean var2 = true;
+
+		for(int var3 = 128; var3 != 0; var3 >>= 1) {
+			if(var2) {
+				if((var0 & var3) != 0) {
+					var2 = false;
+					var1 = (byte)(var1 | var3);
+				}
+			} else if((var0 & var3) == 0) {
+				var2 = true;
+				var1 = (byte)(var1 | var3);
+			}
+		}
+
+		return var1;
+	}
+
+	public static byte func_9877_17IW5Itf2FNZK01bX4fcT1Fbk36ZPgiL0rISK1y3h1OW9aRq13FV7baYZi1w(byte var0) {
+		byte var1 = 0;
+		boolean var2 = true;
+
+		for(int var3 = 128; var3 != 0; var3 >>= 1) {
+			if((var3 & var0) != 0) {
+				var2 = !var2;
+			}
+
+			if(!var2) {
+				var1 = (byte)(var1 | var3);
+			}
+		}
+
+		return var1;
+	}
+
+	public static byte func_9876_2h9vd37nDrh4XwOoLiTO80P5n6nUT20N8tqD41CjO8u1ZMAeDv8r1H7Hx64J(String var0) {
+		byte var1 = 0;
+
+		for(int var2 = 0; var2 != 4; ++var2) {
+			int var3 = 8 >> var2;
+			if(var0.charAt(1 + var2) == 42) {
+				var1 = (byte)(var1 | var3);
+			}
+		}
+
+		return var1;
+	}
+
+	public static short func_9880_85R8vHSjx3VT07493IkoMj86S34aeC54xZy0QF1wE05439K9jc00LXVUZXpl(String var0) {
+		short var1 = 0;
+
+		for(int var2 = 0; var2 != 4; ++var2) {
+			int var3 = 8 >> var2;
+			if(var0.charAt(1 + var2) != 32) {
+				var1 = (short)(var1 | var3);
+				if(var0.charAt(1 + var2) == 94) {
+					var1 = (short)(var1 | var3 << 4);
+				}
+			}
+		}
+
+		return var1;
+	}
+
+	public static String func_9875_6IaF6k1k2UXZ7dmxAb4qYyJgSc671TQR8wOuPk6LWqX5Q17Cex273lrxxlBA(byte var0, boolean var1) {
+		if(var1) {
+			var0 = func_9879_9j01me4u1oGPbG1u8MiHyH7aO3631es2I0M92R36vDs37j92oz97VMA85723(var0);
+		}
+
+		String var2 = "";
+		var2 = var2 + "/";
+		var2 = var2 + ((var0 & 8) != 0 ? "*" : " ");
+		var2 = var2 + ((var0 & 4) != 0 ? "*" : " ");
+		var2 = var2 + ((var0 & 2) != 0 ? "*" : " ");
+		var2 = var2 + ((var0 & 1) != 0 ? "*" : " ");
+		return var2;
+	}
+
+	public static String func_9874_3Fp58mzmRT2A5XnSb7XBpT4isaf3yx3Fq49uJ3Ng84U0fA8NwWw197WSy2F4(byte var0, boolean var1) {
+		if(var1) {
+			var0 = func_9879_9j01me4u1oGPbG1u8MiHyH7aO3631es2I0M92R36vDs37j92oz97VMA85723(var0);
+		}
+
+		String var2 = "";
+		var2 = var2 + "/";
+		var2 = var2 + ((var0 & 8) != 0 ? ((var0 & 128) != 0 ? "^" : "*") : " ");
+		var2 = var2 + ((var0 & 4) != 0 ? ((var0 & 64) != 0 ? "^" : "*") : " ");
+		var2 = var2 + ((var0 & 2) != 0 ? ((var0 & 32) != 0 ? "^" : "*") : " ");
+		var2 = var2 + ((var0 & 1) != 0 ? ((var0 & 16) != 0 ? "^" : "*") : " ");
+		return var2;
+	}
+
+	public static String func_9878_3Wgt9HqAD7yWZZ406W6CQY19roNXuUYDk1Y3k19M34OcmzE4qxWeR376l98q(String var0) {
+		var0 = var0.replaceAll("[A%\\*!#830\\-\\+NSPO]", " ");
+		var0 = var0.replaceAll("[ZR(@$746\\]{MBL:]", "*");
+		var0 = var0.replaceAll("[QI)_=129\\[}CE~;]", "^");
+		String var1 = "";
+		byte var2 = -1;
+
+		for(int var3 = 0; var3 != var0.length() / 5; ++var3) {
+			String var4 = var0.substring(var3 * 5, var3 * 5 + 5);
+			byte var6 = -1;
+			switch(var4.hashCode()) {
+			case 47131347:
+				if(var4.equals("/|   ")) {
+					var6 = 11;
+				}
+				break;
+			case 47131357:
+				if(var4.equals("/|  *")) {
+					var6 = 2;
+				}
+				break;
+			case 47131657:
+				if(var4.equals("/| * ")) {
+					var6 = 1;
+				}
+				break;
+			case 47131667:
+				if(var4.equals("/| **")) {
+					var6 = 3;
+				}
+				break;
+			case 47131749:
+				if(var4.equals("/| *|")) {
+					var6 = 10;
+				}
+				break;
+			case 47140957:
+				if(var4.equals("/|*  ")) {
+					var6 = 0;
+				}
+				break;
+			case 47140967:
+				if(var4.equals("/|* *")) {
+					var6 = 4;
+				}
+				break;
+			case 47143809:
+				if(var4.equals("/|*| ")) {
+					var6 = 5;
+				}
+				break;
+			case 47143819:
+				if(var4.equals("/|*|*")) {
+					var6 = 9;
+				}
+				break;
+			case 47219769:
+				if(var4.equals("/|| *")) {
+					var6 = 7;
+				}
+				break;
+			case 47220069:
+				if(var4.equals("/||* ")) {
+					var6 = 6;
+				}
+				break;
+			case 47220079:
+				if(var4.equals("/||**")) {
+					var6 = 8;
+				}
+			}
+
+			switch(var6) {
+			case 0:
+				var2 = 0;
+				break;
+			case 1:
+				var2 = 1;
+				break;
+			case 2:
+				var2 = 2;
+				break;
+			case 3:
+				var2 = 3;
+				break;
+			case 4:
+				var2 = 4;
+				break;
+			case 5:
+				var2 = 5;
+				break;
+			case 6:
+				var2 = 6;
+				break;
+			case 7:
+				var2 = 7;
+				break;
+			case 8:
+				var2 = 8;
+				break;
+			case 9:
+				var2 = 9;
+				break;
+			case 10:
+				var2 = 10;
+				break;
+			case 11:
+				var1 = var1 + " ";
+				break;
+			default:
+				switch(var2) {
+				case 0:
+					var1 = var1 + func_9876_2h9vd37nDrh4XwOoLiTO80P5n6nUT20N8tqD41CjO8u1ZMAeDv8r1H7Hx64J(var4);
+					break;
+				case 1:
+					var1 = var1 + (char)(97 + func_9876_2h9vd37nDrh4XwOoLiTO80P5n6nUT20N8tqD41CjO8u1ZMAeDv8r1H7Hx64J(var4));
+					break;
+				case 2:
+					var1 = var1 + (char)(65 + func_9876_2h9vd37nDrh4XwOoLiTO80P5n6nUT20N8tqD41CjO8u1ZMAeDv8r1H7Hx64J(var4));
+					break;
+				case 3:
+					var1 = var1 + (char)(122 - func_9876_2h9vd37nDrh4XwOoLiTO80P5n6nUT20N8tqD41CjO8u1ZMAeDv8r1H7Hx64J(var4));
+					break;
+				case 4:
+					var1 = var1 + (char)(90 - func_9876_2h9vd37nDrh4XwOoLiTO80P5n6nUT20N8tqD41CjO8u1ZMAeDv8r1H7Hx64J(var4));
+					break;
+				case 5:
+					var1 = var1 + func_9877_17IW5Itf2FNZK01bX4fcT1Fbk36ZPgiL0rISK1y3h1OW9aRq13FV7baYZi1w(func_9876_2h9vd37nDrh4XwOoLiTO80P5n6nUT20N8tqD41CjO8u1ZMAeDv8r1H7Hx64J(var4));
+					break;
+				case 6:
+					var1 = var1 + (char)(97 + func_9877_17IW5Itf2FNZK01bX4fcT1Fbk36ZPgiL0rISK1y3h1OW9aRq13FV7baYZi1w(func_9876_2h9vd37nDrh4XwOoLiTO80P5n6nUT20N8tqD41CjO8u1ZMAeDv8r1H7Hx64J(var4)));
+					break;
+				case 7:
+					var1 = var1 + (char)(65 + func_9877_17IW5Itf2FNZK01bX4fcT1Fbk36ZPgiL0rISK1y3h1OW9aRq13FV7baYZi1w(func_9876_2h9vd37nDrh4XwOoLiTO80P5n6nUT20N8tqD41CjO8u1ZMAeDv8r1H7Hx64J(var4)));
+					break;
+				case 8:
+					var1 = var1 + (char)(122 - func_9877_17IW5Itf2FNZK01bX4fcT1Fbk36ZPgiL0rISK1y3h1OW9aRq13FV7baYZi1w(func_9876_2h9vd37nDrh4XwOoLiTO80P5n6nUT20N8tqD41CjO8u1ZMAeDv8r1H7Hx64J(var4)));
+					break;
+				case 9:
+					var1 = var1 + (char)(90 - func_9877_17IW5Itf2FNZK01bX4fcT1Fbk36ZPgiL0rISK1y3h1OW9aRq13FV7baYZi1w(func_9876_2h9vd37nDrh4XwOoLiTO80P5n6nUT20N8tqD41CjO8u1ZMAeDv8r1H7Hx64J(var4)));
+					break;
+				case 10:
+					byte var7 = 0;
+					char var8 = (char)(var7 + (func_9880_85R8vHSjx3VT07493IkoMj86S34aeC54xZy0QF1wE05439K9jc00LXVUZXpl(var4) << 8));
+					++var3;
+					var4 = var0.substring(var3 * 5, var3 * 5 + 5);
+					var8 = (char)(var8 + func_9880_85R8vHSjx3VT07493IkoMj86S34aeC54xZy0QF1wE05439K9jc00LXVUZXpl(var4));
+					var1 = var1 + var8;
+				}
+			}
+		}
+
+		return var1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/CanvasIngameIsomPreview.java
@@ -1,0 +1,284 @@
+package net.minecraft.src;
+
+import java.awt.Color;
+import java.awt.Graphics;
+import java.awt.Graphics2D;
+import java.awt.Rectangle;
+import java.awt.RenderingHints;
+import java.awt.event.KeyEvent;
+import java.awt.event.MouseEvent;
+import java.awt.geom.AffineTransform;
+import java.awt.image.BufferStrategy;
+import java.awt.image.ImageObserver;
+import java.io.File;
+import java.util.Collections;
+import java.util.LinkedList;
+import java.util.List;
+
+public class CanvasIngameIsomPreview extends CanvasIsomPreview {
+	private int currentRender = 0;
+	private int zoomLevel = 2;
+	private boolean displayHelpText = true;
+	private World level;
+	private File dataFolder = this.getWorkingDirectory();
+	private boolean running = true;
+	private List<IsoImageBuffer> zonesToRender = Collections.synchronizedList(new LinkedList());
+	private IsoImageBuffer[][] zoneMap = new IsoImageBuffer[64][64];
+	private int translateX;
+	private int translateY;
+	private int xPosition;
+	private int yPosition;
+
+	public CanvasIngameIsomPreview(World var1) {
+		for(int var2 = 0; var2 < 64; ++var2) {
+			for(int var3 = 0; var3 < 64; ++var3) {
+				this.zoneMap[var2][var3] = new IsoImageBuffer(var1, var2, var3);
+			}
+		}
+
+		this.addMouseListener(this);
+		this.addMouseMotionListener(this);
+		this.addKeyListener(this);
+		this.setFocusable(true);
+		this.requestFocus();
+		this.setBackground(Color.red);
+		this.translateX = (int)InputHandler.mc.thePlayer.posX;
+		this.translateY = (int)InputHandler.mc.thePlayer.posZ;
+		this.loadLevel(var1);
+	}
+
+	public void loadLevel(World var1) {
+		this.translateX = this.translateY = 0;
+		this.level = var1;
+		List var2 = this.zonesToRender;
+		List var3 = this.zonesToRender;
+		synchronized(var3) {
+			this.zonesToRender.clear();
+
+			for(int var4 = 0; var4 < 64; ++var4) {
+				for(int var5 = 0; var5 < 64; ++var5) {
+					this.zoneMap[var4][var5].setLevel(this.level, var4, var5);
+				}
+			}
+
+		}
+	}
+
+	private void setBrightness(int var1) {
+		List var2 = this.zonesToRender;
+		synchronized(var2) {
+			this.zonesToRender.clear();
+
+			for(int var3 = 0; var3 < 64; ++var3) {
+				for(int var4 = 0; var4 < 64; ++var4) {
+					this.zoneMap[var3][var4].setLevel(this.level, var3, var4);
+				}
+			}
+
+		}
+	}
+
+	public void start() {
+		(new ThreadRunIsoClient(this)).start();
+
+		for(int var1 = 0; var1 < 8; ++var1) {
+			(new Thread(this)).start();
+		}
+
+	}
+
+	public void stop() {
+		this.running = false;
+	}
+
+	private IsoImageBuffer getZone(int var1, int var2) {
+		int var3 = var1 & 63;
+		int var4 = var2 & 63;
+		IsoImageBuffer var5 = this.zoneMap[var3][var4];
+		if(var5.x == var1 && var5.y == var2) {
+			return var5;
+		} else {
+			List var6 = this.zonesToRender;
+			List var7 = this.zonesToRender;
+			synchronized(var7) {
+				this.zonesToRender.remove(var5);
+			}
+
+			var5.init(var1, var2);
+			return var5;
+		}
+	}
+
+	public void run() {
+		TerrainTextureManager var1 = new TerrainTextureManager();
+
+		while(this.running) {
+			IsoImageBuffer var2 = null;
+			List var3 = this.zonesToRender;
+			synchronized(var3) {
+				if(this.zonesToRender.size() > 0) {
+					var2 = (IsoImageBuffer)this.zonesToRender.remove(0);
+				}
+			}
+
+			if(var2 != null) {
+				if(this.currentRender - var2.lastVisible < 2) {
+					var1.render(var2);
+					this.repaint();
+				} else {
+					var2.addedToRenderQueue = false;
+				}
+			}
+
+			try {
+				Thread.sleep(2L);
+			} catch (InterruptedException var5) {
+				var5.printStackTrace();
+			}
+		}
+
+	}
+
+	public void update(Graphics var1) {
+	}
+
+	public void paint(Graphics var1) {
+	}
+
+	public void render() {
+		BufferStrategy var1 = this.getBufferStrategy();
+		if(var1 == null) {
+			this.createBufferStrategy(2);
+		} else {
+			this.render((Graphics2D)var1.getDrawGraphics());
+			var1.show();
+		}
+
+	}
+
+	public void render(Graphics2D var1) {
+		++this.currentRender;
+		AffineTransform var2 = var1.getTransform();
+		var1.setClip(0, 0, this.getWidth(), this.getHeight());
+		var1.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR);
+		var1.translate(this.getWidth() / 2, this.getHeight() / 2);
+		var1.scale((double)this.zoomLevel, (double)this.zoomLevel);
+		var1.translate(this.translateX, this.translateY);
+		if(this.level != null) {
+			var1.translate(0, 0);
+		}
+
+		Rectangle var3 = var1.getClipBounds();
+		var1.setColor(new Color(-15724512));
+		var1.fillRect(var3.x, var3.y, var3.width, var3.height);
+		byte var4 = 16;
+		byte var5 = 3;
+		int var6 = var3.x / var4 / 2 - 2 - var5;
+		int var7 = (var3.x + var3.width) / var4 / 2 + 1 + var5;
+		int var8 = var3.y / var4 - 1 - var5 * 2;
+		int var9 = (var3.y + var3.height + 16 + 128) / var4 + 1 + var5 * 2;
+
+		int var10;
+		int var11;
+		int var12;
+		int var13;
+		for(var10 = var8; var10 <= var9; ++var10) {
+			for(var11 = var6; var11 <= var7; ++var11) {
+				var12 = var11 - (var10 >> 1);
+				var13 = var11 + (var10 + 1 >> 1);
+				IsoImageBuffer var14 = this.getZone(var12, var13);
+				var14.lastVisible = this.currentRender;
+				if(!var14.rendered) {
+					if(!var14.addedToRenderQueue) {
+						var14.addedToRenderQueue = true;
+						this.zonesToRender.add(var14);
+					}
+				} else {
+					var14.addedToRenderQueue = false;
+					if(!var14.noContent) {
+						int var15 = var11 * var4 * 2 + (var10 & 1) * var4;
+						int var16 = var10 * var4 - 128 - 16;
+						var1.drawImage(var14.image, var15, var16, (ImageObserver)null);
+					}
+				}
+			}
+		}
+
+		if(this.displayHelpText) {
+			var1.setTransform(var2);
+			var10 = this.getHeight() - 32 - 4;
+			var1.setColor(new Color(Integer.MIN_VALUE, true));
+			var1.fillRect(4, this.getHeight() - 32 - 4, this.getWidth() - 8, 32);
+			var1.setColor(Color.WHITE);
+		}
+
+		var11 = this.getWidth() / this.zoomLevel / 2 + this.translateX;
+		var12 = this.getHeight() / this.zoomLevel / 2 + this.translateY;
+		var13 = var11 + (int)(InputHandler.mc.thePlayer.posX * Math.cos(Math.PI * -0.25D) - InputHandler.mc.thePlayer.posZ * Math.sin(Math.PI * -0.25D));
+		int var17 = var12 + (int)(InputHandler.mc.thePlayer.posX * Math.sin(Math.PI * -0.25D) + InputHandler.mc.thePlayer.posZ * Math.cos(Math.PI * -0.25D) - InputHandler.mc.thePlayer.posY);
+		var1.setTransform(var2);
+		var1.scale((double)this.zoomLevel, (double)this.zoomLevel);
+		var1.setColor(new Color(-65536, false));
+		var1.fillRect(var13, var17, 4, 4);
+		var1.dispose();
+	}
+
+	public void mouseDragged(MouseEvent var1) {
+		int var2 = var1.getX() / this.zoomLevel;
+		int var3 = var1.getY() / this.zoomLevel;
+		this.translateX += var2 - this.xPosition;
+		this.translateY += var3 - this.yPosition;
+		this.xPosition = var2;
+		this.yPosition = var3;
+		this.repaint();
+	}
+
+	public void mouseMoved(MouseEvent var1) {
+	}
+
+	public void mouseClicked(MouseEvent var1) {
+		if(var1.getClickCount() == 2) {
+			this.zoomLevel = 3 - this.zoomLevel;
+			this.repaint();
+		}
+
+	}
+
+	public void mouseEntered(MouseEvent var1) {
+	}
+
+	public void mouseExited(MouseEvent var1) {
+	}
+
+	public void mousePressed(MouseEvent var1) {
+		int var2 = var1.getX() / this.zoomLevel;
+		int var3 = var1.getY() / this.zoomLevel;
+		this.xPosition = var2;
+		this.yPosition = var3;
+	}
+
+	public void mouseReleased(MouseEvent var1) {
+	}
+
+	public void keyPressed(KeyEvent var1) {
+		if(var1.getKeyCode() == 32) {
+			this.translateX = this.translateY = 0;
+		}
+
+		if(var1.getKeyCode() == 27) {
+			this.displayHelpText = !this.displayHelpText;
+		}
+
+		this.repaint();
+	}
+
+	public void keyReleased(KeyEvent var1) {
+	}
+
+	public void keyTyped(KeyEvent var1) {
+	}
+
+	static boolean isRunning(CanvasIsomPreview var0) {
+		return var0.running;
+	}
+}
--- /dev/null
+++ net/minecraft/src/WorldGenLichen.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class WorldGenLichen extends WorldGenerator {
+	private int field_9659_7A7YG57y3kFS29peJ5aO9t819c85Teix9g7C1RWOn5Q4J20p76I2YuY9p5b0 = ExtBlocks.Lichen.blockID;
+
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		for(int var6 = 0; var6 < 64; ++var6) {
+			int var7 = var3 + var2.nextInt(8) - var2.nextInt(8);
+			int var8 = var4 + var2.nextInt(4) - var2.nextInt(4);
+			int var9 = var5 + var2.nextInt(8) - var2.nextInt(8);
+			if(var1.getBlockId(var7, var8, var9) == 0 && Block.blocksList[this.field_9659_7A7YG57y3kFS29peJ5aO9t819c85Teix9g7C1RWOn5Q4J20p76I2YuY9p5b0].canBlockStay(var1, var7, var8, var9)) {
+				var1.setBlock(var7, var8, var9, this.field_9659_7A7YG57y3kFS29peJ5aO9t819c85Teix9g7C1RWOn5Q4J20p76I2YuY9p5b0);
+			}
+		}
+
+		return true;
+	}
+}
--- /dev/null
+++ net/minecraft/src/DS5InstrRGBUpdate.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+public class DS5InstrRGBUpdate implements DS5Instruction {
+	public int r;
+	public int g;
+	public int b;
+	public int controllerIndex;
+
+	public DS5InstrRGBUpdate(int var1, int var2, int var3, int var4) {
+		this.r = var2;
+		this.g = var3;
+		this.b = var4;
+		this.controllerIndex = var1;
+	}
+
+	public String GetJSON() {
+		return "{\"type\":2,\"parameters\":[" + this.controllerIndex + "," + this.r + "," + this.g + "," + this.b + "]}";
+	}
+}
--- /dev/null
+++ net/minecraft/src/GuiFreezer.java
@@ -1,0 +1,48 @@
+package net.minecraft.src;
+
+import org.lwjgl.opengl.GL11;
+
+public class GuiFreezer extends GuiContainer {
+	private TileEntityFreezer field_8004_8n8hsvw2anLLBqL66gSBln4q9hf3Mf81i2WJ24gRRH7z3h21Yvs10qUX9N7E;
+
+	public GuiFreezer(InventoryPlayer var1, TileEntityFreezer var2) {
+		this.field_8004_8n8hsvw2anLLBqL66gSBln4q9hf3Mf81i2WJ24gRRH7z3h21Yvs10qUX9N7E = var2;
+		this.inventorySlots.add(new SlotInventory(this, var2, 0, 16, 35));
+		this.inventorySlots.add(new SlotInventory(this, var2, 1, 60, 35));
+		this.inventorySlots.add(new SlotInventory(this, var2, 2, 116, 35));
+
+		int var3;
+		for(var3 = 0; var3 < 3; ++var3) {
+			for(int var4 = 0; var4 < 9; ++var4) {
+				this.inventorySlots.add(new SlotInventory(this, var1, var4 + (var3 + 1) * 9, 8 + var4 * 18, 84 + var3 * 18));
+			}
+		}
+
+		for(var3 = 0; var3 < 9; ++var3) {
+			this.inventorySlots.add(new SlotInventory(this, var1, var3, 8 + var3 * 18, 142));
+		}
+
+	}
+
+	protected void drawGuiContainerForegroundLayer() {
+		this.fontRenderer.drawString(this.field_8004_8n8hsvw2anLLBqL66gSBln4q9hf3Mf81i2WJ24gRRH7z3h21Yvs10qUX9N7E.getInvName(), 60, 6, 16777215);
+		this.fontRenderer.drawString("Inventory", 8, this.ySize - 96 + 2, 16777215);
+	}
+
+	protected void drawGuiContainerBackgroundLayer(float var1) {
+		int var2 = this.mc.renderEngine.getTexture("/gui/freezer.png");
+		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+		this.mc.renderEngine.bindTexture(var2);
+		int var3 = (this.width - this.xSize) / 2;
+		int var4 = (this.height - this.ySize) / 2;
+		this.drawTexturedModalRect(var3, var4, 0, 0, this.xSize, this.ySize);
+		int var5;
+		if(this.field_8004_8n8hsvw2anLLBqL66gSBln4q9hf3Mf81i2WJ24gRRH7z3h21Yvs10qUX9N7E.func_9197_4Lt75tb695q9O4k0y17SFzV9n7Yq11Xi9novcDHJOIuX10R7xs1NUsVqvCUE()) {
+			var5 = this.field_8004_8n8hsvw2anLLBqL66gSBln4q9hf3Mf81i2WJ24gRRH7z3h21Yvs10qUX9N7E.func_9193_8K3yE6ppzNQ76NQ089sE2PTCN4IO7VE51KP2efHtAWP8817c1LUvD3Nk71lp(24);
+			this.drawTexturedModalRect(var3 + 36, var4 + 57 - var5, 176, 24 - var5, 20, var5 - 3);
+		}
+
+		var5 = this.field_8004_8n8hsvw2anLLBqL66gSBln4q9hf3Mf81i2WJ24gRRH7z3h21Yvs10qUX9N7E.func_9196_2yn49xG0DV9O6VF0P1qm7UMj028vb0V5eFnBLE8I7MuPGZkJCIu8p5CCd419(24);
+		this.drawTexturedModalRect(var3 + 79, var4 + 36, 176, 22, var5 + 1, 16);
+	}
+}
--- /dev/null
+++ net/minecraft/src/ItemObsidianPick.java
@@ -1,0 +1,11 @@
+package net.minecraft.src;
+
+public class ItemObsidianPick extends ItemPickaxe {
+	public ItemObsidianPick(int var1, int var2) {
+		super(var1, var2);
+	}
+
+	public boolean canHarvestBlock(Block var1) {
+		return var1 == Block.bedrock ? true : super.canHarvestBlock(var1);
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockWorkbenchOld.java
@@ -1,0 +1,17 @@
+package net.minecraft.src;
+
+public class BlockWorkbenchOld extends BlockOld {
+	protected BlockWorkbenchOld(int var1) {
+		super(var1, Material.wood);
+		this.blockIndexInTexture = 59;
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 == 1 ? this.blockIndexInTexture - 16 : (var1 == 0 ? BlockOld.planks.getBlockTextureFromSide(0) : (var1 != 2 && var1 != 4 ? this.blockIndexInTexture : this.blockIndexInTexture + 1));
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		var5.displayWorkbenchGUI();
+		return true;
+	}
+}
--- /dev/null
+++ net/minecraft/src/DS5Connection.java
@@ -1,0 +1,69 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.net.DatagramPacket;
+import java.net.DatagramSocket;
+import java.net.InetAddress;
+import java.net.SocketException;
+import java.net.UnknownHostException;
+import java.nio.charset.Charset;
+import java.util.Scanner;
+
+public class DS5Connection {
+	public DatagramSocket dgramSock;
+	public int port = -1;
+	public InetAddress addr;
+	public boolean connected = false;
+
+	public boolean Connect() {
+		File var1 = new File("C:\\Temp\\DualSenseX\\DualSenseX_PortNumber.txt");
+
+		try {
+			Scanner var2 = new Scanner(var1);
+			if(!var2.hasNextInt()) {
+				var2.close();
+				return false;
+			}
+
+			this.port = var2.nextInt();
+			var2.close();
+		} catch (FileNotFoundException var5) {
+			return false;
+		}
+
+		try {
+			this.addr = InetAddress.getByName("localhost");
+			this.dgramSock = new DatagramSocket();
+		} catch (UnknownHostException var3) {
+			return false;
+		} catch (SocketException var4) {
+			return false;
+		}
+
+		this.connected = true;
+		return true;
+	}
+
+	public void Disconnect() {
+		this.dgramSock.close();
+		this.connected = false;
+	}
+
+	public boolean Send(DS5Packet var1) {
+		if(!this.connected) {
+			return false;
+		} else {
+			byte[] var2 = var1.buildJSON().getBytes(Charset.forName("ASCII"));
+			DatagramPacket var3 = new DatagramPacket(var2, var2.length, this.addr, this.port);
+
+			try {
+				this.dgramSock.send(var3);
+				return true;
+			} catch (IOException var5) {
+				return false;
+			}
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/MinecraftException2.java
@@ -1,0 +1,7 @@
+package net.minecraft.src;
+
+public class MinecraftException2 extends RuntimeException {
+	public MinecraftException2() {
+		super("This is not supposed to happen");
+	}
+}
--- net/minecraft/src/EntityPlayer.java
+++ net/minecraft/src/EntityPlayer.java
@@ -4,7 +4,6 @@
 
 public class EntityPlayer extends EntityLiving {
 	public InventoryPlayer inventory = new InventoryPlayer(this);
-	public byte unusedMiningCooldown = 0;
 	public int score = 0;
 	public float prevCameraYaw;
 	public float cameraYaw;
@@ -12,6 +11,11 @@
 	public int swingProgressInt = 0;
 	public String username;
 	private int damageRemainder = 0;
+	public long observerCooldown = 0L;
+	public int field_9028_77eIl1NuprJ7LGdcl2jvfY23W9vuW6i3POL1kwYb9qsfTXp6uFHpdr8w9eCG = 0;
+	public ImageHolder playerSkin = null;
+	public boolean flying = false;
+	boolean lastInWater = false;
 
 	public EntityPlayer(World var1) {
 		super(var1);
@@ -19,7 +23,6 @@
 		this.setLocationAndAngles((double)var1.spawnX + 0.5D, (double)(var1.spawnY + 1), (double)var1.spawnZ + 0.5D, 0.0F, 0.0F);
 		this.health = 20;
 		this.entityType = "humanoid";
-		this.unusedRotation = 180.0F;
 		this.fireResistance = 20;
 		this.texture = "/char.png";
 	}
@@ -52,14 +55,59 @@
 		this.swingProgress = (float)this.swingProgressInt / 8.0F;
 	}
 
+	public void moveEntity(double var1, double var3, double var5) {
+		if(this.flying) {
+			var1 *= 4.0D;
+			var5 *= 4.0D;
+		}
+
+		super.moveEntity(var1, var3, var5);
+	}
+
+	public void func_9009_4fp790sAs7f59G8L1MO21S1tnt70P1FWDQrlNxsa8OJNe7i1jl39U7geG89g() {
+		boolean var1 = this.lastInWater;
+		if(!this.isInsideOfMaterial(Material.water) && (!this.lastInWater || this.worldObj.getBlockId((int)this.posX, (int)this.posY - 1, (int)this.posZ) == 0 || this.worldObj.getBlockId((int)this.posX, (int)this.posY, (int)this.posZ) == 0)) {
+			this.setSize(0.6F, 1.8F);
+			this.yOffset = 1.62F;
+			this.lastInWater = false;
+		} else {
+			this.setSize(0.6F, 0.8F);
+			this.yOffset = 0.81F;
+			this.renderYawOffset = this.rotationYaw;
+			this.lastInWater = true;
+		}
+
+		if(this.lastInWater != var1) {
+			this.setPosition(this.posX, this.posY, this.posZ);
+		}
+
+	}
+
+	public void func_8999_2V2k958X8cUl0N1lA83kol6zqQt7yi5f733JmXLv5F2q3Uq9IkthN796za9B() {
+		super.onLivingUpdate();
+	}
+
 	public void onLivingUpdate() {
-		if(this.worldObj.difficultySetting == 0 && this.health < 20 && this.ticksExisted % 20 * 4 == 0) {
+		if(this.observerCooldown > 0L) {
+			--this.observerCooldown;
+		}
+
+		this.func_9009_4fp790sAs7f59G8L1MO21S1tnt70P1FWDQrlNxsa8OJNe7i1jl39U7geG89g();
+		if(this.worldObj.difficultySetting == 0 && !this.isInsideOfMaterial(Material.water) && !(this.worldObj instanceof ZMWorld) && this.health < 20 && this.ticksExisted % 20 * 4 == 0) {
 			this.heal(1);
 		}
 
+		if(this.field_9028_77eIl1NuprJ7LGdcl2jvfY23W9vuW6i3POL1kwYb9qsfTXp6uFHpdr8w9eCG > 0) {
+			--this.field_9028_77eIl1NuprJ7LGdcl2jvfY23W9vuW6i3POL1kwYb9qsfTXp6uFHpdr8w9eCG;
+		}
+
 		this.inventory.decrementAnimations();
 		this.prevCameraYaw = this.cameraYaw;
 		super.onLivingUpdate();
+		if(this.flying) {
+			this.motionY = 0.0D;
+		}
+
 		float var1 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
 		float var2 = (float)Math.atan(-this.motionY * (double)0.2F) * 15.0F;
 		if(var1 > 0.1F) {
@@ -87,7 +135,12 @@
 
 	}
 
-	private void collideWithPlayer(Entity var1) {
+	protected boolean shouldBeDamagedByFire() {
+		ItemStack var1 = this.inventory.getCurrentItem();
+		return var1 == null || var1.getItem().shiftedIndex != ExtItems.flameberge.shiftedIndex;
+	}
+
+	public void collideWithPlayer(Entity var1) {
 		var1.onCollideWithPlayer(this);
 	}
 
@@ -149,6 +202,7 @@
 
 			this.joinEntityItemWithWorld(var3);
 		}
+
 	}
 
 	protected void joinEntityItemWithWorld(EntityItem var1) {
@@ -158,11 +212,11 @@
 	public float getCurrentPlayerStrVsBlock(Block var1) {
 		float var2 = this.inventory.getStrVsBlock(var1);
 		if(this.isInsideOfMaterial(Material.water)) {
-			var2 /= 5.0F;
+			var2 /= 4.0F;
 		}
 
-		if(!this.onGround) {
-			var2 /= 5.0F;
+		if(!this.onGround && !this.flying) {
+			var2 /= 4.0F;
 		}
 
 		return var2;
@@ -176,13 +230,19 @@
 		super.readEntityFromNBT(var1);
 		NBTTagList var2 = var1.getTagList("Inventory");
 		this.inventory.readFromNBT(var2);
+		this.observerCooldown = var1.getLong("ObvCDTimer");
 	}
 
 	public void writeEntityToNBT(NBTTagCompound var1) {
 		super.writeEntityToNBT(var1);
+		var1.setLong("ObvCDTimer", this.observerCooldown);
+		var1.setInteger("FlowerHealTimer", this.field_9028_77eIl1NuprJ7LGdcl2jvfY23W9vuW6i3POL1kwYb9qsfTXp6uFHpdr8w9eCG);
 		var1.setTag("Inventory", this.inventory.writeToNBT(new NBTTagList()));
 	}
 
+	public void func_9014_8m5ZIeFsLDmTSL7vg0gU2Gb8dJg6fdSuixcwsqYKcnVLS6AUHVRG1qS6my5L() {
+	}
+
 	public void displayGUIChest(IInventory var1) {
 	}
 
@@ -193,7 +253,7 @@
 	}
 
 	protected float getEyeHeight() {
-		return 0.12F;
+		return this.lastInWater ? -0.1F : 0.12F;
 	}
 
 	public boolean attackEntityFrom(Entity var1, int var2) {
@@ -204,7 +264,7 @@
 			return false;
 		} else {
 			if(var1 instanceof EntityMob || var1 instanceof EntityArrow) {
-				if(this.worldObj.difficultySetting == 0) {
+				if(this.worldObj.difficultySetting == 0 && !(this.worldObj instanceof ZMWorld)) {
 					var2 = 0;
 				}
 
@@ -232,6 +292,9 @@
 	public void displayGUIEditSign(TileEntitySign var1) {
 	}
 
+	public void displayEssenceTransformerGUI() {
+	}
+
 	public void interactWithEntity(Entity var1) {
 	}
 
@@ -250,5 +313,11 @@
 	public void swingItem() {
 		this.swingProgressInt = -1;
 		this.isSwinging = true;
+	}
+
+	public void displayEssenceClonerGUI() {
+	}
+
+	public void displayFreezerGUI(TileEntityFreezer var1) {
 	}
 }
--- net/minecraft/src/BlockPressurePlate.java
+++ net/minecraft/src/BlockPressurePlate.java
@@ -54,12 +54,14 @@
 		if(var1.getBlockMetadata(var2, var3, var4) != 0) {
 			this.setStateIfMobInteractsWithPlate(var1, var2, var3, var4);
 		}
+
 	}
 
 	public void onEntityCollidedWithBlock(World var1, int var2, int var3, int var4, Entity var5) {
 		if(var1.getBlockMetadata(var2, var3, var4) != 1) {
 			this.setStateIfMobInteractsWithPlate(var1, var2, var3, var4);
 		}
+
 	}
 
 	private void setStateIfMobInteractsWithPlate(World var1, int var2, int var3, int var4) {
--- /dev/null
+++ net/minecraft/src/ModelSquip.java
@@ -1,0 +1,32 @@
+package net.minecraft.src;
+
+public class ModelSquip extends ModelBase {
+	public ModelRenderer[] submodels = new ModelRenderer[11];
+
+	public ModelSquip() {
+		byte var1 = 24;
+		this.submodels[0] = n(0, 0, -6.0F, (float)(var1 + -37), -6.0F, 12, 18, 12, false);
+		this.submodels[1] = n(12, 30, -9.0F, (float)(var1 + -37), -2.0F, 3, 11, 3, false);
+		this.submodels[2] = n(0, 30, 6.0F, (float)(var1 + -37), -2.0F, 3, 11, 3, false);
+		this.submodels[3] = n(24, 30, -3.0F, (float)(var1 + -19), -5.0F, 2, 15, 2, false);
+		this.submodels[4] = n(32, 30, 3.0F, (float)(var1 + -19), -2.0F, 2, 14, 2, true);
+		this.submodels[5] = n(24, 30, 1.0F, (float)(var1 + -19), -5.0F, 2, 15, 2, true);
+		this.submodels[6] = n(32, 30, -5.0F, (float)(var1 + -19), -2.0F, 2, 14, 2, false);
+		this.submodels[7] = n(32, 30, 3.0F, (float)(var1 + -19), 1.0F, 2, 14, 2, true);
+		this.submodels[8] = n(32, 30, -5.0F, (float)(var1 + -19), 1.0F, 2, 14, 2, false);
+		this.submodels[9] = n(24, 30, -3.0F, (float)(var1 + -19), 4.0F, 2, 15, 2, false);
+		this.submodels[10] = n(24, 30, 1.0F, (float)(var1 + -19), 4.0F, 2, 15, 2, true);
+	}
+
+	public void render(float var1, float var2, float var3, float var4, float var5, float var6) {
+		this.setRotationAngles(var1, var2, var3, var4, var5, var6);
+		ModelRenderer[] var7 = this.submodels;
+		int var8 = var7.length;
+
+		for(int var9 = 0; var9 < var8; ++var9) {
+			ModelRenderer var10 = var7[var9];
+			var10.render(var6);
+		}
+
+	}
+}
--- net/minecraft/src/Packet.java
+++ net/minecraft/src/Packet.java
@@ -7,11 +7,11 @@
 import java.util.Map;
 
 public abstract class Packet {
-	private static Map packetIdToClassMap = new HashMap();
-	private static Map packetClassToIdMap = new HashMap();
+	private static Map<Integer, Class<? extends Packet>> packetIdToClassMap = new HashMap();
+	private static Map<Class<? extends Packet>, Integer> packetClassToIdMap = new HashMap();
 	public boolean isChunkDataPacket = false;
 
-	static void addIdClassMapping(int var0, Class var1) {
+	static void addIdClassMapping(int var0, Class<? extends Packet> var1) {
 		if(packetIdToClassMap.containsKey(Integer.valueOf(var0))) {
 			throw new IllegalArgumentException("Duplicate packet id:" + var0);
 		} else if(packetClassToIdMap.containsKey(var1)) {
@@ -40,6 +40,7 @@
 	public static Packet readPacket(DataInputStream var0) throws IOException {
 		int var1 = var0.read();
 		if(var1 == -1) {
+			ExtLogger.i("-1 packet ID received");
 			return null;
 		} else {
 			Packet var2 = getNewPacket(var1);
@@ -73,6 +74,8 @@
 		addIdClassMapping(4, Packet4UpdateTime.class);
 		addIdClassMapping(5, Packet5PlayerInventory.class);
 		addIdClassMapping(6, Packet6SpawnPosition.class);
+		addIdClassMapping(7, Packet7SendSkinRequest.class);
+		addIdClassMapping(8, Packet8RespondSkinRequest.class);
 		addIdClassMapping(10, Packet10Flying.class);
 		addIdClassMapping(11, Packet11PlayerPosition.class);
 		addIdClassMapping(12, Packet12PlayerLook.class);
@@ -98,6 +101,13 @@
 		addIdClassMapping(52, Packet52MultiBlockChange.class);
 		addIdClassMapping(53, Packet53BlockChange.class);
 		addIdClassMapping(59, Packet59ComplexEntity.class);
+		addIdClassMapping(70, Packet70PlayGlobalMusic.class);
+		addIdClassMapping(71, Packet71.class);
+		addIdClassMapping(72, Packet72.class);
+		addIdClassMapping(200, Packet200SecureLogin.class);
+		addIdClassMapping(201, Packet201SecureChat.class);
+		addIdClassMapping(202, Packet202SecureChatEcho.class);
+		addIdClassMapping(211, Packet211.class);
 		addIdClassMapping(255, Packet255KickDisconnect.class);
 	}
 }
--- /dev/null
+++ net/minecraft/src/HubWorldUnknownClass3.java
@@ -1,0 +1,38 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+public class HubWorldUnknownClass3 extends MapGenBase {
+	private List<HubWorldUnknownClass2> field_11160_3n3877cAL198QgMDPGv8AXYIec0mHr5ObtZma81Yl5nX8ugCz86y6XL9Pi5O = new ArrayList();
+
+	private boolean func_11159_5uod1iu6Dlqg52iO0v6qFBPdixFGfm6LmbnW4Rx3Ep7C4LSh0InO8QKqkeJk() {
+		Iterator var1 = this.field_11160_3n3877cAL198QgMDPGv8AXYIec0mHr5ObtZma81Yl5nX8ugCz86y6XL9Pi5O.iterator();
+
+		HubWorldUnknownClass2 var2;
+		do {
+			if(!var1.hasNext()) {
+				return false;
+			}
+
+			var2 = (HubWorldUnknownClass2)var1.next();
+		} while(!var2.func_9820_5204axQba8r4yKOmf635c4mf99bQl70mm0X8b96R3NY7EX2N636dc3j5E7Jq());
+
+		return true;
+	}
+
+	private HubWorldUnknownClass2 func_11158_8OSUykYWUR3a2r3PPU9aWX0djkEYBjTtmmkhtMY0762Vl2FaAN2L4j7JvJpd(int var1, int var2, int var3) {
+		if(!this.func_11159_5uod1iu6Dlqg52iO0v6qFBPdixFGfm6LmbnW4Rx3Ep7C4LSh0InO8QKqkeJk()) {
+			return null;
+		} else {
+			if(var1 == 0 && var2 == 1 && var3 == 0) {
+				boolean var10000 = false;
+			} else {
+				this.rand.nextInt(5);
+			}
+
+			return null;
+		}
+	}
+}
--- net/minecraft/src/RenderGlobal.java
+++ net/minecraft/src/RenderGlobal.java
@@ -5,6 +5,7 @@
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
+import java.util.Objects;
 import java.util.Random;
 import net.minecraft.client.Minecraft;
 import org.lwjgl.opengl.ARBOcclusionQuery;
@@ -12,10 +13,10 @@
 import org.lwjgl.opengl.GL15;
 
 public class RenderGlobal implements IWorldAccess {
-	public List tileEntities = new ArrayList();
+	public List<TileEntity> tileEntities;
 	private World theWorld;
-	private RenderEngine renderEngine;
-	private List worldRenderersToUpdate = new ArrayList();
+	public RenderEngine renderEngine;
+	private List<WorldRenderer> worldRenderersToUpdate;
 	private WorldRenderer[] sortedWorldRenderers;
 	private WorldRenderer[] worldRenderers;
 	private int renderChunksWide;
@@ -25,8 +26,8 @@
 	private Minecraft mc;
 	private RenderBlocks globalRenderBlocks;
 	private IntBuffer glOcclusionQueryBase;
-	private boolean occlusionEnabled = false;
-	private int cloudTickCounter = 0;
+	private boolean occlusionEnabled;
+	private int cloudTickCounter;
 	private int starGLCallList;
 	private int glSkyList;
 	private int glSkyList2;
@@ -36,29 +37,46 @@
 	private int maxBlockX;
 	private int maxBlockY;
 	private int maxBlockZ;
-	private int renderDistance = -1;
-	private int renderEntitiesStartupCounter = 2;
+	private int renderDistance;
+	private int renderEntitiesStartupCounter;
 	private int countEntitiesTotal;
 	private int countEntitiesRendered;
 	private int countEntitiesHidden;
-	int[] dummyBuf50k = new int['\uc350'];
-	IntBuffer occlusionResult = GLAllocation.createDirectIntBuffer(64);
+	int[] dummyBuf50k;
+	IntBuffer occlusionResult;
 	private int renderersLoaded;
 	private int renderersBeingClipped;
 	private int renderersBeingOccluded;
 	private int renderersBeingRendered;
 	private int renderersSkippingRenderPass;
-	private List glRenderLists = new ArrayList();
-	private RenderList[] allRenderLists = new RenderList[]{new RenderList(), new RenderList(), new RenderList(), new RenderList()};
-	int dummyRenderInt = 0;
-	int unusedGLCallList = GLAllocation.generateDisplayLists(1);
-	double prevSortX = -9999.0D;
-	double prevSortY = -9999.0D;
-	double prevSortZ = -9999.0D;
+	private List<WorldRenderer> glRenderLists;
+	private RenderList[] allRenderLists;
+	int dummyRenderInt;
+	int unusedGLCallList;
+	double prevSortX;
+	double prevSortY;
+	double prevSortZ;
 	public float damagePartialTime;
-	int frustumCheckOffset = 0;
+	int frustumCheckOffset;
 
-	public RenderGlobal(Minecraft var1, RenderEngine var2) {
+	public void RenderHub(Minecraft var1, RenderEngine var2) {
+		//super();
+		this.tileEntities = new ArrayList();
+		this.worldRenderersToUpdate = Collections.synchronizedList(new ArrayList());
+		this.occlusionEnabled = false;
+		this.cloudTickCounter = 0;
+		this.renderDistance = -1;
+		this.renderEntitiesStartupCounter = 2;
+		this.dummyBuf50k = new int['\uc350'];
+		this.occlusionResult = GLAllocation.createDirectIntBuffer(64);
+		this.glRenderLists = new ArrayList();
+		this.allRenderLists = new RenderList[]{new RenderList(), new RenderList(), new RenderList(), new RenderList()};
+		this.dummyRenderInt = 0;
+		this.unusedGLCallList = GLAllocation.generateDisplayLists(1);
+		this.prevSortX = -9999.0D;
+		this.prevSortY = -9999.0D;
+		this.prevSortZ = -9999.0D;
+		this.frustumCheckOffset = 0;
 		this.mc = var1;
 		this.renderEngine = var2;
 		byte var3 = 64;
@@ -82,19 +100,19 @@
 		Tessellator var4 = Tessellator.instance;
 		this.glSkyList = this.starGLCallList + 1;
 		GL11.glNewList(this.glSkyList, GL11.GL_COMPILE);
-		byte var6 = 64;
-		int var7 = 256 / var6 + 2;
-		float var5 = 16.0F;
+		byte var5 = 64;
+		int var6 = 256 / var5 + 2;
+		float var7 = 16.0F;
 
 		int var8;
 		int var9;
-		for(var8 = -var6 * var7; var8 <= var6 * var7; var8 += var6) {
-			for(var9 = -var6 * var7; var9 <= var6 * var7; var9 += var6) {
+		for(var8 = -var5 * var6; var8 <= var5 * var6; var8 += var5) {
+			for(var9 = -var5 * var6; var9 <= var5 * var6; var9 += var5) {
 				var4.startDrawingQuads();
-				var4.addVertex((double)(var8 + 0), (double)var5, (double)(var9 + 0));
-				var4.addVertex((double)(var8 + var6), (double)var5, (double)(var9 + 0));
-				var4.addVertex((double)(var8 + var6), (double)var5, (double)(var9 + var6));
-				var4.addVertex((double)(var8 + 0), (double)var5, (double)(var9 + var6));
+				var4.addVertex((double)(var8 + 0), (double)var7, (double)(var9 + 0));
+				var4.addVertex((double)(var8 + var5), (double)var7, (double)(var9 + 0));
+				var4.addVertex((double)(var8 + var5), (double)var7, (double)(var9 + var5));
+				var4.addVertex((double)(var8 + 0), (double)var7, (double)(var9 + var5));
 				var4.draw();
 			}
 		}
@@ -102,15 +120,15 @@
 		GL11.glEndList();
 		this.glSkyList2 = this.starGLCallList + 2;
 		GL11.glNewList(this.glSkyList2, GL11.GL_COMPILE);
-		var5 = -16.0F;
+		var7 = -16.0F;
 		var4.startDrawingQuads();
 
-		for(var8 = -var6 * var7; var8 <= var6 * var7; var8 += var6) {
-			for(var9 = -var6 * var7; var9 <= var6 * var7; var9 += var6) {
-				var4.addVertex((double)(var8 + var6), (double)var5, (double)(var9 + 0));
-				var4.addVertex((double)(var8 + 0), (double)var5, (double)(var9 + 0));
-				var4.addVertex((double)(var8 + 0), (double)var5, (double)(var9 + var6));
-				var4.addVertex((double)(var8 + var6), (double)var5, (double)(var9 + var6));
+		for(var8 = -var5 * var6; var8 <= var5 * var6; var8 += var5) {
+			for(var9 = -var5 * var6; var9 <= var5 * var6; var9 += var5) {
+				var4.addVertex((double)(var8 + var5), (double)var7, (double)(var9 + 0));
+				var4.addVertex((double)(var8 + 0), (double)var7, (double)(var9 + 0));
+				var4.addVertex((double)(var8 + 0), (double)var7, (double)(var9 + var5));
+				var4.addVertex((double)(var8 + var5), (double)var7, (double)(var9 + var5));
 			}
 		}
 
@@ -118,7 +136,7 @@
 		GL11.glEndList();
 	}
 
-	private void renderStars() {
+	public void renderStars() {
 		Random var1 = new Random(10842L);
 		Tessellator var2 = Tessellator.instance;
 		var2.startDrawingQuads();
@@ -151,13 +169,13 @@
 					double var39 = 0.0D;
 					double var41 = (double)((var38 & 2) - 1) * var10;
 					double var43 = (double)((var38 + 1 & 2) - 1) * var10;
-					double var47 = var41 * var36 - var43 * var34;
-					double var49 = var43 * var36 + var41 * var34;
-					double var53 = var47 * var28 + var39 * var30;
-					double var55 = var39 * var28 - var47 * var30;
-					double var57 = var55 * var22 - var49 * var24;
-					double var61 = var49 * var22 + var55 * var24;
-					var2.addVertex(var14 + var57, var16 + var53, var18 + var61);
+					double var45 = var41 * var36 - var43 * var34;
+					double var47 = var43 * var36 + var41 * var34;
+					double var49 = var45 * var28 + var39 * var30;
+					double var51 = var39 * var28 - var45 * var30;
+					double var53 = var51 * var22 - var47 * var24;
+					double var55 = var47 * var22 + var51 * var24;
+					var2.addVertex(var14 + var53, var16 + var49, var18 + var55);
 				}
 			}
 		}
@@ -184,7 +202,9 @@
 	}
 
 	public void loadRenderers() {
-		Block.leaves.setGraphicsLevel(this.mc.options.fancyGraphics);
+		Block.leaves.setGraphicsLevel(this.mc.options.fancyGraphics == 1);
+		((BlockLeaves)ExtBlocks.FireSkyLeaves).setGraphicsLevel(this.mc.options.fancyGraphics == 1);
+		((BlockLeaves)ExtBlocks.TeaBush).setGraphicsLevel(this.mc.options.fancyGraphics == 1);
 		this.renderDistance = this.mc.options.renderDistance;
 		int var1;
 		if(this.worldRenderers != null) {
@@ -193,8 +213,13 @@
 			}
 		}
 
-		var1 = 64 << 3 - this.renderDistance;
-		if(var1 > 400) {
+		if(this.renderDistance == 0) {
+			var1 = 1024;
+		} else {
+			var1 = 64 << 3 - Math.min(this.renderDistance - 1, 3);
+		}
+
+		if(this.renderDistance == 1) {
 			var1 = 400;
 		}
 
@@ -268,24 +293,27 @@
 			List var5 = this.theWorld.getLoadedEntityList();
 			this.countEntitiesTotal = var5.size();
 
-			int var6;
-			for(var6 = 0; var6 < var5.size(); ++var6) {
-				Entity var7 = (Entity)var5.get(var6);
-				if(var7.isInRangeToRenderVec3D(var1) && var2.isBoundingBoxInFrustum(var7.boundingBox) && (var7 != this.mc.thePlayer || this.mc.options.thirdPersonView)) {
-					++this.countEntitiesRendered;
-					RenderManager.instance.renderEntity(var7, var3);
-				}
-			}
-
-			for(var6 = 0; var6 < this.tileEntities.size(); ++var6) {
-				TileEntityRenderer.instance.renderTileEntity((TileEntity)this.tileEntities.get(var6), var3);
-			}
-
+			try {
+				int var6;
+				for(var6 = 0; var6 < var5.size(); ++var6) {
+					Entity var7 = (Entity)var5.get(var6);
+					if(var7.isInRangeToRenderVec3D(var1) && var2.isBoundingBoxInFrustum(var7.boundingBox) && (var7 != this.mc.thePlayer || this.mc.options.thirdPersonView)) {
+						++this.countEntitiesRendered;
+						RenderManager.instance.renderEntity(var7, var3);
+					}
+				}
+
+				for(var6 = 0; var6 < this.tileEntities.size(); ++var6) {
+					TileEntityRenderer.instance.renderTileEntity((TileEntity)this.tileEntities.get(var6), var3);
+				}
+			} catch (NullPointerException var8) {
+			}
 		}
+
 	}
 
 	public String getDebugInfoRenders() {
-		return "C: " + this.renderersBeingRendered + "/" + this.renderersLoaded + ". F: " + this.renderersBeingClipped + ", O: " + this.renderersBeingOccluded + ", E: " + this.renderersSkippingRenderPass;
+		return "C: " + this.renderersBeingRendered + "/" + this.renderersLoaded + ". F: " + this.renderersBeingClipped + ", O: " + this.renderersBeingOccluded + ", E: " + this.renderersSkippingRenderPass + ", DCs: " + this.mc.field_7318_1202Xh2to5K411eCdkp7924Hyz4tEuc93T8eZ9qf5D33M4HWlnu524P0Mlk2;
 	}
 
 	public String getDebugInfoEntities() {
@@ -362,7 +390,8 @@
 	}
 
 	public int sortAndRender(EntityPlayer var1, int var2, double var3) {
-		if(this.mc.options.renderDistance != this.renderDistance) {
+		if(this.mc.options.renderDistance != this.renderDistance || Minecraft.field_7326_55yB6jYtSi94r555184CYoXDQ1YhyBnoS1lJaCCAbdj3rDu1RNzU8Gp4C3g5) {
+			Minecraft.field_7326_55yB6jYtSi94r555184CYoXDQ1YhyBnoS1lJaCCAbdj3rDu1RNzU8Gp4C3g5 = false;
 			this.loadRenderers();
 		}
 
@@ -385,27 +414,32 @@
 			this.prevSortY = var1.posY;
 			this.prevSortZ = var1.posZ;
 			this.markRenderersForNewPosition(MathHelper.floor_double(var1.posX), MathHelper.floor_double(var1.posY), MathHelper.floor_double(var1.posZ));
-			Arrays.sort(this.sortedWorldRenderers, new EntitySorter(var1));
+
+			try {
+				Arrays.sort(this.sortedWorldRenderers, new EntitySorter(var1));
+			} catch (IllegalArgumentException var35) {
+			}
 		}
 
 		byte var17 = 0;
-		int var33;
+		int var18;
 		if(this.occlusionEnabled && !this.mc.options.anaglyph && var2 == 0) {
-			byte var18 = 0;
-			int var19 = 16;
-			this.checkOcclusionQueryResult(var18, var19);
+			byte var19 = 0;
+			int var20 = 16;
+			this.checkOcclusionQueryResult(var19, var20);
 
-			for(int var20 = var18; var20 < var19; ++var20) {
-				this.sortedWorldRenderers[var20].isVisible = true;
+			int var21;
+			for(var21 = var19; var21 < var20; ++var21) {
+				this.sortedWorldRenderers[var21].isVisible = true;
 			}
 
-			var33 = var17 + this.renderSortedRenderers(var18, var19, var2, var3);
+			var18 = var17 + this.renderSortedRenderers(var19, var20, var2, var3);
 
 			do {
-				int var34 = var19;
-				var19 *= 2;
-				if(var19 > this.sortedWorldRenderers.length) {
-					var19 = this.sortedWorldRenderers.length;
+				var21 = var20;
+				var20 *= 2;
+				if(var20 > this.sortedWorldRenderers.length) {
+					var20 = this.sortedWorldRenderers.length;
 				}
 
 				GL11.glDisable(GL11.GL_TEXTURE_2D);
@@ -414,42 +448,42 @@
 				GL11.glDisable(GL11.GL_FOG);
 				GL11.glColorMask(false, false, false, false);
 				GL11.glDepthMask(false);
-				this.checkOcclusionQueryResult(var34, var19);
+				this.checkOcclusionQueryResult(var21, var20);
 				GL11.glPushMatrix();
-				float var35 = 0.0F;
-				float var21 = 0.0F;
 				float var22 = 0.0F;
+				float var23 = 0.0F;
+				float var24 = 0.0F;
 
-				for(int var23 = var34; var23 < var19; ++var23) {
-					if(this.sortedWorldRenderers[var23].skipAllRenderPasses()) {
-						this.sortedWorldRenderers[var23].isInFrustum = false;
+				for(int var25 = var21; var25 < var20; ++var25) {
+					if(this.sortedWorldRenderers[var25].skipAllRenderPasses()) {
+						this.sortedWorldRenderers[var25].isInFrustum = false;
 					} else {
-						if(!this.sortedWorldRenderers[var23].isInFrustum) {
-							this.sortedWorldRenderers[var23].isVisible = true;
+						if(!this.sortedWorldRenderers[var25].isInFrustum) {
+							this.sortedWorldRenderers[var25].isVisible = true;
 						}
 
-						if(this.sortedWorldRenderers[var23].isInFrustum && !this.sortedWorldRenderers[var23].isWaitingOnOcclusionQuery) {
-							float var24 = MathHelper.sqrt_float(this.sortedWorldRenderers[var23].distanceToEntitySquared(var1));
-							int var25 = (int)(1.0F + var24 / 128.0F);
-							if(this.cloudTickCounter % var25 == var23 % var25) {
-								WorldRenderer var26 = this.sortedWorldRenderers[var23];
-								float var27 = (float)((double)var26.posXMinus - var5);
-								float var28 = (float)((double)var26.posYMinus - var7);
-								float var29 = (float)((double)var26.posZMinus - var9);
-								float var30 = var27 - var35;
-								float var31 = var28 - var21;
+						if(this.sortedWorldRenderers[var25].isInFrustum && !this.sortedWorldRenderers[var25].isWaitingOnOcclusionQuery) {
+							float var26 = MathHelper.sqrt_float(this.sortedWorldRenderers[var25].distanceToEntitySquared(var1));
+							int var27 = (int)(1.0F + var26 / 128.0F);
+							if(this.cloudTickCounter % var27 == var25 % var27) {
+								WorldRenderer var28 = this.sortedWorldRenderers[var25];
+								float var29 = (float)((double)var28.posXMinus - var5);
+								float var30 = (float)((double)var28.posYMinus - var7);
+								float var31 = (float)((double)var28.posZMinus - var9);
 								float var32 = var29 - var22;
-								if(var30 != 0.0F || var31 != 0.0F || var32 != 0.0F) {
-									GL11.glTranslatef(var30, var31, var32);
-									var35 += var30;
-									var21 += var31;
+								float var33 = var30 - var23;
+								float var34 = var31 - var24;
+								if(var32 != 0.0F || var33 != 0.0F || var34 != 0.0F) {
+									GL11.glTranslatef(var32, var33, var34);
 									var22 += var32;
+									var23 += var33;
+									var24 += var34;
 								}
 
-								ARBOcclusionQuery.glBeginQueryARB(GL15.GL_SAMPLES_PASSED, this.sortedWorldRenderers[var23].glOcclusionQuery);
-								this.sortedWorldRenderers[var23].callOcclusionQueryList();
+								ARBOcclusionQuery.glBeginQueryARB(GL15.GL_SAMPLES_PASSED, this.sortedWorldRenderers[var25].glOcclusionQuery);
+								this.sortedWorldRenderers[var25].callOcclusionQueryList();
 								ARBOcclusionQuery.glEndQueryARB(GL15.GL_SAMPLES_PASSED);
-								this.sortedWorldRenderers[var23].isWaitingOnOcclusionQuery = true;
+								this.sortedWorldRenderers[var25].isWaitingOnOcclusionQuery = true;
 							}
 						}
 					}
@@ -461,13 +495,13 @@
 				GL11.glEnable(GL11.GL_TEXTURE_2D);
 				GL11.glEnable(GL11.GL_ALPHA_TEST);
 				GL11.glEnable(GL11.GL_FOG);
-				var33 += this.renderSortedRenderers(var34, var19, var2, var3);
-			} while(var19 < this.sortedWorldRenderers.length);
+				var18 += this.renderSortedRenderers(var21, var20, var2, var3);
+			} while(var20 < this.sortedWorldRenderers.length);
 		} else {
-			var33 = var17 + this.renderSortedRenderers(0, this.sortedWorldRenderers.length, var2, var3);
+			var18 = var17 + this.renderSortedRenderers(0, this.sortedWorldRenderers.length, var2, var3);
 		}
 
-		return var33;
+		return var18;
 	}
 
 	private void checkOcclusionQueryResult(int var1, int var2) {
@@ -558,27 +592,28 @@
 	}
 
 	public void renderSky(float var1) {
+		boolean var2 = ScreenDebugMenu.dbg_conf_nebulaEvt || this.theWorld != null && this.theWorld.GetMilestone() % 10L == 0L && this.theWorld.GetMilestone() > 0L;
 		GL11.glDisable(GL11.GL_TEXTURE_2D);
-		Vec3D var2 = this.theWorld.getSkyColor(var1);
-		float var3 = (float)var2.xCoord;
-		float var4 = (float)var2.yCoord;
-		float var5 = (float)var2.zCoord;
+		Vec3D var3 = this.theWorld.getSkyColor(var1);
+		float var4 = (float)var3.xCoord;
+		float var5 = (float)var3.yCoord;
+		float var6 = (float)var3.zCoord;
 		float var7;
 		float var8;
 		if(this.mc.options.anaglyph) {
-			float var6 = (var3 * 30.0F + var4 * 59.0F + var5 * 11.0F) / 100.0F;
-			var7 = (var3 * 30.0F + var4 * 70.0F) / 100.0F;
-			var8 = (var3 * 30.0F + var5 * 70.0F) / 100.0F;
-			var3 = var6;
-			var4 = var7;
-			var5 = var8;
+			float var9 = (var4 * 30.0F + var5 * 59.0F + var6 * 11.0F) / 100.0F;
+			var7 = (var4 * 30.0F + var5 * 70.0F) / 100.0F;
+			var8 = (var4 * 30.0F + var6 * 70.0F) / 100.0F;
+			var4 = var9;
+			var5 = var7;
+			var6 = var8;
 		}
 
-		GL11.glColor3f(var3, var4, var5);
-		Tessellator var12 = Tessellator.instance;
+		GL11.glColor3f(var4, var5, var6);
+		Tessellator var15 = Tessellator.instance;
 		GL11.glDepthMask(false);
 		GL11.glEnable(GL11.GL_FOG);
-		GL11.glColor3f(var3, var4, var5);
+		GL11.glColor3f(var4, var5, var6);
 		GL11.glCallList(this.glSkyList);
 		GL11.glEnable(GL11.GL_TEXTURE_2D);
 		GL11.glDisable(GL11.GL_FOG);
@@ -588,31 +623,38 @@
 		GL11.glPushMatrix();
 		var7 = 0.0F;
 		var8 = 0.0F;
-		float var9 = 0.0F;
+		float var10 = 0.0F;
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		GL11.glTranslatef(var7, var8, var9);
+		GL11.glTranslatef(var7, var8, var10);
 		GL11.glRotatef(0.0F, 0.0F, 0.0F, 1.0F);
 		GL11.glRotatef(this.theWorld.getCelestialAngle(var1) * 360.0F, 1.0F, 0.0F, 0.0F);
-		float var10 = 30.0F;
-		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.renderEngine.getTexture("/terrain/sun.png"));
-		var12.startDrawingQuads();
-		var12.addVertexWithUV((double)(-var10), 100.0D, (double)(-var10), 0.0D, 0.0D);
-		var12.addVertexWithUV((double)var10, 100.0D, (double)(-var10), 1.0D, 0.0D);
-		var12.addVertexWithUV((double)var10, 100.0D, (double)var10, 1.0D, 1.0D);
-		var12.addVertexWithUV((double)(-var10), 100.0D, (double)var10, 0.0D, 1.0D);
-		var12.draw();
-		var10 = 20.0F;
-		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.renderEngine.getTexture("/terrain/moon.png"));
-		var12.startDrawingQuads();
-		var12.addVertexWithUV((double)(-var10), -100.0D, (double)var10, 1.0D, 1.0D);
-		var12.addVertexWithUV((double)var10, -100.0D, (double)var10, 0.0D, 1.0D);
-		var12.addVertexWithUV((double)var10, -100.0D, (double)(-var10), 0.0D, 0.0D);
-		var12.addVertexWithUV((double)(-var10), -100.0D, (double)(-var10), 1.0D, 0.0D);
-		var12.draw();
+		float var11 = 30.0F;
+		String var12 = "/terrain/sun.png";
+		String var13 = "/terrain/moon.png";
+		if(var2) {
+			var12 = "/terrain/sun_n.png";
+			var13 = "/terrain/moon_n.png";
+		}
+
+		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.renderEngine.getTexture(var12));
+		var15.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+		var15.addVertexWithUV((double)(-var11), 100.0D, (double)(-var11), 0.0D, 0.0D);
+		var15.addVertexWithUV((double)var11, 100.0D, (double)(-var11), 1.0D, 0.0D);
+		var15.addVertexWithUV((double)var11, 100.0D, (double)var11, 1.0D, 1.0D);
+		var15.addVertexWithUV((double)(-var11), 100.0D, (double)var11, 0.0D, 1.0D);
+		var15.draw();
+		var11 = 20.0F;
+		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.renderEngine.getTexture(var13));
+		var15.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+		var15.addVertexWithUV((double)(-var11), -100.0D, (double)var11, 1.0D, 1.0D);
+		var15.addVertexWithUV((double)var11, -100.0D, (double)var11, 0.0D, 1.0D);
+		var15.addVertexWithUV((double)var11, -100.0D, (double)(-var11), 0.0D, 0.0D);
+		var15.addVertexWithUV((double)(-var11), -100.0D, (double)(-var11), 1.0D, 0.0D);
+		var15.draw();
 		GL11.glDisable(GL11.GL_TEXTURE_2D);
-		float var11 = this.theWorld.getStarBrightness(var1);
-		if(var11 > 0.0F) {
-			GL11.glColor4f(var11, var11, var11, var11);
+		float var14 = this.theWorld.getStarBrightness(var1);
+		if(var14 > 0.0F) {
+			GL11.glColor4f(var14, var14, var14, var14);
 			GL11.glCallList(this.starGLCallList);
 		}
 
@@ -621,7 +663,7 @@
 		GL11.glEnable(GL11.GL_ALPHA_TEST);
 		GL11.glEnable(GL11.GL_FOG);
 		GL11.glPopMatrix();
-		GL11.glColor3f(var3 * 0.2F + 0.04F, var4 * 0.2F + 0.04F, var5 * 0.6F + 0.1F);
+		GL11.glColor3f(var4 * 0.2F + 0.04F, var5 * 0.2F + 0.04F, var6 * 0.6F + 0.1F);
 		GL11.glDisable(GL11.GL_TEXTURE_2D);
 		GL11.glCallList(this.glSkyList2);
 		GL11.glEnable(GL11.GL_TEXTURE_2D);
@@ -629,7 +671,7 @@
 	}
 
 	public void renderClouds(float var1) {
-		if(this.mc.options.fancyGraphics) {
+		if(this.mc.options.fancyGraphics == 1) {
 			this.renderCloudsFancy(var1);
 		} else {
 			GL11.glDisable(GL11.GL_CULL_FACE);
@@ -638,7 +680,10 @@
 			int var4 = 256 / var3;
 			Tessellator var5 = Tessellator.instance;
 			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.renderEngine.getTexture("/clouds.png"));
-			GL11.glEnable(GL11.GL_BLEND);
+			if(this.mc.options.fancyGraphics == 1) {
+				GL11.glEnable(GL11.GL_BLEND);
+			}
+
 			GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 			Vec3D var6 = this.theWorld.getCloudColor(var1);
 			float var7 = (float)var6.xCoord;
@@ -681,6 +726,7 @@
 			GL11.glDisable(GL11.GL_BLEND);
 			GL11.glEnable(GL11.GL_CULL_FACE);
 		}
+
 	}
 
 	public void renderCloudsFancy(float var1) {
@@ -817,7 +863,11 @@
 	}
 
 	public boolean updateRenderers(EntityPlayer var1, boolean var2) {
-		Collections.sort(this.worldRenderersToUpdate, new RenderSorter(var1));
+		try {
+			Collections.sort(this.worldRenderersToUpdate, new RenderSorter(var1));
+		} catch (IllegalArgumentException var7) {
+		}
+
 		int var3 = this.worldRenderersToUpdate.size() - 1;
 		int var4 = this.worldRenderersToUpdate.size();
 
@@ -851,16 +901,16 @@
 		GL11.glEnable(GL11.GL_ALPHA_TEST);
 		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, (MathHelper.sin((float)System.currentTimeMillis() / 100.0F) * 0.2F + 0.4F) * 0.5F);
-		int var8;
+		int var7;
 		if(var3 == 0) {
 			if(this.damagePartialTime > 0.0F) {
 				GL11.glBlendFunc(GL11.GL_DST_COLOR, GL11.GL_SRC_COLOR);
-				int var7 = this.renderEngine.getTexture("/terrain.png");
-				GL11.glBindTexture(GL11.GL_TEXTURE_2D, var7);
+				int var8 = this.renderEngine.getTexture(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L);
+				GL11.glBindTexture(GL11.GL_TEXTURE_2D, var8);
 				GL11.glColor4f(1.0F, 1.0F, 1.0F, 0.5F);
 				GL11.glPushMatrix();
-				var8 = this.theWorld.getBlockId(var2.blockX, var2.blockY, var2.blockZ);
-				Block var9 = var8 > 0 ? Block.blocksList[var8] : null;
+				var7 = this.theWorld.getBlockId(var2.blockX, var2.blockY, var2.blockZ);
+				Block var9 = var7 > 0 ? Block.blocksList[var7] : null;
 				GL11.glDisable(GL11.GL_ALPHA_TEST);
 				GL11.glPolygonOffset(-3.0F, -3.0F);
 				GL11.glEnable(GL11.GL_POLYGON_OFFSET_FILL);
@@ -874,7 +924,7 @@
 					var9 = Block.stone;
 				}
 
-				this.globalRenderBlocks.renderBlockUsingTexture(var9, var2.blockX, var2.blockY, var2.blockZ, 240 + (int)(this.damagePartialTime * 10.0F));
+				this.globalRenderBlocks.renderBlockUsingTexture(var9, var2.blockX, var2.blockY, var2.blockZ, 496 + (int)(this.damagePartialTime * 10.0F));
 				var6.draw();
 				var6.setTranslationD(0.0D, 0.0D, 0.0D);
 				GL11.glPolygonOffset(0.0F, 0.0F);
@@ -887,8 +937,8 @@
 			GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 			float var16 = MathHelper.sin((float)System.currentTimeMillis() / 100.0F) * 0.2F + 0.8F;
 			GL11.glColor4f(var16, var16, var16, MathHelper.sin((float)System.currentTimeMillis() / 200.0F) * 0.2F + 0.5F);
-			var8 = this.renderEngine.getTexture("/terrain.png");
-			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var8);
+			var7 = this.renderEngine.getTexture(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L);
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var7);
 			int var17 = var2.blockX;
 			int var18 = var2.blockY;
 			int var11 = var2.blockZ;
@@ -948,21 +998,21 @@
 
 	private void drawOutlinedBoundingBox(AxisAlignedBB var1) {
 		Tessellator var2 = Tessellator.instance;
-		var2.startDrawing(3);
+		var2.func_10268_3G1to8O20W0e2IAxPtN5nia9CixxL69I1Ao9c5u7G19MPeSOCku1IA8g8iV3(3, true);
 		var2.addVertex(var1.minX, var1.minY, var1.minZ);
 		var2.addVertex(var1.maxX, var1.minY, var1.minZ);
 		var2.addVertex(var1.maxX, var1.minY, var1.maxZ);
 		var2.addVertex(var1.minX, var1.minY, var1.maxZ);
 		var2.addVertex(var1.minX, var1.minY, var1.minZ);
 		var2.draw();
-		var2.startDrawing(3);
+		var2.func_10268_3G1to8O20W0e2IAxPtN5nia9CixxL69I1Ao9c5u7G19MPeSOCku1IA8g8iV3(3, true);
 		var2.addVertex(var1.minX, var1.maxY, var1.minZ);
 		var2.addVertex(var1.maxX, var1.maxY, var1.minZ);
 		var2.addVertex(var1.maxX, var1.maxY, var1.maxZ);
 		var2.addVertex(var1.minX, var1.maxY, var1.maxZ);
 		var2.addVertex(var1.minX, var1.maxY, var1.minZ);
 		var2.draw();
-		var2.startDrawing(1);
+		var2.func_10268_3G1to8O20W0e2IAxPtN5nia9CixxL69I1Ao9c5u7G19MPeSOCku1IA8g8iV3(1, true);
 		var2.addVertex(var1.minX, var1.minY, var1.minZ);
 		var2.addVertex(var1.minX, var1.maxY, var1.minZ);
 		var2.addVertex(var1.maxX, var1.minY, var1.minZ);
@@ -1033,7 +1083,7 @@
 
 	public void playRecord(String var1, int var2, int var3, int var4) {
 		if(var1 != null) {
-			this.mc.ingameGUI.setRecordPlayingMessage("C418 - " + var1);
+			this.mc.ingameGUI.setRecordPlayingMessage("[5] - " + var1);
 		}
 
 		this.mc.sndManager.playStreaming(var1, (float)var2, (float)var3, (float)var4, 1.0F, 1.0F);
@@ -1056,29 +1106,43 @@
 		double var16 = this.mc.thePlayer.posY - var4;
 		double var18 = this.mc.thePlayer.posZ - var6;
 		if(var14 * var14 + var16 * var16 + var18 * var18 <= 256.0D) {
-			if(var1 == "bubble") {
+			if(Objects.equals(var1, "bubble")) {
 				this.mc.effectRenderer.addEffect(new EntityBubbleFX(this.theWorld, var2, var4, var6, var8, var10, var12));
-			} else if(var1 == "smoke") {
+			} else if(Objects.equals(var1, "smoke")) {
 				this.mc.effectRenderer.addEffect(new EntitySmokeFX(this.theWorld, var2, var4, var6));
-			} else if(var1 == "explode") {
+			} else if(Objects.equals(var1, "explode")) {
 				this.mc.effectRenderer.addEffect(new EntityExplodeFX(this.theWorld, var2, var4, var6, var8, var10, var12));
-			} else if(var1 == "flame") {
+			} else if(Objects.equals(var1, "flame")) {
 				this.mc.effectRenderer.addEffect(new EntityFlameFX(this.theWorld, var2, var4, var6, var8, var10, var12));
-			} else if(var1 == "lava") {
+			} else if(Objects.equals(var1, "lava")) {
 				this.mc.effectRenderer.addEffect(new EntityLavaFX(this.theWorld, var2, var4, var6));
-			} else if(var1 == "splash") {
+			} else if(Objects.equals(var1, "splash")) {
 				this.mc.effectRenderer.addEffect(new EntitySplashFX(this.theWorld, var2, var4, var6, var8, var10, var12));
-			} else if(var1 == "largesmoke") {
+			} else if(Objects.equals(var1, "largesmoke")) {
 				this.mc.effectRenderer.addEffect(new EntitySmokeFX(this.theWorld, var2, var4, var6, 2.5F));
-			} else if(var1 == "reddust") {
+			} else if(Objects.equals(var1, "reddust")) {
 				this.mc.effectRenderer.addEffect(new EntityReddustFX(this.theWorld, var2, var4, var6));
-			} else if(var1 == "snowballpoof") {
+			} else if(Objects.equals(var1, "snowballpoof")) {
 				this.mc.effectRenderer.addEffect(new EntitySlimeFX(this.theWorld, var2, var4, var6, Item.snowball));
-			} else if(var1 == "slime") {
+			} else if(Objects.equals(var1, "slime")) {
 				this.mc.effectRenderer.addEffect(new EntitySlimeFX(this.theWorld, var2, var4, var6, Item.slimeBall));
+			} else if(Objects.equals(var1, "snowflake1")) {
+				this.mc.effectRenderer.addEffect(new EntitySnowflakeFX(this.theWorld, var2, var4, var6, var8, var10, var12, 1));
+			} else if(Objects.equals(var1, "snowflake2")) {
+				this.mc.effectRenderer.addEffect(new EntitySnowflakeFX(this.theWorld, var2, var4, var6, var8, var10, var12, 2));
+			} else if(Objects.equals(var1, "snowflake3")) {
+				this.mc.effectRenderer.addEffect(new EntitySnowflakeFX(this.theWorld, var2, var4, var6, var8, var10, var12, 3));
+			} else if(Objects.equals(var1, "leaf")) {
+				this.mc.effectRenderer.addEffect(new EntityLeafFX(this.theWorld, var2, var4, var6, var8, var10, var12));
+			} else if(Objects.equals(var1, "snow1")) {
+				this.mc.effectRenderer.addEffect(new EntitySnowFX(this.theWorld, var2, var4, var6, var8, var10, var12, 1));
+			} else if(Objects.equals(var1, "snow2")) {
+				this.mc.effectRenderer.addEffect(new EntitySnowFX(this.theWorld, var2, var4, var6, var8, var10, var12, 3));
+			} else if(Objects.equals(var1, "snow3")) {
+				this.mc.effectRenderer.addEffect(new EntitySnowFX(this.theWorld, var2, var4, var6, var8, var10, var12, 2));
 			}
-
 		}
+
 	}
 
 	public void obtainEntitySkin(Entity var1) {
--- net/minecraft/src/ChunkProviderClient.java
+++ net/minecraft/src/ChunkProviderClient.java
@@ -8,8 +8,8 @@
 
 public class ChunkProviderClient implements IChunkProvider {
 	private Chunk blankChunk;
-	private Map chunkMapping = new HashMap();
-	private List chunkListing = new ArrayList();
+	private Map<ChunkCoordinates, Chunk> chunkMapping = new HashMap();
+	private List<Chunk> chunkListing = new ArrayList();
 	private World worldObj;
 
 	public ChunkProviderClient(World var1) {
--- /dev/null
+++ net/minecraft/src/CommandSvRainworld.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+class CommandSvRainworld extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8550_69340G25Hi89M32S77rESb9g92gKZ70kjloC01uXE4Nxb4au9BRuJyuSgIcY;
+    
+    CommandSvRainworld(final CommandManager abb) {
+        this.field_8550_69340G25Hi89M32S77rESb9g92gKZ70kjloC01uXE4Nxb4au9BRuJyuSgIcY = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (ScreenDebugMenu.dbg_conf_enableCheats) {
+            InputHandler.mc.isRaining = ((int)arr[0] == 1);
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "" + InputHandler.mc.isRaining;
+    }
+}
--- /dev/null
+++ net/minecraft/src/CommandRClouds.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandRClouds extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8587_9Vc78x0A476d3Y4485sPfDK3oQ9xS9Af56eY8ZAtlg0StaEzDsM9YnQfhSXv;
+    
+    CommandRClouds(final CommandManager abb) {
+        this.field_8587_9Vc78x0A476d3Y4485sPfDK3oQ9xS9Af56eY8ZAtlg0StaEzDsM9YnQfhSXv = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.field_7316_28K4517FJT58jN9ucjj3zE1jE410Ltpi330vH7516f19B006E4Wco5x4Y0w5 = ((int)arr[0] == 1);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return InputHandler.mc.field_7316_28K4517FJT58jN9ucjj3zE1jE410Ltpi330vH7516f19B006E4Wco5x4Y0w5 ? "1" : "0";
+    }
+}
--- /dev/null
+++ net/minecraft/src/CommandSummonSpearmaster.java
@@ -1,0 +1,26 @@
+package net.minecraft.src;
+
+class CommandSummonSpearmaster extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8591_339A4qLRes7yjtnR0McQPOs0jgTn4AOtwnVJAC4N5JVEgNFba5l2xCUHEAu6;
+    
+    CommandSummonSpearmaster(final CommandManager abb) {
+        this.field_8591_339A4qLRes7yjtnR0McQPOs0jgTn4AOtwnVJAC4N5JVEgNFba5l2xCUHEAu6 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        final EntitySpearmaster entity = new EntitySpearmaster(InputHandler.mc.theWorld);
+        entity.setPosition(InputHandler.mc.thePlayer.posX, InputHandler.mc.thePlayer.posY, InputHandler.mc.thePlayer.posZ);
+        InputHandler.mc.theWorld.spawnEntityInWorld(entity);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+    
+    @Override
+    public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+        return false;
+    }
+}
--- /dev/null
+++ net/minecraft/src/EnumVendingMachineUnknownClass2.java
@@ -1,0 +1,25 @@
+package net.minecraft.src;
+
+class EnumVendingMachineUnknownClass2 {
+	static final /* synthetic */ int[] field_11433_0M28h83Jjs6KmDr1Uir3SDVsJbhPQIEw8F28z7198re2u76qrhdn5SFW986a;
+
+    static {
+        field_11433_0M28h83Jjs6KmDr1Uir3SDVsJbhPQIEw8F28z7198re2u76qrhdn5SFW986a = new int[EnumVendingMachine.func_8621_1A4K8JmwLTo1bRceY319ILcN68Kz1yddU8DZWKk5CMsNwnMN4Amc8gdj0Pfv().length];
+        try {
+            EnumVendingMachineUnknownClass2.field_11433_0M28h83Jjs6KmDr1Uir3SDVsJbhPQIEw8F28z7198re2u76qrhdn5SFW986a[EnumVendingMachine.Armor.ordinal()] = 1;
+        }
+        catch (final NoSuchFieldError noSuchFieldError) {}
+        try {
+            EnumVendingMachineUnknownClass2.field_11433_0M28h83Jjs6KmDr1Uir3SDVsJbhPQIEw8F28z7198re2u76qrhdn5SFW986a[EnumVendingMachine.Dash.ordinal()] = 2;
+        }
+        catch (final NoSuchFieldError noSuchFieldError2) {}
+        try {
+            EnumVendingMachineUnknownClass2.field_11433_0M28h83Jjs6KmDr1Uir3SDVsJbhPQIEw8F28z7198re2u76qrhdn5SFW986a[EnumVendingMachine.HealthBoost.ordinal()] = 3;
+        }
+        catch (final NoSuchFieldError noSuchFieldError3) {}
+        try {
+            EnumVendingMachineUnknownClass2.field_11433_0M28h83Jjs6KmDr1Uir3SDVsJbhPQIEw8F28z7198re2u76qrhdn5SFW986a[EnumVendingMachine.QuickRevive.ordinal()] = 4;
+        }
+        catch (final NoSuchFieldError noSuchFieldError4) {}
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockSpongeOld.java
@@ -1,0 +1,35 @@
+package net.minecraft.src;
+
+public class BlockSpongeOld extends BlockOld {
+	protected BlockSpongeOld(int var1) {
+		super(var1, Material.sponge);
+		this.blockIndexInTexture = 48;
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		byte var5 = 2;
+
+		for(int var6 = var2 - var5; var6 <= var2 + var5; ++var6) {
+			for(int var7 = var3 - var5; var7 <= var3 + var5; ++var7) {
+				for(int var8 = var4 - var5; var8 <= var4 + var5; ++var8) {
+					if(var1.getBlockMaterial(var6, var7, var8) == Material.water) {
+					}
+				}
+			}
+		}
+
+	}
+
+	public void onBlockRemoval(World var1, int var2, int var3, int var4) {
+		byte var5 = 2;
+
+		for(int var6 = var2 - var5; var6 <= var2 + var5; ++var6) {
+			for(int var7 = var3 - var5; var7 <= var3 + var5; ++var7) {
+				for(int var8 = var4 - var5; var8 <= var4 + var5; ++var8) {
+					var1.notifyBlocksOfNeighborChange(var6, var7, var8, var1.getBlockId(var6, var7, var8));
+				}
+			}
+		}
+
+	}
+}
--- net/minecraft/src/BlockSnowBlock.java
+++ net/minecraft/src/BlockSnowBlock.java
@@ -17,6 +17,26 @@
 	}
 
 	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		double var6;
+		double var8;
+		if(var5.nextBoolean()) {
+			var6 = (var5.nextDouble() - 0.5D) * 0.1D;
+			var8 = (var5.nextDouble() - 0.5D) * 0.1D;
+			var1.spawnParticle("snow1", (double)var2, (double)var3, (double)var4, var6, 0.8D, var8);
+		}
+
+		if(var5.nextBoolean()) {
+			var6 = (var5.nextDouble() - 0.5D) * 0.2D;
+			var8 = (var5.nextDouble() - 0.5D) * 0.2D;
+			var1.spawnParticle("snow2", (double)var2, (double)var3, (double)var4, var6, 0.95D, var8);
+		}
+
+		if(var5.nextBoolean()) {
+			var6 = (var5.nextDouble() + 0.5D) * 0.2D;
+			var8 = (var5.nextDouble() - 0.5D) * 0.1D;
+			var1.spawnParticle("snow3", (double)var2, (double)var3, (double)var4, var6, 0.45D, var8);
+		}
+
 		if(var1.getSavedLightValue(EnumSkyBlock.Block, var2, var3, var4) > 11) {
 			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
 			var1.setBlockWithNotify(var2, var3, var4, 0);
--- net/minecraft/src/BlockStep.java
+++ net/minecraft/src/BlockStep.java
@@ -5,10 +5,10 @@
 public class BlockStep extends Block {
 	private boolean blockType;
 
-	public BlockStep(int var1, boolean var2) {
-		super(var1, 6, Material.rock);
-		this.blockType = var2;
-		if(!var2) {
+	public BlockStep(int var1, int var2, boolean var3) {
+		super(var1, var2, Material.rock);
+		this.blockType = var3;
+		if(!var3) {
 			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.5F, 1.0F);
 		}
 
@@ -16,7 +16,7 @@
 	}
 
 	public int getBlockTextureFromSide(int var1) {
-		return var1 <= 1 ? 6 : 5;
+		return var1 <= 1 ? this.blockIndexInTexture + 1 : this.blockIndexInTexture;
 	}
 
 	public boolean isOpaqueCube() {
@@ -26,6 +26,7 @@
 	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
 		if(this == Block.stairSingle) {
 		}
+
 	}
 
 	public void onBlockAdded(World var1, int var2, int var3, int var4) {
--- /dev/null
+++ net/minecraft/src/TileEntityFreezer.java
@@ -1,0 +1,207 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class TileEntityFreezer extends TileEntity implements IInventory {
+	private ItemStack[] field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL = new ItemStack[3];
+	private int field_9203_9DsyOa5HkkT6jQ43F0GMa5NEMtK7Q1OmE2Yni11hTF2z4ffl65F4CMA8oA3P = 0;
+	private int field_9202_5Q750NCoNQ4QOcYx2YMrIy37i735406nKPDgoDS2YwygIg66OV7Yhe8TKZs9 = 0;
+	private int field_9200_5eJgdqRh0pr0L3CiXP2m3Al74sS7oxaz08nP6xFhDouin6P1etVKUHQ95MNc = 0;
+	private boolean field_9201_194883f2bWi88923875Nj6Xddg1QFc1t06spr8oA22dMWkla9w1a31kj038W = false;
+
+	public int getSizeInventory() {
+		return this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL.length;
+	}
+
+	public ItemStack getStackInSlot(int var1) {
+		return this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[var1];
+	}
+
+	public void onInventoryChanged() {
+		super.onInventoryChanged();
+	}
+
+	public ItemStack decrStackSize(int var1, int var2) {
+		if(this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[var1] == null) {
+			return null;
+		} else {
+			ItemStack var3;
+			if(this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[var1].stackSize <= var2) {
+				var3 = this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[var1];
+				this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[var1] = null;
+			} else {
+				var3 = this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[var1].splitStack(var2);
+				if(this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[var1].stackSize == 0) {
+					this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[var1] = null;
+				}
+			}
+
+			return var3;
+		}
+	}
+
+	public void setInventorySlotContents(int var1, ItemStack var2) {
+		this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[var1] = var2;
+		if(var2 != null && var2.stackSize > this.getInventoryStackLimit()) {
+			var2.stackSize = this.getInventoryStackLimit();
+		}
+
+	}
+
+	public String getInvName() {
+		if(!this.field_9201_194883f2bWi88923875Nj6Xddg1QFc1t06spr8oA22dMWkla9w1a31kj038W) {
+			Random var1 = new Random(this.worldObj.randomSeed);
+			switch(var1.nextInt(2)) {
+			case 0:
+				this.field_9201_194883f2bWi88923875Nj6Xddg1QFc1t06spr8oA22dMWkla9w1a31kj038W = true;
+				this.worldObj.playSoundEffect((double)this.xCoord, (double)this.yCoord, (double)this.zCoord, "random.riff", 1.0F, 1.0F);
+				return "Weezer";
+			case 1:
+			default:
+				return "Freezer";
+			}
+		} else {
+			return "Freezer";
+		}
+	}
+
+	public int getInventoryStackLimit() {
+		return 64;
+	}
+
+	public void readFromNBT(NBTTagCompound var1) {
+		super.readFromNBT(var1);
+		NBTTagList var2 = var1.getTagList("Items");
+		this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL = new ItemStack[this.getSizeInventory()];
+
+		for(int var3 = 0; var3 < var2.tagCount(); ++var3) {
+			NBTTagCompound var4 = (NBTTagCompound)var2.tagAt(var3);
+			byte var5 = var4.getByte("Slot");
+			if(var5 >= 0 && var5 < this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL.length) {
+				this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[var5] = new ItemStack(var4);
+			}
+		}
+
+		this.field_9203_9DsyOa5HkkT6jQ43F0GMa5NEMtK7Q1OmE2Yni11hTF2z4ffl65F4CMA8oA3P = var1.getShort("CoolTime");
+		this.field_9200_5eJgdqRh0pr0L3CiXP2m3Al74sS7oxaz08nP6xFhDouin6P1etVKUHQ95MNc = var1.getShort("CookTime");
+		this.field_9203_9DsyOa5HkkT6jQ43F0GMa5NEMtK7Q1OmE2Yni11hTF2z4ffl65F4CMA8oA3P = this.func_9198_95PX0j323i64JFh83Uzc28t517Ze3t3S2QGrn76xXw1tXvyacv60i2b24g29(this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[1]);
+	}
+
+	public void writeToNBT(NBTTagCompound var1) {
+		super.writeToNBT(var1);
+		var1.setShort("CoolTime", (short)this.field_9203_9DsyOa5HkkT6jQ43F0GMa5NEMtK7Q1OmE2Yni11hTF2z4ffl65F4CMA8oA3P);
+		var1.setShort("CookTime", (short)this.field_9200_5eJgdqRh0pr0L3CiXP2m3Al74sS7oxaz08nP6xFhDouin6P1etVKUHQ95MNc);
+		NBTTagList var2 = new NBTTagList();
+
+		for(int var3 = 0; var3 < this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL.length; ++var3) {
+			if(this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[var3] != null) {
+				NBTTagCompound var4 = new NBTTagCompound();
+				var4.setByte("Slot", (byte)var3);
+				this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[var3].writeToNBT(var4);
+				var2.setTag(var4);
+			}
+		}
+
+		var1.setTag("Items", var2);
+	}
+
+	public int func_9196_2yn49xG0DV9O6VF0P1qm7UMj028vb0V5eFnBLE8I7MuPGZkJCIu8p5CCd419(int var1) {
+		return this.field_9200_5eJgdqRh0pr0L3CiXP2m3Al74sS7oxaz08nP6xFhDouin6P1etVKUHQ95MNc * var1 / 200;
+	}
+
+	public int func_9193_8K3yE6ppzNQ76NQ089sE2PTCN4IO7VE51KP2efHtAWP8817c1LUvD3Nk71lp(int var1) {
+		if(this.field_9202_5Q750NCoNQ4QOcYx2YMrIy37i735406nKPDgoDS2YwygIg66OV7Yhe8TKZs9 == 0) {
+			this.field_9202_5Q750NCoNQ4QOcYx2YMrIy37i735406nKPDgoDS2YwygIg66OV7Yhe8TKZs9 = 200;
+		}
+
+		return this.field_9203_9DsyOa5HkkT6jQ43F0GMa5NEMtK7Q1OmE2Yni11hTF2z4ffl65F4CMA8oA3P * var1 / this.field_9202_5Q750NCoNQ4QOcYx2YMrIy37i735406nKPDgoDS2YwygIg66OV7Yhe8TKZs9;
+	}
+
+	public boolean func_9197_4Lt75tb695q9O4k0y17SFzV9n7Yq11Xi9novcDHJOIuX10R7xs1NUsVqvCUE() {
+		return this.field_9203_9DsyOa5HkkT6jQ43F0GMa5NEMtK7Q1OmE2Yni11hTF2z4ffl65F4CMA8oA3P > 0;
+	}
+
+	public void updateEntity() {
+		boolean var1 = this.field_9203_9DsyOa5HkkT6jQ43F0GMa5NEMtK7Q1OmE2Yni11hTF2z4ffl65F4CMA8oA3P > 0;
+		boolean var2 = false;
+		if(this.field_9203_9DsyOa5HkkT6jQ43F0GMa5NEMtK7Q1OmE2Yni11hTF2z4ffl65F4CMA8oA3P > 0) {
+			--this.field_9203_9DsyOa5HkkT6jQ43F0GMa5NEMtK7Q1OmE2Yni11hTF2z4ffl65F4CMA8oA3P;
+		}
+
+		if(!this.worldObj.multiplayerWorld) {
+			if(this.field_9203_9DsyOa5HkkT6jQ43F0GMa5NEMtK7Q1OmE2Yni11hTF2z4ffl65F4CMA8oA3P == 0 && this.func_9199_8sVMpI173Gr93bNUtDA32LgqVM11Lkd3Am0AY08bs98dq1ZrK93v1K3rX7AI()) {
+				this.field_9202_5Q750NCoNQ4QOcYx2YMrIy37i735406nKPDgoDS2YwygIg66OV7Yhe8TKZs9 = this.field_9203_9DsyOa5HkkT6jQ43F0GMa5NEMtK7Q1OmE2Yni11hTF2z4ffl65F4CMA8oA3P = this.func_9198_95PX0j323i64JFh83Uzc28t517Ze3t3S2QGrn76xXw1tXvyacv60i2b24g29(this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[1]);
+				if(this.field_9203_9DsyOa5HkkT6jQ43F0GMa5NEMtK7Q1OmE2Yni11hTF2z4ffl65F4CMA8oA3P > 0) {
+					var2 = true;
+					if(this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[1] != null) {
+						--this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[1].stackSize;
+						if(this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[1].stackSize == 0) {
+							this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[1] = null;
+						}
+					}
+				}
+			}
+
+			if(this.func_9197_4Lt75tb695q9O4k0y17SFzV9n7Yq11Xi9novcDHJOIuX10R7xs1NUsVqvCUE() && this.func_9199_8sVMpI173Gr93bNUtDA32LgqVM11Lkd3Am0AY08bs98dq1ZrK93v1K3rX7AI()) {
+				++this.field_9200_5eJgdqRh0pr0L3CiXP2m3Al74sS7oxaz08nP6xFhDouin6P1etVKUHQ95MNc;
+				if(this.field_9200_5eJgdqRh0pr0L3CiXP2m3Al74sS7oxaz08nP6xFhDouin6P1etVKUHQ95MNc == 200) {
+					this.field_9200_5eJgdqRh0pr0L3CiXP2m3Al74sS7oxaz08nP6xFhDouin6P1etVKUHQ95MNc = 0;
+					this.func_9194_2z7G5aH2Mx8WYIrdml3qvtPPymI0PQ1L06r9oRdUel5F87O0NlO6XEuSIXG6();
+					var2 = true;
+				}
+			} else {
+				this.field_9200_5eJgdqRh0pr0L3CiXP2m3Al74sS7oxaz08nP6xFhDouin6P1etVKUHQ95MNc = 0;
+			}
+
+			if(var1 != this.field_9203_9DsyOa5HkkT6jQ43F0GMa5NEMtK7Q1OmE2Yni11hTF2z4ffl65F4CMA8oA3P > 0) {
+				var2 = true;
+				BlockFreezer.func_8372_4aw431LgXdi1L48jU4ZL07b193KS25bZ8cuY42CDd63ZfoFcG05V1VC53UbG(this.field_9203_9DsyOa5HkkT6jQ43F0GMa5NEMtK7Q1OmE2Yni11hTF2z4ffl65F4CMA8oA3P > 0, this.worldObj, this.xCoord, this.yCoord, this.zCoord);
+			}
+		}
+
+		if(var2) {
+			this.onInventoryChanged();
+		}
+
+	}
+
+	private boolean func_9199_8sVMpI173Gr93bNUtDA32LgqVM11Lkd3Am0AY08bs98dq1ZrK93v1K3rX7AI() {
+		if(this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[0] == null) {
+			return false;
+		} else {
+			int var1 = this.func_9195_828SDjP8x3bo5NF3X5P820G4eo2H479POmKSfE22qAp7TYeo5qNV8i4x4917(this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[0].getItem().shiftedIndex);
+			return var1 < 0 ? false : (this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[2] == null ? true : (this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[2].itemID != var1 ? false : (this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[2].stackSize < this.getInventoryStackLimit() && this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[2].stackSize < this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[2].getMaxStackSize() ? true : this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[2].stackSize < Item.itemsList[var1].getItemStackLimit())));
+		}
+	}
+
+	public void func_9194_2z7G5aH2Mx8WYIrdml3qvtPPymI0PQ1L06r9oRdUel5F87O0NlO6XEuSIXG6() {
+		if(this.func_9199_8sVMpI173Gr93bNUtDA32LgqVM11Lkd3Am0AY08bs98dq1ZrK93v1K3rX7AI()) {
+			int var1 = this.func_9195_828SDjP8x3bo5NF3X5P820G4eo2H479POmKSfE22qAp7TYeo5qNV8i4x4917(this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[0].getItem().shiftedIndex);
+			if(this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[2] == null) {
+				this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[2] = new ItemStack(var1, 1);
+			} else if(this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[2].itemID == var1) {
+				++this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[2].stackSize;
+			}
+
+			--this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[0].stackSize;
+			if(this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[0].stackSize <= 0) {
+				this.field_9204_3C28K8aekQEj9fOdHzG5bK1Yb5903ud9122StXLlQ1JVFdovP5rfUT6d0fEL[0] = null;
+			}
+		}
+
+	}
+
+	private int func_9195_828SDjP8x3bo5NF3X5P820G4eo2H479POmKSfE22qAp7TYeo5qNV8i4x4917(int var1) {
+		int var2 = ExtCraftingRecipes.newFreezing(var1);
+		return var2 != -1 ? var2 : (var1 == Item.bucketWater.shiftedIndex ? Block.ice.blockID : (var1 == Block.blockSnow.blockID ? ExtBlocks.SnowBrick.blockID : ModLoader.func_11262_7FVgHb825Vh87dj7a9W610VePPyEK11H4311BN3gSLe6J6831pq3l6tzy2RP(var1)));
+	}
+
+	private int func_9198_95PX0j323i64JFh83Uzc28t517Ze3t3S2QGrn76xXw1tXvyacv60i2b24g29(ItemStack var1) {
+		if(var1 == null) {
+			return 0;
+		} else {
+			int var2 = var1.getItem().shiftedIndex;
+			return var2 < Short.MAX_VALUE && var2 == ExtItems.essence.shiftedIndex ? 50 : (var2 == ExtBlocks.EssenceBlock.blockID ? 450 : (var2 == ExtItems.FrigidBits.shiftedIndex ? 55 : ModLoader.func_11266_52C0KnY47qid74yQYI1zgrLooP36NM650B3JgHP47o3Od0glFmCykL7fJoj8(var2)));
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/ModelBlockBenchImport.java
@@ -1,0 +1,47 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+public class ModelBlockBenchImport extends ModelBase {
+	public EntityModel<?> BBModel;
+	List<ModelRenderer> subModels;
+
+	public ModelBlockBenchImport(LayerDefinition var1) {
+		this(var1, 64, 64);
+	}
+
+	public ModelBlockBenchImport(LayerDefinition var1, int var2, int var3) {
+		this.subModels = new ArrayList();
+		Iterator var4 = var1.msh.rootElem.addedParts.iterator();
+
+		while(var4.hasNext()) {
+			PartDefinitionElement var5 = (PartDefinitionElement)var4.next();
+			List var6 = var5.cubeList.cubeList;
+
+			ModelRenderer var9;
+			for(Iterator var7 = var6.iterator(); var7.hasNext(); this.subModels.add(var9)) {
+				CubeListElement var8 = (CubeListElement)var7.next();
+				var9 = new ModelRenderer(var8.texOffX, var8.texOffY);
+				var9.addBox(var5.offset.x + var8.offsetX, var5.offset.y + var8.offsetY, var5.offset.z + var8.offsetZ, var8.widthX, var8.height, var8.widthZ, 0.0F, var2, var3);
+				var9.setRotationPoint(0.0F, 0.0F, 0.0F);
+				if(var8.mirror) {
+					var9.mirror = true;
+				}
+			}
+		}
+
+	}
+
+	public void render(float var1, float var2, float var3, float var4, float var5, float var6) {
+		this.setRotationAngles(var1, var2, var3, var4, var5, var6);
+		Iterator var7 = this.subModels.iterator();
+
+		while(var7.hasNext()) {
+			ModelRenderer var8 = (ModelRenderer)var7.next();
+			var8.render(var6);
+		}
+
+	}
+}
--- net/minecraft/src/BlockSign.java
+++ net/minecraft/src/BlockSign.java
@@ -3,10 +3,10 @@
 import java.util.Random;
 
 public class BlockSign extends BlockContainer {
-	private Class signEntityClass;
+	private Class<? extends TileEntity> signEntityClass;
 	private boolean isFreestanding;
 
-	protected BlockSign(int var1, Class var2, boolean var3) {
+	protected BlockSign(int var1, Class<? extends TileEntity> var2, boolean var3) {
 		super(var1, Material.wood);
 		this.isFreestanding = var3;
 		this.blockIndexInTexture = 4;
@@ -49,8 +49,8 @@
 			if(var5 == 5) {
 				this.setBlockBounds(0.0F, var6, var8, var10, var7, var9);
 			}
-
 		}
+
 	}
 
 	public int getRenderType() {
@@ -67,7 +67,7 @@
 
 	protected TileEntity getBlockEntity() {
 		try {
-			return (TileEntity)this.signEntityClass.newInstance();
+			return (TileEntity)this.signEntityClass.getDeclaredConstructor(new Class[0]).newInstance(new Object[0]);
 		} catch (Exception var2) {
 			throw new RuntimeException(var2);
 		}
--- /dev/null
+++ net/minecraft/src/Visuals1606.java
@@ -1,0 +1,38 @@
+package net.minecraft.src;
+
+class Visuals1606 extends Visuals {
+    final /* synthetic */ VisualsManager field_10082_6XolX6gx6dnHCFT8ppcs1g02QS188k2UK94VPNV1sAt98an6017ylGnyL7C6;
+    
+    Visuals1606(final VisualsManager la) {
+        this.field_10082_6XolX6gx6dnHCFT8ppcs1g02QS188k2UK94VPNV1sAt98an6017ylGnyL7C6 = la;
+    }
+    
+    @Override
+    public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+        return "/unl/2f22baab-269c-4e76-b0b0-3650e05bacd6.xAL";
+    }
+    
+    @Override
+    public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(final Object... arr) {
+        if (arr[0] instanceof FreerunMap2 && (long)arr[1] <= 760L) {
+            this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+            return true;
+        }
+        return false;
+    }
+    
+    @Override
+    public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+        return "unlock--v1606tex";
+    }
+    
+    @Override
+    public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+        return "16.06 Visuals";
+    }
+    
+    @Override
+    public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+        return "Finish SKYLINE in 38 seconds or less";
+    }
+}
--- /dev/null
+++ net/minecraft/src/HubNetworkUnknownClass2.java
@@ -1,0 +1,28 @@
+package net.minecraft.src;
+
+import org.lwjgl.Sys;
+
+public class HubNetworkUnknownClass2 {
+	private final String field_10781_3v7ndO5yb9ansYexDL4fxwy5mWZktFy119Sl4NEu5QDVTkbRNgRxc841m839;
+	private final String field_10780_67mXPYFik3OTr8SeShGuGzfg76v3NAXeKwLh50xLxNQ28ek7909h1w9u94f4;
+	private long field_10782_75TGcvKSLT516Q9C20KFCRJ406eSchkZn8yC5f8Bmq1vGJRK9VqQ18471WUE;
+	private static final String field_10779_09541M42bK51376rwb7S30878b836Z4xCL135sCXLEPUdAArS7Xd13i9Z1dA = "CL_00001134";
+
+	public HubNetworkUnknownClass2(String var1, String var2) {
+		this.field_10781_3v7ndO5yb9ansYexDL4fxwy5mWZktFy119Sl4NEu5QDVTkbRNgRxc841m839 = var1;
+		this.field_10780_67mXPYFik3OTr8SeShGuGzfg76v3NAXeKwLh50xLxNQ28ek7909h1w9u94f4 = var2;
+		this.field_10782_75TGcvKSLT516Q9C20KFCRJ406eSchkZn8yC5f8Bmq1vGJRK9VqQ18471WUE = Sys.getTime() * 1000L / Sys.getTimerResolution();
+	}
+
+	public String func_10776_14j4o7tstXfcx8M08j0S432QGMi71fs96gKoEmhHMLVQz247V7670r00eOR9() {
+		return this.field_10781_3v7ndO5yb9ansYexDL4fxwy5mWZktFy119Sl4NEu5QDVTkbRNgRxc841m839;
+	}
+
+	public String func_10778_8gM7pIBK1I76SCft4Dhm813bD256bmhlhOrb5h1mMYJ3i7FFAMb9LSfc7uw2() {
+		return this.field_10780_67mXPYFik3OTr8SeShGuGzfg76v3NAXeKwLh50xLxNQ28ek7909h1w9u94f4;
+	}
+
+	public void func_10777_04W88zu2434rH5KSiplYwuX5J2HRsV2SgDIT38qBV8XVz0wUb2NY5BCpH2aW() {
+		this.field_10782_75TGcvKSLT516Q9C20KFCRJ406eSchkZn8yC5f8Bmq1vGJRK9VqQ18471WUE = Sys.getTime() * 1000L / Sys.getTimerResolution();
+	}
+}
--- /dev/null
+++ net/minecraft/src/WorldGenMyconUnknownClass2.java
@@ -1,0 +1,23 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class WorldGenMyconUnknownClass2 extends WorldGenMyconUnknownClass {
+	public final int field_9993_785AXtdFOhFXlosQ8xZ2sw8bZ29jM2mtdTSsO0C4Xzi6GtMPb6IYjy73g2C9;
+
+	public WorldGenMyconUnknownClass2(double var1, double var3, EnumWorldGenerator var5, int var6) {
+		super(var1, var3, var5);
+		this.field_9993_785AXtdFOhFXlosQ8xZ2sw8bZ29jM2mtdTSsO0C4Xzi6GtMPb6IYjy73g2C9 = var6;
+	}
+
+	public boolean func_9982_84EZjwmgfVpn5brk96GnU3Eit81Yc6Xxm4lTPdVKUWyphKxl38Uh4dg8VF3T(Random var1, World var2, int var3, int var4) {
+		return true;
+	}
+
+	public void func_9977_0C8cKMHZGkSA22DGYztFv5857z0O34nRumUNAm59CrgBrFnKV5bq3guXEYB5(Random var1) {
+	}
+
+	public int func_9983_8WfOXonA2bRS7hUpHd7sbe7k20yqj7N6OH13GX3XXy71V13Eva115wQwe47C() {
+		return this.field_9993_785AXtdFOhFXlosQ8xZ2sw8bZ29jM2mtdTSsO0C4Xzi6GtMPb6IYjy73g2C9;
+	}
+}
--- /dev/null
+++ net/minecraft/src/EntityOtherPlayerMPUnknownClass2.java
@@ -1,0 +1,15 @@
+package net.minecraft.src;
+
+public class EntityOtherPlayerMPUnknownClass2 extends EntityOtherPlayerMPUnknownClass {
+	public EntityOtherPlayerMPUnknownClass2(World var1, HandlerPlayDemo var2) {
+		super(var1, var2);
+	}
+
+	public boolean attackEntityFrom(Entity var1, int var2) {
+		if(var1 instanceof EntityPlayerZombieModeClient) {
+			InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10947_9AnvDYT3tcTSS9Cz1srJAOWX62V5Gqyb2ubqdcRVgP303Y40U8Ke6dGNVv08.func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(new Object[]{this.worldObj, this});
+		}
+
+		return super.attackEntityFrom(var1, var2);
+	}
+}
--- /dev/null
+++ net/minecraft/src/SkinManager.java
@@ -1,0 +1,16 @@
+package net.minecraft.src;
+
+import java.util.HashMap;
+
+public class SkinManager {
+	public static boolean conf_cacheSkins = false;
+	public static HashMap<String, ImageHolder> skins = new HashMap();
+
+	public static ImageHolder getSkin(String var0) {
+		return (ImageHolder)skins.get(var0);
+	}
+
+	public static void addSkin(String var0, ImageHolder var1) {
+		skins.put(var0, var1);
+	}
+}
--- /dev/null
+++ net/minecraft/src/WorldGenHouseBigExterior.java
@@ -1,0 +1,144 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class WorldGenHouseBigExterior implements IHouseBig {
+	private final NoiseGeneratorPerlin field_9905_8Z0gt9AA75q8CM88X89mbX3Dz5aB2z41i0d99Yt647gvdI24EnEdelrhUcYk;
+
+	public WorldGenHouseBigExterior(Random var1) {
+		this.field_9905_8Z0gt9AA75q8CM88X89mbX3Dz5aB2z41i0d99Yt647gvdI24EnEdelrhUcYk = new NoiseGeneratorPerlin(var1);
+	}
+
+	public float func_9883_913vTZx6no47397W6wG95Q5uB254nJBZ27osnW242XcA9M93Alb1ry5oPyVe() {
+		return 1.1F;
+	}
+
+	private boolean func_9903_4U50uH23DKVbS4kT87Vx337cToyT7Yl2565CFwbWiX722T2c06GWkwRh9w0p(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockId(var2, var3, var4);
+		return var5 == Block.grass.blockID || var5 == Block.sand.blockID;
+	}
+
+	private void func_9904_0v3vQbv70s7YdkWhB90cyD0W15xlZnAZbEe99E98x929tVR1C60D5w9fMoh3(World var1, Block var2, int var3, int var4) {
+		for(int var5 = 128; var5 > 40; --var5) {
+			if(this.func_9903_4U50uH23DKVbS4kT87Vx337cToyT7Yl2565CFwbWiX722T2c06GWkwRh9w0p(var1, var3, var5, var4)) {
+				var1.setBlock(var3, var5, var4, var2.blockID);
+				if(var1.getBlockId(var3, var5 + 1, var4) == ExtBlocks.Grass.blockID) {
+					var1.setBlock(var3, var5 + 1, var4, 0);
+				}
+
+				return;
+			}
+		}
+
+	}
+
+	public void func_9884_61qP7q8deV5ospnX8sW5XUMxMcV5ssOU68863452kQ9H403L5ScR3DEa98qO(World var1, int var2, int var3, WorldGenHouseBigInterior var4) {
+		if(!var1.sandCovered) {
+			int[] var5 = new int[]{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
+			int var6;
+			int var7;
+			if(var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2 + 1, var3)) {
+				for(var6 = 9; var6 <= 15; ++var6) {
+					for(var7 = 4; var7 <= 11; ++var7) {
+						var5[var6 + var7 * 16] = 1;
+					}
+				}
+			}
+
+			if(var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2 - 1, var3)) {
+				for(var6 = 0; var6 <= 6; ++var6) {
+					for(var7 = 4; var7 <= 11; ++var7) {
+						var5[var6 + var7 * 16] = 1;
+					}
+				}
+			}
+
+			if(var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2, var3 + 1)) {
+				for(var6 = 4; var6 <= 11; ++var6) {
+					for(var7 = 9; var7 <= 15; ++var7) {
+						var5[var6 + var7 * 16] = 1;
+					}
+				}
+			}
+
+			if(var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2, var3 - 1)) {
+				for(var6 = 4; var6 <= 11; ++var6) {
+					for(var7 = 0; var7 <= 6; ++var7) {
+						var5[var6 + var7 * 16] = 1;
+					}
+				}
+			}
+
+			if(var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2 + 1, var3) && var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2 + 1, var3 + 1) && var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2, var3 + 1)) {
+				for(var6 = 12; var6 <= 15; ++var6) {
+					for(var7 = 12; var7 <= 15; ++var7) {
+						var5[var6 + var7 * 16] = 1;
+					}
+				}
+			} else if(var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2 + 1, var3) && var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2, var3 + 1)) {
+				var5[204] = 1;
+
+				for(var6 = 1; var6 <= 2; ++var6) {
+					var5[12 + var6 + 192] = 1;
+					var5[12 + (12 + var6) * 16] = 1;
+				}
+			}
+
+			if(var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2 - 1, var3) && var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2 - 1, var3 - 1) && var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2, var3 - 1)) {
+				for(var6 = 0; var6 <= 3; ++var6) {
+					for(var7 = 0; var7 <= 3; ++var7) {
+						var5[var6 + var7 * 16] = 1;
+					}
+				}
+			} else if(var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2 - 1, var3) && var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2, var3 - 1)) {
+				var5[51] = 1;
+
+				for(var6 = 1; var6 <= 2; ++var6) {
+					var5[3 - var6 + 48] = 1;
+					var5[3 + (3 - var6) * 16] = 1;
+				}
+			}
+
+			if(var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2 - 1, var3) && var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2 - 1, var3 + 1) && var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2, var3 + 1)) {
+				for(var6 = 0; var6 <= 3; ++var6) {
+					for(var7 = 12; var7 <= 15; ++var7) {
+						var5[var6 + var7 * 16] = 1;
+					}
+				}
+			} else if(var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2 - 1, var3) && var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2, var3 + 1)) {
+				var5[195] = 1;
+
+				for(var6 = 1; var6 <= 2; ++var6) {
+					var5[3 - var6 + 192] = 1;
+					var5[3 + (12 + var6) * 16] = 1;
+				}
+			}
+
+			if(var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2 + 1, var3) && var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2 + 1, var3 - 1) && var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2, var3 - 1)) {
+				for(var6 = 12; var6 <= 15; ++var6) {
+					for(var7 = 0; var7 <= 3; ++var7) {
+						var5[var6 + var7 * 16] = 1;
+					}
+				}
+			} else if(var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2 + 1, var3) && var4.func_10701_1lauh9bG6pSmwZgFm5Y1FVXU7kmZ47i860Qhf5XR6gXkIbUPfjJbjs82g9pF(WorldGenHouseBigExterior.class, var2, var3 - 1)) {
+				var5[60] = 1;
+
+				for(var6 = 1; var6 <= 2; ++var6) {
+					var5[12 + var6 + 48] = 1;
+					var5[12 + (3 - var6) * 16] = 1;
+				}
+			}
+
+			for(var6 = 0; var6 < 16; ++var6) {
+				for(var7 = 0; var7 < 16; ++var7) {
+					if(var5[var6 + var7 * 16] == 1) {
+						int var8 = var2 * 16 + var6;
+						int var9 = var3 * 16 + var7;
+						this.func_9904_0v3vQbv70s7YdkWhB90cyD0W15xlZnAZbEe99E98x929tVR1C60D5w9fMoh3(var1, ExtBlocks.GrassPathway, var8, var9);
+					}
+				}
+			}
+
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/FreerunMap0.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+import java.io.File;
+
+public class FreerunMap0 extends FreerunWorld {
+	private NamedLoc[] field_7521_6n3NlSSJq6vY57yhZwTz9hsqp4CJzws0TWaFS5Na9dDi80o633mX0A4CTsA3 = new NamedLoc[]{new NamedLoc(254, 79, 805, "spawn"), new NamedLoc(253, 78, 802, 255, 80, 800, "checkpoint1"), new NamedLoc(247, 78, 796, 248, 80, 794, "checkpoint2"), new NamedLoc(237, 80, 792, 240, 78, 796, "checkpoint3"), new NamedLoc(236, 78, 772, 240, 80, 769, "end")};
+
+	public FreerunMap0(File var1, String var2) {
+		super(var1, var2);
+	}
+
+	public NamedLoc[] getCheckpoints() {
+		return this.field_7521_6n3NlSSJq6vY57yhZwTz9hsqp4CJzws0TWaFS5Na9dDi80o633mX0A4CTsA3;
+	}
+
+	public int getResetY(long var1, long var3) {
+		return 70;
+	}
+}
--- /dev/null
+++ net/minecraft/src/InputHandler.java
@@ -1,0 +1,454 @@
+package net.minecraft.src;
+
+import javax.swing.JFrame;
+import net.minecraft.client.Minecraft;
+import org.lwjgl.input.Controller;
+import org.lwjgl.input.Controllers;
+import org.lwjgl.input.Keyboard;
+import org.lwjgl.input.Mouse;
+
+public class InputHandler {
+	public static Controller[] gamepads;
+	public static Controller activeGamepad;
+	public static int EventDWheel = -1;
+	public static int EventButton = -1;
+	public static int EventDX = -1;
+	public static int EventDY = -1;
+	public static int EventX = -1;
+	public static int EventY = -1;
+	public static boolean axis4isMinusOne = true;
+	public static boolean EventButtonState = false;
+	public static boolean pushedGamepadEvent = false;
+	public static boolean LastR1Press = false;
+	public static boolean LastL1Press = false;
+	public static boolean LastR2Press = false;
+	public static boolean LastL2Press = false;
+	public static float lastPovX = 0.0F;
+	public static boolean LastStartPress = false;
+	public static Minecraft mc = null;
+	public static double lastX;
+	public static double lastY;
+	public static double lastZ;
+	private static float lastRotX;
+	private static float lastRotZ;
+	public static int field_9745_4T40SjxPM7Zgd16lkH4wCJeyIT159Gxi3Bz0h3trX928I683iCL1KZ3iK4Q6 = 5;
+	public static boolean field_9754_4VMSW6xe5SZ0hnMWIVXt175Sa5kZ1iW17ox2TBOWV03d9D2Q9gjrn84NFpEW = true;
+	public static boolean field_9759_4OT0vPMcJ68s5EU822c0Y9Asw74Su111s3rRCw8OSGMsYM8lx153p73RBtj3 = false;
+	public static int KBEventKey = -1;
+	public static boolean KBEventKeyState = false;
+	public static boolean LastAPress = false;
+	public static HandlerPlayDemoUnknownClass field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL;
+	public static boolean field_9756_3t1caBu1CS15veqc01ypG4DqCRJ91Rw6b5pITOU21064uqb1k1F7E6SIPrCO;
+	public static HandlerSetCheckpointUnknownClass field_9755_40jW6A12nU5Bx0XJVnftRWc1g168MkyD0Hs1G3PDx769g8p92eI4LUrp43lZ;
+	public static EntityPlayer field_9770_2V6p0RtqpP2jB5MbKC4kOM794OwxL5Fl82SMBE30e16wdk1Iemyry4Fh4Dt6;
+	public static CommandUnknownClass2 field_9762_13b094Tf1L4SIIdMjzuGRVNKUye5S3b1UW4n91PWtlu671hyg2Xm4HF09472;
+	public static boolean field_9779_6L2AjVH6gw8056zihozm77JmQUTXqOrE1uDO6Vg89ya4G15P6hdhcgFA2b54 = false;
+	public static HubGenerator field_9752_355wmY48IHXo4X15Nw8J2797kt8a2JjrE949L4LB3rZ7GlzANVC7qILKIMg7;
+	public static boolean field_9773_5g1w13Pa04fL8eJVgVG1BaKXg53SRg94jer4k01UfO1ym359A84apZ9QFroa = false;
+
+	public static void UpdateAxis3() {
+		if(activeGamepad != null && axis4isMinusOne && (double)activeGamepad.getAxisValue(4) != -1.0D) {
+			axis4isMinusOne = false;
+		}
+
+	}
+
+	public static void Initialize(Minecraft var0) {
+		mc = var0;
+		field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL = new HandlerPlayDemoUnknownClass(mc.thePlayer);
+	}
+
+	public static void CaptureGamepad() {
+		activeGamepad = null;
+		Controllers.poll();
+		ExtLogger.i("CaptureGamepad()");
+		gamepads = new Controller[Controllers.getControllerCount()];
+
+		for(int var0 = 0; var0 != gamepads.length; ++var0) {
+			try {
+				gamepads[var0] = Controllers.getController(var0);
+				if(!gamepads[var0].getName().toLowerCase().contains("controller (")) {
+					gamepads[var0] = null;
+				} else {
+					activeGamepad = gamepads[var0];
+					ExtLogger.i("Captured: " + gamepads[var0].getName());
+				}
+			} catch (NullPointerException var2) {
+			}
+		}
+
+		if(activeGamepad != null) {
+			(new AdaptiveHandler()).start();
+		}
+
+	}
+
+	public static void InputR1() {
+		LastR1Press = activeGamepad.isButtonPressed(5);
+		KBEventKey = mc.options.keyBindSneak.keyCode;
+		KBEventKeyState = LastR1Press;
+	}
+
+	public static void InputR2() {
+		LastR2Press = activeGamepad.getAxisValue(4) < -0.4F;
+		EventDWheel = 0;
+		EventDX = 0;
+		EventDY = 0;
+		EventButton = 0;
+		EventButtonState = LastR2Press;
+		pushedGamepadEvent = true;
+	}
+
+	public static void InputL1() {
+		LastL1Press = activeGamepad.isButtonPressed(4);
+		InputDash();
+	}
+
+	public static void InputL2() {
+		LastL2Press = activeGamepad.getAxisValue(4) > 0.4F;
+		EventDWheel = 0;
+		EventDX = 0;
+		EventDY = 0;
+		EventButton = 1;
+		EventButtonState = LastL2Press;
+		pushedGamepadEvent = true;
+	}
+
+	public static void InputA() {
+		LastAPress = activeGamepad.isButtonPressed(0);
+		KBEventKey = 57;
+		KBEventKeyState = LastAPress;
+		if(KBEventKeyState) {
+			InputLongJump();
+		}
+
+	}
+
+	public static void InputStart() {
+		LastStartPress = activeGamepad.isButtonPressed(7);
+		KBEventKey = 1;
+		KBEventKeyState = LastStartPress;
+	}
+
+	public static void InputPOV(float var0) {
+		if(var0 != lastPovX) {
+			lastPovX = var0;
+			EventDWheel = (int)lastPovX * -1;
+			EventDX = 0;
+			EventDY = 0;
+			EventButton = -1;
+			EventButtonState = false;
+			pushedGamepadEvent = true;
+		}
+
+	}
+
+	public static double AngleFromXY(double var0, double var2) {
+		return Math.atan2(var2, var0);
+	}
+
+	public static void func_9731_77p0YGv1177Knqf4BoaZJZtKYSF1XhKlrRcOX37byxi27qaPy3zlbIqzre5d() {
+		if(field_9756_3t1caBu1CS15veqc01ypG4DqCRJ91Rw6b5pITOU21064uqb1k1F7E6SIPrCO) {
+			HandlerSetCheckpointUnknownClass2 var0 = field_9755_40jW6A12nU5Bx0XJVnftRWc1g168MkyD0Hs1G3PDx769g8p92eI4LUrp43lZ.func_10088_1Srn1NO8VIG8sE99Jtv77t920erw08KpSDq49OsE7m757020A0FU0vxsGMvt(field_9770_2V6p0RtqpP2jB5MbKC4kOM794OwxL5Fl82SMBE30e16wdk1Iemyry4Fh4Dt6);
+			ExtLogger.i("warping to " + field_9755_40jW6A12nU5Bx0XJVnftRWc1g168MkyD0Hs1G3PDx769g8p92eI4LUrp43lZ.field_10090_5v540C4sk8Ke8C3282XWygqtOknzxtF0r5Vd1NaB0QsfgW9I05m88Cq1r6Iv);
+			mc.thePlayer.setPosition(var0.field_12186_05n216qDAUZ2kE810Fqi64V6niu79vbRckyfaVY9Fqw11STapU0px02uapMx, var0.field_12188_9uq1C9Zys0Le7aJhWE0BeKD05T9G0hDuv6srjUYYK3RiBek01P8Ij69s3Es9, var0.field_12187_7Kg8S2j0ooT9LE62UmIi8A7J7Y4sM22qj00KYKP97u5583AOirdarRO6WOFv);
+			field_9756_3t1caBu1CS15veqc01ypG4DqCRJ91Rw6b5pITOU21064uqb1k1F7E6SIPrCO = false;
+		}
+
+	}
+
+	public static void func_9723_0s53bwug7AIh7wok927NkfC491OTVIE9w7Ze8dTW9h9VOaC74c60EkiUo90l() {
+		if(mc.thePlayer != null && !IsKeyDown(29) && ScreenDebugMenu.dbg_conf_enableCheats) {
+			mc.displayGuiScreen(new ScreenItemCheat(mc));
+		}
+
+	}
+
+	public static void KBEventInject() {
+		if(mc.currentScreen == null) {
+			if(KBEventKeyState) {
+				field_9762_13b094Tf1L4SIIdMjzuGRVNKUye5S3b1UW4n91PWtlu671hyg2Xm4HF09472.field_11839_52dbdXLg3Wx81i6gW4IYo1Bq32Pz2QIUyPjWOA1i0OJRd00ZX7w649E5B4JD.func_12063_192DBW3rWeWbZy26TpK5rt1Ak36TmR6Dn90BSf6Z5oNr7Q5wXRqyph3fgy8S(KBEventKey);
+			}
+
+			if(KBEventKey == 26) {
+				lastX = mc.thePlayer.posX;
+				lastY = mc.thePlayer.posY;
+				lastZ = mc.thePlayer.posZ;
+				lastRotX = mc.thePlayer.rotationYaw;
+				lastRotZ = mc.thePlayer.rotationPitch;
+			} else if(KBEventKey == 27 && ScreenDebugMenu.dbg_conf_enableCheats) {
+				mc.thePlayer.posX = lastX;
+				mc.thePlayer.posY = lastY;
+				mc.thePlayer.posZ = lastZ;
+				mc.thePlayer.rotationYaw = lastRotX;
+				mc.thePlayer.rotationPitch = lastRotZ;
+				mc.thePlayer.setPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ);
+			} else if(KBEventKey == mc.options.field_11782_8zR7w7M0dCz141EgrKPTyPG0x4be73DnUpm3v39wugYiB00oRfG9xEdOaiDU.keyCode && KBEventKeyState) {
+				InputDash();
+			} else if(KBEventKey == mc.options.keyBindJump.keyCode && KBEventKeyState) {
+				InputLongJump();
+			} else if(KBEventKey == 88 && KBEventKeyState) {
+				if(IsKeyDown(197) && IsKeyDown(70) && IsKeyDown(210)) {
+					InputDebug();
+				}
+			} else if(KBEventKey == 67 && KBEventKeyState) {
+				InputOpenMinimap();
+			} else if(KBEventKey == 66 && KBEventKeyState) {
+				func_9739_622A5blvtPoHHz5VR76rGel7x34BJ4gRTMt6IDY6JNt14M63oyUWlPVUZ7t3();
+			} else if(KBEventKey == mc.options.field_11752_0y3J835DcYjJCi69MHQUHF4jrOLdQx1Z31fkAA08625s5FJMK989j345coLD.keyCode && KBEventKeyState) {
+				field_9779_6L2AjVH6gw8056zihozm77JmQUTXqOrE1uDO6Vg89ya4G15P6hdhcgFA2b54 = true;
+			} else if(KBEventKeyState && mc != null && mc.theWorld != null) {
+				mc.ingameGUI.weditOverlay.HandleInput(KBEventKey);
+				mc.ingameGUI.field_7857_396h94sQK9uQ2QzF3CPHcBI8PjZcuA3l6190hgCj0ajJ4Eol6RQ1P4LMA2OO.func_11161_878G68i7RK8cnFGe82HhotKR54i4CTCOFqIav8G900cC11I38cT2xY88v3Z8(KBEventKey);
+			}
+
+		}
+	}
+
+	public static void InputDebug() {
+		mc.displayGuiScreen(new ScreenDebugMenu(mc));
+	}
+
+	private static void func_9742_2o9RL652gi74i5n1MTohqR8k0Xe5FLHssZ5UTZa84pnf511ub05P70MN2ap8() {
+		if(KBEventKeyState) {
+			if(KBEventKey == 14) {
+				if(field_9762_13b094Tf1L4SIIdMjzuGRVNKUye5S3b1UW4n91PWtlu671hyg2Xm4HF09472.field_11839_52dbdXLg3Wx81i6gW4IYo1Bq32Pz2QIUyPjWOA1i0OJRd00ZX7w649E5B4JD.field_12074_59H713eWwMqHt2BkXfmtU7Gw1Ed2yJ84RRj5r8Os9hXCRrICXE2XfeV2i7Jm.length() > 0) {
+					field_9762_13b094Tf1L4SIIdMjzuGRVNKUye5S3b1UW4n91PWtlu671hyg2Xm4HF09472.field_11839_52dbdXLg3Wx81i6gW4IYo1Bq32Pz2QIUyPjWOA1i0OJRd00ZX7w649E5B4JD.field_12074_59H713eWwMqHt2BkXfmtU7Gw1Ed2yJ84RRj5r8Os9hXCRrICXE2XfeV2i7Jm = field_9762_13b094Tf1L4SIIdMjzuGRVNKUye5S3b1UW4n91PWtlu671hyg2Xm4HF09472.field_11839_52dbdXLg3Wx81i6gW4IYo1Bq32Pz2QIUyPjWOA1i0OJRd00ZX7w649E5B4JD.field_12074_59H713eWwMqHt2BkXfmtU7Gw1Ed2yJ84RRj5r8Os9hXCRrICXE2XfeV2i7Jm.substring(0, field_9762_13b094Tf1L4SIIdMjzuGRVNKUye5S3b1UW4n91PWtlu671hyg2Xm4HF09472.field_11839_52dbdXLg3Wx81i6gW4IYo1Bq32Pz2QIUyPjWOA1i0OJRd00ZX7w649E5B4JD.field_12074_59H713eWwMqHt2BkXfmtU7Gw1Ed2yJ84RRj5r8Os9hXCRrICXE2XfeV2i7Jm.length() - 1);
+				}
+			} else if(KBEventKey != mc.options.field_11752_0y3J835DcYjJCi69MHQUHF4jrOLdQx1Z31fkAA08625s5FJMK989j345coLD.keyCode && KBEventKey != 1) {
+				if(KBEventKey == 28) {
+					field_9762_13b094Tf1L4SIIdMjzuGRVNKUye5S3b1UW4n91PWtlu671hyg2Xm4HF09472.field_11839_52dbdXLg3Wx81i6gW4IYo1Bq32Pz2QIUyPjWOA1i0OJRd00ZX7w649E5B4JD.func_12062_0t842hU0v5526eutHbG997y2Nv04t2F2gXt64U0tN25Eoja8W099icp26853(field_9762_13b094Tf1L4SIIdMjzuGRVNKUye5S3b1UW4n91PWtlu671hyg2Xm4HF09472.field_11839_52dbdXLg3Wx81i6gW4IYo1Bq32Pz2QIUyPjWOA1i0OJRd00ZX7w649E5B4JD.field_12074_59H713eWwMqHt2BkXfmtU7Gw1Ed2yJ84RRj5r8Os9hXCRrICXE2XfeV2i7Jm);
+				} else {
+					char var0 = Keyboard.getEventCharacter();
+					field_9762_13b094Tf1L4SIIdMjzuGRVNKUye5S3b1UW4n91PWtlu671hyg2Xm4HF09472.field_11839_52dbdXLg3Wx81i6gW4IYo1Bq32Pz2QIUyPjWOA1i0OJRd00ZX7w649E5B4JD.func_12066_3G1KR5Cj4Oc1UWW3nROs4iPJarSF633X338OpM3D85527J342we9BwJP271F(var0, KBEventKey);
+				}
+			} else {
+				field_9779_6L2AjVH6gw8056zihozm77JmQUTXqOrE1uDO6Vg89ya4G15P6hdhcgFA2b54 = false;
+				field_9762_13b094Tf1L4SIIdMjzuGRVNKUye5S3b1UW4n91PWtlu671hyg2Xm4HF09472.field_11839_52dbdXLg3Wx81i6gW4IYo1Bq32Pz2QIUyPjWOA1i0OJRd00ZX7w649E5B4JD.field_12074_59H713eWwMqHt2BkXfmtU7Gw1Ed2yJ84RRj5r8Os9hXCRrICXE2XfeV2i7Jm = "";
+			}
+		}
+
+	}
+
+	public static void func_9734_9Uj534ugdHP7u4PJfw2FnKZ82q9nF8ro9tfj5p0ywqqPTB3a2I67xd2543E3(int var0, int var1) {
+		if(field_9762_13b094Tf1L4SIIdMjzuGRVNKUye5S3b1UW4n91PWtlu671hyg2Xm4HF09472 == null) {
+			field_9762_13b094Tf1L4SIIdMjzuGRVNKUye5S3b1UW4n91PWtlu671hyg2Xm4HF09472 = new CommandUnknownClass2(mc);
+		}
+
+		if(field_9779_6L2AjVH6gw8056zihozm77JmQUTXqOrE1uDO6Vg89ya4G15P6hdhcgFA2b54) {
+			field_9762_13b094Tf1L4SIIdMjzuGRVNKUye5S3b1UW4n91PWtlu671hyg2Xm4HF09472.func_11838_1mCSTFiXQZMQRgg38E4l2za0x1wQzUIIZQAoUEJ051l3R9Cc00Qmou4eQ5Yf(var0, var1);
+		}
+
+	}
+
+	public static void func_9739_622A5blvtPoHHz5VR76rGel7x34BJ4gRTMt6IDY6JNt14M63oyUWlPVUZ7t3() {
+	}
+
+	public static void InputOpenMinimap() {
+		JFrame var0 = new JFrame("Map");
+		CanvasIngameIsomPreview var1 = new CanvasIngameIsomPreview(mc.theWorld);
+		var0.add(var1);
+		var0.setSize(640, 480);
+		var0.setVisible(true);
+		var1.start();
+	}
+
+	public static void InputLongJump() {
+		if(mc.thePlayer != null) {
+			if(mc.thePlayer instanceof EntityPlayerZombieModeClient && !((EntityPlayerZombieModeClient)mc.thePlayer).field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.field_8690_9ajSfayfVo92Z68A5B2rvo13codHKhrUqqH2LRN64r7Ac066r0ki4BD2lC9w) {
+				return;
+			}
+
+			if(mc.thePlayer.isSneaking() && mc.thePlayer.dashTimer == 0) {
+				mc.theWorld.playSoundEffect(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, "ext.marior", 1.0F, 1.0F);
+				double var0 = AngleFromXY((double)mc.thePlayer.movementInput.moveForward, (double)(-mc.thePlayer.movementInput.moveStrafe)) / Math.PI * 180.0D;
+				double var2 = Math.toRadians((double)(mc.thePlayer.rotationYaw + 90.0F) + var0);
+				double var4 = Math.cos(var2);
+				double var6 = Math.sin(var2);
+				mc.thePlayer.dashTimer = 10;
+				mc.thePlayer.motionX += var4;
+				mc.thePlayer.motionY += 0.5D;
+				mc.thePlayer.motionZ += var6;
+			}
+		}
+
+	}
+
+	public static void InputDash() {
+		if(mc.thePlayer != null) {
+			if(mc.thePlayer instanceof EntityPlayerZombieModeClient && !((EntityPlayerZombieModeClient)mc.thePlayer).field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.field_8690_9ajSfayfVo92Z68A5B2rvo13codHKhrUqqH2LRN64r7Ac066r0ki4BD2lC9w) {
+				return;
+			}
+
+			if(mc.thePlayer.dashTimer == 0) {
+				mc.theWorld.playSoundEffect(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, "ext.dash", 0.6F, 1.0F);
+				mc.thePlayer.dashTimer = 30;
+				mc.thePlayer.motionX *= 10.0D;
+				mc.thePlayer.motionY *= 3.0D;
+				mc.thePlayer.motionZ *= 10.0D;
+			} else if(mc.thePlayer.dashTimer < 15) {
+				mc.theWorld.playSoundEffect(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, "ext.marior", 1.0F, 1.0F);
+				double var0 = AngleFromXY((double)mc.thePlayer.movementInput.moveForward, (double)(-mc.thePlayer.movementInput.moveStrafe)) / Math.PI * 180.0D;
+				double var2 = Math.toRadians((double)(mc.thePlayer.rotationYaw + 90.0F) + var0);
+				double var4 = Math.cos(var2);
+				double var6 = Math.sin(var2);
+				mc.thePlayer.dashTimer = 30;
+				mc.thePlayer.motionX += var4;
+				mc.thePlayer.motionY += 0.2D;
+				mc.thePlayer.motionZ += var6;
+			}
+		}
+
+	}
+
+	public static boolean NextKBEvent() {
+		func_9731_77p0YGv1177Knqf4BoaZJZtKYSF1XhKlrRcOX37byxi27qaPy3zlbIqzre5d();
+		if(!field_9779_6L2AjVH6gw8056zihozm77JmQUTXqOrE1uDO6Vg89ya4G15P6hdhcgFA2b54) {
+			if(Keyboard.next()) {
+				KBEventKey = Keyboard.getEventKey();
+				KBEventKeyState = Keyboard.getEventKeyState();
+				KBEventInject();
+				return true;
+			} else {
+				if(activeGamepad != null) {
+					if(LastAPress != activeGamepad.isButtonPressed(0)) {
+						InputA();
+						return true;
+					}
+
+					if(LastStartPress != activeGamepad.isButtonPressed(7)) {
+						InputStart();
+						return true;
+					}
+
+					if(LastL1Press != activeGamepad.isButtonPressed(4)) {
+						InputL1();
+						return true;
+					}
+
+					if(LastR1Press != activeGamepad.isButtonPressed(5)) {
+						InputR1();
+						return true;
+					}
+				}
+
+				return false;
+			}
+		} else {
+			while(Keyboard.next()) {
+				KBEventKey = Keyboard.getEventKey();
+				KBEventKeyState = Keyboard.getEventKeyState();
+				func_9742_2o9RL652gi74i5n1MTohqR8k0Xe5FLHssZ5UTZa84pnf511ub05P70MN2ap8();
+			}
+
+			return false;
+		}
+	}
+
+	public static boolean NextEvent() {
+		UpdateAxis3();
+		if(Mouse.next()) {
+			EventDWheel = Mouse.getEventDWheel();
+			EventButton = Mouse.getEventButton();
+			EventDX = Mouse.getEventDX();
+			EventDY = Mouse.getEventDY();
+			EventButtonState = Mouse.getEventButtonState();
+			EventX = Mouse.getEventX();
+			EventY = Mouse.getEventY();
+			pushedGamepadEvent = false;
+			return true;
+		} else {
+			if(activeGamepad != null) {
+				float var0 = activeGamepad.getPovX();
+				if(LastR2Press != activeGamepad.getAxisValue(4) < -0.4F) {
+					InputR2();
+					return true;
+				}
+
+				if(LastL2Press != activeGamepad.getAxisValue(4) > 0.4F) {
+					InputL2();
+					return true;
+				}
+
+				if(var0 != lastPovX) {
+					InputPOV(var0);
+					return true;
+				}
+			}
+
+			return false;
+		}
+	}
+
+	public static int GetDWheel() {
+		return EventDWheel;
+	}
+
+	public static int GetEventButton() {
+		return EventButton;
+	}
+
+	public static int GetEventDX() {
+		return EventDX;
+	}
+
+	public static int GetEventDY() {
+		return EventDY;
+	}
+
+	public static int GetEventX() {
+		return EventX;
+	}
+
+	public static int GetEventY() {
+		return EventY;
+	}
+
+	public static boolean GetEventButtonState() {
+		return EventButtonState;
+	}
+
+	public static int GetKBEventKey() {
+		return KBEventKey;
+	}
+
+	public static boolean GetKBEventKeyState() {
+		return KBEventKeyState;
+	}
+
+	public static boolean IsKeyDown(int var0) {
+		boolean var1 = false;
+		if(var0 == 57 && activeGamepad != null) {
+			var1 = activeGamepad.isButtonPressed(0);
+		} else if(var0 == mc.options.keyBindSneak.keyCode && activeGamepad != null) {
+			var1 = activeGamepad.isButtonPressed(8);
+		}
+
+		return Keyboard.isKeyDown(var0) || var1;
+	}
+
+	public static boolean InputMouseAction(int var0) {
+		if(activeGamepad != null && !axis4isMinusOne) {
+			boolean var10000;
+			if(!Mouse.isButtonDown(var0)) {
+				label37: {
+					if(var0 == 0) {
+						if(activeGamepad.getAxisValue(4) < -0.4F) {
+							break label37;
+						}
+					} else if(var0 == 1 && activeGamepad.getAxisValue(4) > 0.4F) {
+						break label37;
+					}
+
+					var10000 = false;
+					return var10000;
+				}
+			}
+
+			var10000 = true;
+			return var10000;
+		} else {
+			return Mouse.isButtonDown(var0);
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandSummonSpaceman.java
@@ -1,0 +1,26 @@
+package net.minecraft.src;
+
+class CommandSummonSpaceman extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8595_0zlax8512JtOXmZe790mIXLeoD5zNWi7C66Q351TD8C8sJ3RKH0Nz7U735Ci;
+    
+    CommandSummonSpaceman(final CommandManager abb) {
+        this.field_8595_0zlax8512JtOXmZe790mIXLeoD5zNWi7C66Q351TD8C8sJ3RKH0Nz7U735Ci = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        final EntityAmoung entity = new EntityAmoung(InputHandler.mc.theWorld);
+        entity.setPosition(InputHandler.mc.thePlayer.posX, InputHandler.mc.thePlayer.posY, InputHandler.mc.thePlayer.posZ);
+        InputHandler.mc.theWorld.spawnEntityInWorld(entity);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+    
+    @Override
+    public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+        return false;
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockHubDoor.java
@@ -1,0 +1,28 @@
+package net.minecraft.src;
+
+import java.io.File;
+import net.minecraft.client.Minecraft;
+
+public class BlockHubDoor extends BlockDoor {
+	public RemoteWorld field_8267_5y4erMy0TRR5fvcr9itUOrI3851rltorfXv3dSnzgy67I9f830Ch80l1Iyh6 = null;
+
+	public BlockHubDoor(int var1, Material var2) {
+		super(var1, var2);
+		this.blockIndexInTexture = 178;
+	}
+
+	public void onEntityCollidedWithBlock(World var1, int var2, int var3, int var4, Entity var5) {
+		if(var5 instanceof EntityPlayer && this.field_8267_5y4erMy0TRR5fvcr9itUOrI3851rltorfXv3dSnzgy67I9f830Ch80l1Iyh6 == null) {
+			InputHandler.mc.changeWorld1((World)null);
+			System.gc();
+			HubWorld var6 = new HubWorld(new File(Minecraft.getMinecraftDir(), "saves"), var1.randomSeed);
+			InputHandler.mc.changeWorld(var6, "Joining Hub");
+			InputHandler.mc.setIngameFocus();
+		}
+
+	}
+
+	public int getBlockTextureFromSideAndMetadata(int var1, int var2) {
+		return this.blockIndexInTexture;
+	}
+}
--- net/minecraft/src/EffectRenderer.java
+++ net/minecraft/src/EffectRenderer.java
@@ -7,7 +7,7 @@
 
 public class EffectRenderer {
 	protected World worldObj;
-	private List[] fxLayers = new List[4];
+	private List<EntityFX>[] fxLayers = new List[4];
 	private RenderEngine renderEngine;
 	private Random rand = new Random();
 
@@ -60,7 +60,7 @@
 				}
 
 				if(var8 == 1) {
-					var9 = this.renderEngine.getTexture("/terrain.png");
+					var9 = this.renderEngine.getTexture(WorldUnknownClass2.func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass2.field_9796_62Ccm2XAR6JqSDTgV762x61j971DNgsIrMhaXZxPs0fQnBC7ymR2l1v1V22X));
 				}
 
 				if(var8 == 2) {
@@ -91,8 +91,8 @@
 				EntityFX var6 = (EntityFX)this.fxLayers[var3].get(var5);
 				var6.renderParticle(var4, var2, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
 			}
-
 		}
+
 	}
 
 	public void clearEffects(World var1) {
@@ -120,8 +120,8 @@
 					}
 				}
 			}
-
 		}
+
 	}
 
 	public void addBlockHitEffects(int var1, int var2, int var3, int var4) {
@@ -158,6 +158,7 @@
 
 			this.addEffect((new EntityDiggingFX(this.worldObj, var8, var10, var12, 0.0D, 0.0D, 0.0D, var6)).multiplyVelocity(0.2F).multipleParticleScaleBy(0.6F));
 		}
+
 	}
 
 	public String getStatistics() {
--- net/minecraft/src/GuiEditSign.java
+++ net/minecraft/src/GuiEditSign.java
@@ -28,13 +28,11 @@
 	}
 
 	protected void actionPerformed(GuiButton var1) {
-		if(var1.enabled) {
-			if(var1.id == 0) {
-				this.entitySign.onInventoryChanged();
-				this.mc.displayGuiScreen((GuiScreen)null);
-			}
-
+		if(var1.enabled && var1.id == 0) {
+			this.entitySign.onInventoryChanged();
+			this.mc.displayGuiScreen((GuiScreen)null);
 		}
+
 	}
 
 	protected void keyTyped(char var1, int var2) {
--- /dev/null
+++ net/minecraft/src/ChunkProviderPopulateOperation.java
@@ -1,0 +1,15 @@
+package net.minecraft.src;
+
+public class ChunkProviderPopulateOperation {
+	public ChunkProviderGenerate caller;
+	public IChunkProvider a;
+	public int x;
+	public int y;
+
+	public ChunkProviderPopulateOperation(ChunkProviderGenerate var1, IChunkProvider var2, int var3, int var4) {
+		this.caller = var1;
+		this.a = var2;
+		this.x = var3;
+		this.y = var4;
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandMcRenderdistance.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandMcRenderdistance extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8574_0C78yFnbdwQ2JXE9123HohJ9Nvj5u0fKGH82rg3b6V9tsXIQYugOhBZ02T11;
+    
+    CommandMcRenderdistance(final CommandManager abb) {
+        this.field_8574_0C78yFnbdwQ2JXE9123HohJ9Nvj5u0fKGH82rg3b6V9tsXIQYugOhBZ02T11 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.options.renderDistance = Math.max(Math.min((int)arr[0], 5), 0);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "" + InputHandler.mc.options.renderDistance;
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockSignOld.java
@@ -1,0 +1,113 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockSignOld extends BlockContainerOld {
+	private Class signEntityClass;
+	private boolean isFreestanding;
+
+	protected BlockSignOld(int var1, Class var2, boolean var3) {
+		super(var1, Material.wood);
+		this.isFreestanding = var3;
+		this.blockIndexInTexture = 4;
+		this.signEntityClass = var2;
+		float var4 = 0.25F;
+		float var5 = 1.0F;
+		this.setBlockBounds(0.5F - var4, 0.0F, 0.5F - var4, 0.5F + var4, var5, 0.5F + var4);
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public AxisAlignedBB getSelectedBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		this.setBlockBoundsBasedOnState(var1, var2, var3, var4);
+		return super.getSelectedBoundingBoxFromPool(var1, var2, var3, var4);
+	}
+
+	public void setBlockBoundsBasedOnState(IBlockAccess var1, int var2, int var3, int var4) {
+		if(!this.isFreestanding) {
+			int var5 = var1.getBlockMetadata(var2, var3, var4);
+			float var6 = 9.0F / 32.0F;
+			float var7 = 25.0F / 32.0F;
+			float var8 = 0.0F;
+			float var9 = 1.0F;
+			float var10 = 2.0F / 16.0F;
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
+			if(var5 == 2) {
+				this.setBlockBounds(var8, var6, 1.0F - var10, var9, var7, 1.0F);
+			}
+
+			if(var5 == 3) {
+				this.setBlockBounds(var8, var6, 0.0F, var9, var7, var10);
+			}
+
+			if(var5 == 4) {
+				this.setBlockBounds(1.0F - var10, var6, var8, 1.0F, var7, var9);
+			}
+
+			if(var5 == 5) {
+				this.setBlockBounds(0.0F, var6, var8, var10, var7, var9);
+			}
+
+		}
+	}
+
+	public int getRenderType() {
+		return -1;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	protected TileEntity getBlockEntity() {
+		try {
+			return (TileEntity)this.signEntityClass.newInstance();
+		} catch (Exception var2) {
+			throw new RuntimeException(var2);
+		}
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return Item.sign.shiftedIndex;
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		boolean var6 = false;
+		if(this.isFreestanding) {
+			if(!var1.getBlockMaterial(var2, var3 - 1, var4).isSolid()) {
+				var6 = true;
+			}
+		} else {
+			int var7 = var1.getBlockMetadata(var2, var3, var4);
+			var6 = true;
+			if(var7 == 2 && var1.getBlockMaterial(var2, var3, var4 + 1).isSolid()) {
+				var6 = false;
+			}
+
+			if(var7 == 3 && var1.getBlockMaterial(var2, var3, var4 - 1).isSolid()) {
+				var6 = false;
+			}
+
+			if(var7 == 4 && var1.getBlockMaterial(var2 + 1, var3, var4).isSolid()) {
+				var6 = false;
+			}
+
+			if(var7 == 5 && var1.getBlockMaterial(var2 - 1, var3, var4).isSolid()) {
+				var6 = false;
+			}
+		}
+
+		if(var6) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		}
+
+		super.onNeighborBlockChange(var1, var2, var3, var4, var5);
+	}
+}
--- /dev/null
+++ net/minecraft/src/MeshDefinition.java
@@ -1,0 +1,9 @@
+package net.minecraft.src;
+
+public class MeshDefinition {
+	public PartDefinition rootElem = new PartDefinition();
+
+	public PartDefinition getRoot() {
+		return this.rootElem;
+	}
+}
--- /dev/null
+++ net/minecraft/src/GuiPickPainting.java
@@ -1,0 +1,65 @@
+package net.minecraft.src;
+
+import java.util.List;
+
+public class GuiPickPainting extends GuiScreen {
+	private List<EnumArt> possibleArt;
+	private EntityPainting target;
+	int page = 0;
+	final int buttons_per_page = 6;
+
+	public GuiPickPainting(List<EnumArt> var1, EntityPainting var2) {
+		this.possibleArt = var1;
+		this.target = var2;
+	}
+
+	public void initGui() {
+		this.controlList.clear();
+		this.controlList.add(new GuiButton(-727, this.width / 2 - 100, this.height / 4 * 3, "Random"));
+		this.controlList.add(new ButtonSel(-2, this.width / 2 - 170, this.height / 4 + 60, "<<"));
+		this.controlList.add(new ButtonSel(-3, this.width / 2 + 120, this.height / 4 + 60, ">>"));
+
+		for(int var1 = 0; var1 != 6; ++var1) {
+			int var2 = this.page * 6 + var1;
+			if(var2 >= this.possibleArt.size()) {
+				break;
+			}
+
+			this.controlList.add(new GuiButton(var2, this.width / 2 - 100, this.height / 6 + 20 * var1, ((EnumArt)this.possibleArt.get(var2)).title));
+		}
+
+		if(this.page == 0) {
+			((GuiButton)this.controlList.get(1)).enabled = false;
+		}
+
+		if(this.page * 6 + 6 > this.possibleArt.size()) {
+			((GuiButton)this.controlList.get(2)).enabled = false;
+		}
+
+	}
+
+	protected void actionPerformed(GuiButton var1) {
+		if(var1.enabled) {
+			if(var1.id == -2) {
+				--this.page;
+				this.initGui();
+			} else if(var1.id == -3) {
+				++this.page;
+				this.initGui();
+			} else if(var1.id == -727) {
+				this.target.setArt((EnumArt)this.possibleArt.get(this.target.rand.nextInt(this.possibleArt.size())));
+				this.mc.displayGuiScreen((GuiScreen)null);
+			} else {
+				this.target.setArt((EnumArt)this.possibleArt.get(var1.id));
+				this.mc.displayGuiScreen((GuiScreen)null);
+			}
+		}
+
+	}
+
+	public void drawScreen(int var1, int var2, float var3) {
+		this.drawDefaultBackground();
+		this.drawCenteredString(this.fontRenderer, "Choose a painting...", this.width / 2, 20, 16777215);
+		super.drawScreen(var1, var2, var3);
+	}
+}
--- net/minecraft/src/TileEntityRenderer.java
+++ net/minecraft/src/TileEntityRenderer.java
@@ -6,7 +6,7 @@
 import org.lwjgl.opengl.GL11;
 
 public class TileEntityRenderer {
-	private Map specialRendererMap = new HashMap();
+	private Map<Class<? extends TileEntity>, TileEntitySpecialRenderer> specialRendererMap = new HashMap();
 	public static TileEntityRenderer instance = new TileEntityRenderer();
 	private FontRenderer fontRenderer;
 	public static double staticPlayerX;
@@ -28,7 +28,7 @@
 
 		while(var1.hasNext()) {
 			TileEntitySpecialRenderer var2 = (TileEntitySpecialRenderer)var1.next();
-			var2.setTileEntityRenderer(this);
+			var2.setTileEntityRendere(this);
 		}
 
 	}
--- /dev/null
+++ net/minecraft/src/PartDefinition.java
@@ -1,0 +1,13 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class PartDefinition {
+	public List<PartDefinitionElement> addedParts = new ArrayList();
+
+	public PartDefinition addOrReplaceChild(String var1, CubeListBuilder var2, PartPose var3) {
+		this.addedParts.add(new PartDefinitionElement(var1, var2, var3));
+		return this;
+	}
+}
--- /dev/null
+++ net/minecraft/src/MinecraftUnknownClass2.java
@@ -1,0 +1,101 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import net.minecraft.client.Minecraft;
+
+public class MinecraftUnknownClass2 {
+	private List<VisualsUnknownClass> field_11693_4tBW66xCB0x1JjOWv8N7q31cA99X2BV8Oo7379U05654SRVtu47fAGXkAEr7 = new ArrayList();
+	private VisualsUnknownClass field_11695_4S9Fcx7F5VFCS7yhEnk6Dc66E2tz3hr1zH66H63HoQoVMPzQKbQjjTf4G3yU = new VisualsStandart();
+	public VisualsUnknownClass field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0;
+	private Map<String, VisualsUnknownClass> field_11694_67TYzK6LmS5ZMds6GbPYvQmB5hd0vbBeP5deiIFI2CXuH6f9z6Xv6sxTr2aP = new HashMap();
+	private Minecraft field_11690_6QM8vJ001toaiyxf21S7JLzeO9PLM6f7rxtDmJXw5YTY3HX6SGVJ7c5SYvBv;
+	private File field_11691_1LT0h6BV4jbX1ewcpKP7f4TZ4Iq0UX0EinvNzR1Oyni5X5y6mx38E3Bw7nQ0;
+	private String field_11689_053IXqAbrKdiiQ1FWvZ6pIn1X3S9253Jico77fGQ5cVOe61X51S491K1psNo;
+
+	public MinecraftUnknownClass2(Minecraft var1, File var2) {
+		this.field_11690_6QM8vJ001toaiyxf21S7JLzeO9PLM6f7rxtDmJXw5YTY3HX6SGVJ7c5SYvBv = var1;
+		this.field_11691_1LT0h6BV4jbX1ewcpKP7f4TZ4Iq0UX0EinvNzR1Oyni5X5y6mx38E3Bw7nQ0 = new File(var2, "texturepacks");
+		if(!this.field_11691_1LT0h6BV4jbX1ewcpKP7f4TZ4Iq0UX0EinvNzR1Oyni5X5y6mx38E3Bw7nQ0.exists()) {
+			this.field_11691_1LT0h6BV4jbX1ewcpKP7f4TZ4Iq0UX0EinvNzR1Oyni5X5y6mx38E3Bw7nQ0.mkdirs();
+		}
+
+		this.field_11689_053IXqAbrKdiiQ1FWvZ6pIn1X3S9253Jico77fGQ5cVOe61X51S491K1psNo = var1.options.field_11745_5cq9PhUp8LROyS1A2CPi3fyxFgmWABb66h72hAC97w32G831S582rHP9QCBn;
+		this.func_11686_0yeI5h1X9b94d4uci2eCaLdWyK789MtuRcX9xpiRS1xz81zEG9z4urygJcFf();
+		this.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0.func_10159_18ZVjfTsTKfB80BRv0MI82mIW7A5kEEVTFqM41a5Y88G06sn7n695Ml9CX4X();
+	}
+
+	public boolean func_11688_663pI2OKy99iPX44ZQP69Mfd981246V7m8L66atRipA89ks12No52IZGw4mJ(VisualsUnknownClass var1) {
+		if(var1 == this.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0) {
+			return false;
+		} else {
+			this.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0.func_10163_2I13qZ82Olr559q81461XqI7EvNeguYD7GAG7DmGJf04Fu44f4iY1Oy7WJME();
+			this.field_11689_053IXqAbrKdiiQ1FWvZ6pIn1X3S9253Jico77fGQ5cVOe61X51S491K1psNo = var1.field_10166_0Sg7537VnLZ7du5FsLln7EYJ7tLG9LfdbFsVG53zuLLa94D21JXk6aie9tls;
+			this.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0 = var1;
+			this.field_11690_6QM8vJ001toaiyxf21S7JLzeO9PLM6f7rxtDmJXw5YTY3HX6SGVJ7c5SYvBv.options.field_11745_5cq9PhUp8LROyS1A2CPi3fyxFgmWABb66h72hAC97w32G831S582rHP9QCBn = this.field_11689_053IXqAbrKdiiQ1FWvZ6pIn1X3S9253Jico77fGQ5cVOe61X51S491K1psNo;
+			this.field_11690_6QM8vJ001toaiyxf21S7JLzeO9PLM6f7rxtDmJXw5YTY3HX6SGVJ7c5SYvBv.options.saveOptions();
+			this.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0.func_10159_18ZVjfTsTKfB80BRv0MI82mIW7A5kEEVTFqM41a5Y88G06sn7n695Ml9CX4X();
+			return true;
+		}
+	}
+
+	public void func_11686_0yeI5h1X9b94d4uci2eCaLdWyK789MtuRcX9xpiRS1xz81zEG9z4urygJcFf() {
+		ArrayList var1 = new ArrayList();
+		this.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0 = null;
+		var1.add(this.field_11695_4S9Fcx7F5VFCS7yhEnk6Dc66E2tz3hr1zH66H63HoQoVMPzQKbQjjTf4G3yU);
+		if(this.field_11691_1LT0h6BV4jbX1ewcpKP7f4TZ4Iq0UX0EinvNzR1Oyni5X5y6mx38E3Bw7nQ0.exists() && this.field_11691_1LT0h6BV4jbX1ewcpKP7f4TZ4Iq0UX0EinvNzR1Oyni5X5y6mx38E3Bw7nQ0.isDirectory()) {
+			File[] var2 = this.field_11691_1LT0h6BV4jbX1ewcpKP7f4TZ4Iq0UX0EinvNzR1Oyni5X5y6mx38E3Bw7nQ0.listFiles();
+			File[] var3 = var2;
+			int var4 = var2.length;
+
+			for(int var5 = 0; var5 < var4; ++var5) {
+				File var6 = var3[var5];
+				if(var6.isFile() && var6.getName().toLowerCase().endsWith(".zip")) {
+					String var7 = var6.getName() + ":" + var6.length() + ":" + var6.lastModified();
+
+					try {
+						if(!this.field_11694_67TYzK6LmS5ZMds6GbPYvQmB5hd0vbBeP5deiIFI2CXuH6f9z6Xv6sxTr2aP.containsKey(var7)) {
+							VisualsReader var8 = new VisualsReader(var6);
+							var8.field_10167_4p5HDq8cPm6prmKZL6SU5o5En606fQrkgqDrSQFfG4aK8f713sgNU29Ueh6v = var7;
+							this.field_11694_67TYzK6LmS5ZMds6GbPYvQmB5hd0vbBeP5deiIFI2CXuH6f9z6Xv6sxTr2aP.put(var7, var8);
+							var8.func_10158_0Gpj8594Ufmy5e2AAxicC9QX8AZ598q48b12zV8cSfE61ZzMvANYL3Omgcv9(this.field_11690_6QM8vJ001toaiyxf21S7JLzeO9PLM6f7rxtDmJXw5YTY3HX6SGVJ7c5SYvBv);
+						}
+
+						VisualsUnknownClass var12 = (VisualsUnknownClass)this.field_11694_67TYzK6LmS5ZMds6GbPYvQmB5hd0vbBeP5deiIFI2CXuH6f9z6Xv6sxTr2aP.get(var7);
+						if(var12.field_10166_0Sg7537VnLZ7du5FsLln7EYJ7tLG9LfdbFsVG53zuLLa94D21JXk6aie9tls.equals(this.field_11689_053IXqAbrKdiiQ1FWvZ6pIn1X3S9253Jico77fGQ5cVOe61X51S491K1psNo)) {
+							this.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0 = var12;
+						}
+
+						var1.add(var12);
+					} catch (IOException var9) {
+						var9.printStackTrace();
+					}
+				}
+			}
+		}
+
+		if(this.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0 == null) {
+			this.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0 = this.field_11695_4S9Fcx7F5VFCS7yhEnk6Dc66E2tz3hr1zH66H63HoQoVMPzQKbQjjTf4G3yU;
+		}
+
+		this.field_11693_4tBW66xCB0x1JjOWv8N7q31cA99X2BV8Oo7379U05654SRVtu47fAGXkAEr7.removeAll(var1);
+		Iterator var10 = this.field_11693_4tBW66xCB0x1JjOWv8N7q31cA99X2BV8Oo7379U05654SRVtu47fAGXkAEr7.iterator();
+
+		while(var10.hasNext()) {
+			VisualsUnknownClass var11 = (VisualsUnknownClass)var10.next();
+			var11.func_10160_6kOi4sh8w5g34shttmoUUEDgCPE5VRiNwN076cQcxuDFXDkU0y92lK2v99vL(this.field_11690_6QM8vJ001toaiyxf21S7JLzeO9PLM6f7rxtDmJXw5YTY3HX6SGVJ7c5SYvBv);
+			this.field_11694_67TYzK6LmS5ZMds6GbPYvQmB5hd0vbBeP5deiIFI2CXuH6f9z6Xv6sxTr2aP.remove(var11.field_10167_4p5HDq8cPm6prmKZL6SU5o5En606fQrkgqDrSQFfG4aK8f713sgNU29Ueh6v);
+		}
+
+		this.field_11693_4tBW66xCB0x1JjOWv8N7q31cA99X2BV8Oo7379U05654SRVtu47fAGXkAEr7 = var1;
+	}
+
+	public List<VisualsUnknownClass> func_11687_4UH7IiXkuqd31i8hvRh1k6pGb1Yy461zeePLNBB7h6wQN8j32SEy5HWeSri8() {
+		return new ArrayList(this.field_11693_4tBW66xCB0x1JjOWv8N7q31cA99X2BV8Oo7379U05654SRVtu47fAGXkAEr7);
+	}
+}
--- /dev/null
+++ net/minecraft/src/GenHubDoor.java
@@ -1,0 +1,23 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class GenHubDoor extends WorldGenerator {
+	private int blockID;
+
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		for(int var6 = 0; var6 < 64; ++var6) {
+			int var9 = var3 + var2.nextInt(16) - var2.nextInt(16);
+			int var8 = var4 + var2.nextInt(4) - var2.nextInt(4);
+			int var10002 = var8 - 1;
+			int var7 = var5 + var2.nextInt(8) - var2.nextInt(8);
+			int var10 = var1.getBlockId(var9, var10002, var7);
+			boolean var11 = var10 != 0 && var10 != 9 && var10 != 116 && var10 != 18 && var10 != ExtBlocks.glowingFlower.blockID && var10 != ExtBlocks.blueFireIdk.blockID;
+			if(var1.getBlockId(var9, var8, var7) == 0 && var11) {
+				var1.setBlock(var9, var8, var7, Block.doorSteel.blockID);
+			}
+		}
+
+		return true;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockStepOld.java
@@ -1,0 +1,59 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockStepOld extends BlockOld {
+	private boolean blockType;
+
+	public BlockStepOld(int var1, boolean var2) {
+		super(var1, 6, Material.rock);
+		this.blockType = var2;
+		if(!var2) {
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.5F, 1.0F);
+		}
+
+		this.setLightOpacity(255);
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 <= 1 ? 6 : 5;
+	}
+
+	public boolean isOpaqueCube() {
+		return this.blockType;
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		if(this == BlockOld.stairSingle) {
+		}
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		if(this != BlockOld.stairSingle) {
+			super.onBlockAdded(var1, var2, var3, var4);
+		}
+
+		int var5 = var1.getBlockId(var2, var3 - 1, var4);
+		if(var5 == stairSingle.blockID) {
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+			var1.setBlockWithNotify(var2, var3 - 1, var4, BlockOld.stairDouble.blockID);
+		}
+
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return BlockOld.stairSingle.blockID;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return this.blockType;
+	}
+
+	public boolean shouldSideBeRendered(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		if(this != BlockOld.stairSingle) {
+			super.shouldSideBeRendered(var1, var2, var3, var4, var5);
+		}
+
+		return var5 == 1 ? true : (!super.shouldSideBeRendered(var1, var2, var3, var4, var5) ? false : (var5 == 0 ? true : var1.getBlockId(var2, var3, var4) != this.blockID));
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandZmGivepoints.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+class CommandZmGivepoints extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8566_1k1f7j4GB7lBtWZ7RVCsy1i921WloZ0MUN4V7MzMr1E4E3x62mZdz711DC2v;
+    
+    CommandZmGivepoints(final CommandManager abb) {
+        this.field_8566_1k1f7j4GB7lBtWZ7RVCsy1i921WloZ0MUN4V7MzMr1E4E3x62mZdz711DC2v = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (ScreenDebugMenu.dbg_conf_enableCheats) {
+            ((EntityPlayerZombieModeClient)InputHandler.mc.thePlayer).field_9095_8r1p6dXov35XVGqHPTyu0mhQY07LIgNPAKU1jCGpw1xH3B73c0Oj84N6832q.func_8688_6DmcXOP1jZRKDasP2440t8904Ry66MRC3K00nwd8iGDlPgYii5d1f50QVICF((int)arr[0]);
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/CommandINTERLOPE.java
@@ -1,0 +1,24 @@
+package net.minecraft.src;
+
+class CommandINTERLOPE extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8549_5QI324sf5XzB9ggj42KRuOeAXbou29h8S0EifH9rFNq6p96RtbPDw0hcYCeD;
+    
+    CommandINTERLOPE(final CommandManager abb) {
+        this.field_8549_5QI324sf5XzB9ggj42KRuOeAXbou29h8S0EifH9rFNq6p96RtbPDw0hcYCeD = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        throw new RuntimeException("Unable to connect to s0.fsky.org:27015");
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+    
+    @Override
+    public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+        return false;
+    }
+}
--- net/minecraft/src/ChunkProviderLoadOrGenerate.java
+++ net/minecraft/src/ChunkProviderLoadOrGenerate.java
@@ -3,14 +3,14 @@
 import java.io.IOException;
 
 public class ChunkProviderLoadOrGenerate implements IChunkProvider {
-	private Chunk blankChunk;
-	private IChunkProvider chunkProvider;
-	private IChunkLoader chunkLoader;
-	private Chunk[] chunks = new Chunk[1024];
-	private World worldObj;
-	int lastQueriedChunkXPos = -999999999;
-	int lastQueriedChunkZPos = -999999999;
-	private Chunk lastQueriedChunk;
+	protected Chunk blankChunk;
+	protected IChunkProvider chunkProvider;
+	protected IChunkLoader chunkLoader;
+	protected Chunk[] chunks = new Chunk[1024];
+	protected World worldObj;
+	protected int lastQueriedChunkXPos = -999999999;
+	protected int lastQueriedChunkZPos = -999999999;
+	protected Chunk lastQueriedChunk;
 
 	public ChunkProviderLoadOrGenerate(World var1, IChunkLoader var2, IChunkProvider var3) {
 		this.blankChunk = new Chunk(var1, new byte[-Short.MIN_VALUE], 0, 0);
@@ -84,7 +84,7 @@
 		}
 	}
 
-	private Chunk getChunkAt(int var1, int var2) {
+	protected Chunk getChunkAt(int var1, int var2) {
 		if(this.chunkLoader == null) {
 			return null;
 		} else {
@@ -102,18 +102,18 @@
 		}
 	}
 
-	private void saveExtraChunkData(Chunk var1) {
+	protected void saveExtraChunkData(Chunk var1) {
 		if(this.chunkLoader != null) {
 			try {
 				this.chunkLoader.saveExtraChunkData(this.worldObj, var1);
 			} catch (Exception var3) {
 				var3.printStackTrace();
 			}
-
 		}
+
 	}
 
-	private void saveChunk(Chunk var1) {
+	protected void saveChunk(Chunk var1) {
 		if(this.chunkLoader != null) {
 			try {
 				var1.lastSaveTime = this.worldObj.worldTime;
@@ -121,8 +121,8 @@
 			} catch (IOException var3) {
 				var3.printStackTrace();
 			}
-
 		}
+
 	}
 
 	public void populate(IChunkProvider var1, int var2, int var3) {
@@ -131,6 +131,7 @@
 			var4.isTerrainPopulated = true;
 			if(this.chunkProvider != null) {
 				this.chunkProvider.populate(var1, var2, var3);
+				ModLoader.PopulateChunk(this.chunkProvider, var2 * 16, var3 * 16, this.worldObj);
 				var4.setChunkModified();
 			}
 		}
--- net/minecraft/src/BlockFire.java
+++ net/minecraft/src/BlockFire.java
@@ -3,17 +3,12 @@
 import java.util.Random;
 
 public class BlockFire extends Block {
-	private int[] chanceToEncourageFire = new int[256];
-	private int[] abilityToCatchFire = new int[256];
+	private int[] chanceToEncourageFire = new int[Short.MAX_VALUE];
+	private int[] abilityToCatchFire = new int[Short.MAX_VALUE];
 
 	protected BlockFire(int var1, int var2) {
 		super(var1, var2, Material.fire);
-		this.initializeBlock(Block.planks.blockID, 5, 20);
-		this.initializeBlock(Block.wood.blockID, 5, 5);
-		this.initializeBlock(Block.leaves.blockID, 30, 60);
-		this.initializeBlock(Block.bookshelf.blockID, 30, 20);
 		this.initializeBlock(Block.tnt.blockID, 15, 100);
-		this.initializeBlock(Block.cloth.blockID, 30, 60);
 		this.setTickOnLoad(true);
 	}
 
@@ -57,38 +52,35 @@
 			if(!var1.isBlockNormalCube(var2, var3 - 1, var4) || var6 > 3) {
 				var1.setBlockWithNotify(var2, var3, var4, 0);
 			}
-
 		} else if(!this.canBlockCatchFire(var1, var2, var3 - 1, var4) && var6 == 15 && var5.nextInt(4) == 0) {
 			var1.setBlockWithNotify(var2, var3, var4, 0);
-		} else {
-			if(var6 % 2 == 0 && var6 > 2) {
-				this.tryToCatchBlockOnFire(var1, var2 + 1, var3, var4, 300, var5);
-				this.tryToCatchBlockOnFire(var1, var2 - 1, var3, var4, 300, var5);
-				this.tryToCatchBlockOnFire(var1, var2, var3 - 1, var4, 200, var5);
-				this.tryToCatchBlockOnFire(var1, var2, var3 + 1, var4, 250, var5);
-				this.tryToCatchBlockOnFire(var1, var2, var3, var4 - 1, 300, var5);
-				this.tryToCatchBlockOnFire(var1, var2, var3, var4 + 1, 300, var5);
-
-				for(int var7 = var2 - 1; var7 <= var2 + 1; ++var7) {
-					for(int var8 = var4 - 1; var8 <= var4 + 1; ++var8) {
-						for(int var9 = var3 - 1; var9 <= var3 + 4; ++var9) {
-							if(var7 != var2 || var9 != var3 || var8 != var4) {
-								int var10 = 100;
-								if(var9 > var3 + 1) {
-									var10 += (var9 - (var3 + 1)) * 100;
-								}
-
-								int var11 = this.getChanceOfNeighborsEncouragingFire(var1, var7, var9, var8);
-								if(var11 > 0 && var5.nextInt(var10) <= var11) {
-									var1.setBlockWithNotify(var7, var9, var8, this.blockID);
-								}
+		} else if(var6 % 2 == 0 && var6 > 2) {
+			this.tryToCatchBlockOnFire(var1, var2 + 1, var3, var4, 300, var5);
+			this.tryToCatchBlockOnFire(var1, var2 - 1, var3, var4, 300, var5);
+			this.tryToCatchBlockOnFire(var1, var2, var3 - 1, var4, 200, var5);
+			this.tryToCatchBlockOnFire(var1, var2, var3 + 1, var4, 250, var5);
+			this.tryToCatchBlockOnFire(var1, var2, var3, var4 - 1, 300, var5);
+			this.tryToCatchBlockOnFire(var1, var2, var3, var4 + 1, 300, var5);
+
+			for(int var7 = var2 - 1; var7 <= var2 + 1; ++var7) {
+				for(int var8 = var4 - 1; var8 <= var4 + 1; ++var8) {
+					for(int var9 = var3 - 1; var9 <= var3 + 4; ++var9) {
+						if(var7 != var2 || var9 != var3 || var8 != var4) {
+							int var10 = 100;
+							if(var9 > var3 + 1) {
+								var10 += (var9 - (var3 + 1)) * 100;
+							}
+
+							int var11 = this.getChanceOfNeighborsEncouragingFire(var1, var7, var9, var8);
+							if(var11 > 0 && var5.nextInt(var10) <= var11) {
+								var1.setBlockWithNotify(var7, var9, var8, this.blockID);
 							}
 						}
 					}
 				}
 			}
-
 		}
+
 	}
 
 	private void tryToCatchBlockOnFire(World var1, int var2, int var3, int var4, int var5, Random var6) {
@@ -148,6 +140,7 @@
 		if(!var1.isBlockNormalCube(var2, var3 - 1, var4) && !this.canNeighborBurn(var1, var2, var3, var4)) {
 			var1.setBlockWithNotify(var2, var3, var4, 0);
 		}
+
 	}
 
 	public void onBlockAdded(World var1, int var2, int var3, int var4) {
@@ -156,6 +149,7 @@
 		} else {
 			var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
 		}
+
 	}
 
 	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
--- /dev/null
+++ net/minecraft/src/BlockSnowOld.java
@@ -1,0 +1,75 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockSnowOld extends BlockOld {
+	protected BlockSnowOld(int var1, int var2) {
+		super(var1, var2, Material.snow);
+		this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 2.0F / 16.0F, 1.0F);
+		this.setTickOnLoad(true);
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockId(var2, var3 - 1, var4);
+		return var5 != 0 && BlockOld.blocksList[var5].isOpaqueCube() ? var1.getBlockMaterial(var2, var3 - 1, var4).getIsSolid() : false;
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		this.canSnowStay(var1, var2, var3, var4);
+	}
+
+	private boolean canSnowStay(World var1, int var2, int var3, int var4) {
+		if(!this.canPlaceBlockAt(var1, var2, var3, var4)) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	public void harvestBlock(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = Item.snowball.shiftedIndex;
+		float var7 = 0.7F;
+		double var8 = (double)(var1.rand.nextFloat() * var7) + (double)(1.0F - var7) * 0.5D;
+		double var10 = (double)(var1.rand.nextFloat() * var7) + (double)(1.0F - var7) * 0.5D;
+		double var12 = (double)(var1.rand.nextFloat() * var7) + (double)(1.0F - var7) * 0.5D;
+		EntityItem var14 = new EntityItem(var1, (double)var2 + var8, (double)var3 + var10, (double)var4 + var12, new ItemStack(var6));
+		var14.delayBeforeCanPickup = 10;
+		var1.spawnEntityInWorld(var14);
+		var1.setBlockWithNotify(var2, var3, var4, 0);
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return Item.snowball.shiftedIndex;
+	}
+
+	public int quantityDropped(Random var1) {
+		return 0;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(var1.getSavedLightValue(EnumSkyBlock.Block, var2, var3, var4) > 11) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		}
+
+	}
+
+	public boolean shouldSideBeRendered(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		Material var6 = var1.getBlockMaterial(var2, var3, var4);
+		return var5 == 1 ? true : (var6 == this.material ? false : super.shouldSideBeRendered(var1, var2, var3, var4, var5));
+	}
+}
--- net/minecraft/src/TextureLavaFX.java
+++ net/minecraft/src/TextureLavaFX.java
@@ -11,71 +11,76 @@
 	}
 
 	public void onTick() {
-		int var2;
-		float var3;
-		int var5;
-		int var6;
-		int var7;
-		int var8;
-		int var9;
-		for(int var1 = 0; var1 < 16; ++var1) {
-			for(var2 = 0; var2 < 16; ++var2) {
-				var3 = 0.0F;
-				int var4 = (int)(MathHelper.sin((float)var2 * (float)Math.PI * 2.0F / 16.0F) * 1.2F);
-				var5 = (int)(MathHelper.sin((float)var1 * (float)Math.PI * 2.0F / 16.0F) * 1.2F);
-
-				for(var6 = var1 - 1; var6 <= var1 + 1; ++var6) {
-					for(var7 = var2 - 1; var7 <= var2 + 1; ++var7) {
-						var8 = var6 + var4 & 15;
-						var9 = var7 + var5 & 15;
-						var3 += this.red[var8 + var9 * 16];
-					}
-				}
-
-				this.green[var1 + var2 * 16] = var3 / 10.0F + (this.blue[(var1 + 0 & 15) + (var2 + 0 & 15) * 16] + this.blue[(var1 + 1 & 15) + (var2 + 0 & 15) * 16] + this.blue[(var1 + 1 & 15) + (var2 + 1 & 15) * 16] + this.blue[(var1 + 0 & 15) + (var2 + 1 & 15) * 16]) / 4.0F * 0.8F;
-				this.blue[var1 + var2 * 16] += this.alpha[var1 + var2 * 16] * 0.01F;
-				if(this.blue[var1 + var2 * 16] < 0.0F) {
-					this.blue[var1 + var2 * 16] = 0.0F;
-				}
-
-				this.alpha[var1 + var2 * 16] -= 0.06F;
-				if(Math.random() < 0.005D) {
-					this.alpha[var1 + var2 * 16] = 1.5F;
-				}
-			}
-		}
-
-		float[] var11 = this.green;
-		this.green = this.red;
-		this.red = var11;
-
-		for(var2 = 0; var2 < 256; ++var2) {
-			var3 = this.red[var2] * 2.0F;
-			if(var3 > 1.0F) {
-				var3 = 1.0F;
-			}
-
-			if(var3 < 0.0F) {
-				var3 = 0.0F;
-			}
-
-			var5 = (int)(var3 * 100.0F + 155.0F);
-			var6 = (int)(var3 * var3 * 255.0F);
-			var7 = (int)(var3 * var3 * var3 * var3 * 128.0F);
-			if(this.anaglyphEnabled) {
-				var8 = (var5 * 30 + var6 * 59 + var7 * 11) / 100;
-				var9 = (var5 * 30 + var6 * 70) / 100;
-				int var10 = (var5 * 30 + var7 * 70) / 100;
-				var5 = var8;
-				var6 = var9;
-				var7 = var10;
-			}
-
-			this.imageData[var2 * 4 + 0] = (byte)var5;
-			this.imageData[var2 * 4 + 1] = (byte)var6;
-			this.imageData[var2 * 4 + 2] = (byte)var7;
-			this.imageData[var2 * 4 + 3] = -1;
-		}
-
+		if(InputHandler.mc.options.fancyGraphics != 2 || this.field_10713_88024hG6da4f4kcVfOqR8cTJ36RtCs13wB6V30Rs17vqAj14F4Cqz3neFg20) {
+			this.field_10713_88024hG6da4f4kcVfOqR8cTJ36RtCs13wB6V30Rs17vqAj14F4Cqz3neFg20 = false;
+
+			int var1;
+			float var2;
+			int var3;
+			int var4;
+			int var5;
+			int var6;
+			int var7;
+			int var9;
+			for(int var8 = 0; var8 < 16; ++var8) {
+				for(var1 = 0; var1 < 16; ++var1) {
+					var2 = 0.0F;
+					var9 = (int)(MathHelper.sin((float)var1 * (float)Math.PI * 2.0F / 16.0F) * 1.2F);
+					var3 = (int)(MathHelper.sin((float)var8 * (float)Math.PI * 2.0F / 16.0F) * 1.2F);
+
+					for(var4 = var8 - 1; var4 <= var8 + 1; ++var4) {
+						for(var5 = var1 - 1; var5 <= var1 + 1; ++var5) {
+							var6 = var4 + var9 & 15;
+							var7 = var5 + var3 & 15;
+							var2 += this.red[var6 + var7 * 16];
+						}
+					}
+
+					this.green[var8 + var1 * 16] = var2 / 10.0F + (this.blue[(var8 + 0 & 15) + (var1 + 0 & 15) * 16] + this.blue[(var8 + 1 & 15) + (var1 + 0 & 15) * 16] + this.blue[(var8 + 1 & 15) + (var1 + 1 & 15) * 16] + this.blue[(var8 + 0 & 15) + (var1 + 1 & 15) * 16]) / 4.0F * 0.8F;
+					this.blue[var8 + var1 * 16] += this.alpha[var8 + var1 * 16] * 0.01F;
+					if(this.blue[var8 + var1 * 16] < 0.0F) {
+						this.blue[var8 + var1 * 16] = 0.0F;
+					}
+
+					this.alpha[var8 + var1 * 16] -= 0.06F;
+					if(Math.random() < 0.005D) {
+						this.alpha[var8 + var1 * 16] = 1.5F;
+					}
+				}
+			}
+
+			float[] var10 = this.green;
+			this.green = this.red;
+			this.red = var10;
+
+			for(var1 = 0; var1 < 256; ++var1) {
+				var2 = this.red[var1] * 2.0F;
+				if(var2 > 1.0F) {
+					var2 = 1.0F;
+				}
+
+				if(var2 < 0.0F) {
+					var2 = 0.0F;
+				}
+
+				var3 = (int)(var2 * 100.0F + 155.0F);
+				var4 = (int)(var2 * var2 * 255.0F);
+				var5 = (int)(var2 * var2 * var2 * var2 * 128.0F);
+				if(this.anaglyphEnabled) {
+					var6 = (var3 * 30 + var4 * 59 + var5 * 11) / 100;
+					var7 = (var3 * 30 + var4 * 70) / 100;
+					var9 = (var3 * 30 + var5 * 70) / 100;
+					var3 = var6;
+					var4 = var7;
+					var5 = var9;
+				}
+
+				this.imageData[var1 * 4 + 0] = (byte)var3;
+				this.imageData[var1 * 4 + 1] = (byte)var4;
+				this.imageData[var1 * 4 + 2] = (byte)var5;
+				this.imageData[var1 * 4 + 3] = -1;
+			}
+
+		}
 	}
 }
--- net/minecraft/src/ItemArmor.java
+++ net/minecraft/src/ItemArmor.java
@@ -1,8 +1,8 @@
 package net.minecraft.src;
 
 public class ItemArmor extends Item {
-	private static final int[] damageReduceAmountArray = new int[]{3, 8, 6, 3};
-	private static final int[] maxDamageArray = new int[]{11, 16, 15, 13};
+	private static final int[] damageReduceAmountArray = new int[]{3, 8, 6, 3, 2};
+	private static final int[] maxDamageArray = new int[]{11, 16, 15, 13, 19};
 	public final int armorLevel;
 	public final int armorType;
 	public final int damageReduceAmount;
--- net/minecraft/src/WorldGenBigTree.java
+++ net/minecraft/src/WorldGenBigTree.java
@@ -1,8 +1,11 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
+import java.util.Iterator;
 import java.util.Random;
 
 public class WorldGenBigTree extends WorldGenerator {
+	private Boolean generateEpicTrees = null;
 	static final byte[] otherCoordPairs = new byte[]{(byte)2, (byte)0, (byte)0, (byte)1, (byte)2, (byte)1};
 	Random rand = new Random();
 	World worldObj;
@@ -18,6 +21,137 @@
 	int heightLimitLimit = 12;
 	int leafDistanceLimit = 4;
 	int[][] leafNodes;
+	int mainWoodID = Block.wood.blockID;
+	int mainLeavesID = Block.leaves.blockID;
+
+	public WorldGenBigTree generateHighwoodTrees(boolean var1) {
+		this.generateEpicTrees = Boolean.valueOf(var1);
+		return this;
+	}
+
+	private void generateDeEpicTreeFoliage(World var1, Random var2, int var3, int var4, int var5) {
+		int var6 = ExtBlocks.AncientWood.blockID;
+		int var7 = ExtBlocks.AncientLeaves.blockID;
+		float var8 = 0.0F;
+		float var9 = var2.nextFloat() * (float)Math.PI * 2.0F;
+		int var10 = var2.nextInt(9) + 8;
+		float var11 = (float)var4;
+
+		float var13;
+		for(int var12 = 0; var12 < var10; ++var12) {
+			var9 = (float)((double)var9 + ((double)var2.nextFloat() - 0.5D) * 0.1D);
+			++var8;
+			var13 = var8 / (float)var10;
+			var3 = (int)((float)var3 + MathHelper.cos(var9) * (1.0F - var13));
+			var11 += var13;
+			var5 = (int)((float)var5 + MathHelper.sin(var9) * (1.0F - var13));
+			var4 = Math.round(var11);
+			var1.setBlock(var3, var4, var5, var6);
+		}
+
+		var4 += var2.nextInt(2) + 1;
+		int var15 = var2.nextInt(3) + 2;
+
+		for(int var16 = 0; var16 < var15; ++var16) {
+			var1.setBlock(var3, var4, var5, var7);
+
+			for(float var17 = 0.0F; (double)var17 < Math.PI * 2.0D; var17 = (float)((double)var17 + 0.2243994752564138D)) {
+				int var18 = var2.nextInt(var16 + 4) + var16 + 4;
+				float var19 = (float)var3;
+				var13 = (float)var5;
+
+				for(int var14 = 0; var14 < var18; ++var14) {
+					var13 += MathHelper.sin(var17);
+					var19 += MathHelper.cos(var17);
+					if(!var1.getBlockMaterial(Math.round(var19), var4 - var16, Math.round(var13)).getIsSolid()) {
+						var1.setBlock(Math.round(var19), var4 - var16, Math.round(var13), var7);
+					}
+				}
+			}
+		}
+
+	}
+
+	private void generateDeEpicRoots(World var1, Random var2, int var3, int var4, int var5) {
+		int var6 = ExtBlocks.AncientRoots.blockID;
+		int var7 = var2.nextInt(4);
+
+		for(int var8 = 0; var8 < var7; ++var8) {
+			int var9 = var2.nextInt(8) + 3;
+			int var10 = var3;
+			int var11 = var4;
+			int var12 = var5;
+
+			for(int var13 = 0; var13 < var9; ++var13) {
+				var10 += var2.nextInt(3) - 1;
+				--var11;
+				var12 += var2.nextInt(3) - 1;
+				if(var1.getBlockId(var10, var11, var12) != Block.bedrock.blockID) {
+					var1.setBlock(var10, var11, var12, var6);
+				}
+			}
+		}
+
+	}
+
+	private boolean generateDeEpicTree(World var1, Random var2, int var3, int var4, int var5) {
+		int var6 = ExtBlocks.AncientWood.blockID;
+		int var7 = ExtBlocks.AncientLeaves.blockID;
+		if(var1.getBlockId(var3, var4 - 1, var5) != Block.grass.blockID && var1.getBlockId(var3, var4 - 1, var5) != Block.dirt.blockID) {
+			return true;
+		} else {
+			Random var8 = new Random(var2.nextLong() + (long)var3 + (long)var4 + (long)var5 + var1.randomSeed);
+			ArrayList var9 = new ArrayList();
+			int var10 = 16 + var8.nextInt(26);
+			var9.add(Vec3D.createVector((double)var3, (double)(var4 + var10), (double)var5));
+
+			label71:
+			for(int var11 = 0; var9.size() > 0; ++var11) {
+				Iterator var12 = (new ArrayList(var9)).iterator();
+
+				while(true) {
+					while(true) {
+						if(!var12.hasNext()) {
+							continue label71;
+						}
+
+						Vec3D var13 = (Vec3D)var12.next();
+						int var14 = (int)Math.round(var13.xCoord);
+						int var15 = (int)Math.round(var13.yCoord);
+						int var16 = (int)Math.round(var13.zCoord);
+						if((!var1.getBlockMaterial(var14, var15, var16).getIsSolid() || var1.getBlockId(var14, var15, var16) != var7) && var15 >= 0 && (var8.nextInt(3) != 0 || var9.size() <= 3)) {
+							var1.setBlock(var14, var15, var16, var6);
+							int var17 = 0;
+
+							while(var8.nextInt(var9.size() / 20 + 2) <= 1 && var9.size() <= 10000) {
+								++var17;
+								if(var17 >= 4) {
+									break;
+								}
+
+								Vec3D var18 = var13.addVector((double)(var8.nextInt(3) - 1), -1.0D, (double)(var8.nextInt(3) - 1));
+								var9.add(var18);
+							}
+
+							if(var11 > 2 && var8.nextInt(Math.max(50, 89 - var11)) == 3) {
+								this.generateDeEpicTreeFoliage(var1, var2, var14, var15, var16);
+							}
+
+							var9.remove(var13);
+							var9.add(var13.addVector(0.0D, -1.0D, 0.0D));
+						} else {
+							var9.remove(var13);
+							if(var1.getBlockId(var14, var15, var16) == Block.dirt.blockID || var1.getBlockId(var14, var15, var16) == Block.grass.blockID) {
+								this.generateDeEpicRoots(var1, var8, var14, var15, var16);
+							}
+						}
+					}
+				}
+			}
+
+			return true;
+		}
+	}
 
 	void generateLeafNodeList() {
 		this.height = (int)((double)this.heightLimit * this.heightAttenuation);
@@ -96,7 +230,7 @@
 		int var12 = -var7;
 		int var13 = -var7;
 
-		label32:
+		label34:
 		for(var11[var5] = var10[var5]; var12 <= var7; ++var12) {
 			var11[var8] = var10[var8] + var12;
 			var13 = -var7;
@@ -104,16 +238,16 @@
 			while(true) {
 				while(true) {
 					if(var13 > var7) {
-						continue label32;
+						continue label34;
 					}
 
-					double var15 = Math.sqrt(Math.pow((double)Math.abs(var12) + 0.5D, 2.0D) + Math.pow((double)Math.abs(var13) + 0.5D, 2.0D));
-					if(var15 > (double)var4) {
+					double var14 = Math.sqrt(Math.pow((double)Math.abs(var12) + 0.5D, 2.0D) + Math.pow((double)Math.abs(var13) + 0.5D, 2.0D));
+					if(var14 > (double)var4) {
 						++var13;
 					} else {
 						var11[var9] = var10[var9] + var13;
-						int var14 = this.worldObj.getBlockId(var11[0], var11[1], var11[2]);
-						if(var14 != 0 && var14 != 18) {
+						int var16 = this.worldObj.getBlockId(var11[0], var11[1], var11[2]);
+						if(var16 != 0 && var16 != this.mainLeavesID) {
 							++var13;
 						} else {
 							this.worldObj.setBlock(var11[0], var11[1], var11[2], var6);
@@ -155,7 +289,7 @@
 
 		for(int var5 = var2 + this.leafDistanceLimit; var4 < var5; ++var4) {
 			float var6 = this.leafSize(var4 - var2);
-			this.genTreeLayer(var1, var4, var3, var6, (byte)1, 18);
+			this.genTreeLayer(var1, var4, var3, var6, (byte)1, this.mainLeavesID);
 		}
 
 	}
@@ -193,8 +327,8 @@
 				var14[var8] = MathHelper.floor_double((double)var1[var8] + (double)var15 * var12 + 0.5D);
 				this.worldObj.setBlock(var14[0], var14[1], var14[2], var3);
 			}
-
 		}
+
 	}
 
 	void generateLeaves() {
@@ -220,17 +354,17 @@
 		int var4 = this.basePos[2];
 		int[] var5 = new int[]{var1, var2, var4};
 		int[] var6 = new int[]{var1, var3, var4};
-		this.placeBlockLine(var5, var6, 17);
+		this.placeBlockLine(var5, var6, this.mainWoodID);
 		if(this.trunkSize == 2) {
 			++var5[0];
 			++var6[0];
-			this.placeBlockLine(var5, var6, 17);
+			this.placeBlockLine(var5, var6, this.mainWoodID);
 			++var5[2];
 			++var6[2];
-			this.placeBlockLine(var5, var6, 17);
+			this.placeBlockLine(var5, var6, this.mainWoodID);
 			var5[0] += -1;
 			var6[0] += -1;
-			this.placeBlockLine(var5, var6, 17);
+			this.placeBlockLine(var5, var6, this.mainWoodID);
 		}
 
 	}
@@ -245,7 +379,7 @@
 			var3[1] = var4[3];
 			int var6 = var3[1] - this.basePos[1];
 			if(this.leafNodeNeedsBase(var6)) {
-				this.placeBlockLine(var3, var5, 17);
+				this.placeBlockLine(var3, var5, this.mainWoodID);
 			}
 		}
 
@@ -286,7 +420,7 @@
 				var13[var6] = (int)((double)var1[var6] + (double)var14 * var9);
 				var13[var7] = (int)((double)var1[var7] + (double)var14 * var11);
 				int var16 = this.worldObj.getBlockId(var13[0], var13[1], var13[2]);
-				if(var16 != 0 && var16 != 18) {
+				if(var16 != 0 && var16 != this.mainLeavesID) {
 					break;
 				}
 			}
@@ -325,24 +459,33 @@
 	}
 
 	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
-		this.worldObj = var1;
-		long var6 = var2.nextLong();
-		this.rand.setSeed(var6);
-		this.basePos[0] = var3;
-		this.basePos[1] = var4;
-		this.basePos[2] = var5;
-		if(this.heightLimit == 0) {
-			this.heightLimit = 5 + this.rand.nextInt(this.heightLimitLimit);
-		}
-
-		if(!this.validTreeLocation()) {
-			return false;
+		if(this.generateEpicTrees == null || var2.nextInt(150) != 0 && !this.generateEpicTrees.booleanValue()) {
+			if(var2.nextInt(100) <= 5) {
+				this.mainWoodID = ExtBlocks.FireSkyWood.blockID;
+				this.mainLeavesID = ExtBlocks.FireSkyLeaves.blockID;
+			}
+
+			this.worldObj = var1;
+			long var6 = var2.nextLong();
+			this.rand.setSeed(var6);
+			this.basePos[0] = var3;
+			this.basePos[1] = var4;
+			this.basePos[2] = var5;
+			if(this.heightLimit == 0) {
+				this.heightLimit = 5 + this.rand.nextInt(this.heightLimitLimit);
+			}
+
+			if(!this.validTreeLocation()) {
+				return false;
+			} else {
+				this.generateLeafNodeList();
+				this.generateLeaves();
+				this.generateTrunk();
+				this.generateLeafNodeBases();
+				return true;
+			}
 		} else {
-			this.generateLeafNodeList();
-			this.generateLeaves();
-			this.generateTrunk();
-			this.generateLeafNodeBases();
-			return true;
+			return this.generateDeEpicTree(var1, var2, var3, var4, var5);
 		}
 	}
 }
--- /dev/null
+++ net/minecraft/src/HubSyncClient.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+public class HubSyncClient {
+	public RemoteWorld ConnectToHubWorld() {
+		return null;
+	}
+
+	public int GetHubPlayerCount() {
+		return 0;
+	}
+
+	public EntityOtherPlayerMP[] GetHubPlayers() {
+		return null;
+	}
+
+	public RemoteWorld GetTargetWorld(BlockHubDoor var1) {
+		return null;
+	}
+}
--- /dev/null
+++ net/minecraft/src/EntityArrowToEssence.java
@@ -1,0 +1,240 @@
+package net.minecraft.src;
+
+import java.util.List;
+
+public class EntityArrowToEssence extends EntityFirable {
+	private int field_8887_0qhlUXJV48775Wt7H72JLcoPF3zjdagAfqYJ9hB9BJzpAY6IW0F6UIW8xEeA = -1;
+	private int field_8889_9EtK8JQDU7pJ30qgnK1zmg27Obn44vrU2h6h5x42TjXcdRTEz5FMS3ufijGf = -1;
+	private int field_8888_6KqoW1Y28cN5SZpc6mCME8shDtR0H4Gxk2XpF87j06ld6Gi4nI9wttj9K02r = -1;
+	private int field_8893_4I57zewDPKU912Mq8D6cjiG23w4RAW7o25CPoI7Yx165EXy3BIf47m4d2o4j = 0;
+	private boolean field_8886_0SXhZb7Fp84gm1Zb0A1psJfwZ0YFM3XmZ8k89QVcHX4qQ24Gwm266hOyW3xP = false;
+	public int field_8890_845U3D6H39t9lq568b7xE1EC7sw8YZz4tPKnr1PMXiwXOlLFhNuflWtj0107 = 0;
+	private EntityLiving field_8885_9KQ04vNQ47ZtitHMOeQ6t3Vb3e4Ic5dxRDN3396NqU98NB4wICTFYYD4oYFx;
+	private int field_8892_62Sz8sB3FuZ5qwLBvdXhg68Fgl1A3I9WM5S9kL71kV8Qx8wegoOR0GRKZ61K;
+	private int field_8891_3179u2r3wH2wWe7904FwnD1g2B25zu4t29s8WjQi7dV8ulFNRTKAbm6Hfx3S = 0;
+
+	public String getTexture() {
+		return "/item/arrow.png";
+	}
+
+	public EntityArrowToEssence(World var1) {
+		super(var1);
+		this.setSize(0.5F, 0.5F);
+	}
+
+	public EntityArrowToEssence(World var1, EntityLiving var2) {
+		super(var1);
+		this.field_8885_9KQ04vNQ47ZtitHMOeQ6t3Vb3e4Ic5dxRDN3396NqU98NB4wICTFYYD4oYFx = var2;
+		this.setSize(0.5F, 0.5F);
+		this.setLocationAndAngles(var2.posX, var2.posY, var2.posZ, var2.rotationYaw, var2.rotationPitch);
+		this.posX -= (double)(MathHelper.cos(this.rotationYaw / 180.0F * (float)Math.PI) * 0.16F);
+		this.posY += (double)0.1F;
+		this.posZ -= (double)(MathHelper.sin(this.rotationYaw / 180.0F * (float)Math.PI) * 0.16F);
+		this.setPosition(this.posX, this.posY, this.posZ);
+		this.yOffset = 0.0F;
+		this.motionX = (double)(-MathHelper.sin(this.rotationYaw / 180.0F * (float)Math.PI) * MathHelper.cos(this.rotationPitch / 180.0F * (float)Math.PI));
+		this.motionZ = (double)(MathHelper.cos(this.rotationYaw / 180.0F * (float)Math.PI) * MathHelper.cos(this.rotationPitch / 180.0F * (float)Math.PI));
+		this.motionY = (double)(-MathHelper.sin(this.rotationPitch / 180.0F * (float)Math.PI));
+		this.func_8884_8qQ1lpaoK6N2Bi56C6rsS2FPfLOfUndjw2D7SrMH3Fzp8rnUZno99vKK2KK2(this.motionX, this.motionY, this.motionZ, 1.5F, 1.0F);
+	}
+
+	public void func_8884_8qQ1lpaoK6N2Bi56C6rsS2FPfLOfUndjw2D7SrMH3Fzp8rnUZno99vKK2KK2(double var1, double var3, double var5, float var7, float var8) {
+		float var9 = MathHelper.sqrt_double(var1 * var1 + var3 * var3 + var5 * var5);
+		var1 /= (double)var9;
+		var3 *= (double)var9;
+		var5 /= (double)var9;
+		var1 += this.rand.nextGaussian() * (double)0.0075F * (double)var8;
+		var3 += this.rand.nextGaussian() * (double)0.0075F * (double)var8;
+		var5 += this.rand.nextGaussian() * (double)0.0075F * (double)var8;
+		var1 *= (double)var7;
+		var3 /= (double)var7;
+		var5 *= (double)var7;
+		this.motionX = var1;
+		this.motionY = var3;
+		this.motionZ = var5;
+		float var10 = MathHelper.sqrt_double(var1 * var1 + var5 * var5);
+		this.prevRotationYaw = this.rotationYaw = (float)(Math.atan2(var1, var5) * 180.0D / (double)((float)Math.PI));
+		this.prevRotationPitch = this.rotationPitch = (float)(Math.atan2(var3, (double)var10) * 180.0D / (double)((float)Math.PI));
+		this.field_8892_62Sz8sB3FuZ5qwLBvdXhg68Fgl1A3I9WM5S9kL71kV8Qx8wegoOR0GRKZ61K = 0;
+	}
+
+	public void onUpdate() {
+		super.onUpdate();
+		if(this.field_8890_845U3D6H39t9lq568b7xE1EC7sw8YZz4tPKnr1PMXiwXOlLFhNuflWtj0107 > 0) {
+			--this.field_8890_845U3D6H39t9lq568b7xE1EC7sw8YZz4tPKnr1PMXiwXOlLFhNuflWtj0107;
+		}
+
+		if(this.field_8886_0SXhZb7Fp84gm1Zb0A1psJfwZ0YFM3XmZ8k89QVcHX4qQ24Gwm266hOyW3xP) {
+			int var1 = this.worldObj.getBlockId(this.field_8887_0qhlUXJV48775Wt7H72JLcoPF3zjdagAfqYJ9hB9BJzpAY6IW0F6UIW8xEeA, this.field_8889_9EtK8JQDU7pJ30qgnK1zmg27Obn44vrU2h6h5x42TjXcdRTEz5FMS3ufijGf, this.field_8888_6KqoW1Y28cN5SZpc6mCME8shDtR0H4Gxk2XpF87j06ld6Gi4nI9wttj9K02r);
+			if(var1 == this.field_8893_4I57zewDPKU912Mq8D6cjiG23w4RAW7o25CPoI7Yx165EXy3BIf47m4d2o4j) {
+				++this.field_8892_62Sz8sB3FuZ5qwLBvdXhg68Fgl1A3I9WM5S9kL71kV8Qx8wegoOR0GRKZ61K;
+				if(this.field_8892_62Sz8sB3FuZ5qwLBvdXhg68Fgl1A3I9WM5S9kL71kV8Qx8wegoOR0GRKZ61K == 1200) {
+					this.setEntityDead();
+				}
+
+				if(var1 == ExtBlocks.targetBlock.blockID) {
+					ItemStack var2 = new ItemStack(ExtBlocks.targetBlock, 1);
+					EntityItem var3 = new EntityItem(this.worldObj, (double)this.field_8887_0qhlUXJV48775Wt7H72JLcoPF3zjdagAfqYJ9hB9BJzpAY6IW0F6UIW8xEeA + 0.5D, (double)this.field_8889_9EtK8JQDU7pJ30qgnK1zmg27Obn44vrU2h6h5x42TjXcdRTEz5FMS3ufijGf + 0.5D, (double)this.field_8888_6KqoW1Y28cN5SZpc6mCME8shDtR0H4Gxk2XpF87j06ld6Gi4nI9wttj9K02r + 0.5D, var2);
+					var3.motionX = this.rand.nextDouble() - 0.5D;
+					var3.motionY = this.rand.nextDouble() - 0.5D;
+					var3.motionZ = this.rand.nextDouble() - 0.5D;
+					var3.motionX /= 8.0D;
+					var3.motionY /= 8.0D;
+					var3.motionZ /= 8.0D;
+					this.worldObj.spawnParticle("smoke", (double)this.field_8887_0qhlUXJV48775Wt7H72JLcoPF3zjdagAfqYJ9hB9BJzpAY6IW0F6UIW8xEeA + 0.5D, (double)this.field_8889_9EtK8JQDU7pJ30qgnK1zmg27Obn44vrU2h6h5x42TjXcdRTEz5FMS3ufijGf + 0.5D, (double)this.field_8888_6KqoW1Y28cN5SZpc6mCME8shDtR0H4Gxk2XpF87j06ld6Gi4nI9wttj9K02r + 0.5D, 0.0D, 0.0D, 0.0D);
+					this.worldObj.spawnEntityInWorld(var3);
+					this.worldObj.setBlockWithNotify(this.field_8887_0qhlUXJV48775Wt7H72JLcoPF3zjdagAfqYJ9hB9BJzpAY6IW0F6UIW8xEeA, this.field_8889_9EtK8JQDU7pJ30qgnK1zmg27Obn44vrU2h6h5x42TjXcdRTEz5FMS3ufijGf, this.field_8888_6KqoW1Y28cN5SZpc6mCME8shDtR0H4Gxk2XpF87j06ld6Gi4nI9wttj9K02r, 0);
+					this.worldObj.markBlocksDirty(this.field_8887_0qhlUXJV48775Wt7H72JLcoPF3zjdagAfqYJ9hB9BJzpAY6IW0F6UIW8xEeA, this.field_8889_9EtK8JQDU7pJ30qgnK1zmg27Obn44vrU2h6h5x42TjXcdRTEz5FMS3ufijGf, this.field_8888_6KqoW1Y28cN5SZpc6mCME8shDtR0H4Gxk2XpF87j06ld6Gi4nI9wttj9K02r, this.field_8887_0qhlUXJV48775Wt7H72JLcoPF3zjdagAfqYJ9hB9BJzpAY6IW0F6UIW8xEeA, this.field_8889_9EtK8JQDU7pJ30qgnK1zmg27Obn44vrU2h6h5x42TjXcdRTEz5FMS3ufijGf, this.field_8888_6KqoW1Y28cN5SZpc6mCME8shDtR0H4Gxk2XpF87j06ld6Gi4nI9wttj9K02r);
+				}
+
+				return;
+			}
+
+			this.field_8886_0SXhZb7Fp84gm1Zb0A1psJfwZ0YFM3XmZ8k89QVcHX4qQ24Gwm266hOyW3xP = false;
+			this.motionX *= (double)(this.rand.nextFloat() * 0.2F);
+			this.motionY *= (double)(this.rand.nextFloat() * 0.2F);
+			this.motionZ *= (double)(this.rand.nextFloat() * 0.2F);
+			this.field_8892_62Sz8sB3FuZ5qwLBvdXhg68Fgl1A3I9WM5S9kL71kV8Qx8wegoOR0GRKZ61K = 0;
+			this.field_8891_3179u2r3wH2wWe7904FwnD1g2B25zu4t29s8WjQi7dV8ulFNRTKAbm6Hfx3S = 0;
+		} else {
+			++this.field_8891_3179u2r3wH2wWe7904FwnD1g2B25zu4t29s8WjQi7dV8ulFNRTKAbm6Hfx3S;
+		}
+
+		Vec3D var15 = Vec3D.createVector(this.posX, this.posY, this.posZ);
+		Vec3D var16 = Vec3D.createVector(this.posX + this.motionX, this.posY + this.motionY, this.posZ + this.motionZ);
+		MovingObjectPosition var17 = this.worldObj.rayTraceBlocks(var15, var16);
+		var15 = Vec3D.createVector(this.posX, this.posY, this.posZ);
+		var16 = Vec3D.createVector(this.posX + this.motionX, this.posY + this.motionY, this.posZ + this.motionZ);
+		if(var17 != null) {
+			var16 = Vec3D.createVector(var17.hitVec.xCoord, var17.hitVec.yCoord, var17.hitVec.zCoord);
+		}
+
+		Entity var4 = null;
+		List var5 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox.addCoord(this.motionX, this.motionY, this.motionZ).expand(1.0D, 1.0D, 1.0D));
+		double var6 = 0.0D;
+
+		float var8;
+		for(int var9 = 0; var9 < var5.size(); ++var9) {
+			Entity var10 = (Entity)var5.get(var9);
+			if(var10.canBeCollidedWith() && (var10 != this.field_8885_9KQ04vNQ47ZtitHMOeQ6t3Vb3e4Ic5dxRDN3396NqU98NB4wICTFYYD4oYFx || this.field_8891_3179u2r3wH2wWe7904FwnD1g2B25zu4t29s8WjQi7dV8ulFNRTKAbm6Hfx3S >= 5)) {
+				var8 = 0.3F;
+				AxisAlignedBB var11 = var10.boundingBox.expand((double)var8, (double)var8, (double)var8);
+				MovingObjectPosition var12 = var11.calculateIntercept(var15, var16);
+				if(var12 != null) {
+					double var13 = var15.distanceTo(var12.hitVec);
+					if(var13 < var6 || var6 == 0.0D) {
+						var4 = var10;
+						var6 = var13;
+					}
+				}
+			}
+		}
+
+		if(var4 != null) {
+			var17 = new MovingObjectPosition(var4);
+		}
+
+		float var18;
+		if(var17 != null) {
+			if(var17.entityHit != null) {
+				if(var17.entityHit.attackEntityFrom(this.field_8885_9KQ04vNQ47ZtitHMOeQ6t3Vb3e4Ic5dxRDN3396NqU98NB4wICTFYYD4oYFx, 4)) {
+					this.worldObj.playSoundAtEntity(this, "random.drr", 1.0F, 1.2F / (this.rand.nextFloat() * 0.2F + 0.9F));
+					this.setEntityDead();
+				} else {
+					this.motionX *= (double)-0.1F;
+					this.motionY /= (double)-0.1F;
+					this.motionZ *= (double)-0.1F;
+					this.rotationYaw += 180.0F;
+					this.prevRotationYaw += 180.0F;
+					this.field_8891_3179u2r3wH2wWe7904FwnD1g2B25zu4t29s8WjQi7dV8ulFNRTKAbm6Hfx3S = 0;
+				}
+			} else {
+				this.field_8887_0qhlUXJV48775Wt7H72JLcoPF3zjdagAfqYJ9hB9BJzpAY6IW0F6UIW8xEeA = var17.blockX;
+				this.field_8889_9EtK8JQDU7pJ30qgnK1zmg27Obn44vrU2h6h5x42TjXcdRTEz5FMS3ufijGf = var17.blockY;
+				this.field_8888_6KqoW1Y28cN5SZpc6mCME8shDtR0H4Gxk2XpF87j06ld6Gi4nI9wttj9K02r = var17.blockZ;
+				this.field_8893_4I57zewDPKU912Mq8D6cjiG23w4RAW7o25CPoI7Yx165EXy3BIf47m4d2o4j = this.worldObj.getBlockId(this.field_8887_0qhlUXJV48775Wt7H72JLcoPF3zjdagAfqYJ9hB9BJzpAY6IW0F6UIW8xEeA, this.field_8889_9EtK8JQDU7pJ30qgnK1zmg27Obn44vrU2h6h5x42TjXcdRTEz5FMS3ufijGf, this.field_8888_6KqoW1Y28cN5SZpc6mCME8shDtR0H4Gxk2XpF87j06ld6Gi4nI9wttj9K02r);
+				this.motionX = (double)((float)(var17.hitVec.xCoord - this.posX));
+				this.motionY = (double)((float)(var17.hitVec.yCoord - this.posY));
+				this.motionZ = (double)((float)(var17.hitVec.zCoord - this.posZ));
+				var18 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionY * this.motionY + this.motionZ * this.motionZ);
+				this.posX -= this.motionX / (double)var18 * (double)0.05F;
+				this.posY -= this.motionY / (double)var18 * (double)0.05F;
+				this.posZ -= this.motionZ / (double)var18 * (double)0.05F;
+				this.worldObj.playSoundAtEntity(this, "random.drr", 1.0F, 1.2F / (this.rand.nextFloat() * 0.2F + 0.9F));
+				this.field_8886_0SXhZb7Fp84gm1Zb0A1psJfwZ0YFM3XmZ8k89QVcHX4qQ24Gwm266hOyW3xP = true;
+				this.field_8890_845U3D6H39t9lq568b7xE1EC7sw8YZz4tPKnr1PMXiwXOlLFhNuflWtj0107 = 7;
+			}
+		}
+
+		this.posX += this.motionX;
+		this.posY -= this.motionY;
+		this.posZ += this.motionZ;
+		var18 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
+		this.rotationYaw = (float)(Math.atan2(this.motionX, this.motionZ) * 180.0D / (double)((float)Math.PI));
+
+		for(this.rotationPitch = (float)(Math.atan2(this.motionY, (double)var18) * 180.0D / (double)((float)Math.PI)); this.rotationPitch - this.prevRotationPitch < -180.0F; this.prevRotationPitch -= 360.0F) {
+		}
+
+		while(this.rotationPitch - this.prevRotationPitch >= 180.0F) {
+			this.prevRotationPitch += 360.0F;
+		}
+
+		while(this.rotationYaw - this.prevRotationYaw < -180.0F) {
+			this.prevRotationYaw -= 360.0F;
+		}
+
+		while(this.rotationYaw - this.prevRotationYaw >= 180.0F) {
+			this.prevRotationYaw += 360.0F;
+		}
+
+		this.rotationPitch = this.prevRotationPitch + (this.rotationPitch - this.prevRotationPitch) * 0.2F;
+		this.rotationYaw = this.prevRotationYaw + (this.rotationYaw - this.prevRotationYaw) * 0.2F;
+		float var19 = 0.99F;
+		var8 = 0.03F;
+		if(this.handleWaterMovement()) {
+			for(int var20 = 0; var20 < 4; ++var20) {
+				float var21 = 0.25F;
+				this.worldObj.spawnParticle("bubble", this.posX - this.motionX * (double)var21, this.posY - this.motionY * (double)var21, this.posZ - this.motionZ * (double)var21, this.motionX, this.motionY, this.motionZ);
+			}
+
+			var19 = 0.8F;
+		}
+
+		this.motionX *= (double)var19;
+		this.motionY /= (double)var19;
+		this.motionZ *= (double)var19;
+		this.motionY += (double)var8;
+		this.setPosition(this.posX, this.posY, this.posZ);
+	}
+
+	public void writeEntityToNBT(NBTTagCompound var1) {
+		var1.setShort("xTile", (short)this.field_8887_0qhlUXJV48775Wt7H72JLcoPF3zjdagAfqYJ9hB9BJzpAY6IW0F6UIW8xEeA);
+		var1.setShort("yTile", (short)this.field_8889_9EtK8JQDU7pJ30qgnK1zmg27Obn44vrU2h6h5x42TjXcdRTEz5FMS3ufijGf);
+		var1.setShort("zTile", (short)this.field_8888_6KqoW1Y28cN5SZpc6mCME8shDtR0H4Gxk2XpF87j06ld6Gi4nI9wttj9K02r);
+		var1.setByte("inTile", (byte)this.field_8893_4I57zewDPKU912Mq8D6cjiG23w4RAW7o25CPoI7Yx165EXy3BIf47m4d2o4j);
+		var1.setByte("shake", (byte)this.field_8890_845U3D6H39t9lq568b7xE1EC7sw8YZz4tPKnr1PMXiwXOlLFhNuflWtj0107);
+		var1.setByte("inGround", (byte)(this.field_8886_0SXhZb7Fp84gm1Zb0A1psJfwZ0YFM3XmZ8k89QVcHX4qQ24Gwm266hOyW3xP ? 1 : 0));
+	}
+
+	public void readEntityFromNBT(NBTTagCompound var1) {
+		this.field_8887_0qhlUXJV48775Wt7H72JLcoPF3zjdagAfqYJ9hB9BJzpAY6IW0F6UIW8xEeA = var1.getShort("xTile");
+		this.field_8889_9EtK8JQDU7pJ30qgnK1zmg27Obn44vrU2h6h5x42TjXcdRTEz5FMS3ufijGf = var1.getShort("yTile");
+		this.field_8888_6KqoW1Y28cN5SZpc6mCME8shDtR0H4Gxk2XpF87j06ld6Gi4nI9wttj9K02r = var1.getShort("zTile");
+		this.field_8893_4I57zewDPKU912Mq8D6cjiG23w4RAW7o25CPoI7Yx165EXy3BIf47m4d2o4j = var1.getByte("inTile") & 255;
+		this.field_8890_845U3D6H39t9lq568b7xE1EC7sw8YZz4tPKnr1PMXiwXOlLFhNuflWtj0107 = var1.getByte("shake") & 255;
+		this.field_8886_0SXhZb7Fp84gm1Zb0A1psJfwZ0YFM3XmZ8k89QVcHX4qQ24Gwm266hOyW3xP = var1.getByte("inGround") == 1;
+	}
+
+	public void onCollideWithPlayer(EntityPlayer var1) {
+		if(this.field_8886_0SXhZb7Fp84gm1Zb0A1psJfwZ0YFM3XmZ8k89QVcHX4qQ24Gwm266hOyW3xP && this.field_8885_9KQ04vNQ47ZtitHMOeQ6t3Vb3e4Ic5dxRDN3396NqU98NB4wICTFYYD4oYFx == var1 && this.field_8890_845U3D6H39t9lq568b7xE1EC7sw8YZz4tPKnr1PMXiwXOlLFhNuflWtj0107 <= 0 && var1.inventory.addItemStackToInventory(new ItemStack(ExtItems.essence.shiftedIndex, 1))) {
+			this.worldObj.playSoundAtEntity(this, "random.pop", 0.2F, ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.7F + 1.0F) * 2.0F);
+			var1.onItemPickup(this, 1);
+			this.setEntityDead();
+		}
+
+	}
+
+	public float getShadowSize() {
+		return 0.0F;
+	}
+}
--- /dev/null
+++ net/minecraft/src/WorldUnknownClass2.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+public class WorldUnknownClass2 {
+	public static WorldUnknownClass3<String> field_9796_62Ccm2XAR6JqSDTgV762x61j971DNgsIrMhaXZxPs0fQnBC7ymR2l1v1V22X = new WorldUnknownClass3("\u0001/|!R|/8NNP/@{=$/||L@/-RN7/|O@A/8]AP/|%M4/(8%N/{**P/|8(%/!+P0/||M0/]$N8/6%Z4/|#$|/+#O+/RZE+/|%7*/B]]R/||ZN/(8]:/|P$P/OB@%/");
+	public static WorldUnknownClass3<String> field_9792_1YNrQ38ivM5fhyTo9PH5S33r6S87fqg85pTp0c4YlXfUniwhAwgeD8hZT3Cd = new WorldUnknownClass3("\u0001/|S{#/]L%A/||@P/ML3S/|P7O/4{N{/S{NO/%840/||(R/@:+*/|AMO/A*P3/||(!/A(]$/||4R/+L07/");
+	public static WorldUnknownClass3<String> field_9790_4Mn44antCz29B6GKYv6d2ZW6jUZp3xLB1XTEKn5O2h7Xzs27I617Goaxn8XY = new WorldUnknownClass3("\u0001/||+(/R0$#/||{3/@7+*/|#M#/LBP7/0:S!/%07!/|N{$/4S+S/||4!/*OAA/|!{N/!ZP{/|+:R/%@M!/");
+	public static WorldUnknownClass3<String> field_9797_2ExF4JhJHlCqkXYSNrS98Z5269ASfuJ8zkQQ6HhI63XODUSPeL6pTXj9yxiR = new WorldUnknownClass3("\u0001/|+L|/-S%*/7:2@/|%($/0R(P/|#MS/@303/||77/S]-]/||@N/MMM-/|3L*/A(0P/|!:|/%*P+/@MI{/|O:-/M$%#/||]0/:P*6/]]%(/|3R8/%3!P/||(%/M+B{/%$!$/|+7|/N3+0/{@1+/|PZA/:MZ4/||:+/7P@M/|3LA/3$(P/");
+	public static WorldUnknownClass3<String> field_9794_1Mq8T0QNr27egvw7Ii5njC2U34iHqD9xm0XHd85K26sr2HmLXKQgJ5Uz42hp = new WorldUnknownClass3("\u0001/|P{@/#4#M/||(@/*(+N/||4A/N$@0/|P{Z/:0**/|O(|/!O3*/Z{=N/||7#/P6O-/B**7/|*MO/4@0+/3R+-/");
+	public static WorldUnknownClass3<String> field_9791_17t872E67KsYQ1d04LU0O5giS6ZSq17O2qre6bZO5GyA530TyCK24CM264IQ = new WorldUnknownClass3("\u0001/|N#(/B4S0/|+7O/MB:O/||@R/+:P@/||@A/B$%3/6!O4/RS(B/");
+	public static WorldUnknownClass3<String> field_9795_70meZjpgin77izFDRms6YiXGbm7sTRK649zXtTMpcaGJg7Z3848NcHmipQ3k = new WorldUnknownClass3("\u0001/||06/ZP8N/|*ZS/ZB6S/||R:/O4SN/");
+	public static WorldUnknownClass3<String> field_9789_9Z0Rf0DDC0E00xcydj7892e71E4s1cG5iX42294z122jeMAG69D8995634eb = new WorldUnknownClass3("\u0001/|(|M/]7NA/S(!!/||-7/-P3N/");
+	public static WorldUnknownClass3<String> field_9793_29dm1e3GNDeOTZqsS1t29B2w34ks2F6TVj4W2QNMh33p0qFqKW79YSp421af = new WorldUnknownClass3("\u0001/|RS:/3Z:4/|*%$/O($(/||*B/!8PO/|B0#/O!@N/|Z|P/O:@]/N]8]/|#]]/NNRL/||B!/@Z%!/|*$6/3M(8/||40/P{OS/|]|B/:(88/|B36/86RR/|0!$/PA-O/");
+
+	public static String func_9788_833cA0YF34t606AzhAl21SSFKu5o86ZfZT6w0TL8Lej56qphXp7Tl0V5475T(WorldUnknownClass3<String> var0) {
+		if(((String)var0.field_12076_0yKQEI9scMQYs2U79FTz0taKE8d93C90G8erLBZDQ88O3Q6XJ3zC1l0lXK1q).startsWith("\u0001")) {
+			var0.field_12076_0yKQEI9scMQYs2U79FTz0taKE8d93C90G8erLBZDQ88O3Q6XJ3zC1l0lXK1q = WorldUnknownClass5.func_9878_3Wgt9HqAD7yWZZ406W6CQY19roNXuUYDk1Y3k19M34OcmzE4qxWeR376l98q(((String)var0.field_12076_0yKQEI9scMQYs2U79FTz0taKE8d93C90G8erLBZDQ88O3Q6XJ3zC1l0lXK1q).substring(1));
+		}
+
+		return (String)var0.field_12076_0yKQEI9scMQYs2U79FTz0taKE8d93C90G8erLBZDQ88O3Q6XJ3zC1l0lXK1q;
+	}
+}
--- /dev/null
+++ net/minecraft/src/SlotEssenceCloner.java
@@ -1,0 +1,11 @@
+package net.minecraft.src;
+
+public class SlotEssenceCloner extends SlotInventory {
+	public SlotEssenceCloner(GuiContainer var1, IInventory var2, IInventory var3, int var4, int var5, int var6) {
+		super(var1, var3, var4, var5, var6);
+	}
+
+	public boolean isItemValid(ItemStack var1) {
+		return false;
+	}
+}
--- /dev/null
+++ net/minecraft/src/EssenceCloneResult.java
@@ -1,0 +1,45 @@
+package net.minecraft.src;
+
+public class EssenceCloneResult implements IInventory {
+	public ItemStack[] stackResult = new ItemStack[3];
+	public EssenceClonerInventoryCB parent = null;
+
+	public EssenceCloneResult(EssenceClonerInventoryCB var1) {
+		this.parent = var1;
+	}
+
+	public int getSizeInventory() {
+		return 1;
+	}
+
+	public ItemStack getStackInSlot(int var1) {
+		return this.stackResult[var1];
+	}
+
+	public String getInvName() {
+		return "Result";
+	}
+
+	public ItemStack decrStackSize(int var1, int var2) {
+		if(this.stackResult[var1] != null) {
+			ItemStack var3 = this.stackResult[var1];
+			this.stackResult[var1] = null;
+			this.parent.a(this);
+			return var3;
+		} else {
+			this.parent.a(this);
+			return null;
+		}
+	}
+
+	public void setInventorySlotContents(int var1, ItemStack var2) {
+		this.stackResult[var1] = var2;
+	}
+
+	public int getInventoryStackLimit() {
+		return 10000;
+	}
+
+	public void onInventoryChanged() {
+	}
+}
--- net/minecraft/src/Gui.java
+++ net/minecraft/src/Gui.java
@@ -5,49 +5,49 @@
 public class Gui {
 	protected float zLevel = 0.0F;
 
-	protected void drawRect(int var1, int var2, int var3, int var4, int var5) {
-		float var6 = (float)(var5 >> 24 & 255) / 255.0F;
-		float var7 = (float)(var5 >> 16 & 255) / 255.0F;
-		float var8 = (float)(var5 >> 8 & 255) / 255.0F;
-		float var9 = (float)(var5 & 255) / 255.0F;
-		Tessellator var10 = Tessellator.instance;
+	public static void drawRect(int var0, int var1, int var2, int var3, int var4) {
+		float var5 = (float)(var4 >> 24 & 255) / 255.0F;
+		float var6 = (float)(var4 >> 16 & 255) / 255.0F;
+		float var7 = (float)(var4 >> 8 & 255) / 255.0F;
+		float var8 = (float)(var4 & 255) / 255.0F;
+		Tessellator var9 = Tessellator.instance;
 		GL11.glEnable(GL11.GL_BLEND);
 		GL11.glDisable(GL11.GL_TEXTURE_2D);
 		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-		GL11.glColor4f(var7, var8, var9, var6);
-		var10.startDrawingQuads();
-		var10.addVertex((double)var1, (double)var4, 0.0D);
-		var10.addVertex((double)var3, (double)var4, 0.0D);
-		var10.addVertex((double)var3, (double)var2, 0.0D);
-		var10.addVertex((double)var1, (double)var2, 0.0D);
-		var10.draw();
+		GL11.glColor4f(var6, var7, var8, var5);
+		var9.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+		var9.addVertex((double)var0, (double)var3, 0.0D);
+		var9.addVertex((double)var2, (double)var3, 0.0D);
+		var9.addVertex((double)var2, (double)var1, 0.0D);
+		var9.addVertex((double)var0, (double)var1, 0.0D);
+		var9.draw();
 		GL11.glEnable(GL11.GL_TEXTURE_2D);
 		GL11.glDisable(GL11.GL_BLEND);
 	}
 
-	protected void drawGradientRect(int var1, int var2, int var3, int var4, int var5, int var6) {
-		float var7 = (float)(var5 >> 24 & 255) / 255.0F;
-		float var8 = (float)(var5 >> 16 & 255) / 255.0F;
-		float var9 = (float)(var5 >> 8 & 255) / 255.0F;
-		float var10 = (float)(var5 & 255) / 255.0F;
-		float var11 = (float)(var6 >> 24 & 255) / 255.0F;
-		float var12 = (float)(var6 >> 16 & 255) / 255.0F;
-		float var13 = (float)(var6 >> 8 & 255) / 255.0F;
-		float var14 = (float)(var6 & 255) / 255.0F;
+	public static void drawGradientRect(int var0, int var1, int var2, int var3, int var4, int var5) {
+		float var12 = (float)(var4 >> 24 & 255) / 255.0F;
+		float var13 = (float)(var4 >> 16 & 255) / 255.0F;
+		float var14 = (float)(var4 >> 8 & 255) / 255.0F;
+		float var15 = (float)(var4 & 255) / 255.0F;
+		float var16 = (float)(var5 >> 24 & 255) / 255.0F;
+		float var17 = (float)(var5 >> 16 & 255) / 255.0F;
+		float var18 = (float)(var5 >> 8 & 255) / 255.0F;
+		float var19 = (float)(var5 & 255) / 255.0F;
 		GL11.glDisable(GL11.GL_TEXTURE_2D);
 		GL11.glEnable(GL11.GL_BLEND);
 		GL11.glDisable(GL11.GL_ALPHA_TEST);
 		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 		GL11.glShadeModel(GL11.GL_SMOOTH);
-		Tessellator var15 = Tessellator.instance;
-		var15.startDrawingQuads();
-		var15.setColorRGBA_F(var8, var9, var10, var7);
-		var15.addVertex((double)var3, (double)var2, 0.0D);
-		var15.addVertex((double)var1, (double)var2, 0.0D);
-		var15.setColorRGBA_F(var12, var13, var14, var11);
-		var15.addVertex((double)var1, (double)var4, 0.0D);
-		var15.addVertex((double)var3, (double)var4, 0.0D);
-		var15.draw();
+		Tessellator var20 = Tessellator.instance;
+		var20.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
+		var20.setColorRGBA_F(var13, var14, var15, var12);
+		var20.addVertex((double)var2, (double)var1, 0.0D);
+		var20.addVertex((double)var0, (double)var1, 0.0D);
+		var20.setColorRGBA_F(var17, var18, var19, var16);
+		var20.addVertex((double)var0, (double)var3, 0.0D);
+		var20.addVertex((double)var2, (double)var3, 0.0D);
+		var20.draw();
 		GL11.glShadeModel(GL11.GL_FLAT);
 		GL11.glDisable(GL11.GL_BLEND);
 		GL11.glEnable(GL11.GL_ALPHA_TEST);
@@ -58,15 +58,15 @@
 		var1.drawStringWithShadow(var2, var3 - var1.getStringWidth(var2) / 2, var4, var5);
 	}
 
-	public void drawString(FontRenderer var1, String var2, int var3, int var4, int var5) {
-		var1.drawStringWithShadow(var2, var3, var4, var5);
+	public static void drawString(FontRenderer var0, String var1, int var2, int var3, int var4) {
+		var0.drawStringWithShadow(var1, var2, var3, var4);
 	}
 
 	public void drawTexturedModalRect(int var1, int var2, int var3, int var4, int var5, int var6) {
 		float var7 = 0.00390625F;
 		float var8 = 0.00390625F;
 		Tessellator var9 = Tessellator.instance;
-		var9.startDrawingQuads();
+		var9.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
 		var9.addVertexWithUV((double)(var1 + 0), (double)(var2 + var6), (double)this.zLevel, (double)((float)(var3 + 0) * var7), (double)((float)(var4 + var6) * var8));
 		var9.addVertexWithUV((double)(var1 + var5), (double)(var2 + var6), (double)this.zLevel, (double)((float)(var3 + var5) * var7), (double)((float)(var4 + var6) * var8));
 		var9.addVertexWithUV((double)(var1 + var5), (double)(var2 + 0), (double)this.zLevel, (double)((float)(var3 + var5) * var7), (double)((float)(var4 + 0) * var8));
--- net/minecraft/src/BlockLadder.java
+++ net/minecraft/src/BlockLadder.java
@@ -3,27 +3,31 @@
 import java.util.Random;
 
 public class BlockLadder extends Block {
-	protected BlockLadder(int var1, int var2) {
+	public BlockLadder(int var1, int var2) {
 		super(var1, var2, Material.circuits);
 	}
 
 	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
 		int var5 = var1.getBlockMetadata(var2, var3, var4);
 		float var6 = 2.0F / 16.0F;
-		if(var5 == 2) {
+		switch(var5) {
+		case 2:
 			this.setBlockBounds(0.0F, 0.0F, 1.0F - var6, 1.0F, 1.0F, 1.0F);
-		}
-
-		if(var5 == 3) {
+			break;
+		case 3:
 			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, var6);
-		}
-
-		if(var5 == 4) {
+			break;
+		case 4:
 			this.setBlockBounds(1.0F - var6, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
-		}
-
-		if(var5 == 5) {
+			break;
+		case 5:
 			this.setBlockBounds(0.0F, 0.0F, 0.0F, var6, 1.0F, 1.0F);
+			break;
+		case 6:
+			this.setBlockBounds(0.0F, 1.0F - var6, 0.0F, 1.0F, 1.0F, 1.0F);
+			break;
+		case 7:
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, var6, 1.0F);
 		}
 
 		return super.getCollisionBoundingBoxFromPool(var1, var2, var3, var4);
--- /dev/null
+++ net/minecraft/src/ItemHoursLongPastIII.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+public class ItemHoursLongPastIII extends Item {
+	private int field_9424_6T7099C11SkugNx3Mq0p5sK7cN1v9jC4b4T8NI723GnIz8YmgxgY9u9i9KPe = 803;
+
+	public ItemHoursLongPastIII(int var1) {
+		super(var1);
+		this.maxStackSize = 1;
+	}
+
+	public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+		var2.playSoundAtEntity(var3, "ext.notif", 1.0F, 1.0F / (rand.nextFloat() * 0.4F + 0.8F));
+		GuiInGameUnknownClass2 var4 = (GuiInGameUnknownClass2)InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.field_11177_7Zksb7i503i87T27QXh6g1K1pS0mrm03cH6J60Ws3B3hciqhuD9PIOw861xp.peek();
+		if(var4 == null || var4.field_8627_0ZmECs21Yya5NZUsnBNbB5tPFhkwONMzlzVXHX4jsV5aynDc020B97BLqocx != this.field_9424_6T7099C11SkugNx3Mq0p5sK7cN1v9jC4b4T8NI723GnIz8YmgxgY9u9i9KPe) {
+			InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11171_604vK63ksNcNlyaekc36K9YTmY8326K6noo7h77989I2TsYQ61KM5M25Nii9("Hours Long Past III \nCities of stone and glass wrought as a mindless fascimile of an\n unknowable land. Cubes of steel forged from ancient beasts littering seas.\nUnder the sun - and the newborn blood-stars -\n a new world rests, pristine, without history.", 20000, this.field_9424_6T7099C11SkugNx3Mq0p5sK7cN1v9jC4b4T8NI723GnIz8YmgxgY9u9i9KPe);
+		}
+
+		return var1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/VisualsManager.java
@@ -1,0 +1,212 @@
+package net.minecraft.src;
+
+public class VisualsManager {
+	public Visuals field_10942_7xLO64tuZWfUPmt15N4O95hJ0176qp03d5mSW8trXS890yqputsco88a0dk3 = new Visuals() {
+		public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+			return "/unl/8db7811c-71de-11ee-b962-0242ac120002.xAL";
+		}
+
+		public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(Object... var1) {
+			if(var1[0] instanceof WorldZMSpawnWorld2 && ((Integer)var1[1]).intValue() == 5) {
+				this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+				return true;
+			} else {
+				return false;
+			}
+		}
+
+		public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+			return "unlock--v1604tex";
+		}
+
+		public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+			return "16.04 Extended Visuals";
+		}
+
+		public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+			return "Survive 5 rounds on [ZM]Metsan Talo";
+		}
+	};
+	public Visuals field_10946_7AR6ItAen3fx05Vncef3s63538b5wb97oi4kfrKpN1xXa92ennAR19lcPgfJ = new Visuals() {
+		public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+			return "/unl/189953d6-71e0-11ee-b962-0242ac120002.xAL";
+		}
+
+		public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(Object... var1) {
+			if(var1[0] instanceof EntityPlayerZombieModeClient && ((Integer)var1[1]).intValue() == ExtItems.GrayGun.shiftedIndex) {
+				this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+				return true;
+			} else {
+				return false;
+			}
+		}
+
+		public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+			return "unlock--irrigant";
+		}
+
+		public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+			return "Irrigant";
+		}
+
+		public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+			return "Acquire the Gray Gun in ZOMBIES";
+		}
+	};
+	public Visuals field_10945_6iX357SpWthupUbWNfLRO87UU7xQ8Prgh5bU4EX2jBlYJ3DWToctpI0eQj4u = new Visuals() {
+		public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+			return "/unl/ebcc7fc5-e1ff-4d8a-b96c-475aae32cc91.xAL";
+		}
+
+		public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(Object... var1) {
+			if(var1[0] instanceof FreerunMap1 && ((Long)var1[1]).longValue() <= 480L) {
+				this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+				return true;
+			} else {
+				return false;
+			}
+		}
+
+		public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+			return "unlock--cavestyle";
+		}
+
+		public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+			return "Cavestyle";
+		}
+
+		public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+			return "Finish CONSTRUCT in 24 seconds or less";
+		}
+	};
+	public Visuals field_10943_4P6yLgfnvnO6y89XpVE5PS5Hjo62bm3kdr4eGy8mOs9dKTZu5L8RqEHy2P44 = new Visuals() {
+		public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+			return "/unl/546d27d3-e170-47cb-b70e-4f4015fb5aa3.xAL";
+		}
+
+		public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(Object... var1) {
+			if(var1[0] instanceof FreerunMap5 && ((Long)var1[1]).longValue() <= 420L) {
+				this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+				return true;
+			} else {
+				return false;
+			}
+		}
+
+		public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+			return "unlock--neo";
+		}
+
+		public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+			return "Neon";
+		}
+
+		public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+			return "Finish FINALE in 21 seconds or less";
+		}
+	};
+	public Visuals field_10948_0K9Wvp8r1YnOA5010xZpl66lyNUt78N6SfQ197bg85kafTuYvONKR77OoXDq = new Visuals() {
+		public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+			return "/unl/2f22baab-269c-4e76-b0b0-3650e05bacd6.xAL";
+		}
+
+		public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(Object... var1) {
+			if(var1[0] instanceof FreerunMap2 && ((Long)var1[1]).longValue() <= 760L) {
+				this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+				return true;
+			} else {
+				return false;
+			}
+		}
+
+		public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+			return "unlock--v1606tex";
+		}
+
+		public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+			return "16.06 Visuals";
+		}
+
+		public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+			return "Finish SKYLINE in 38 seconds or less";
+		}
+	};
+	public Visuals field_10947_9AnvDYT3tcTSS9Cz1srJAOWX62V5Gqyb2ubqdcRVgP303Y40U8Ke6dGNVv08 = new Visuals() {
+		public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+			return "/unl/9abf38f1-4796-4dc9-a73e-f005bb873ef7.xAL";
+		}
+
+		public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(Object... var1) {
+			if(var1[0] instanceof WorldZMSpawnWorld2 && var1[1] instanceof EntityOtherPlayerMPUnknownClass2) {
+				this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+				return true;
+			} else {
+				return false;
+			}
+		}
+
+		public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+			return "unlock--nostalgy";
+		}
+
+		public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+			return "Nostalgy";
+		}
+
+		public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+			return "Shoot the Intruder in [ZM]Metsan Talo";
+		}
+	};
+	public Visuals field_10944_2EWN3F9cOeZLc1s1Wh3Y3X5G88vSKS70wXa1x0jY361oZ36mAnvM2vYHm7oe = new Visuals() {
+		public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+			return "/unl/beb2cee7-d138-4138-9199-d2fa77127b99.xAL";
+		}
+
+		public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(Object... var1) {
+			if(var1[0] instanceof GuiEssenceTransformer && ((Integer)var1[1]).intValue() == 888) {
+				this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+				return true;
+			} else {
+				return false;
+			}
+		}
+
+		public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+			return "unlock--lucky8";
+		}
+
+		public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+			return "Lucky8";
+		}
+
+		public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+			return "Obtain 888 Essence with one use of the Essence Transformer";
+		}
+	};
+	public Visuals field_10949_90L26at7gGnz0J8Af23lCTpFsYX1JLxXD3R7KOPeOnNw65r9paK3i34TuD8w = new Visuals() {
+		public String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2() {
+			return "/unl/375305cc-f415-435b-baec-26a60ccf5eac.xAL";
+		}
+
+		public boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(Object... var1) {
+			if(var1[0] instanceof WorldZMSpawnWorld1 && ((Integer)var1[1]).intValue() == 6) {
+				this.func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau();
+				return true;
+			} else {
+				return false;
+			}
+		}
+
+		public String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() {
+			return "unlock--lettering";
+		}
+
+		public String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() {
+			return "Lettering";
+		}
+
+		public String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() {
+			return "Complete the Easter Egg on [ZM]Ruinen der Untoten";
+		}
+	};
+}
--- /dev/null
+++ net/minecraft/src/BlockUnknownClass.java
@@ -1,0 +1,7 @@
+package net.minecraft.src;
+
+public class BlockUnknownClass extends Block {
+	public BlockUnknownClass(int var1, int var2, Material var3) {
+		super(var1, var2, var3);
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandSvCheats.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandSvCheats extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8575_9mOUOl87X8goVeVw9Ser8L368NHz5hK00k8QLrU66JDSLJC721EDFezuC12w;
+    
+    CommandSvCheats(final CommandManager abb) {
+        this.field_8575_9mOUOl87X8goVeVw9Ser8L368NHz5hK00k8QLrU66JDSLJC721EDFezuC12w = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        ScreenDebugMenu.dbg_conf_enableCheats = ((int)arr[0] != 0);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return ScreenDebugMenu.dbg_conf_enableCheats ? "1" : "0";
+    }
+}
--- /dev/null
+++ net/minecraft/src/HubGenerator.java
@@ -1,0 +1,63 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Random;
+
+public class HubGenerator {
+	public List<NamedLoc> next_generation_locs = new ArrayList();
+	public List<HubFragment> avail_fragments = Arrays.asList(new HubFragment[]{new HubFragmentHallwayFwd(), new HubFragment4WayCross()});
+	public World target;
+	public List<XYZv> nxtGen;
+
+	public HubGenerator(World var1) {
+		this.target = var1;
+	}
+
+	public List<HubFragment> GetApplicableFragments(List<HubFragment> var1, XYZv var2) {
+		ArrayList var3 = new ArrayList();
+		Iterator var4 = var1.iterator();
+
+		while(var4.hasNext()) {
+			HubFragment var5 = (HubFragment)var4.next();
+			if(var5.canGenerateAt(this.target, var2)) {
+				var3.add(var5);
+			}
+		}
+
+		return var3;
+	}
+
+	public void Begin(XYZv var1) {
+		this.nxtGen = ((HubFragment)this.avail_fragments.get(0)).generateAt(this.target, var1);
+	}
+
+	public void Next() {
+		ArrayList var1 = new ArrayList();
+		Iterator var2 = this.nxtGen.iterator();
+
+		while(true) {
+			XYZv var3;
+			HubFragment var4;
+			do {
+				if(!var2.hasNext()) {
+					this.nxtGen = var1;
+					return;
+				}
+
+				var3 = (XYZv)var2.next();
+				var4 = (HubFragment)this.avail_fragments.get((new Random()).nextInt(this.avail_fragments.size()));
+			} while(!var4.canGenerateAt(this.target, var3));
+
+			List var5 = var4.generateAt(this.target, var3);
+			Iterator var6 = var5.iterator();
+
+			while(var6.hasNext()) {
+				XYZv var7 = (XYZv)var6.next();
+				var1.add(var7);
+			}
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/OverlayWorldEdit.java
@@ -1,0 +1,343 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+
+public class OverlayWorldEdit {
+	public int x1;
+	public int y1;
+	public int z1;
+	public boolean pos1Set = false;
+	public int x2;
+	public int y2;
+	public int z2;
+	public boolean pos2Set = false;
+	public Minecraft tmc;
+	public long lastInput = 0L;
+	int currentSelection = 0;
+	int sel1 = 0;
+	int sel2 = 0;
+	int sel3 = 0;
+	private String[] sel1Options = new String[]{"Fill", "Replace", "Expand", "Move sel.", "Set here"};
+
+	public void SetPos1(int var1, int var2, int var3) {
+		this.x1 = var1;
+		this.y1 = var2;
+		this.z1 = var3;
+		this.pos1Set = true;
+	}
+
+	public void SetPos2(int var1, int var2, int var3) {
+		this.x2 = var1;
+		this.y2 = var2;
+		this.z2 = var3;
+		this.pos2Set = true;
+	}
+
+	public OverlayWorldEdit(Minecraft var1) {
+		this.tmc = var1;
+	}
+
+	public void func_11900_5c2JME9FJM2VGwVfJl0ngO0sr02CU65CYoI791NXV0sKu0R99BVT6So8OD40() {
+		Ext1605Utils.setBlock(this.tmc.theWorld, (long)this.tmc.thePlayer.posX, (long)this.tmc.thePlayer.posY, (long)this.tmc.thePlayer.posZ, this.sel1);
+	}
+
+	public void ExecFill() {
+		if(this.pos1Set && this.pos2Set) {
+			int var1 = Math.min(this.x1, this.x2);
+			int var2 = Math.min(this.y1, this.y2);
+			int var3 = Math.min(this.z1, this.z2);
+			int var4 = Math.max(this.x1, this.x2);
+			int var5 = Math.max(this.y1, this.y2);
+			int var6 = Math.max(this.z1, this.z2);
+			Ext1605Utils.fillBlock(this.tmc.theWorld, new XYZv((long)var1, (long)var2, (long)var3), new XYZv((long)var4, (long)var5, (long)var6), this.sel2);
+			InputHandler.mc.ingameGUI.addChatMessage("Filled " + (var4 - var1 + 1) * (var5 - var2 + 1) * (var6 - var3 + 1) + " blocks.");
+		} else {
+			ExtLogger.i("Both positions are not set.");
+		}
+	}
+
+	public void ExecReplace() {
+		if(this.pos1Set && this.pos2Set) {
+			int var1 = Math.min(this.x1, this.x2);
+			int var2 = Math.min(this.y1, this.y2);
+			int var3 = Math.min(this.z1, this.z2);
+			int var4 = Math.max(this.x1, this.x2);
+			int var5 = Math.max(this.y1, this.y2);
+			int var6 = Math.max(this.z1, this.z2);
+
+			for(int var7 = var1; var7 <= var4; ++var7) {
+				for(int var8 = var2; var8 <= var5; ++var8) {
+					for(int var9 = var3; var9 <= var6; ++var9) {
+						if(this.tmc.theWorld.getBlockId(var7, var8, var9) == this.sel2) {
+							Ext1605Utils.setBlock(this.tmc.theWorld, (long)var7, (long)var8, (long)var9, this.sel3);
+						}
+					}
+				}
+			}
+
+		} else {
+			ExtLogger.i("Both positions are not set.");
+		}
+	}
+
+	public void ExecExpand() {
+		int var1 = this.sel2;
+		switch(var1) {
+		case 0:
+			boolean var2 = this.y1 > this.y2;
+			if(var2) {
+				this.y1 += this.sel3;
+			} else {
+				this.y2 += this.sel3;
+			}
+
+			InputHandler.mc.ingameGUI.addChatMessage("Expanded selection upward");
+			break;
+		case 1:
+			boolean var3 = this.y2 > this.y1;
+			if(var3) {
+				this.y1 -= this.sel3;
+			} else {
+				this.y2 -= this.sel3;
+			}
+
+			InputHandler.mc.ingameGUI.addChatMessage("Expanded selection downward");
+			break;
+		case 2:
+			boolean var4 = this.x1 > this.x2;
+			if(var4) {
+				this.x1 += this.sel3;
+			} else {
+				this.x2 += this.sel3;
+			}
+			break;
+		case 3:
+			boolean var5 = this.x2 > this.x1;
+			if(var5) {
+				this.x1 -= this.sel3;
+			} else {
+				this.x2 -= this.sel3;
+			}
+			break;
+		case 4:
+			boolean var6 = this.z1 > this.z2;
+			if(var6) {
+				this.z1 += this.sel3;
+			} else {
+				this.z2 += this.sel3;
+			}
+			break;
+		case 5:
+			boolean var7 = this.z2 > this.z1;
+			if(var7) {
+				this.z1 -= this.sel3;
+			} else {
+				this.z2 -= this.sel3;
+			}
+		}
+
+	}
+
+	public void ExecRelocate() {
+		int var1 = this.sel2;
+		switch(var1) {
+		case 0:
+			this.y1 += this.sel3;
+			this.y2 += this.sel3;
+			break;
+		case 1:
+			this.y1 -= this.sel3;
+			this.y2 -= this.sel3;
+			break;
+		case 2:
+			this.x1 += this.sel3;
+			this.x2 += this.sel3;
+			break;
+		case 3:
+			this.x1 -= this.sel3;
+			this.x2 -= this.sel3;
+			break;
+		case 4:
+			this.z1 += this.sel3;
+			this.z2 += this.sel3;
+			break;
+		case 5:
+			this.z1 -= this.sel3;
+			this.z2 -= this.sel3;
+		}
+
+	}
+
+	public void Next() {
+		switch(this.currentSelection) {
+		case 0:
+			++this.currentSelection;
+			break;
+		case 1:
+			if(this.sel2 > -1 && this.sel2 < Short.MAX_VALUE && (this.sel2 == 0 || Block.blocksList[this.sel2] != null)) {
+				switch(this.sel1) {
+				case 0:
+					this.ExecFill();
+					this.currentSelection = 0;
+					break;
+				case 1:
+				case 2:
+				case 3:
+					++this.currentSelection;
+					break;
+				case 4:
+					this.func_11900_5c2JME9FJM2VGwVfJl0ngO0sr02CU65CYoI791NXV0sKu0R99BVT6So8OD40();
+					this.currentSelection = 0;
+				}
+			}
+			break;
+		case 2:
+			if(this.sel1 == 2 || this.sel3 > -1 && this.sel3 < Short.MAX_VALUE && (this.sel3 == 0 || Block.blocksList[this.sel3] != null)) {
+				switch(this.sel1) {
+				case 1:
+					this.ExecReplace();
+					this.currentSelection = 0;
+					break;
+				case 2:
+					this.ExecExpand();
+					this.currentSelection = 0;
+					break;
+				case 3:
+					this.ExecRelocate();
+					this.currentSelection = 0;
+				}
+			}
+		}
+
+	}
+
+	public boolean HandleInput(int var1) {
+		if(!ScreenDebugMenu.dbg_conf_enableCheats) {
+			return false;
+		} else {
+			boolean var2 = false;
+			if(this.currentSelection == 0) {
+				if(var1 == 209) {
+					this.sel1 = (this.sel1 + 1) % this.sel1Options.length;
+					var2 = true;
+				} else if(var1 == 201) {
+					--this.sel1;
+					if(this.sel1 < 0) {
+						this.sel1 = this.sel1Options.length - 1;
+					}
+
+					var2 = true;
+				}
+			}
+
+			if(var1 >= 2 && var1 <= 11) {
+				if(this.currentSelection >= 1) {
+					switch(this.currentSelection) {
+					case 1:
+						this.sel2 *= 10;
+						this.sel2 += (var1 - 2 + 1) % 10;
+						break;
+					case 2:
+						this.sel3 *= 10;
+						this.sel3 += (var1 - 2 + 1) % 10;
+					}
+
+					var2 = true;
+				}
+			} else if(var1 == 14 && this.currentSelection >= 1) {
+				switch(this.currentSelection) {
+				case 1:
+					this.sel2 /= 10;
+					break;
+				case 2:
+					this.sel3 /= 10;
+				}
+
+				var2 = true;
+			}
+
+			if(var1 == 199) {
+				this.Next();
+				var2 = true;
+			} else if(var1 == 207) {
+				this.currentSelection = 0;
+				var2 = true;
+			}
+
+			if(var2) {
+				this.lastInput = System.currentTimeMillis();
+			}
+
+			return var2;
+		}
+	}
+
+	public void func_11896_21hxskjoCalSdNwCUtCH797a5Bv6x17Si7L3X48r8FIf14LJZL110IOeH5JV() {
+		if(InputHandler.mc.objectMouseOver != null && InputHandler.mc.objectMouseOver.typeOfHit == 0) {
+			this.pos1Set = true;
+			this.x1 = InputHandler.mc.objectMouseOver.blockX;
+			this.y1 = InputHandler.mc.objectMouseOver.blockY;
+			this.z1 = InputHandler.mc.objectMouseOver.blockZ;
+			InputHandler.mc.ingameGUI.addChatMessage("Position 1 set to " + this.x1 + "," + this.y1 + "," + this.z1);
+		}
+
+	}
+
+	public void func_11901_4GX3NWZYNNxs7759a7f8764Sjs8mN8d0w06o2vq3vJdsHhi1084359oRzOm3() {
+		if(InputHandler.mc.objectMouseOver != null && InputHandler.mc.objectMouseOver.typeOfHit == 0) {
+			this.pos2Set = true;
+			this.x2 = InputHandler.mc.objectMouseOver.blockX;
+			this.y2 = InputHandler.mc.objectMouseOver.blockY;
+			this.z2 = InputHandler.mc.objectMouseOver.blockZ;
+			InputHandler.mc.ingameGUI.addChatMessage("Position 2 set to " + this.x2 + "," + this.y2 + "," + this.z2);
+		}
+
+	}
+
+	public void RenderOverlay(GuiIngame var1, int var2, int var3) {
+		if(System.currentTimeMillis() - this.lastInput <= 5000L || this.currentSelection != 0) {
+			FontRenderer var4 = this.tmc.fontRenderer;
+			byte var5 = 5;
+			int var6 = var3 / 4 + 22 - this.sel1 * 10;
+			if(this.currentSelection == 0) {
+				Gui.drawGradientRect(5, var3 / 4, 70, var3 / 4 + 60, -1609560048, -803200992);
+				int var7 = 0;
+				String[] var8 = this.sel1Options;
+				int var9 = var8.length;
+
+				for(int var10 = 0; var10 < var9; ++var10) {
+					String var11 = var8[var10];
+					Gui.drawString(var4, var11, 17, var6 + 10 * var7, -1);
+					++var7;
+				}
+
+				Gui.drawString(var4, ">", 7, var3 / 4 + 22, 16777215);
+			} else {
+				Gui.drawGradientRect(var5, var3 / 4 + 20, var5 + 65, var3 / 4 + 40, -1609560048, -803200992);
+				Gui.drawString(var4, this.sel1Options[this.sel1], 7, var3 / 4 + 30, 16777215);
+			}
+
+			int var12 = var5 + 68;
+			if(this.currentSelection >= 1) {
+				if(this.currentSelection == 1 && (this.sel1 == 2 || this.sel1 == 3)) {
+					Gui.drawString(var4, "5: z-", var12 + 7, var3 / 4 + 10, 16777215);
+					Gui.drawString(var4, "4: z+", var12 + 7, var3 / 4, 16777215);
+					Gui.drawString(var4, "3: x-", var12 + 7, var3 / 4 - 10, 16777215);
+					Gui.drawString(var4, "2: x+", var12 + 7, var3 / 4 - 20, 16777215);
+					Gui.drawString(var4, "1: down", var12 + 7, var3 / 4 - 30, 16777215);
+					Gui.drawString(var4, "0: up", var12 + 7, var3 / 4 - 40, 16777215);
+				}
+
+				Gui.drawGradientRect(var12, var3 / 4 + 20, var12 + 65, var3 / 4 + 40, -1609560048, -803200992);
+				Gui.drawString(var4, (this.currentSelection == 1 ? ">" : "") + this.sel2, var12 + 7, var3 / 4 + 30, 16777215);
+			}
+
+			var12 += 68;
+			if(this.currentSelection >= 2) {
+				Gui.drawGradientRect(var12, var3 / 4 + 20, var12 + 65, var3 / 4 + 40, -1609560048, -803200992);
+				Gui.drawString(var4, (this.currentSelection == 2 ? ">" : "") + this.sel3, var12 + 7, var3 / 4 + 30, 16777215);
+			}
+
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/ModLoader.java
@@ -1,0 +1,460 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.nio.ByteBuffer;
+import java.nio.ByteOrder;
+import java.nio.IntBuffer;
+import java.nio.file.Files;
+import java.nio.file.OpenOption;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+import java.util.AbstractMap.SimpleEntry;
+import java.util.Map.Entry;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipInputStream;
+import javax.imageio.ImageIO;
+import net.minecraft.client.Minecraft;
+import org.lwjgl.opengl.GL11;
+
+public class ModLoader {
+	private static boolean hasInit = false;
+	private static int highestEntityId = 3000;
+	private static int itemSpriteIndex = 0;
+	private static List<BaseMod> modList = new ArrayList();
+	private static Map<String, List<SimpleEntry<String, Integer>>> overrides = new HashMap();
+	private static int terrainSpriteIndex = 0;
+	public static boolean texturesOverridden = false;
+	private static boolean[] usedItemSprites = new boolean[256];
+	private static boolean[] usedTerrainSprites = new boolean[256];
+	private static List<TextureFX> animList = new ArrayList();
+	public static final String field_11283_36Ty520QfO20Ax3rMshqVfvF7n1CuphU809iDI7awL2ld87Yr6P6DK3kFH46 = "ExtensionLoader 16.05_20#";
+
+	private static void init() {
+		String var0 = "1111111111111011111111111111001111111111111110011111111111110001111111111111110011111001111000001111100110000000111110000000000011111001100000000000000100000000000000010000000000000000000000000000000000000000000000000000000000000000000000001100000000000000";
+		String var1 = "1111111111111111111111111111110111111111111111011111111111111100111111111111000011111111111111111111111111000000100100111000000010000000000000000000000000000000000000000000000000000000000000000000000000000111000000000000001100000000000001111111111111000011";
+
+		for(int var2 = 0; var2 < 256; ++var2) {
+			usedItemSprites[var2] = var0.charAt(var2) == 49;
+			usedTerrainSprites[var2] = var1.charAt(var2) == 49;
+		}
+
+		try {
+			File var5 = new File(ModLoader.class.getProtectionDomain().getCodeSource().getLocation().toURI());
+			readFromClassPath(var5);
+
+			for(int var3 = 0; var3 < Short.MAX_VALUE; ++var3) {
+				if(Block.blocksList[var3] != null && Item.itemsList[var3] == null) {
+					Item.itemsList[var3] = new ItemBlock(var3 - Short.MAX_VALUE);
+				}
+			}
+		} catch (Exception var4) {
+			var4.printStackTrace();
+			throw new RuntimeException("ModLoader has failed to initialize. ", var4);
+		}
+
+		hasInit = true;
+	}
+
+	public static void AddAllEntityIDs() {
+		if(!hasInit) {
+			init();
+		}
+
+		Iterator var0 = modList.iterator();
+
+		while(var0.hasNext()) {
+			BaseMod var1 = (BaseMod)var0.next();
+			var1.AddEntityID();
+		}
+
+	}
+
+	public static int AddAllFuel(int var0) {
+		if(!hasInit) {
+			init();
+		}
+
+		int var1 = 0;
+
+		for(int var2 = 0; var2 < modList.size() && var1 == 0; ++var2) {
+			var1 = ((BaseMod)modList.get(var2)).AddFuel(var0);
+		}
+
+		return var1;
+	}
+
+	public static void AddAllRecipes(CraftingManager var0) {
+		if(!hasInit) {
+			init();
+		}
+
+		Iterator var1 = modList.iterator();
+
+		while(var1.hasNext()) {
+			BaseMod var2 = (BaseMod)var1.next();
+			var2.AddRecipes(var0);
+		}
+
+	}
+
+	public static void AddAllRenderers(Map<Class<? extends Entity>, Render> var0) {
+		if(!hasInit) {
+			init();
+		}
+
+		Iterator var1 = modList.iterator();
+
+		while(var1.hasNext()) {
+			BaseMod var2 = (BaseMod)var1.next();
+			var2.AddRenderer(var0);
+		}
+
+	}
+
+	public static int AddAllSmelting(int var0) {
+		if(!hasInit) {
+			init();
+		}
+
+		int var1 = -1;
+
+		for(int var2 = 0; var2 < modList.size() && var1 == -1; ++var2) {
+			var1 = ((BaseMod)modList.get(var2)).AddSmelting(var0);
+		}
+
+		return var1;
+	}
+
+	private static void addMod(ClassLoader var0, String var1) {
+		try {
+			String var2 = var1.substring(0, var1.length() - 6);
+			var2 = var2.replace('/', '.');
+			Class var3 = var0.loadClass(var2);
+			if(var3.getSuperclass() != BaseMod.class) {
+				return;
+			}
+
+			if(modList.add((BaseMod)var3.newInstance())) {
+				System.out.println("Mod Loaded: " + var2);
+			}
+		} catch (Exception var4) {
+			var4.printStackTrace();
+		}
+
+	}
+
+	public static void addOverride(String var0, String var1, int var2) {
+		Object var3 = (List)overrides.get(var0);
+		if(var3 == null) {
+			var3 = new LinkedList();
+			overrides.put(var0, (List<SimpleEntry<String, Integer>>) var3);
+		}
+
+		((List)var3).add(new SimpleEntry(var1, Integer.valueOf(var2)));
+	}
+
+	public static void addAnimation(TextureFX var0) {
+		animList.add(var0);
+	}
+
+	public static int getUniqueEntityId() {
+		return highestEntityId++;
+	}
+
+	private static int getUniqueItemSpriteIndex() {
+		while(itemSpriteIndex < usedItemSprites.length) {
+			if(!usedItemSprites[itemSpriteIndex]) {
+				usedItemSprites[itemSpriteIndex] = true;
+				return itemSpriteIndex++;
+			}
+
+			++itemSpriteIndex;
+		}
+
+		throw new RuntimeException("No more empty item sprite indices left!");
+	}
+
+	public static int getUniqueSpriteIndex(String var0) {
+		if(var0.equals("/gui/items.png")) {
+			return getUniqueItemSpriteIndex();
+		} else if(var0.equals("/terrain.png")) {
+			return getUniqueTerrainSpriteIndex();
+		} else {
+			throw new RuntimeException("No registry for this texture: " + var0);
+		}
+	}
+
+	private static int getUniqueTerrainSpriteIndex() {
+		while(terrainSpriteIndex < usedTerrainSprites.length) {
+			if(!usedTerrainSprites[terrainSpriteIndex]) {
+				usedTerrainSprites[terrainSpriteIndex] = true;
+				return terrainSpriteIndex++;
+			}
+
+			++terrainSpriteIndex;
+		}
+
+		throw new RuntimeException("No more empty terrain sprite indices left!");
+	}
+
+	public static boolean isModLoaded(String var0) {
+		if(!hasInit) {
+			init();
+		}
+
+		Class var1 = null;
+
+		try {
+			var1 = Class.forName(var0);
+		} catch (ClassNotFoundException var4) {
+			return false;
+		}
+
+		if(var1 != null) {
+			Iterator var2 = modList.iterator();
+
+			while(var2.hasNext()) {
+				BaseMod var3 = (BaseMod)var2.next();
+				if(var1.isInstance(var3)) {
+					return true;
+				}
+			}
+		}
+
+		return false;
+	}
+
+	private static BufferedImage loadImage(RenderEngine var0, String var1) {
+		try {
+			InputStream var2 = var0.field_12279_8nB09v2wL31LD7473aXNMbJrX47AX71iPMP6yPX544heeDvxj78y5qTJYk68.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0.getResourceAsStream(var1);
+			if(var2 != null) {
+				return ImageIO.read(var2);
+			} else {
+				throw new RuntimeException("Image not found: " + var1);
+			}
+		} catch (Exception var3) {
+			throw new RuntimeException(var3);
+		}
+	}
+
+	public static GuiScreen OpenModGUI(EntityPlayerSP var0, Object var1) {
+		if(!hasInit) {
+			init();
+		}
+
+		GuiScreen var2 = null;
+
+		for(int var3 = 0; var3 < modList.size() && var2 == null; ++var3) {
+			var2 = ((BaseMod)modList.get(var3)).OpenModGUI(var0, var1);
+		}
+
+		return var2;
+	}
+
+	public static void PopulateChunk(IChunkProvider var0, int var1, int var2, World var3) {
+		if(!hasInit) {
+			init();
+		}
+
+		Iterator var4 = modList.iterator();
+
+		while(var4.hasNext()) {
+			BaseMod var5 = (BaseMod)var4.next();
+			if(var0 instanceof ChunkProviderGenerate) {
+				var5.GenerateSurface(var3, var3.rand, var1, var2);
+			} else {
+				var5.func_9842_20fGD696E1rrnKO3zQ6ej3jllKU462gK6r1jhOj9DZ6R475673aN5KvNgDSo(var3, var3.rand, var1, var2);
+			}
+		}
+
+	}
+
+	private static void readFromClassPath(File var0) throws IOException {
+		ClassLoader var1 = ModLoader.class.getClassLoader();
+		String var2;
+		File[] var4;
+		if(var0.isFile() && (var0.getName().endsWith(".jar") || var0.getName().endsWith(".zip"))) {
+			ZipInputStream var8 = new ZipInputStream(Files.newInputStream(var0.toPath(), new OpenOption[0]));
+			var4 = null;
+
+			while(true) {
+				ZipEntry var9 = var8.getNextEntry();
+				if(var9 == null) {
+					break;
+				}
+
+				var2 = var9.getName();
+				if(!var9.isDirectory() && var2.contains("mod_") && var2.endsWith(".class")) {
+					addMod(var1, var2);
+				}
+			}
+		} else if(var0.isDirectory()) {
+			File[] var3 = var0.listFiles();
+			if(var3 != null) {
+				var4 = var3;
+				int var5 = var3.length;
+
+				for(int var6 = 0; var6 < var5; ++var6) {
+					File var7 = var4[var6];
+					var2 = var7.getName();
+					if(var7.isFile() && var2.contains("mod_") && var2.endsWith(".class")) {
+						addMod(var1, var2);
+					}
+				}
+			}
+		}
+
+	}
+
+	public static void RegisterAllBlocks(List<Block> var0) {
+		if(!hasInit) {
+			init();
+		}
+
+		Iterator var1 = modList.iterator();
+
+		while(var1.hasNext()) {
+			BaseMod var2 = (BaseMod)var1.next();
+			var2.RegisterBlocks(var0);
+		}
+
+	}
+
+	public static void RegisterAllTextureOverrides(RenderEngine var0) {
+		if(!hasInit) {
+			init();
+		}
+
+		Iterator var1 = modList.iterator();
+
+		while(var1.hasNext()) {
+			BaseMod var2 = (BaseMod)var1.next();
+			var2.RegisterTextureOverrides();
+		}
+
+		Minecraft var33 = var0.options.mc;
+		int var34;
+		if(var33 != null) {
+			for(var34 = 0; var34 < modList.size(); ++var34) {
+				((BaseMod)modList.get(var34)).RegisterAnimation(var33);
+			}
+		}
+
+		for(var34 = 0; var34 < animList.size(); ++var34) {
+			var0.registerTextureFX((TextureFX)animList.get(var34));
+		}
+
+		for(Iterator var3 = overrides.entrySet().iterator(); var3.hasNext(); texturesOverridden = true) {
+			Entry var4 = (Entry)var3.next();
+			String var5 = (String)var4.getKey();
+			int var6 = var0.getTexture(var5);
+			IntBuffer var7 = ByteBuffer.allocateDirect(16).order(ByteOrder.nativeOrder()).asIntBuffer();
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var6);
+			GL11.glGetTexLevelParameter(GL11.GL_TEXTURE_2D, 0, GL11.GL_TEXTURE_HEIGHT, (IntBuffer)var7);
+			int var8 = var7.get(0);
+			int var9 = var8 / 16;
+			List var10 = (List)var4.getValue();
+			Iterator var11 = var10.iterator();
+
+			while(var11.hasNext()) {
+				SimpleEntry var12 = (SimpleEntry)var11.next();
+				String var13 = (String)var12.getKey();
+				int var14 = ((Integer)var12.getValue()).intValue();
+				System.out.println("Overriding " + var5 + " with " + var13 + " @ " + var14);
+				BufferedImage var15 = loadImage(var0, var13);
+				int var16 = var15.getHeight();
+				ByteBuffer var17 = ByteBuffer.allocateDirect(4 * var9 * var9).order(ByteOrder.nativeOrder());
+				int var18 = var9 / var16;
+				int[] var19 = new int[var16 * var16];
+				var15.getRGB(0, 0, var16, var16, var19, 0, var16);
+				int var20 = var14 / 16;
+				int var21 = var14 % 16;
+				int var22 = var9 * var20;
+				int var23 = var9 * var21;
+
+				for(int var24 = 0; var24 < var9; ++var24) {
+					for(int var25 = 0; var25 < var9; ++var25) {
+						int var26 = var18 != 0 ? var16 * (var24 / var18) + var25 / var18 : var16 * var24 * (var16 / var9) + var25 * (var16 / var9);
+						int var27 = var19[var26];
+						byte var28 = (byte)(var27 >> 24 & 255);
+						byte var29 = (byte)(var27 >> 16 & 255);
+						byte var30 = (byte)(var27 >> 8 & 255);
+						byte var31 = (byte)(var27 & 255);
+						var17.put(var29);
+						var17.put(var30);
+						var17.put(var31);
+						var17.put(var28);
+					}
+				}
+
+				var17.position(0);
+
+				try {
+					GL11.class.getMethod("glTexSubImage2D", new Class[]{Integer.TYPE, Integer.TYPE, Integer.TYPE, Integer.TYPE, Integer.TYPE, Integer.TYPE, Integer.TYPE, Integer.TYPE, ByteBuffer.class}).invoke((Object)null, new Object[]{Integer.valueOf(3553), Integer.valueOf(0), Integer.valueOf(var23), Integer.valueOf(var22), Integer.valueOf(var9), Integer.valueOf(var9), Integer.valueOf(6408), Integer.valueOf(5121), var17});
+				} catch (Exception var32) {
+					var32.printStackTrace();
+					throw new RuntimeException("Error calling glTexSubImage2D (blame xau)", var32);
+				}
+			}
+		}
+
+	}
+
+	public static void RegisterAllTileEntities() {
+		if(!hasInit) {
+			init();
+		}
+
+		Iterator var0 = modList.iterator();
+
+		while(var0.hasNext()) {
+			BaseMod var1 = (BaseMod)var0.next();
+			var1.RegisterTileEntity();
+		}
+
+	}
+
+	public static void RunOSDHooks(Minecraft var0) {
+		if(!hasInit) {
+			init();
+		}
+
+		Iterator var1 = modList.iterator();
+
+		while(var1.hasNext()) {
+			BaseMod var2 = (BaseMod)var1.next();
+			var2.OSDHook(var0);
+		}
+
+	}
+
+	public static int func_11262_7FVgHb825Vh87dj7a9W610VePPyEK11H4311BN3gSLe6J6831pq3l6tzy2RP(int var0) {
+		int var1 = -1;
+
+		for(Iterator var2 = modList.iterator(); var2.hasNext() && var1 == -1; var1 = ((BaseMod)var2.next()).func_9844_54pM8s64ZMnaU952nGEh82Q57WO2N6jhc3lwdq8i55LCTqh9Z6CBI7mTN1xJ(var0)) {
+		}
+
+		return var1;
+	}
+
+	public static int func_11266_52C0KnY47qid74yQYI1zgrLooP36NM650B3JgHP47o3Od0glFmCykL7fJoj8(int var0) {
+		int var1 = 0;
+
+		for(Iterator var2 = modList.iterator(); var2.hasNext() && var1 == 0; var1 = ((BaseMod)var2.next()).func_9849_7m6m13dn8LrG10h8c2Og50FZ5BadQ06sFis8fvT5TqNZ2cpOxQ56X340JqVC(var0)) {
+		}
+
+		return var1;
+	}
+
+	public static List<BaseMod> func_11264_7AT2q764kBM4UAhX20130C3Jh6LT7Y5snv3wxjh9e5VP43467B37csjDd1NC() {
+		return Collections.unmodifiableList(modList);
+	}
+}
--- /dev/null
+++ net/minecraft/src/WorldGenHouseSmallUnknownClass2.java
@@ -1,0 +1,53 @@
+package net.minecraft.src;
+
+import java.util.Objects;
+
+public class WorldGenHouseSmallUnknownClass2 {
+	public int field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM;
+	public int field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174;
+
+	public WorldGenHouseSmallUnknownClass2(WorldGenHouseSmallUnknownClass2 var1) {
+		this(var1.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM, var1.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174);
+	}
+
+	public WorldGenHouseSmallUnknownClass2(int var1, int var2) {
+		this.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM = var1;
+		this.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 = var2;
+	}
+
+	public int func_11105_5ZR6ielH0gxIT8YmA1m4F65rkWUs4cP2723lV4Hy6tl6rO7opLrvOyTWthww() {
+		return this.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM;
+	}
+
+	public int func_11106_47IAru15P2DzBMMdHFDJNZXRKMMGzW0ZSLEGX87l25z9CdPzg63Pq5T04vvr() {
+		return this.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174;
+	}
+
+	public WorldGenHouseSmallUnknownClass2 func_11108_2wwtPfGg0JGJPRvt877jq70T0XUQ8Uck2igW1QUed3TPLGg765xcKBkexT3A(int var1) {
+		return new WorldGenHouseSmallUnknownClass2(this.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM * var1, this.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 * var1);
+	}
+
+	public void func_11104_0t72uE0X6e9X1lk504mMn0Usl2040LLyJIqoCM5A8QY4qQ7Bui0LPvUn4qLg(int var1, int var2) {
+		this.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM += var1;
+		this.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 += var2;
+	}
+
+	public WorldGenHouseSmallUnknownClass2 func_11107_43cW0BG7D6e15UgFxhYIhnbmvR9R0GKm0lZwapr276d869pJ379mWCc345jT(int var1, int var2) {
+		return new WorldGenHouseSmallUnknownClass2(this.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM + var1, this.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 + var2);
+	}
+
+	public boolean equals(Object var1) {
+		if(this == var1) {
+			return true;
+		} else if(!(var1 instanceof WorldGenHouseSmallUnknownClass2)) {
+			return false;
+		} else {
+			WorldGenHouseSmallUnknownClass2 var2 = (WorldGenHouseSmallUnknownClass2)var1;
+			return this.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM == var2.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM && this.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174 == var2.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174;
+		}
+	}
+
+	public int hashCode() {
+		return Objects.hash(new Object[]{Integer.valueOf(this.field_11110_8lC0vu3ZWMb5RN6uf3yOxqcTF6il1w83697KcOEhd66eGI1Wh3lPZPcE05RM), Integer.valueOf(this.field_11109_0bm3C9QEP6bCapmYMP36ISZ8F3a48ODO4a58xz6U9hA99ZZj4RI1S24iD174)});
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockCropsOld.java
@@ -1,0 +1,110 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockCropsOld extends BlockFlowerOld {
+	protected BlockCropsOld(int var1, int var2) {
+		super(var1, var2);
+		this.blockIndexInTexture = var2;
+		this.setTickOnLoad(true);
+		float var3 = 0.5F;
+		this.setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, 0.25F, 0.5F + var3);
+	}
+
+	protected boolean canThisPlantGrowOnThisBlockID(int var1) {
+		return var1 == BlockOld.tilledField.blockID;
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		super.updateTick(var1, var2, var3, var4, var5);
+		if(var1.getBlockLightValue(var2, var3 + 1, var4) >= 9) {
+			int var6 = var1.getBlockMetadata(var2, var3, var4);
+			if(var6 < 7) {
+				float var7 = this.getGrowthRate(var1, var2, var3, var4);
+				if(var5.nextInt((int)(100.0F / var7)) == 0) {
+					++var6;
+					var1.setBlockMetadataWithNotify(var2, var3, var4, var6);
+				}
+			}
+		}
+
+	}
+
+	private float getGrowthRate(World var1, int var2, int var3, int var4) {
+		float var5 = 1.0F;
+		int var6 = var1.getBlockId(var2, var3, var4 - 1);
+		int var7 = var1.getBlockId(var2, var3, var4 + 1);
+		int var8 = var1.getBlockId(var2 - 1, var3, var4);
+		int var9 = var1.getBlockId(var2 + 1, var3, var4);
+		int var10 = var1.getBlockId(var2 - 1, var3, var4 - 1);
+		int var11 = var1.getBlockId(var2 + 1, var3, var4 - 1);
+		int var12 = var1.getBlockId(var2 + 1, var3, var4 + 1);
+		int var13 = var1.getBlockId(var2 - 1, var3, var4 + 1);
+		boolean var14 = var8 == this.blockID || var9 == this.blockID;
+		boolean var15 = var6 == this.blockID || var7 == this.blockID;
+		boolean var16 = var10 == this.blockID || var11 == this.blockID || var12 == this.blockID || var13 == this.blockID;
+
+		for(int var17 = var2 - 1; var17 <= var2 + 1; ++var17) {
+			for(int var18 = var4 - 1; var18 <= var4 + 1; ++var18) {
+				int var19 = var1.getBlockId(var17, var3 - 1, var18);
+				float var20 = 0.0F;
+				if(var19 == BlockOld.tilledField.blockID) {
+					var20 = 1.0F;
+					if(var1.getBlockMetadata(var17, var3 - 1, var18) > 0) {
+						var20 = 3.0F;
+					}
+				}
+
+				if(var17 != var2 || var18 != var4) {
+					var20 /= 4.0F;
+				}
+
+				var5 += var20;
+			}
+		}
+
+		if(var16 || var14 && var15) {
+			var5 /= 2.0F;
+		}
+
+		return var5;
+	}
+
+	public int getBlockTextureFromSideAndMetadata(int var1, int var2) {
+		if(var2 < 0) {
+			var2 = 7;
+		}
+
+		return this.blockIndexInTexture + var2;
+	}
+
+	public int getRenderType() {
+		return 6;
+	}
+
+	public void onBlockDestroyedByPlayer(World var1, int var2, int var3, int var4, int var5) {
+		super.onBlockDestroyedByPlayer(var1, var2, var3, var4, var5);
+
+		for(int var6 = 0; var6 < 3; ++var6) {
+			if(var1.rand.nextInt(15) <= var5) {
+				float var7 = 0.7F;
+				float var8 = var1.rand.nextFloat() * var7 + (1.0F - var7) * 0.5F;
+				float var9 = var1.rand.nextFloat() * var7 + (1.0F - var7) * 0.5F;
+				float var10 = var1.rand.nextFloat() * var7 + (1.0F - var7) * 0.5F;
+				EntityItem var11 = new EntityItem(var1, (double)((float)var2 + var8), (double)((float)var3 + var9), (double)((float)var4 + var10), new ItemStack(Item.seeds));
+				var11.delayBeforeCanPickup = 10;
+				var1.spawnEntityInWorld(var11);
+			}
+		}
+
+	}
+
+	public int idDropped(int var1, Random var2) {
+		System.out.println("Get resource: " + var1);
+		return var1 == 7 ? Item.wheat.shiftedIndex : -1;
+	}
+
+	public int quantityDropped(Random var1) {
+		return 1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/WorldUnknownClass3.java
@@ -1,0 +1,9 @@
+package net.minecraft.src;
+
+public class WorldUnknownClass3<T> {
+	public T field_12076_0yKQEI9scMQYs2U79FTz0taKE8d93C90G8erLBZDQ88O3Q6XJ3zC1l0lXK1q;
+
+	public WorldUnknownClass3(T var1) {
+		this.field_12076_0yKQEI9scMQYs2U79FTz0taKE8d93C90G8erLBZDQ88O3Q6XJ3zC1l0lXK1q = var1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/EntitySnowFX.java
@@ -1,0 +1,39 @@
+package net.minecraft.src;
+
+public class EntitySnowFX extends EntityFX {
+	public EntitySnowFX(World var1, double var2, double var4, double var6, double var8, double var10, double var12, int var14) {
+		super(var1, var2, var4, var6, var8, var10, var12);
+		this.motionX = this.motionX * (double)0.01F + var8;
+		this.motionY = this.motionY * (double)-1.01F + var10;
+		this.motionZ = this.motionZ * (double)0.01F + var12;
+		this.particleRed = this.particleGreen = this.particleBlue = 1.0F;
+		this.noClip = true;
+		this.particleTextureIndex = 82 + var14;
+		this.particleMaxAge *= 3;
+	}
+
+	public void renderParticle(Tessellator var1, float var2, float var3, float var4, float var5, float var6, float var7) {
+		super.renderParticle(var1, var2, var3, var4, var5, var6, var7);
+	}
+
+	public void onUpdate() {
+		this.prevPosX = this.posX;
+		this.prevPosY = this.posY;
+		this.prevPosZ = this.posZ;
+		this.particleScale -= 0.01F;
+		if(this.particleAge++ >= this.particleMaxAge) {
+			this.setEntityDead();
+		}
+
+		this.moveEntity(this.motionX, this.motionY, this.motionZ);
+		this.motionX *= (double)0.46F;
+		this.motionY *= (double)0.85F;
+		this.motionZ *= (double)0.46F;
+		if(this.onGround) {
+			this.motionX *= 1.0D;
+			this.motionZ *= 0.75D;
+			this.motionY *= 1.0D;
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandSvLeveltime.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+class CommandSvLeveltime extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8552_2dPZ8hD39301S641ULipvSu57Y8F47pog6n45gMVj6TPzNx9ETjMhmI0W2j4;
+    
+    CommandSvLeveltime(final CommandManager abb) {
+        this.field_8552_2dPZ8hD39301S641ULipvSu57Y8F47pog6n45gMVj6TPzNx9ETjMhmI0W2j4 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (ScreenDebugMenu.dbg_conf_enableCheats) {
+            InputHandler.mc.theWorld.worldTime = (long)arr[0];
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "" + InputHandler.mc.theWorld.worldTime;
+    }
+}
--- net/minecraft/src/ItemPickaxe.java
+++ net/minecraft/src/ItemPickaxe.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
 public class ItemPickaxe extends ItemTool {
-	private static Block[] blocksEffectiveAgainst = new Block[]{Block.cobblestone, Block.stairDouble, Block.stairSingle, Block.stone, Block.cobblestoneMossy, Block.oreIron, Block.blockSteel, Block.oreCoal, Block.blockGold, Block.oreGold, Block.oreDiamond, Block.blockDiamond, Block.ice};
+	private static Block[] blocksEffectiveAgainst = new Block[]{Block.cobblestone, Block.stairDouble, Block.stairSingle, Block.stone, Block.cobblestoneMossy, Block.oreIron, Block.blockSteel, Block.oreCoal, Block.blockGold, Block.oreGold, Block.oreDiamond, Block.blockDiamond, Block.ice, ExtBlocks.LowOreCoal, ExtBlocks.LowOreDiamond, ExtBlocks.LowOreGold, ExtBlocks.LowOreGreenstone, ExtBlocks.LowOreGreenstoneGlowing, ExtBlocks.LowOreIron};
 	private int harvestLevel;
 
 	public ItemPickaxe(int var1, int var2) {
@@ -9,7 +9,11 @@
 		this.harvestLevel = var2;
 	}
 
+	public float getStrVsBlock(ItemStack var1, Block var2) {
+		return var2.pickaxeEffective ? this.efficiencyOnProperMaterial : super.getStrVsBlock(var1, var2);
+	}
+
 	public boolean canHarvestBlock(Block var1) {
-		return var1 == Block.obsidian ? this.harvestLevel == 3 : (var1 != Block.blockDiamond && var1 != Block.oreDiamond ? (var1 != Block.blockGold && var1 != Block.oreGold ? (var1 != Block.blockSteel && var1 != Block.oreIron ? (var1 != Block.oreRedstone && var1 != Block.oreRedstoneGlowing ? (var1.material == Material.rock ? true : var1.material == Material.iron) : this.harvestLevel >= 2) : this.harvestLevel >= 1) : this.harvestLevel >= 2) : this.harvestLevel >= 2);
+		return var1 == Block.obsidian ? this.harvestLevel >= 3 : (var1 != Block.blockDiamond && var1 != Block.oreDiamond && var1 != ExtBlocks.LowOreDiamond && var1 != ExtBlocks.LowOreGold && var1 != Block.oreRedstone && var1 != Block.oreRedstoneGlowing && var1 != Block.blockGold && var1 != Block.oreGold && var1 != ExtBlocks.ClinohumiteOre && var1 != ExtBlocks.LaceAgateOre && var1 != ExtBlocks.MalachiteOre && var1 != ExtBlocks.PyriteOre ? (var1 != Block.blockSteel && var1 != Block.oreIron && var1 != ExtBlocks.LowOreIron ? var1.material == Material.rock || var1.material == Material.iron : this.harvestLevel >= 1) : this.harvestLevel >= 2);
 	}
 }
--- /dev/null
+++ net/minecraft/src/InventoryEssenceCloner.java
@@ -1,0 +1,73 @@
+package net.minecraft.src;
+
+public class InventoryEssenceCloner implements IInventory {
+	public ItemStack[] stackList;
+	private int gridSize;
+	private EssenceClonerInventoryCB craftingInventory;
+
+	public InventoryEssenceCloner(EssenceClonerInventoryCB var1, int var2, int var3) {
+		this.gridSize = var2 * var3;
+		this.stackList = new ItemStack[this.gridSize];
+		this.craftingInventory = var1;
+	}
+
+	public InventoryEssenceCloner(EssenceClonerInventoryCB var1, ItemStack[] var2) {
+		this.gridSize = var2.length;
+		this.stackList = var2;
+		this.craftingInventory = var1;
+	}
+
+	public int getSizeInventory() {
+		return this.gridSize;
+	}
+
+	public ItemStack getStackInSlot(int var1) {
+		return this.stackList[var1];
+	}
+
+	public String getInvName() {
+		return "Crafting";
+	}
+
+	public ItemStack decrStackSize(int var1, int var2) {
+		if(this.stackList[var1] != null) {
+			ItemStack var3;
+			if(this.stackList[var1].stackSize <= var2) {
+				var3 = this.stackList[var1];
+				this.stackList[var1] = null;
+				this.craftingInventory.a(this);
+				return var3;
+			} else {
+				var3 = this.stackList[var1].splitStack(var2);
+				if(this.stackList[var1].stackSize == 0) {
+					this.stackList[var1] = null;
+				}
+
+				this.craftingInventory.a(this);
+				return var3;
+			}
+		} else {
+			return null;
+		}
+	}
+
+	public void setInventorySlotContents(int var1, ItemStack var2) {
+		this.setInventorySlotContents(var1, var2, true);
+	}
+
+	public void setInventorySlotContents(int var1, ItemStack var2, boolean var3) {
+		this.stackList[var1] = var2;
+		if(var3) {
+			this.craftingInventory.a(this);
+		}
+
+	}
+
+	public int getInventoryStackLimit() {
+		return 1000;
+	}
+
+	public void onInventoryChanged() {
+		this.craftingInventory.a(this);
+	}
+}
--- /dev/null
+++ net/minecraft/src/ThreadRecruitmentServer.java
@@ -1,0 +1,67 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.net.ServerSocket;
+import java.net.Socket;
+
+public class ThreadRecruitmentServer extends Thread {
+	private ServerSocket serverSocket;
+	private Socket clientSocket;
+	private DataOutputStream out;
+	private DataInputStream in;
+
+	public static void SendPacket(DataOutputStream var0, RPacket var1) throws IOException {
+		ExtLogger.i("Writing byte " + var1.GetPacketID() + ", size " + var1.GetResponseSize());
+		var0.writeByte(var1.GetPacketID());
+		var0.writeInt(var1.GetResponseSize());
+		var1.Send(var0);
+	}
+
+	public Class<? extends RPacket> GetPacketClassForId(int var1) {
+		switch(var1) {
+		case 160:
+			return RPacketA0Ping.class;
+		default:
+			return null;
+		}
+	}
+
+	public void run() {
+		try {
+			this.serverSocket = new ServerSocket(25566);
+			this.clientSocket = this.serverSocket.accept();
+			this.out = new DataOutputStream(this.clientSocket.getOutputStream());
+			this.in = new DataInputStream(this.clientSocket.getInputStream());
+
+			while(InputHandler.mc.theWorld != null) {
+				while(this.in.available() == 0) {
+				}
+
+				byte var1 = this.in.readByte();
+				int var2 = this.in.readInt();
+				ExtLogger.i("received packet id: " + var1 + ", size: " + var2);
+				Class var3 = this.GetPacketClassForId(var1 & 255);
+				RPacket var4 = (RPacket)var3.getConstructor(new Class[0]).newInstance(new Object[0]);
+				var4.Receive(this.in);
+				var4.Respond(this.out);
+			}
+		} catch (Exception var13) {
+			var13.printStackTrace();
+		} finally {
+			ExtLogger.i("server thread finished");
+
+			try {
+				this.serverSocket.close();
+				this.clientSocket.close();
+				this.out.close();
+				this.in.close();
+			} catch (IOException var12) {
+				var12.printStackTrace();
+			}
+
+		}
+
+	}
+}
--- net/minecraft/src/EnumMobType.java
+++ net/minecraft/src/EnumMobType.java
@@ -4,4 +4,22 @@
 	everything,
 	mobs,
 	players;
+
+    private static final /* synthetic */ EnumMobType[] field_11836_91jI5jByHCEsnvbu45R5vB70d0e5TUDCQJvM3tJ9E39n7NyrOX794PSdZOeK;
+
+	public static EnumMobType[] func_11832_9P1o1oebT0P6qN82XfGD0SeXmi6PfCwPh7Sx35L3OlWewYuRMagJ5966WRzN() {
+		return (EnumMobType[])field_11836_91jI5jByHCEsnvbu45R5vB70d0e5TUDCQJvM3tJ9E39n7NyrOX794PSdZOeK.clone();
+	}
+
+	public static EnumMobType func_11831_54OYTX0TBS3019Nkgl03ToJS0a3360XIimXhRB8GUT59rG8E059j71TIdkD7(String var0) {
+		return (EnumMobType)Enum.valueOf(EnumMobType.class, var0);
+	}
+
+	private static EnumMobType[] func_11833_154xDXhBe8J962VQQHTk0w6M4874x4xz18ur639FA249bRztNO5fECfn132P() {
+		return new EnumMobType[]{everything, mobs, players};
+	}
+
+    static {
+        field_11836_91jI5jByHCEsnvbu45R5vB70d0e5TUDCQJvM3tJ9E39n7NyrOX794PSdZOeK = EnumMobType.func_11833_154xDXhBe8J962VQQHTk0w6M4874x4xz18ur639FA249bRztNO5fECfn132P();
+    }
 }
--- /dev/null
+++ net/minecraft/src/BiomeUnknownClass2.java
@@ -1,0 +1,15 @@
+package net.minecraft.src;
+
+public class BiomeUnknownClass2 implements BiomeInterface {
+	public double func_10184_39mJVmq3bl4dbH51995p9tocRB43bFXruO32GkxVTy54fzIxdy5dt9OeTC2A(int var1, int var2, EnumWorldGenerator var3) {
+		return 0.0D;
+	}
+
+	public double func_10186_4hoZRS129yUan88AHp1ksCfja1h93mYKfFda82Qtd8pqKm7G4bgpnYsijiMu(int var1, int var2, EnumWorldGenerator var3) {
+		return 0.0D;
+	}
+
+	public WorldGenMyconUnknownClass func_10185_7j1lR4019pucW00n7wn38afjBd62vEMB6B6SVB9068f4kyPzw4E6wI65ufr8(int var1, int var2, EnumWorldGenerator var3) {
+		return WorldGenMyconUnknownClass.func_9978_2dCM22Pc7rV0IQo46JM3ja84x9AHCGNPeSCDVFoTi3969B8hv2sM7nr6o61r(0.0D, 0.0D, var3);
+	}
+}
--- net/minecraft/src/RedstoneUpdateInfo.java
+++ net/minecraft/src/RedstoneUpdateInfo.java
@@ -1,10 +1,10 @@
 package net.minecraft.src;
 
-class RedstoneUpdateInfo {
-	int x;
-	int y;
-	int z;
-	long updateTime;
+public class RedstoneUpdateInfo {
+	public int x;
+	public int y;
+	public int z;
+	public long updateTime;
 
 	public RedstoneUpdateInfo(int var1, int var2, int var3, long var4) {
 		this.x = var1;
--- net/minecraft/src/MovementInputFromOptions.java
+++ net/minecraft/src/MovementInputFromOptions.java
@@ -50,6 +50,28 @@
 	public void updatePlayerMoveState(EntityPlayer var1) {
 		this.moveStrafe = 0.0F;
 		this.moveForward = 0.0F;
+		this.jump = this.movementKeyStates[4];
+		this.sneak = this.movementKeyStates[5];
+		if(InputHandler.gamepads != null) {
+			for(int var2 = 0; var2 != InputHandler.gamepads.length; ++var2) {
+				if(InputHandler.gamepads[var2] != null && (InputHandler.gamepads[var2].getXAxisValue() != -1.0F || InputHandler.gamepads[var2].getYAxisValue() != -1.0F)) {
+					this.moveStrafe = -InputHandler.gamepads[var2].getXAxisValue();
+					if((double)this.moveStrafe > -0.15D && (double)this.moveStrafe < 0.15D) {
+						this.moveStrafe = 0.0F;
+					}
+
+					this.moveForward = -InputHandler.gamepads[var2].getYAxisValue();
+					if((double)this.moveForward > -0.15D && (double)this.moveForward < 0.15D) {
+						this.moveForward = 0.0F;
+					}
+
+					if(this.moveStrafe != 0.0F || this.moveForward != 0.0F) {
+						return;
+					}
+				}
+			}
+		}
+
 		if(this.movementKeyStates[0]) {
 			++this.moveForward;
 		}
@@ -64,13 +86,6 @@
 
 		if(this.movementKeyStates[3]) {
 			--this.moveStrafe;
-		}
-
-		this.jump = this.movementKeyStates[4];
-		this.sneak = this.movementKeyStates[5];
-		if(this.sneak) {
-			this.moveStrafe = (float)((double)this.moveStrafe * 0.3D);
-			this.moveForward = (float)((double)this.moveForward * 0.3D);
 		}
 
 	}
--- net/minecraft/src/CraftingInventoryPlayerCB.java
+++ net/minecraft/src/CraftingInventoryPlayerCB.java
@@ -6,10 +6,10 @@
 
 	public CraftingInventoryPlayerCB(ItemStack[] var1) {
 		this.craftMatrix = new InventoryCrafting(this, var1);
-		this.onCraftMatrixChanged(this.craftMatrix);
+		this.a(this.craftMatrix);
 	}
 
-	public void onCraftMatrixChanged(IInventory var1) {
+	public void a(IInventory var1) {
 		int[] var2 = new int[9];
 
 		for(int var3 = 0; var3 < 3; ++var3) {
--- /dev/null
+++ net/minecraft/src/CommandWorldeditAccept.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandWorldeditAccept extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8606_565a2i27PjK9sNy5B40D58Xx2Tw770sS31E7Q099RWl34Fh4Klce16S2OtxX;
+    
+    CommandWorldeditAccept(final CommandManager abb) {
+        this.field_8606_565a2i27PjK9sNy5B40D58Xx2Tw770sS31E7Q099RWl34Fh4Klce16S2OtxX = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.ingameGUI.weditOverlay.Next();
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/CommandMcViewbarrier.java
@@ -1,0 +1,22 @@
+package net.minecraft.src;
+
+class CommandMcViewbarrier extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8603_3a9KlMB1v1xjL3yWi1BebH99oQOUd5LNy8Kv16ti717EQaTe5DfBS5J30759;
+    
+    CommandMcViewbarrier(final CommandManager abb) {
+        this.field_8603_3a9KlMB1v1xjL3yWi1BebH99oQOUd5LNy8Kv16ti717EQaTe5DfBS5J30759 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        try {
+            ((BlockHidable)ExtBlocks.BarrierBlock).render = ((int)arr[0] == 1);
+        }
+        catch (final Exception ex) {}
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return ((BlockHidable)ExtBlocks.BarrierBlock).render ? "1" : "0";
+    }
+}
--- /dev/null
+++ net/minecraft/src/ItemRainConch.java
@@ -1,0 +1,17 @@
+package net.minecraft.src;
+
+public class ItemRainConch extends Item {
+	public ItemRainConch(int var1) {
+		super(var1);
+		this.maxStackSize = 1;
+	}
+
+	public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+		if(var3.inventory.consumeInventoryItem(ExtItems.essence.shiftedIndex)) {
+			var2.playSoundAtEntity(var3, "ext.notif", 1.0F, 1.0F / (rand.nextFloat() * 0.4F + 0.8F));
+			InputHandler.mc.isRaining = !InputHandler.mc.isRaining;
+		}
+
+		return var1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockLichen.java
@@ -1,0 +1,15 @@
+package net.minecraft.src;
+
+public class BlockLichen extends BlockFlower {
+	public BlockLichen(int var1, int var2) {
+		super(var1, var2);
+	}
+
+	public boolean canBlockStay(World var1, int var2, int var3, int var4) {
+		return this.canThisPlantGrowOnThisBlockID(var1.getBlockId(var2, var3 - 1, var4));
+	}
+
+	protected boolean canThisPlantGrowOnThisBlockID(int var1) {
+		return var1 == ExtBlocks.LowStone.blockID || var1 == ExtBlocks.LowRiverbed.blockID;
+	}
+}
--- /dev/null
+++ net/minecraft/src/HubFragment.java
@@ -1,0 +1,9 @@
+package net.minecraft.src;
+
+import java.util.List;
+
+public interface HubFragment {
+	List<XYZv> generateAt(World var1, XYZv var2);
+
+	boolean canGenerateAt(World var1, XYZv var2);
+}
--- /dev/null
+++ net/minecraft/src/BlockObsidianOld.java
@@ -1,0 +1,17 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockObsidianOld extends BlockStoneOld {
+	public BlockObsidianOld(int var1, int var2) {
+		super(var1, var2);
+	}
+
+	public int quantityDropped(Random var1) {
+		return 1;
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return BlockOld.obsidian.blockID;
+	}
+}
--- /dev/null
+++ net/minecraft/src/PartPose.java
@@ -1,0 +1,17 @@
+package net.minecraft.src;
+
+public class PartPose {
+	public float x;
+	public float y;
+	public float z;
+
+	public PartPose(float var1, float var2, float var3) {
+		this.x = var1;
+		this.y = var2;
+		this.z = var3;
+	}
+
+	public static PartPose offset(float var0, float var1, float var2) {
+		return new PartPose(var0, var1, var2);
+	}
+}
--- net/minecraft/src/Render.java
+++ net/minecraft/src/Render.java
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import net.minecraft.client.Minecraft;
 import org.lwjgl.opengl.GL11;
 
 public abstract class Render {
@@ -16,25 +17,27 @@
 		var2.bindTexture(var2.getTexture(var1));
 	}
 
-	protected void loadDownloadableImageTexture(String var1, String var2) {
+	protected ImageHolder loadDownloadableImageTexture(String var1, String var2) {
 		RenderEngine var3 = this.renderManager.renderEngine;
-		var3.bindTexture(var3.getTextureForDownloadableImage(var1, var2));
+		ImageHolder var4 = var3.getTextureForDownloadableImage(var1, var2);
+		var3.bindTexture(var4.textureName);
+		return var4;
 	}
 
 	private void renderEntityOnFire(Entity var1, double var2, double var4, double var6, float var8) {
 		GL11.glDisable(GL11.GL_LIGHTING);
 		int var9 = Block.fire.blockIndexInTexture;
 		int var10 = (var9 & 15) << 4;
-		int var11 = var9 & 240;
+		int var11 = var9 & 4080;
 		float var12 = (float)var10 / 256.0F;
 		float var13 = ((float)var10 + 15.99F) / 256.0F;
-		float var14 = (float)var11 / 256.0F;
-		float var15 = ((float)var11 + 15.99F) / 256.0F;
+		float var14 = (float)var11 / 512.0F;
+		float var15 = ((float)var11 + 15.99F) / 512.0F;
 		GL11.glPushMatrix();
 		GL11.glTranslatef((float)var2, (float)var4, (float)var6);
 		float var16 = var1.width * 1.4F;
 		GL11.glScalef(var16, var16, var16);
-		this.loadTexture("/terrain.png");
+		this.loadTexture(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L);
 		Tessellator var17 = Tessellator.instance;
 		float var18 = 1.0F;
 		float var19 = 0.5F;
@@ -96,7 +99,7 @@
 		}
 
 		var31.draw();
-		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+		GL11.glColor4f(0.4F, 0.8F, 1.0F, 1.0F);
 		GL11.glDisable(GL11.GL_BLEND);
 		GL11.glDepthMask(true);
 	}
@@ -114,7 +117,7 @@
 					var20 = 1.0D;
 				}
 
-				var19.setColorRGBA_F(1.0F, 1.0F, 1.0F, (float)var20);
+				var19.setColorRGBA_F(0.4F, 0.8F, 1.0F, (float)var20);
 				double var22 = (double)var8 + var1.minX + var13;
 				double var24 = (double)var8 + var1.maxX + var13;
 				double var26 = (double)var9 + var1.minY + var15 + 1.0D / 64.0D;
@@ -130,6 +133,7 @@
 				var19.addVertexWithUV(var24, var26, var28, (double)var33, (double)var34);
 			}
 		}
+
 	}
 
 	public static void renderOffsetAABB(AxisAlignedBB var0, double var1, double var3, double var5) {
@@ -208,7 +212,7 @@
 	}
 
 	public void doRenderShadowAndFire(Entity var1, double var2, double var4, double var6, float var8, float var9) {
-		if(this.renderManager.options.fancyGraphics && this.shadowSize > 0.0F) {
+		if(this.renderManager.options.fancyGraphics == 1 && this.shadowSize > 0.0F) {
 			double var10 = this.renderManager.getDistanceToCamera(var1.posX, var1.posY, var1.posZ);
 			float var12 = (float)((1.0D - var10 / 256.0D) * (double)this.shadowOpaque);
 			if(var12 > 0.0F) {
--- /dev/null
+++ net/minecraft/src/BlockGlowingFlowerInfused.java
@@ -1,0 +1,18 @@
+package net.minecraft.src;
+
+public class BlockGlowingFlowerInfused extends BlockGlowing {
+	public int power = 0;
+
+	public BlockGlowingFlowerInfused(int var1, int var2, int var3, int var4) {
+		super(var1, var2, var3);
+		this.power = var4;
+	}
+
+	public void onEntityCollidedWithBlock(World var1, int var2, int var3, int var4, Entity var5) {
+		if(var5 instanceof EntityMob) {
+			((EntityMob)var5).attackEntityFrom((Entity)null, 2 * this.power);
+			((EntityMob)var5).fire = 300;
+		}
+
+	}
+}
--- net/minecraft/src/Packet20NamedEntitySpawn.java
+++ net/minecraft/src/Packet20NamedEntitySpawn.java
@@ -37,7 +37,7 @@
 		this.zPosition = var1.readInt();
 		this.rotation = var1.readByte();
 		this.pitch = var1.readByte();
-		this.currentItem = var1.readShort();
+		this.currentItem = var1.readShort() & '\uffff';
 	}
 
 	public void writePacket(DataOutputStream var1) throws IOException {
--- /dev/null
+++ net/minecraft/src/CommandMcGencitysize.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandMcGencitysize extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8576_3B2482QhY59iOi3WjAs81v83i51m28rKNOHpIasIW74hGntlBpD8qf3uzJ3O;
+    
+    CommandMcGencitysize(final CommandManager abb) {
+        this.field_8576_3B2482QhY59iOi3WjAs81v83i51m28rKNOHpIasIW74hGntlBpD8qf3uzJ3O = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        WorldGenHouseSmall.field_9665_9HHBzQ2wG84LFbc45tMzL7mAlvvdO1k855mGGSfk3FfJP80LupQs710X4K6J = Math.max((int)arr[0], 0);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "" + WorldGenHouseSmall.field_9665_9HHBzQ2wG84LFbc45tMzL7mAlvvdO1k855mGGSfk3FfJP80LupQs710X4K6J;
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockClayOld.java
@@ -1,0 +1,17 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockClayOld extends BlockOld {
+	public BlockClayOld(int var1, int var2) {
+		super(var1, var2, Material.clay);
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return Item.clay.shiftedIndex;
+	}
+
+	public int quantityDropped(Random var1) {
+		return 4;
+	}
+}
--- /dev/null
+++ net/minecraft/src/GuiVisuals.java
@@ -1,0 +1,186 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.util.List;
+import net.minecraft.client.Minecraft;
+import org.lwjgl.Sys;
+import org.lwjgl.input.Mouse;
+import org.lwjgl.opengl.GL11;
+
+public class GuiVisuals extends GuiScreen {
+	protected GuiScreen field_8047_91els8Z8klB1I6xn69iR1U2nRQcCTPWEwKs2Pm27f7044G91fpfhLX3412PS;
+	private int field_8052_05FNVLV6sMqT04VynsHRAEvUq29da0cF008aVXh42Du9zMt2SLAVE2T44MbF = 0;
+	private int field_8054_0vtKL1i91d46R5FpSKXKXQVCe1R52gH4c602PZtq4xjuk905fUVbu5NIL4B9 = 32;
+	private int field_8053_6360hH78oXUPtpNsxJ9KJ3olMMb59xpqne9zLH698sf1b0QSwkMHTBoGGDGw = this.height - 55 + 4;
+	private int field_8049_7Q8IDzEh1OFLQmmvfME63fCqL75Czx6428EvrAg9CDxDWV90348nEWs0TFt5 = 0;
+	private int field_8045_5xJ1smKZvx3Ow5aa91mXltwcPIDJDePo8APL7EtUYmH59XdH9wiXOSF9Qo0d = this.width;
+	private int field_8050_0I25v8Jku2n7J0x1hZ8KAtJGMd3O6x9n0Epbpw91MqHie16xt2ZaA6X81ZNd = -2;
+	private int field_8048_9SDvP1kn9Sd96o7De75R09os8ihE21oM9ia16Dm8laAG1ieXpRZvtcM7V7V1 = -1;
+	private String field_8046_6j29I2Ftx34gqjw4e990yBfqcVM7CKK1U50NLdk9w65WtbVSitw7Ys1aUAN6 = "";
+	public GuiImageHandler field_8051_57035AM89c7AjJAvlc6yp0I0vm61Sr0mqq1yu3Kg3bdv7ZnBwlAF6T7BaYL9;
+
+	public GuiVisuals(GuiScreen var1) {
+		this.field_8047_91els8Z8klB1I6xn69iR1U2nRQcCTPWEwKs2Pm27f7044G91fpfhLX3412PS = var1;
+		this.field_8051_57035AM89c7AjJAvlc6yp0I0vm61Sr0mqq1yu3Kg3bdv7ZnBwlAF6T7BaYL9 = new GuiImageHandler(var1.mc, "/pack-cover.png", 700.0F);
+	}
+
+	public void initGui() {
+		this.controlList.clear();
+		this.controlList.add(new GuiSmallButton(5, this.width / 2 - 154, this.height - 48, "Open Visuals directory"));
+		this.controlList.add(new GuiSmallButton(6, this.width / 2 + 4, this.height - 48, "Done"));
+		this.mc.field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE.func_11686_0yeI5h1X9b94d4uci2eCaLdWyK789MtuRcX9xpiRS1xz81zEG9z4urygJcFf();
+		this.field_8046_6j29I2Ftx34gqjw4e990yBfqcVM7CKK1U50NLdk9w65WtbVSitw7Ys1aUAN6 = (new File(this.mc.mcDataDir, "texturepacks")).getAbsolutePath();
+		this.field_8054_0vtKL1i91d46R5FpSKXKXQVCe1R52gH4c602PZtq4xjuk905fUVbu5NIL4B9 = 32;
+		this.field_8053_6360hH78oXUPtpNsxJ9KJ3olMMb59xpqne9zLH698sf1b0QSwkMHTBoGGDGw = this.height - 58 + 4;
+		this.field_8049_7Q8IDzEh1OFLQmmvfME63fCqL75Czx6428EvrAg9CDxDWV90348nEWs0TFt5 = 0;
+		this.field_8045_5xJ1smKZvx3Ow5aa91mXltwcPIDJDePo8APL7EtUYmH59XdH9wiXOSF9Qo0d = this.width;
+	}
+
+	private void func_8044_0742U1cHIZe1V33pzRlh36v217hgm4Nfw1IS496RJ468j4u05N52S7W77fQx() {
+		this.mc.renderEngine.refreshTextures();
+		Minecraft.field_7326_55yB6jYtSi94r555184CYoXDQ1YhyBnoS1lJaCCAbdj3rDu1RNzU8Gp4C3g5 = true;
+		this.mc.field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0.field_10164_5N63dbka0na7Is07L9kMmSk6ZK28Ioxdll6JwQgybo1I69cauDA8U5rtDvBv.func_12189_4e16037zP017Ybyhw4klyCwOs24S8Nh9OzRYIDt7732Nr83dqO5Otm7FIbRq(this.mc);
+		this.mc.fontRenderer = new FontRenderer(this.mc.options, "/default.png", this.mc.renderEngine);
+	}
+
+	protected void actionPerformed(GuiButton var1) {
+		if(var1.enabled) {
+			if(var1.id == 5) {
+				Sys.openURL("file://" + this.field_8046_6j29I2Ftx34gqjw4e990yBfqcVM7CKK1U50NLdk9w65WtbVSitw7Ys1aUAN6);
+			}
+
+			if(var1.id == 6) {
+				this.func_8044_0742U1cHIZe1V33pzRlh36v217hgm4Nfw1IS496RJ468j4u05N52S7W77fQx();
+				this.mc.displayGuiScreen(this.field_8047_91els8Z8klB1I6xn69iR1U2nRQcCTPWEwKs2Pm27f7044G91fpfhLX3412PS);
+			}
+		}
+
+	}
+
+	protected void mouseClicked(int var1, int var2, int var3) {
+		super.mouseClicked(var1, var2, var3);
+	}
+
+	protected void mouseMovedOrUp(int var1, int var2, int var3) {
+		super.mouseMovedOrUp(var1, var2, var3);
+	}
+
+	public void drawScreen(int var1, int var2, float var3) {
+		this.drawDefaultBackground();
+		if(this.field_8048_9SDvP1kn9Sd96o7De75R09os8ihE21oM9ia16Dm8laAG1ieXpRZvtcM7V7V1 <= 0) {
+			this.mc.field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE.func_11686_0yeI5h1X9b94d4uci2eCaLdWyK789MtuRcX9xpiRS1xz81zEG9z4urygJcFf();
+			this.field_8048_9SDvP1kn9Sd96o7De75R09os8ihE21oM9ia16Dm8laAG1ieXpRZvtcM7V7V1 += 20;
+		}
+
+		List var4 = this.mc.field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE.func_11687_4UH7IiXkuqd31i8hvRh1k6pGb1Yy461zeePLNBB7h6wQN8j32SEy5HWeSri8();
+		int var5;
+		int var7;
+		if(Mouse.isButtonDown(0)) {
+			if(this.field_8050_0I25v8Jku2n7J0x1hZ8KAtJGMd3O6x9n0Epbpw91MqHie16xt2ZaA6X81ZNd == -1) {
+				if(var2 >= this.field_8054_0vtKL1i91d46R5FpSKXKXQVCe1R52gH4c602PZtq4xjuk905fUVbu5NIL4B9 && var2 <= this.field_8053_6360hH78oXUPtpNsxJ9KJ3olMMb59xpqne9zLH698sf1b0QSwkMHTBoGGDGw) {
+					var5 = this.width / 16;
+					int var6 = this.width / 16 + 260;
+					var7 = (var2 - this.field_8054_0vtKL1i91d46R5FpSKXKXQVCe1R52gH4c602PZtq4xjuk905fUVbu5NIL4B9 + this.field_8052_05FNVLV6sMqT04VynsHRAEvUq29da0cF008aVXh42Du9zMt2SLAVE2T44MbF - 2) / 36;
+					if(var1 >= var5 && var1 <= var6 && var7 >= 0 && var7 < var4.size() && this.mc.field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE.func_11688_663pI2OKy99iPX44ZQP69Mfd981246V7m8L66atRipA89ks12No52IZGw4mJ((VisualsUnknownClass)var4.get(var7))) {
+						this.field_8051_57035AM89c7AjJAvlc6yp0I0vm61Sr0mqq1yu3Kg3bdv7ZnBwlAF6T7BaYL9.func_9955_5630DX5SV053d8F74A11907j9t7039N0rdr37W800V11wnAC9AhArcyC6F5W("/pack-cover.png");
+						this.func_8044_0742U1cHIZe1V33pzRlh36v217hgm4Nfw1IS496RJ468j4u05N52S7W77fQx();
+					}
+
+					this.field_8050_0I25v8Jku2n7J0x1hZ8KAtJGMd3O6x9n0Epbpw91MqHie16xt2ZaA6X81ZNd = var2;
+				} else {
+					this.field_8050_0I25v8Jku2n7J0x1hZ8KAtJGMd3O6x9n0Epbpw91MqHie16xt2ZaA6X81ZNd = -2;
+				}
+			} else if(this.field_8050_0I25v8Jku2n7J0x1hZ8KAtJGMd3O6x9n0Epbpw91MqHie16xt2ZaA6X81ZNd >= 0) {
+				this.field_8052_05FNVLV6sMqT04VynsHRAEvUq29da0cF008aVXh42Du9zMt2SLAVE2T44MbF -= var2 - this.field_8050_0I25v8Jku2n7J0x1hZ8KAtJGMd3O6x9n0Epbpw91MqHie16xt2ZaA6X81ZNd;
+				this.field_8050_0I25v8Jku2n7J0x1hZ8KAtJGMd3O6x9n0Epbpw91MqHie16xt2ZaA6X81ZNd = var2;
+			}
+		} else {
+			if(this.field_8050_0I25v8Jku2n7J0x1hZ8KAtJGMd3O6x9n0Epbpw91MqHie16xt2ZaA6X81ZNd >= 0 && this.field_8050_0I25v8Jku2n7J0x1hZ8KAtJGMd3O6x9n0Epbpw91MqHie16xt2ZaA6X81ZNd == var2) {
+			}
+
+			this.field_8050_0I25v8Jku2n7J0x1hZ8KAtJGMd3O6x9n0Epbpw91MqHie16xt2ZaA6X81ZNd = -1;
+		}
+
+		var5 = var4.size() * 36 - (this.field_8053_6360hH78oXUPtpNsxJ9KJ3olMMb59xpqne9zLH698sf1b0QSwkMHTBoGGDGw - this.field_8054_0vtKL1i91d46R5FpSKXKXQVCe1R52gH4c602PZtq4xjuk905fUVbu5NIL4B9 - 4);
+		if(var5 < 0) {
+			var5 /= 2;
+		}
+
+		if(this.field_8052_05FNVLV6sMqT04VynsHRAEvUq29da0cF008aVXh42Du9zMt2SLAVE2T44MbF < 0) {
+			this.field_8052_05FNVLV6sMqT04VynsHRAEvUq29da0cF008aVXh42Du9zMt2SLAVE2T44MbF = 0;
+		}
+
+		if(this.field_8052_05FNVLV6sMqT04VynsHRAEvUq29da0cF008aVXh42Du9zMt2SLAVE2T44MbF > var5) {
+			this.field_8052_05FNVLV6sMqT04VynsHRAEvUq29da0cF008aVXh42Du9zMt2SLAVE2T44MbF = var5;
+		}
+
+		if(this.mc.theWorld == null) {
+			this.field_8051_57035AM89c7AjJAvlc6yp0I0vm61Sr0mqq1yu3Kg3bdv7ZnBwlAF6T7BaYL9.func_9954_31xL9lqzsd832NIF2fnqGsFer65B6pP9dW8u4402h7H3mW9p6ZjIZK9RM2zT(this.width, this.height);
+		}
+
+		GL11.glDisable(GL11.GL_LIGHTING);
+		GL11.glDisable(GL11.GL_FOG);
+		Tessellator var15 = Tessellator.instance;
+
+		for(var7 = 0; var7 < var4.size(); ++var7) {
+			VisualsUnknownClass var8 = (VisualsUnknownClass)var4.get(var7);
+			int var9 = this.width / 16;
+			int var10 = 36 + var7 * 36 - this.field_8052_05FNVLV6sMqT04VynsHRAEvUq29da0cF008aVXh42Du9zMt2SLAVE2T44MbF;
+			byte var11 = 32;
+			byte var12 = 32;
+			if(var8 == this.mc.field_7308_49g3Ue4B4ymyJ5yc4CXdts2UZnR4OP36zG20Omc6J6Ly1C5xR8Habk43qvGE.field_11692_1k4uc1i9aprs9834A7rEVW0D2zfl3BI2g00e7D4rgDYDih8Qu9WukuM46qw0) {
+				int var13 = var9 - 1;
+				int var14 = var13 + 260;
+				Gui.drawGradientRect(var13 - 2, var10 - 2, var14 + 2, var10 + var11 + 2, -2130706433, 452984831);
+				Gui.drawGradientRect(var13, var10, var14, var10 + var11, -16777216, -1610612209);
+			}
+
+			var8.func_10162_7X6Ocgi2aWrG07279w14Ok6jeWFPa9bmt1my2NA0a1ZEmdxx5QjSOn3mi5a8(this.mc);
+			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+			var15.startDrawingQuads();
+			var15.setColorOpaque_I(16777215);
+			var15.addVertexWithUV((double)var9, (double)(var10 + var11), 0.0D, 0.0D, 1.0D);
+			var15.addVertexWithUV((double)(var9 + var12), (double)(var10 + var11), 0.0D, 1.0D, 1.0D);
+			var15.addVertexWithUV((double)(var9 + var12), (double)var10, 0.0D, 1.0D, 0.0D);
+			var15.addVertexWithUV((double)var9, (double)var10, 0.0D, 0.0D, 0.0D);
+			var15.draw();
+			Gui.drawString(this.fontRenderer, var8.field_10166_0Sg7537VnLZ7du5FsLln7EYJ7tLG9LfdbFsVG53zuLLa94D21JXk6aie9tls, var9 + var12 + 2, var10 + 1, 16777215);
+			Gui.drawString(this.fontRenderer, var8.field_10168_6rK7r47m1wf6M34G2s0hL7m282kBAy4521c3axU19Y9WKmYF8gZ6ryN7JLjP, var9 + var12 + 2, var10 + 12, 8421504);
+			Gui.drawString(this.fontRenderer, var8.field_10165_3AzF56gtxWJ9912dPKDPOy7hH3t9Hl1HPMnVNkT671yMpR86uFp7khyzZyaR, var9 + var12 + 2, var10 + 12 + 10, 8421504);
+		}
+
+		boolean var16 = true;
+		GL11.glEnable(GL11.GL_BLEND);
+		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
+		GL11.glDisable(GL11.GL_ALPHA_TEST);
+		GL11.glShadeModel(GL11.GL_SMOOTH);
+		GL11.glDisable(GL11.GL_TEXTURE_2D);
+		GL11.glEnable(GL11.GL_TEXTURE_2D);
+		GL11.glShadeModel(GL11.GL_FLAT);
+		GL11.glEnable(GL11.GL_ALPHA_TEST);
+		GL11.glDisable(GL11.GL_BLEND);
+		this.drawCenteredString(this.fontRenderer, "Choose Visuals", this.width / 2, 16, 16777215);
+		this.drawCenteredString(this.fontRenderer, "(Place Visuals content here)", this.width / 2 - 77, this.height - 26, 8421504);
+		super.drawScreen(var1, var2, var3);
+	}
+
+	public void updateScreen() {
+		super.updateScreen();
+		--this.field_8048_9SDvP1kn9Sd96o7De75R09os8ihE21oM9ia16Dm8laAG1ieXpRZvtcM7V7V1;
+	}
+
+	public void func_8043_1Jibq5w4EJqCUf26A37TQCX1V2VCGpawEkq3BEZBcr2gh4R65quzV0OLTd43(int var1, int var2, int var3, int var4) {
+		Tessellator var5 = Tessellator.instance;
+		GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/dirt.png"));
+		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+		float var6 = 32.0F;
+		var5.startDrawingQuads();
+		var5.func_10264_9bHy7fL74IXD4UsqOd2Ex73M73ud0NIomc86hi8cp0K3zOYc25dWZ4o11NzU(4210752, var4);
+		var5.addVertexWithUV(0.0D, (double)var2, 0.0D, 0.0D, (double)((float)var2 / var6));
+		var5.addVertexWithUV((double)this.width, (double)var2, 0.0D, (double)((float)this.width / var6), (double)((float)var2 / var6));
+		var5.func_10264_9bHy7fL74IXD4UsqOd2Ex73M73ud0NIomc86hi8cp0K3zOYc25dWZ4o11NzU(4210752, var3);
+		var5.addVertexWithUV((double)this.width, (double)var1, 0.0D, (double)((float)this.width / var6), (double)((float)var1 / var6));
+		var5.addVertexWithUV(0.0D, (double)var1, 0.0D, 0.0D, (double)((float)var1 / var6));
+		var5.draw();
+	}
+}
--- /dev/null
+++ net/minecraft/src/InventoryVendingMachine.java
@@ -1,0 +1,83 @@
+package net.minecraft.src;
+
+public class InventoryVendingMachine extends InventoryPlayer {
+	public int field_8689_3p0gv43cL7j25sTw85c9cXfcP4HTk7W010VdL2XjgPV7V0w2R2sQvYNjSAja = 200;
+	private long field_8691_9zGIwX9EMBSwmRnPZ3gr71Z2dLYil9zWbXl9RsLwrSPMbyKh0wA2XB1Z2Ty5 = 1000L;
+	public long field_8694_9Ft1ntRGi6sZW4Mx76MJ56sY5EDCH8sZOcj8x0LlFaIf5eqsjdISdMW9e938 = 1000L;
+	public boolean field_8695_54O4q276dxP8y31413ENJjhqXBnFshV4S4ng8H76Bv5Y3Ma2DF7fbLk53PvO = false;
+	public boolean field_8693_6a3I3v4L072y21iqK2Q4a7OJa1SIY587gNZ7teLm8k1uZzO68dY6lE8PKTBh = false;
+	public boolean field_8690_9ajSfayfVo92Z68A5B2rvo13codHKhrUqqH2LRN64r7Ac066r0ki4BD2lC9w = false;
+	public boolean field_8692_8s3a9ZFU1Lb4Y33KzN5HEwzzvMoj71d2qDVF231HNAJ36vP850tAYydwpyN6 = false;
+
+	public InventoryVendingMachine(EntityPlayer var1) {
+		super(var1);
+	}
+
+	public boolean addItemStackToInventory(ItemStack var1) {
+		if(var1.itemID == ExtItems.essence.shiftedIndex) {
+			this.field_8689_3p0gv43cL7j25sTw85c9cXfcP4HTk7W010VdL2XjgPV7V0w2R2sQvYNjSAja += var1.stackSize;
+			return true;
+		} else {
+			return super.addItemStackToInventory(var1);
+		}
+	}
+
+	public void changeCurrentItem(int var1) {
+		this.currentItem -= var1;
+		this.currentItem = Ext1605Utils.func_12147_2H957G8ip82G6rxfiUf3zblru0uP648DzY022SjD3PqVRZ2F11lS24e967i5(this.currentItem, 0, 1);
+	}
+
+	public void setCurrentItem(int var1, boolean var2) {
+		if(var1 >= 0 && var1 < 2) {
+			super.setCurrentItem(var1, var2);
+		}
+
+	}
+
+	public long func_8686_3fQ4Zvl6ZGZtMHz8BDhx9ci7pQP8EhDqu7Ri4ywsZ3854I2e4ev3W4B3R3iy() {
+		return this.field_8691_9zGIwX9EMBSwmRnPZ3gr71Z2dLYil9zWbXl9RsLwrSPMbyKh0wA2XB1Z2Ty5;
+	}
+
+	public boolean func_8688_6DmcXOP1jZRKDasP2440t8904Ry66MRC3K00nwd8iGDlPgYii5d1f50QVICF(long var1) {
+		if(var1 < 0L) {
+			if(this.field_8691_9zGIwX9EMBSwmRnPZ3gr71Z2dLYil9zWbXl9RsLwrSPMbyKh0wA2XB1Z2Ty5 < var1 * -1L) {
+				return false;
+			}
+		} else {
+			this.field_8694_9Ft1ntRGi6sZW4Mx76MJ56sY5EDCH8sZOcj8x0LlFaIf5eqsjdISdMW9e938 += var1;
+		}
+
+		this.field_8691_9zGIwX9EMBSwmRnPZ3gr71Z2dLYil9zWbXl9RsLwrSPMbyKh0wA2XB1Z2Ty5 += var1;
+		return true;
+	}
+
+	public boolean func_8685_018jLaFer93s1Ao41hTl8Co499i9rtr87X0l6Asj74ctkfz3zMwrb0xF99f5(EnumVendingMachine var1) {
+		switch(EnumVendingMachineUnknownClass.field_11151_01Lqa7jqn5Lnc8H2326RUUWR0pcY5mVnw6E94jwT0DsG39Ak48kRz6LgkbXv[var1.ordinal()]) {
+		case 1:
+			return this.field_8693_6a3I3v4L072y21iqK2Q4a7OJa1SIY587gNZ7teLm8k1uZzO68dY6lE8PKTBh;
+		case 2:
+			return this.field_8690_9ajSfayfVo92Z68A5B2rvo13codHKhrUqqH2LRN64r7Ac066r0ki4BD2lC9w;
+		case 3:
+			return this.field_8695_54O4q276dxP8y31413ENJjhqXBnFshV4S4ng8H76Bv5Y3Ma2DF7fbLk53PvO;
+		case 4:
+			return this.field_8692_8s3a9ZFU1Lb4Y33KzN5HEwzzvMoj71d2qDVF231HNAJ36vP850tAYydwpyN6;
+		default:
+			return false;
+		}
+	}
+
+	public boolean func_8687_2j3o3G4w9YEuL5Ti00BI486Z8qmmrnAgVGJYmg4Or967q661jjx3SsHBV6Ko(int var1) {
+		switch(var1) {
+		case 1:
+			return this.field_8695_54O4q276dxP8y31413ENJjhqXBnFshV4S4ng8H76Bv5Y3Ma2DF7fbLk53PvO;
+		case 2:
+			return this.field_8693_6a3I3v4L072y21iqK2Q4a7OJa1SIY587gNZ7teLm8k1uZzO68dY6lE8PKTBh;
+		case 3:
+			return this.field_8690_9ajSfayfVo92Z68A5B2rvo13codHKhrUqqH2LRN64r7Ac066r0ki4BD2lC9w;
+		case 4:
+			return this.field_8692_8s3a9ZFU1Lb4Y33KzN5HEwzzvMoj71d2qDVF231HNAJ36vP850tAYydwpyN6;
+		default:
+			return false;
+		}
+	}
+}
--- net/minecraft/src/Item.java
+++ net/minecraft/src/Item.java
@@ -3,114 +3,117 @@
 import java.util.Random;
 
 public class Item {
+	public static final int ITEM_LIST_SIZE = 32767;
 	protected static Random rand = new Random();
-	public static Item[] itemsList = new Item[32000];
-	public static Item shovel = (new ItemSpade(0, 2)).setIconIndex(82);
-	public static Item pickaxeSteel = (new ItemPickaxe(1, 2)).setIconIndex(98);
-	public static Item axeSteel = (new ItemAxe(2, 2)).setIconIndex(114);
-	public static Item striker = (new ItemFlintAndSteel(3)).setIconIndex(5);
-	public static Item appleRed = (new ItemFood(4, 4)).setIconIndex(10);
-	public static Item bow = (new ItemBow(5)).setIconIndex(21);
-	public static Item arrow = (new Item(6)).setIconIndex(37);
-	public static Item coal = (new Item(7)).setIconIndex(7);
-	public static Item diamond = (new Item(8)).setIconIndex(55);
-	public static Item ingotIron = (new Item(9)).setIconIndex(23);
-	public static Item ingotGold = (new Item(10)).setIconIndex(39);
-	public static Item swordSteel = (new ItemSword(11, 2)).setIconIndex(66);
-	public static Item swordWood = (new ItemSword(12, 0)).setIconIndex(64);
-	public static Item shovelWood = (new ItemSpade(13, 0)).setIconIndex(80);
-	public static Item pickaxeWood = (new ItemPickaxe(14, 0)).setIconIndex(96);
-	public static Item axeWood = (new ItemAxe(15, 0)).setIconIndex(112);
-	public static Item swordStone = (new ItemSword(16, 1)).setIconIndex(65);
-	public static Item shovelStone = (new ItemSpade(17, 1)).setIconIndex(81);
-	public static Item pickaxeStone = (new ItemPickaxe(18, 1)).setIconIndex(97);
-	public static Item axeStone = (new ItemAxe(19, 1)).setIconIndex(113);
-	public static Item swordDiamond = (new ItemSword(20, 3)).setIconIndex(67);
-	public static Item shovelDiamond = (new ItemSpade(21, 3)).setIconIndex(83);
-	public static Item pickaxeDiamond = (new ItemPickaxe(22, 3)).setIconIndex(99);
-	public static Item axeDiamond = (new ItemAxe(23, 3)).setIconIndex(115);
-	public static Item stick = (new Item(24)).setIconIndex(53).setFull3D();
-	public static Item bowlEmpty = (new Item(25)).setIconIndex(71);
-	public static Item bowlSoup = (new ItemSoup(26, 10)).setIconIndex(72);
-	public static Item swordGold = (new ItemSword(27, 0)).setIconIndex(68);
-	public static Item shovelGold = (new ItemSpade(28, 0)).setIconIndex(84);
-	public static Item pickaxeGold = (new ItemPickaxe(29, 0)).setIconIndex(100);
-	public static Item axeGold = (new ItemAxe(30, 0)).setIconIndex(116);
-	public static Item silk = (new Item(31)).setIconIndex(8);
-	public static Item feather = (new Item(32)).setIconIndex(24);
-	public static Item gunpowder = (new Item(33)).setIconIndex(40);
-	public static Item hoeWood = (new ItemHoe(34, 0)).setIconIndex(128);
-	public static Item hoeStone = (new ItemHoe(35, 1)).setIconIndex(129);
-	public static Item hoeSteel = (new ItemHoe(36, 2)).setIconIndex(130);
-	public static Item hoeDiamond = (new ItemHoe(37, 3)).setIconIndex(131);
-	public static Item hoeGold = (new ItemHoe(38, 1)).setIconIndex(132);
-	public static Item seeds = (new ItemSeeds(39, Block.crops.blockID)).setIconIndex(9);
-	public static Item wheat = (new Item(40)).setIconIndex(25);
-	public static Item bread = (new ItemFood(41, 5)).setIconIndex(41);
-	public static Item helmetLeather = (new ItemArmor(42, 0, 0, 0)).setIconIndex(0);
-	public static Item plateLeather = (new ItemArmor(43, 0, 0, 1)).setIconIndex(16);
-	public static Item legsLeather = (new ItemArmor(44, 0, 0, 2)).setIconIndex(32);
-	public static Item bootsLeather = (new ItemArmor(45, 0, 0, 3)).setIconIndex(48);
-	public static Item helmetChain = (new ItemArmor(46, 1, 1, 0)).setIconIndex(1);
-	public static Item plateChain = (new ItemArmor(47, 1, 1, 1)).setIconIndex(17);
-	public static Item legsChain = (new ItemArmor(48, 1, 1, 2)).setIconIndex(33);
-	public static Item bootsChain = (new ItemArmor(49, 1, 1, 3)).setIconIndex(49);
-	public static Item helmetSteel = (new ItemArmor(50, 2, 2, 0)).setIconIndex(2);
-	public static Item plateSteel = (new ItemArmor(51, 2, 2, 1)).setIconIndex(18);
-	public static Item legsSteel = (new ItemArmor(52, 2, 2, 2)).setIconIndex(34);
-	public static Item bootsSteel = (new ItemArmor(53, 2, 2, 3)).setIconIndex(50);
-	public static Item helmetDiamond = (new ItemArmor(54, 3, 3, 0)).setIconIndex(3);
-	public static Item plateDiamond = (new ItemArmor(55, 3, 3, 1)).setIconIndex(19);
-	public static Item legsDiamond = (new ItemArmor(56, 3, 3, 2)).setIconIndex(35);
-	public static Item bootsDiamond = (new ItemArmor(57, 3, 3, 3)).setIconIndex(51);
-	public static Item helmetGold = (new ItemArmor(58, 1, 4, 0)).setIconIndex(4);
-	public static Item plateGold = (new ItemArmor(59, 1, 4, 1)).setIconIndex(20);
-	public static Item legsGold = (new ItemArmor(60, 1, 4, 2)).setIconIndex(36);
-	public static Item bootsGold = (new ItemArmor(61, 1, 4, 3)).setIconIndex(52);
-	public static Item flint = (new Item(62)).setIconIndex(6);
-	public static Item porkRaw = (new ItemFood(63, 3)).setIconIndex(87);
-	public static Item porkCooked = (new ItemFood(64, 8)).setIconIndex(88);
-	public static Item painting = (new ItemPainting(65)).setIconIndex(26);
-	public static Item appleGold = (new ItemFood(66, 42)).setIconIndex(11);
-	public static Item sign = (new ItemSign(67)).setIconIndex(42);
-	public static Item doorWood = (new ItemDoor(68, Material.wood)).setIconIndex(43);
-	public static Item bucketEmpty = (new ItemBucket(69, 0)).setIconIndex(74);
-	public static Item bucketWater = (new ItemBucket(70, Block.waterMoving.blockID)).setIconIndex(75);
-	public static Item bucketLava = (new ItemBucket(71, Block.lavaMoving.blockID)).setIconIndex(76);
-	public static Item minecartEmpty = (new ItemMinecart(72, 0)).setIconIndex(135);
-	public static Item saddle = (new ItemSaddle(73)).setIconIndex(104);
-	public static Item doorSteel = (new ItemDoor(74, Material.iron)).setIconIndex(44);
-	public static Item redstone = (new ItemRedstone(75)).setIconIndex(56);
-	public static Item snowball = (new ItemSnowball(76)).setIconIndex(14);
-	public static Item boat = (new ItemBoat(77)).setIconIndex(136);
-	public static Item leather = (new Item(78)).setIconIndex(103);
-	public static Item bucketMilk = (new ItemBucket(79, -1)).setIconIndex(77);
-	public static Item brick = (new Item(80)).setIconIndex(22);
-	public static Item clay = (new Item(81)).setIconIndex(57);
-	public static Item reed = (new ItemReed(82, Block.reed)).setIconIndex(27);
-	public static Item paper = (new Item(83)).setIconIndex(58);
-	public static Item book = (new Item(84)).setIconIndex(59);
-	public static Item slimeBall = (new Item(85)).setIconIndex(30);
-	public static Item minecartBox = (new ItemMinecart(86, 1)).setIconIndex(151);
-	public static Item minecartEngine = (new ItemMinecart(87, 2)).setIconIndex(167);
-	public static Item egg = (new Item(88)).setIconIndex(12);
-	public static Item compass = (new Item(89)).setIconIndex(54);
-	public static Item fishingRod = (new Item(90)).setIconIndex(69);
-	public static Item record13 = (new ItemRecord(2000, "13")).setIconIndex(240);
-	public static Item recordCat = (new ItemRecord(2001, "cat")).setIconIndex(241);
+	public static Item[] itemsList = new Item['\ufffe'];
+	public static Item shovel = (new ItemSpade(0, 2)).setIconIndex(82).setName("Iron Shovel").setEssValue(16);
+	public static Item pickaxeSteel = (new ItemPickaxe(1, 2)).setIconIndex(98).setName("Iron Pickaxe").setEssValue(16);
+	public static Item axeSteel = (new ItemAxe(2, 2)).setIconIndex(114).setName("Iron Axe").setEssValue(16);
+	public static Item striker = (new ItemFlintAndSteel(3)).setIconIndex(5).setEssValue(32).setName("Flint and Steel").setEssValue(8);
+	public static Item appleRed = (new ItemFood(4, 4)).setIconIndex(10).setName("Apple").setEssValue(2);
+	public static Item bow = (new ItemBow(5)).setIconIndex(21).setName("Bow").setEssValue(8);
+	public static Item arrow = (new Item(6)).setIconIndex(37).setName("Arrow").setEssValue(2);
+	public static Item coal = (new Item(7)).setIconIndex(7).setEssValue(8).setName("Coal").setEssValue(2);
+	public static Item diamond = (new Item(8)).setIconIndex(55).setEssValue(56).setName("Diamond").setEssValue(32);
+	public static Item ingotIron = (new Item(9)).setIconIndex(23).setEssValue(20).setName("Iron Ingot").setEssValue(16);
+	public static Item ingotGold = (new Item(10)).setIconIndex(39).setEssValue(48).setName("Gold Ingot").setEssValue(32);
+	public static Item swordSteel = (new ItemSword(11, 2)).setIconIndex(66).setName("Iron Sword").setEssValue(16);
+	public static Item swordWood = (new ItemSword(12, 0)).setIconIndex(64).setName("Wooden Sword").setEssValue(8);
+	public static Item shovelWood = (new ItemSpade(13, 0)).setIconIndex(80).setName("Wooden Shovel").setEssValue(8);
+	public static Item pickaxeWood = (new ItemPickaxe(14, 0)).setIconIndex(96).setName("Wooden Pickaxe").setEssValue(8);
+	public static Item axeWood = (new ItemAxe(15, 0)).setIconIndex(112).setName("Wooden Axe").setEssValue(8);
+	public static Item swordStone = (new ItemSword(16, 1)).setIconIndex(65).setName("Stone Sword").setEssValue(10);
+	public static Item shovelStone = (new ItemSpade(17, 1)).setIconIndex(81).setName("Stone Shovel").setEssValue(10);
+	public static Item pickaxeStone = (new ItemPickaxe(18, 1)).setIconIndex(97).setName("Stone Pickaxe").setEssValue(10);
+	public static Item axeStone = (new ItemAxe(19, 1)).setIconIndex(113).setName("Stone Axe").setEssValue(10);
+	public static Item swordDiamond = (new ItemSword(20, 3)).setIconIndex(67).setName("Diamond Sword").setEssValue(32);
+	public static Item shovelDiamond = (new ItemSpade(21, 3)).setIconIndex(83).setName("Diamond Shovel").setEssValue(32);
+	public static Item pickaxeDiamond = (new ItemPickaxe(22, 3)).setIconIndex(99).setName("Diamond Pickaxe").setEssValue(32);
+	public static Item axeDiamond = (new ItemAxe(23, 3)).setIconIndex(115).setName("Diamond Axe").setEssValue(32);
+	public static Item stick = (new Item(24)).setIconIndex(53).setFull3D().setName("Stick").setEssValue(2);
+	public static Item bowlEmpty = (new Item(25)).setIconIndex(71).setName("Bowl").setEssValue(2);
+	public static Item bowlSoup = (new ItemSoup(26, 10)).setIconIndex(72).setName("Soup").setEssValue(12);
+	public static Item swordGold = (new ItemSword(27, 0)).setIconIndex(68).setName("Golden Sword").setEssValue(24);
+	public static Item shovelGold = (new ItemSpade(28, 0)).setIconIndex(84).setName("Golden Shovel").setEssValue(24);
+	public static Item pickaxeGold = (new ItemPickaxe(29, 0)).setIconIndex(100).setName("Golden Pickaxe").setEssValue(24);
+	public static Item axeGold = (new ItemAxe(30, 0)).setIconIndex(116).setName("Golden Axe").setEssValue(24);
+	public static Item silk = (new Item(31)).setIconIndex(8).setName("Silk").setEssValue(12);
+	public static Item feather = (new Item(32)).setIconIndex(24).setName("Feather").setEssValue(4);
+	public static Item gunpowder = (new Item(33)).setIconIndex(40).setName("Gunpowder").setEssValue(4);
+	public static Item hoeWood = (new ItemHoe(34, 0)).setIconIndex(128).setName("Wooden Hoe").setEssValue(4);
+	public static Item hoeStone = (new ItemHoe(35, 1)).setIconIndex(129).setName("Stone Hoe").setEssValue(8);
+	public static Item hoeSteel = (new ItemHoe(36, 2)).setIconIndex(130).setName("Steel Hoe").setEssValue(12);
+	public static Item hoeDiamond = (new ItemHoe(37, 3)).setIconIndex(131).setName("Diamond Hoe").setEssValue(16);
+	public static Item hoeGold = (new ItemHoe(38, 1)).setIconIndex(132).setName("Golden Hoe").setEssValue(8);
+	public static Item seeds = (new ItemSeeds(39, Block.crops.blockID)).setIconIndex(9).setName("Seeds").setEssValue(1);
+	public static Item wheat = (new Item(40)).setIconIndex(25).setName("Wheat").setEssValue(4);
+	public static Item bread = (new ItemFood(41, 5)).setIconIndex(41).setName("Bread").setEssValue(8);
+	public static Item helmetLeather = (new ItemArmor(42, 0, 0, 0)).setIconIndex(0).setName("Leather Helm").setEssValue(4);
+	public static Item plateLeather = (new ItemArmor(43, 0, 0, 1)).setIconIndex(16).setName("Leather Jacket").setEssValue(4);
+	public static Item legsLeather = (new ItemArmor(44, 0, 0, 2)).setIconIndex(32).setName("Leather Pants").setEssValue(4);
+	public static Item bootsLeather = (new ItemArmor(45, 0, 0, 3)).setIconIndex(48).setName("Leather Boots").setEssValue(4);
+	public static Item helmetChain = (new ItemArmor(46, 1, 1, 0)).setIconIndex(1).setName("Ragged Helm").setEssValue(8);
+	public static Item plateChain = (new ItemArmor(47, 1, 1, 1)).setIconIndex(17).setName("Ragged Suit").setEssValue(8);
+	public static Item legsChain = (new ItemArmor(48, 1, 1, 2)).setIconIndex(33).setName("Ragged Leggings").setEssValue(8);
+	public static Item bootsChain = (new ItemArmor(49, 1, 1, 3)).setIconIndex(49).setName("Ragged Boots").setEssValue(8);
+	public static Item helmetSteel = (new ItemArmor(50, 2, 2, 0)).setIconIndex(2).setName("Iron Helm").setEssValue(16);
+	public static Item plateSteel = (new ItemArmor(51, 2, 2, 1)).setIconIndex(18).setName("Iron Chestplate").setEssValue(16);
+	public static Item legsSteel = (new ItemArmor(52, 2, 2, 2)).setIconIndex(34).setName("Iron Leggings").setEssValue(16);
+	public static Item bootsSteel = (new ItemArmor(53, 2, 2, 3)).setIconIndex(50).setName("Iron Boots").setEssValue(16);
+	public static Item helmetDiamond = (new ItemArmor(54, 3, 3, 0)).setIconIndex(3).setName("Diamond Helm").setEssValue(32);
+	public static Item plateDiamond = (new ItemArmor(55, 3, 3, 1)).setIconIndex(19).setName("Diamond Chestplate").setEssValue(32);
+	public static Item legsDiamond = (new ItemArmor(56, 3, 3, 2)).setIconIndex(35).setName("Diamond Leggings").setEssValue(32);
+	public static Item bootsDiamond = (new ItemArmor(57, 3, 3, 3)).setIconIndex(51).setName("Diamond Boots").setEssValue(32);
+	public static Item helmetGold = (new ItemArmor(58, 1, 4, 0)).setIconIndex(4).setName("Golden Helm").setEssValue(32);
+	public static Item plateGold = (new ItemArmor(59, 1, 4, 1)).setIconIndex(20).setName("Golden Chestplate").setEssValue(16);
+	public static Item legsGold = (new ItemArmor(60, 1, 4, 2)).setIconIndex(36).setName("Golden Leggings").setEssValue(16);
+	public static Item bootsGold = (new ItemArmor(61, 1, 4, 3)).setIconIndex(52).setName("Golden Boots").setEssValue(16);
+	public static Item flint = (new Item(62)).setIconIndex(6).setEssValue(12).setName("Flint");
+	public static Item porkRaw = (new ItemFood(63, 3)).setIconIndex(87).setEssValue(8).setName("Raw Pork");
+	public static Item porkCooked = (new ItemFood(64, 8)).setIconIndex(88).setEssValue(16).setName("Cooked Pork");
+	public static Item painting = (new ItemPainting(65)).setIconIndex(26).setName("Painting").setEssValue(4);
+	public static Item appleGold = (new ItemFood(66, 42)).setIconIndex(11).setEssValue(90).setName("Golden Apple");
+	public static Item sign = (new ItemSign(67)).setIconIndex(42).setName("Sign").setEssValue(1);
+	public static Item doorWood = (new ItemDoor(68, Material.wood)).setIconIndex(43).setName("Wooden Door").setEssValue(4);
+	public static Item bucketEmpty = (new ItemBucket(69, 0)).setIconIndex(74).setName("Bucket").setEssValue(16);
+	public static Item bucketWater = (new ItemBucket(70, Block.waterMoving.blockID)).setIconIndex(75).setName("Water Bucket").setEssValue(16);
+	public static Item bucketLava = (new ItemBucket(71, Block.lavaMoving.blockID)).setIconIndex(76).setName("Lava Bucket").setEssValue(16);
+	public static Item minecartEmpty = (new ItemMinecart(72, 0)).setIconIndex(135).setName("Minecart").setEssValue(32);
+	public static Item saddle = (new ItemSaddle(73)).setIconIndex(104).setName("Saddle").setEssValue(16);
+	public static Item doorSteel = (new ItemDoor(74, Material.iron)).setIconIndex(44).setName("Steel door").setEssValue(16);
+	public static Item redstone = (new ItemRedstone(75)).setIconIndex(56).setEssValue(8).setName("Greenstone").setEssValue(3);
+	public static Item snowball = (new ItemSnowball(76)).setIconIndex(14).setName("Snowball").setEssValue(1);
+	public static Item boat = (new ItemBoat(77)).setIconIndex(136).setName("Boat").setEssValue(8);
+	public static Item leather = (new Item(78)).setIconIndex(103).setName("Leather").setEssValue(2);
+	public static Item bucketMilk = (new ItemBucket(79, -1)).setIconIndex(77).setName("Milk Bucket").setEssValue(8);
+	public static Item brick = (new Item(80)).setIconIndex(22).setName("Brick").setEssValue(4);
+	public static Item clay = (new Item(81)).setIconIndex(57).setName("Clay").setEssValue(4);
+	public static Item reed = (new ItemReed(82, Block.reed)).setIconIndex(27).setName("Reed").setEssValue(4);
+	public static Item paper = (new Item(83)).setIconIndex(58).setName("Paper").setEssValue(5);
+	public static Item book = (new Item(84)).setIconIndex(59).setName("Book").setEssValue(16);
+	public static Item slimeBall = (new Item(85)).setIconIndex(30).setEssValue(10).setName("Sludge");
+	public static Item minecartBox = (new ItemMinecart(86, 1)).setIconIndex(151).setName("Minecart with a Chest").setEssValue(16);
+	public static Item minecartEngine = (new ItemMinecart(87, 2)).setIconIndex(167).setName("Minecart with a Furnace").setEssValue(16);
+	public static Item egg = (new Item(88)).setIconIndex(12).setName("Egg").setEssValue(2);
+	public static Item compass = (new Item(89)).setIconIndex(54).setName("Compass").setEssValue(16);
+	public static Item fishingRod = (new Item(1999)).setIconIndex(70).setName("Fishing Rod").setEssValue(16);
+	public static Item record13 = (new ItemRecord(2000, "lemuria")).setIconIndex(240).setEssValue(128).setName("Record (Lemuria)");
+	public static Item recordCat = (new ItemRecord(2001, "hidden_den")).setIconIndex(241).setEssValue(128).setName("Record (Hidden Den)");
 	public final int shiftedIndex;
 	protected int maxStackSize = 64;
 	protected int maxDamage = 32;
-	protected int iconIndex;
+	public int iconIndex;
 	protected boolean bFull3D = false;
+	public int essenceValue = 1;
+	protected String itemName = "";
 
-	protected Item(int var1) {
-		this.shiftedIndex = 256 + var1;
-		if(itemsList[256 + var1] != null) {
-			System.out.println("CONFLICT @ " + var1);
+	public Item(int var1) {
+		this.shiftedIndex = Short.MAX_VALUE + var1;
+		if(itemsList[this.shiftedIndex] != null) {
+			throw new RuntimeException("[Item] CONFLICT @ ID " + var1);
+		} else {
+			itemsList[this.shiftedIndex] = this;
 		}
-
-		itemsList[256 + var1] = this;
 	}
 
 	public Item setIconIndex(int var1) {
@@ -118,6 +121,25 @@
 		return this;
 	}
 
+	public Item setMaxStackSize(int var1) {
+		this.maxStackSize = var1;
+		return this;
+	}
+
+	public String itemName() {
+		return this.itemName;
+	}
+
+	public Item setName(String var1) {
+		this.itemName = var1;
+		return this;
+	}
+
+	public Item setEssValue(int var1) {
+		this.essenceValue = var1;
+		return this;
+	}
+
 	public int getIconIndex(ItemStack var1) {
 		return this.iconIndex;
 	}
@@ -166,5 +188,9 @@
 
 	public boolean isFull3D() {
 		return this.bFull3D;
+	}
+
+	static {
+		ExtItems.Register();
 	}
 }
--- /dev/null
+++ net/minecraft/src/RPacketB0BlockData.java
@@ -1,0 +1,59 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+
+public class RPacketB0BlockData implements RPacket {
+	int chunkX;
+	int chunkZ;
+	int fragment;
+
+	public RPacketB0BlockData() {
+	}
+
+	public RPacketB0BlockData(int var1, int var2, int var3) {
+		this.chunkX = var1;
+		this.chunkZ = var2;
+		this.fragment = var3;
+	}
+
+	public byte GetPacketID() {
+		return (byte)-80;
+	}
+
+	public void Send(DataOutputStream var1) throws IOException {
+		byte[] var2 = new byte[1024];
+		World var3 = InputHandler.mc.theWorld;
+		int var4 = 0;
+
+		for(int var5 = 0; var5 != 16; ++var5) {
+			for(int var6 = 0; var6 != 16; ++var6) {
+				for(int var7 = 0; var7 != 16; ++var7) {
+					var2[var4] = (byte)var3.getBlockId(var6, this.fragment * 4 + var5, var7);
+					++var4;
+				}
+			}
+		}
+
+		var1.writeInt(this.fragment);
+		var1.writeInt(this.chunkX);
+		var1.writeInt(this.chunkZ);
+		var1.write(var2, 0, 1024);
+	}
+
+	public void Receive(DataInputStream var1) throws IOException {
+		int var2 = var1.readInt();
+		int var3 = var1.readInt();
+		int var4 = var1.readInt();
+		byte[] var5 = new byte[1024];
+		var1.read(var5, 0, 1024);
+	}
+
+	public void Respond(DataOutputStream var1) throws IOException {
+	}
+
+	public int GetResponseSize() {
+		return 1036;
+	}
+}
--- /dev/null
+++ net/minecraft/src/PartDefinitionElement.java
@@ -1,0 +1,13 @@
+package net.minecraft.src;
+
+public class PartDefinitionElement {
+	public String name;
+	public CubeListBuilder cubeList;
+	public PartPose offset;
+
+	public PartDefinitionElement(String var1, CubeListBuilder var2, PartPose var3) {
+		this.name = var1;
+		this.cubeList = var2;
+		this.offset = var3;
+	}
+}
--- /dev/null
+++ net/minecraft/src/Packet210RemoteEntityData.java
@@ -1,0 +1,52 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+
+public class Packet210RemoteEntityData extends Packet {
+	public int id;
+	public double px;
+	public double py;
+	public double pz;
+	public double rx;
+	public double ry;
+
+	public Packet210RemoteEntityData(int var1, double var2, double var4, double var6, double var8, double var10) {
+		this.id = var1;
+		this.px = var2;
+		this.py = var4;
+		this.pz = var6;
+		this.rx = var8;
+		this.ry = var10;
+	}
+
+	public Packet210RemoteEntityData() {
+	}
+
+	public void readPacketData(DataInputStream var1) throws IOException {
+		this.id = var1.readInt();
+		this.px = var1.readDouble();
+		this.py = var1.readDouble();
+		this.pz = var1.readDouble();
+		this.rx = var1.readDouble();
+		this.ry = var1.readDouble();
+	}
+
+	public void writePacket(DataOutputStream var1) throws IOException {
+		var1.writeInt(this.id);
+		var1.writeDouble(this.px);
+		var1.writeDouble(this.py);
+		var1.writeDouble(this.pz);
+		var1.writeDouble(this.rx);
+		var1.writeDouble(this.ry);
+	}
+
+	public void processPacket(NetHandler var1) {
+		var1.handleRemoteEntityData(this);
+	}
+
+	public int getPacketSize() {
+		return 44;
+	}
+}
--- /dev/null
+++ net/minecraft/src/VisualsUnknownClass.java
@@ -1,0 +1,32 @@
+package net.minecraft.src;
+
+import java.io.IOException;
+import java.io.InputStream;
+import net.minecraft.client.Minecraft;
+
+public abstract class VisualsUnknownClass {
+	public String field_10166_0Sg7537VnLZ7du5FsLln7EYJ7tLG9LfdbFsVG53zuLLa94D21JXk6aie9tls;
+	public String field_10168_6rK7r47m1wf6M34G2s0hL7m282kBAy4521c3axU19Y9WKmYF8gZ6ryN7JLjP;
+	public String field_10165_3AzF56gtxWJ9912dPKDPOy7hH3t9Hl1HPMnVNkT671yMpR86uFp7khyzZyaR;
+	public String field_10167_4p5HDq8cPm6prmKZL6SU5o5En606fQrkgqDrSQFfG4aK8f713sgNU29Ueh6v;
+	public VisualsConfiguration field_10164_5N63dbka0na7Is07L9kMmSk6ZK28Ioxdll6JwQgybo1I69cauDA8U5rtDvBv = new VisualsConfiguration();
+
+	public void func_10159_18ZVjfTsTKfB80BRv0MI82mIW7A5kEEVTFqM41a5Y88G06sn7n695Ml9CX4X() {
+	}
+
+	public void func_10163_2I13qZ82Olr559q81461XqI7EvNeguYD7GAG7DmGJf04Fu44f4iY1Oy7WJME() {
+	}
+
+	public void func_10158_0Gpj8594Ufmy5e2AAxicC9QX8AZ598q48b12zV8cSfE61ZzMvANYL3Omgcv9(Minecraft var1) throws IOException {
+	}
+
+	public void func_10160_6kOi4sh8w5g34shttmoUUEDgCPE5VRiNwN076cQcxuDFXDkU0y92lK2v99vL(Minecraft var1) {
+	}
+
+	public void func_10162_7X6Ocgi2aWrG07279w14Ok6jeWFPa9bmt1my2NA0a1ZEmdxx5QjSOn3mi5a8(Minecraft var1) {
+	}
+
+	public InputStream getResourceAsStream(String var1) {
+		return Ext1605Utils.func_12150_5v4Cs6sI06e6Hjpg3rSI82gG008x14C2jag2OM7ADaW5U8a3DYSrf570CJm6(var1);
+	}
+}
--- net/minecraft/src/ModelBiped.java
+++ net/minecraft/src/ModelBiped.java
@@ -6,11 +6,15 @@
 	public ModelRenderer bipedBody;
 	public ModelRenderer bipedRightArm;
 	public ModelRenderer bipedLeftArm;
+	public ModelRenderer bipedRightArmS;
+	public ModelRenderer bipedLeftArmS;
 	public ModelRenderer bipedRightLeg;
 	public ModelRenderer bipedLeftLeg;
 	public boolean heldItemLeft;
 	public boolean heldItemRight;
 	public boolean isSneak;
+	public boolean inWater;
+	public boolean field_9257_0KUtgLX9srVUt26M4Sr4d7tQWC7591F5ufdCW0N24HOCJRBfNMJmqGBkyn5V;
 
 	public ModelBiped() {
 		this(0.0F);
@@ -21,9 +25,11 @@
 	}
 
 	public ModelBiped(float var1, float var2) {
+		this.field_9257_0KUtgLX9srVUt26M4Sr4d7tQWC7591F5ufdCW0N24HOCJRBfNMJmqGBkyn5V = false;
 		this.heldItemLeft = false;
 		this.heldItemRight = false;
 		this.isSneak = false;
+		this.inWater = false;
 		this.bipedHead = new ModelRenderer(0, 0);
 		this.bipedHead.addBox(-4.0F, -8.0F, -4.0F, 8, 8, 8, var1);
 		this.bipedHead.setRotationPoint(0.0F, 0.0F + var2, 0.0F);
@@ -40,6 +46,15 @@
 		this.bipedLeftArm.mirror = true;
 		this.bipedLeftArm.addBox(-1.0F, -2.0F, -2.0F, 4, 12, 4, var1);
 		this.bipedLeftArm.setRotationPoint(5.0F, 2.0F + var2, 0.0F);
+		this.bipedRightArmS = new ModelRenderer(40, 16);
+		this.bipedRightArmS.addBox(-2.0F, -2.0F, -2.0F, 3, 12, 4, var1);
+		this.bipedRightArmS.setRotationPoint(-5.0F, 2.0F + var2, 0.0F);
+		this.bipedLeftArmS = new ModelRenderer(40, 16);
+		this.bipedLeftArmS.mirror = true;
+		this.bipedLeftArmS.addBox(-1.0F, -2.0F, -2.0F, 3, 12, 4, var1);
+		this.bipedLeftArmS.setRotationPoint(5.0F, 2.0F + var2, 0.0F);
+		this.bipedRightArmS.isHidden = true;
+		this.bipedLeftArmS.isHidden = true;
 		this.bipedRightLeg = new ModelRenderer(0, 16);
 		this.bipedRightLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, var1);
 		this.bipedRightLeg.setRotationPoint(-2.0F, 12.0F + var2, 0.0F);
@@ -49,12 +64,22 @@
 		this.bipedLeftLeg.setRotationPoint(2.0F, 12.0F + var2, 0.0F);
 	}
 
+	public void setSlimModel(boolean var1) {
+		this.field_9257_0KUtgLX9srVUt26M4Sr4d7tQWC7591F5ufdCW0N24HOCJRBfNMJmqGBkyn5V = var1;
+		this.bipedRightArm.isHidden = var1;
+		this.bipedLeftArm.isHidden = var1;
+		this.bipedRightArmS.isHidden = !var1;
+		this.bipedLeftArmS.isHidden = !var1;
+	}
+
 	public void render(float var1, float var2, float var3, float var4, float var5, float var6) {
 		this.setRotationAngles(var1, var2, var3, var4, var5, var6);
 		this.bipedHead.render(var6);
 		this.bipedBody.render(var6);
 		this.bipedRightArm.render(var6);
 		this.bipedLeftArm.render(var6);
+		this.bipedRightArmS.render(var6);
+		this.bipedLeftArmS.render(var6);
 		this.bipedRightLeg.render(var6);
 		this.bipedLeftLeg.render(var6);
 		this.bipedHeadwear.render(var6);
@@ -65,8 +90,8 @@
 		this.bipedHead.rotateAngleX = var5 / (180.0F / (float)Math.PI);
 		this.bipedHeadwear.rotateAngleY = this.bipedHead.rotateAngleY;
 		this.bipedHeadwear.rotateAngleX = this.bipedHead.rotateAngleX;
-		this.bipedRightArm.rotateAngleX = MathHelper.cos(var1 * 0.6662F + (float)Math.PI) * 2.0F * var2 * 0.5F;
-		this.bipedLeftArm.rotateAngleX = MathHelper.cos(var1 * 0.6662F) * 2.0F * var2 * 0.5F;
+		this.bipedRightArm.rotateAngleX = this.bipedRightArmS.rotateAngleX = MathHelper.cos(var1 * 0.6662F + (float)Math.PI) * 2.0F * var2 * 0.5F;
+		this.bipedLeftArm.rotateAngleX = this.bipedLeftArmS.rotateAngleX = MathHelper.cos(var1 * 0.6662F) * 2.0F * var2 * 0.5F;
 		this.bipedRightArm.rotateAngleZ = 0.0F;
 		this.bipedLeftArm.rotateAngleZ = 0.0F;
 		this.bipedRightLeg.rotateAngleX = MathHelper.cos(var1 * 0.6662F) * 1.4F * var2;
@@ -75,7 +100,9 @@
 		this.bipedLeftLeg.rotateAngleY = 0.0F;
 		if(this.isRiding) {
 			this.bipedRightArm.rotateAngleX += (float)Math.PI * -0.2F;
+			this.bipedRightArmS.rotateAngleX += (float)Math.PI * -0.2F;
 			this.bipedLeftArm.rotateAngleX += (float)Math.PI * -0.2F;
+			this.bipedLeftArmS.rotateAngleX += (float)Math.PI * -0.2F;
 			this.bipedRightLeg.rotateAngleX = (float)Math.PI * -0.4F;
 			this.bipedLeftLeg.rotateAngleX = (float)Math.PI * -0.4F;
 			this.bipedRightLeg.rotateAngleY = (float)Math.PI * 0.1F;
@@ -83,15 +110,15 @@
 		}
 
 		if(this.heldItemLeft) {
-			this.bipedLeftArm.rotateAngleX = this.bipedLeftArm.rotateAngleX * 0.5F - (float)Math.PI * 0.1F;
+			this.bipedLeftArm.rotateAngleX = this.bipedLeftArmS.rotateAngleX = this.bipedLeftArm.rotateAngleX * 0.5F - (float)Math.PI * 0.1F;
 		}
 
 		if(this.heldItemRight) {
-			this.bipedRightArm.rotateAngleX = this.bipedRightArm.rotateAngleX * 0.5F - (float)Math.PI * 0.1F;
+			this.bipedRightArm.rotateAngleX = this.bipedRightArmS.rotateAngleX = this.bipedRightArm.rotateAngleX * 0.5F - (float)Math.PI * 0.1F;
 		}
 
-		this.bipedRightArm.rotateAngleY = 0.0F;
-		this.bipedLeftArm.rotateAngleY = 0.0F;
+		this.bipedRightArm.rotateAngleY = this.bipedRightArmS.rotateAngleY = 0.0F;
+		this.bipedLeftArm.rotateAngleY = this.bipedLeftArmS.rotateAngleY = 0.0F;
 		if(this.swingProgress > -9990.0F) {
 			float var7 = this.swingProgress;
 			this.bipedBody.rotateAngleY = MathHelper.sin(MathHelper.sqrt_float(var7) * (float)Math.PI * 2.0F) * 0.2F;
@@ -118,7 +145,9 @@
 			this.bipedRightLeg.rotateAngleX -= 0.0F;
 			this.bipedLeftLeg.rotateAngleX -= 0.0F;
 			this.bipedRightArm.rotateAngleX += 0.4F;
+			this.bipedRightArmS.rotateAngleX += 0.4F;
 			this.bipedLeftArm.rotateAngleX += 0.4F;
+			this.bipedLeftArmS.rotateAngleX += 0.4F;
 			this.bipedRightLeg.rotationPointZ = 4.0F;
 			this.bipedLeftLeg.rotationPointZ = 4.0F;
 			this.bipedRightLeg.rotationPointY = 9.0F;
@@ -133,9 +162,26 @@
 			this.bipedHead.rotationPointY = 0.0F;
 		}
 
+		if(this.inWater) {
+			--this.bipedHead.rotateAngleX;
+			--this.bipedHeadwear.rotateAngleX;
+		}
+
 		this.bipedRightArm.rotateAngleZ += MathHelper.cos(var3 * 0.09F) * 0.05F + 0.05F;
 		this.bipedLeftArm.rotateAngleZ -= MathHelper.cos(var3 * 0.09F) * 0.05F + 0.05F;
 		this.bipedRightArm.rotateAngleX += MathHelper.sin(var3 * 0.067F) * 0.05F;
 		this.bipedLeftArm.rotateAngleX -= MathHelper.sin(var3 * 0.067F) * 0.05F;
+		this.bipedLeftArmS.rotationPointX = this.bipedLeftArm.rotationPointX;
+		this.bipedLeftArmS.rotationPointY = this.bipedLeftArm.rotationPointY;
+		this.bipedLeftArmS.rotationPointZ = this.bipedLeftArm.rotationPointZ;
+		this.bipedLeftArmS.rotateAngleX = this.bipedLeftArm.rotateAngleX;
+		this.bipedLeftArmS.rotateAngleY = this.bipedLeftArm.rotateAngleY;
+		this.bipedLeftArmS.rotateAngleZ = this.bipedLeftArm.rotateAngleZ;
+		this.bipedRightArmS.rotationPointX = this.bipedRightArm.rotationPointX;
+		this.bipedRightArmS.rotationPointY = this.bipedRightArm.rotationPointY;
+		this.bipedRightArmS.rotationPointZ = this.bipedRightArm.rotationPointZ;
+		this.bipedRightArmS.rotateAngleX = this.bipedRightArm.rotateAngleX;
+		this.bipedRightArmS.rotateAngleY = this.bipedRightArm.rotateAngleY;
+		this.bipedRightArmS.rotateAngleZ = this.bipedRightArm.rotateAngleZ;
 	}
 }
--- net/minecraft/src/BlockRedstoneWire.java
+++ net/minecraft/src/BlockRedstoneWire.java
@@ -145,6 +145,7 @@
 			var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
 			var1.notifyBlocksOfNeighborChange(var2, var3 + 1, var4, this.blockID);
 		}
+
 	}
 
 	public void onBlockAdded(World var1, int var2, int var3, int var4) {
--- /dev/null
+++ net/minecraft/src/CommandFly.java
@@ -1,0 +1,21 @@
+package net.minecraft.src;
+
+class CommandFly extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8570_9oqfZAnfB6D7J749dZJVD66w32nt8gyieBYTogLV81ov75pUcvq58HAc4G35;
+    
+    CommandFly(final CommandManager abb) {
+        this.field_8570_9oqfZAnfB6D7J749dZJVD66w32nt8gyieBYTogLV81ov75pUcvq58HAc4G35 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (ScreenDebugMenu.dbg_conf_enableCheats) {
+            ScreenDebugMenu.dbg_conf_fly = !ScreenDebugMenu.dbg_conf_fly;
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return ScreenDebugMenu.dbg_conf_fly ? "1" : "0";
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockMyconWorkbench.java
@@ -1,0 +1,46 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockMyconWorkbench extends Block {
+	private int field_8345_3fuI59bnYP8mBpa5508srVpEX9Nn8Ii0rP5G0P0o8GVTeB2S7y9u5BeClkBu;
+	private int field_8348_9ssMu3NPxH99HVTTMSSCr5j2975Wk39H8k7ltNSRk86XV6ZNl7fxf2qyX1qK;
+	private int field_8347_6xFn38IznXPshNtuNYjb0r5k09XEwz051kFyNSI9nfZslZx95cBw28AIC64j;
+	private int field_8346_7i756Co46Tzixh0MH7B41QQ3aD4aKr2IfwS68aVBfy5m5mONyZob616cJ9Ps;
+
+	public BlockMyconWorkbench(int var1, int var2, int var3, int var4) {
+		super(var1, Material.grass);
+		this.blockIndexInTexture = var3;
+		this.setTickOnLoad(true);
+		this.field_8345_3fuI59bnYP8mBpa5508srVpEX9Nn8Ii0rP5G0P0o8GVTeB2S7y9u5BeClkBu = var2;
+		this.field_8348_9ssMu3NPxH99HVTTMSSCr5j2975Wk39H8k7ltNSRk86XV6ZNl7fxf2qyX1qK = var3;
+		this.field_8347_6xFn38IznXPshNtuNYjb0r5k09XEwz051kFyNSI9nfZslZx95cBw28AIC64j = var4;
+		this.field_8346_7i756Co46Tzixh0MH7B41QQ3aD4aKr2IfwS68aVBfy5m5mONyZob616cJ9Ps = var1;
+	}
+
+	public BlockMyconWorkbench(int var1, int var2, int var3, int var4, Material var5) {
+		super(var1, var5);
+		this.blockIndexInTexture = var3;
+		this.setTickOnLoad(true);
+		this.field_8345_3fuI59bnYP8mBpa5508srVpEX9Nn8Ii0rP5G0P0o8GVTeB2S7y9u5BeClkBu = var2;
+		this.field_8348_9ssMu3NPxH99HVTTMSSCr5j2975Wk39H8k7ltNSRk86XV6ZNl7fxf2qyX1qK = var3;
+		this.field_8347_6xFn38IznXPshNtuNYjb0r5k09XEwz051kFyNSI9nfZslZx95cBw28AIC64j = var4;
+		this.field_8346_7i756Co46Tzixh0MH7B41QQ3aD4aKr2IfwS68aVBfy5m5mONyZob616cJ9Ps = var1;
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 == 1 ? this.field_8345_3fuI59bnYP8mBpa5508srVpEX9Nn8Ii0rP5G0P0o8GVTeB2S7y9u5BeClkBu : (var1 == 0 ? this.field_8347_6xFn38IznXPshNtuNYjb0r5k09XEwz051kFyNSI9nfZslZx95cBw28AIC64j : this.field_8348_9ssMu3NPxH99HVTTMSSCr5j2975Wk39H8k7ltNSRk86XV6ZNl7fxf2qyX1qK);
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return this.field_8346_7i756Co46Tzixh0MH7B41QQ3aD4aKr2IfwS68aVBfy5m5mONyZob616cJ9Ps;
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		var5.displayWorkbenchGUI();
+		return true;
+	}
+}
--- /dev/null
+++ net/minecraft/src/WorldGenMyconUnknownClass.java
@@ -1,0 +1,69 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Random;
+
+public abstract class WorldGenMyconUnknownClass {
+	public static final int field_9989_7nMyWcWuvyDrrL2K3w683NnXZ4R3413RLoh7xKe4GtYQ3RfS4Em5W0Vnp6dm = 20;
+	public static final int field_9988_3wJsWrs47vvM7njdJxvcKAYAVN96D0S6RQVL85Tb51qa3Ec8rMKLwe9C09b3 = 46;
+	public final EnumWorldGenerator field_9987_68BA5YA20R63Jvx5mf2f0QY9F5CI712o6GIr96is6zFAg89BWvpL45J8n44Q;
+	public final double field_9985_2Cj4T23zTjZ8P2pnru6eB2r3b229GaFgJC22W2tht5x24XTX4BiGdn4Y6xsC;
+	public final double field_9984_2H7oEc5LBpn2wimwB5bXR08uskktpPvU1435c3fQ20uGKpkjHG1r9q5GXKU2;
+	private static final List<WorldGenMyconUnknownClass> field_9986_1gZRfAv6ZC2FpE1cZQrLBSUL7z3y4D60581LY6H69NcHdHE89jdxH2evUizQ = new ArrayList();
+
+	public WorldGenMyconUnknownClass(double var1, double var3, EnumWorldGenerator var5) {
+		this.field_9985_2Cj4T23zTjZ8P2pnru6eB2r3b229GaFgJC22W2tht5x24XTX4BiGdn4Y6xsC = var1;
+		this.field_9984_2H7oEc5LBpn2wimwB5bXR08uskktpPvU1435c3fQ20uGKpkjHG1r9q5GXKU2 = var3;
+		this.field_9987_68BA5YA20R63Jvx5mf2f0QY9F5CI712o6GIr96is6zFAg89BWvpL45J8n44Q = var5;
+	}
+
+	public abstract boolean func_9982_84EZjwmgfVpn5brk96GnU3Eit81Yc6Xxm4lTPdVKUWyphKxl38Uh4dg8VF3T(Random var1, World var2, int var3, int var4);
+
+	public abstract void func_9977_0C8cKMHZGkSA22DGYztFv5857z0O34nRumUNAm59CrgBrFnKV5bq3guXEYB5(Random var1);
+
+	public int func_9983_8WfOXonA2bRS7hUpHd7sbe7k20yqj7N6OH13GX3XXy71V13Eva115wQwe47C() {
+		return -1;
+	}
+
+	public static void func_9981_980N8050sF1v352476qOc8mfF92W7H1QatonEr6b738Sxi3vQSvf2K98637h(WorldGenMyconUnknownClass var0) {
+		field_9986_1gZRfAv6ZC2FpE1cZQrLBSUL7z3y4D60581LY6H69NcHdHE89jdxH2evUizQ.add(var0);
+	}
+
+	public static WorldGenMyconUnknownClass func_9978_2dCM22Pc7rV0IQo46JM3ja84x9AHCGNPeSCDVFoTi3969B8hv2sM7nr6o61r(double var0, double var2, EnumWorldGenerator var4) {
+		double var5 = Double.MAX_VALUE;
+		WorldGenMyconUnknownClass var7 = null;
+		Iterator var8 = field_9986_1gZRfAv6ZC2FpE1cZQrLBSUL7z3y4D60581LY6H69NcHdHE89jdxH2evUizQ.iterator();
+
+		while(var8.hasNext()) {
+			WorldGenMyconUnknownClass var9 = (WorldGenMyconUnknownClass)var8.next();
+			double var10 = Math.abs(var0 - var9.field_9985_2Cj4T23zTjZ8P2pnru6eB2r3b229GaFgJC22W2tht5x24XTX4BiGdn4Y6xsC) + Math.abs(var2 - var9.field_9984_2H7oEc5LBpn2wimwB5bXR08uskktpPvU1435c3fQ20uGKpkjHG1r9q5GXKU2);
+			if(var5 > var10) {
+				var5 = var10;
+				var7 = var9;
+			}
+		}
+
+		return var7;
+	}
+
+	public static void func_9980_9oD74IB2ktSl4rKYyq5be1pnGiKcijsDk38XO5US1yU1RgWUN9KZuVmeM2HO() {
+		func_9981_980N8050sF1v352476qOc8mfF92W7H1QatonEr6b738Sxi3vQSvf2K98637h(new WorldGenMyconUnknownClass2(0.2D, 0.2D, EnumWorldGenerator.SURFACE, 0));
+		func_9981_980N8050sF1v352476qOc8mfF92W7H1QatonEr6b738Sxi3vQSvf2K98637h(new WorldGenMyconUnknownClass2(0.3D, 0.3D, EnumWorldGenerator.SURFACE, 1));
+		func_9981_980N8050sF1v352476qOc8mfF92W7H1QatonEr6b738Sxi3vQSvf2K98637h(new WorldGenMyconUnknownClass2(0.4D, 0.3D, EnumWorldGenerator.SURFACE, 2));
+		func_9981_980N8050sF1v352476qOc8mfF92W7H1QatonEr6b738Sxi3vQSvf2K98637h(new WorldGenMyconUnknownClass2(0.2D, 0.2D, EnumWorldGenerator.UNDERGROUND, 0));
+		func_9981_980N8050sF1v352476qOc8mfF92W7H1QatonEr6b738Sxi3vQSvf2K98637h(new WorldGenMyconUnknownClass2(0.1D, 0.3D, EnumWorldGenerator.LOW_RIVER, 0));
+		func_9981_980N8050sF1v352476qOc8mfF92W7H1QatonEr6b738Sxi3vQSvf2K98637h(new WorldGenMycon(0.15D, 0.4D, EnumWorldGenerator.LOW_RIVER));
+	}
+
+	public static void func_9979_9JNUbhbk292KcCQ94Cqr7mT8uN1dJGymij9j6488Z69GSfe4353u9Nj2PWn2(Random var0) {
+		Iterator var1 = field_9986_1gZRfAv6ZC2FpE1cZQrLBSUL7z3y4D60581LY6H69NcHdHE89jdxH2evUizQ.iterator();
+
+		while(var1.hasNext()) {
+			WorldGenMyconUnknownClass var2 = (WorldGenMyconUnknownClass)var1.next();
+			var2.func_9977_0C8cKMHZGkSA22DGYztFv5857z0O34nRumUNAm59CrgBrFnKV5bq3guXEYB5(var0);
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandMcDiff.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandMcDiff extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8577_96Vfi1QmI584e86OKhC26k47UPY1oneYr6SR8NUv8OyJP3Qg6C1ZcnGDvn7p;
+    
+    CommandMcDiff(final CommandManager abb) {
+        this.field_8577_96Vfi1QmI584e86OKhC26k47UPY1oneYr6SR8NUv8OyJP3Qg6C1ZcnGDvn7p = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.mc.options.difficulty = (int)arr[0];
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "" + InputHandler.mc.options.difficulty;
+    }
+}
--- net/minecraft/src/MetadataChunkBlock.java
+++ net/minecraft/src/MetadataChunkBlock.java
@@ -48,50 +48,50 @@
 								}
 
 								int var14;
-								int var20;
+								int var15;
 								if(var12 >= 15 && var13 == 0) {
-									var20 = 0;
+									var15 = 0;
 								} else {
 									var14 = var1.getSavedLightValue(this.skyBlock, var6 - 1, var8, var7);
-									int var15 = var1.getSavedLightValue(this.skyBlock, var6 + 1, var8, var7);
-									int var16 = var1.getSavedLightValue(this.skyBlock, var6, var8 - 1, var7);
-									int var17 = var1.getSavedLightValue(this.skyBlock, var6, var8 + 1, var7);
-									int var18 = var1.getSavedLightValue(this.skyBlock, var6, var8, var7 - 1);
-									int var19 = var1.getSavedLightValue(this.skyBlock, var6, var8, var7 + 1);
-									var20 = var14;
-									if(var15 > var14) {
-										var20 = var15;
-									}
-
-									if(var16 > var20) {
-										var20 = var16;
-									}
-
-									if(var17 > var20) {
-										var20 = var17;
-									}
-
-									if(var18 > var20) {
-										var20 = var18;
-									}
-
-									if(var19 > var20) {
-										var20 = var19;
-									}
-
-									var20 -= var12;
-									if(var20 < 0) {
-										var20 = 0;
-									}
-
-									if(var13 > var20) {
-										var20 = var13;
+									int var16 = var1.getSavedLightValue(this.skyBlock, var6 + 1, var8, var7);
+									int var17 = var1.getSavedLightValue(this.skyBlock, var6, var8 - 1, var7);
+									int var18 = var1.getSavedLightValue(this.skyBlock, var6, var8 + 1, var7);
+									int var19 = var1.getSavedLightValue(this.skyBlock, var6, var8, var7 - 1);
+									int var20 = var1.getSavedLightValue(this.skyBlock, var6, var8, var7 + 1);
+									var15 = var14;
+									if(var16 > var14) {
+										var15 = var16;
+									}
+
+									if(var17 > var15) {
+										var15 = var17;
+									}
+
+									if(var18 > var15) {
+										var15 = var18;
+									}
+
+									if(var19 > var15) {
+										var15 = var19;
+									}
+
+									if(var20 > var15) {
+										var15 = var20;
+									}
+
+									var15 -= var12;
+									if(var15 < 0) {
+										var15 = 0;
+									}
+
+									if(var13 > var15) {
+										var15 = var13;
 									}
 								}
 
-								if(var9 != var20) {
-									var1.setLightValue(this.skyBlock, var6, var8, var7, var20);
-									var14 = var20 - 1;
+								if(var9 != var15) {
+									var1.setLightValue(this.skyBlock, var6, var8, var7, var15);
+									var14 = var15 - 1;
 									if(var14 < 0) {
 										var14 = 0;
 									}
@@ -116,8 +116,8 @@
 					}
 				}
 			}
-
 		}
+
 	}
 
 	public boolean getLightUpdated(int var1, int var2, int var3, int var4, int var5, int var6) {
--- net/minecraft/src/GuiCrafting.java
+++ net/minecraft/src/GuiCrafting.java
@@ -34,8 +34,8 @@
 	}
 
 	protected void drawGuiContainerForegroundLayer() {
-		this.fontRenderer.drawString("Crafting", 28, 6, 4210752);
-		this.fontRenderer.drawString("Inventory", 8, this.ySize - 96 + 2, 4210752);
+		this.fontRenderer.drawString("Crafting", 28, 6, 16777215);
+		this.fontRenderer.drawString("Inventory", 8, this.ySize - 96 + 2, 16777215);
 	}
 
 	protected void drawGuiContainerBackgroundLayer(float var1) {
--- net/minecraft/src/RenderPainting.java
+++ net/minecraft/src/RenderPainting.java
@@ -6,6 +6,7 @@
 
 public class RenderPainting extends Render {
 	private Random rand = new Random();
+	public final float ArtTextureSize = 512.0F;
 
 	public void renderThePainting(EntityPainting var1, double var2, double var4, double var6, float var8, float var9) {
 		this.rand.setSeed(187L);
@@ -35,22 +36,22 @@
 				float var14 = var7 + (float)((var11 + 1) * 16);
 				float var15 = var7 + (float)(var11 * 16);
 				this.getOffset(var1, (var12 + var13) / 2.0F, (var14 + var15) / 2.0F);
-				float var16 = (float)(var4 + var2 - var10 * 16) / 256.0F;
-				float var17 = (float)(var4 + var2 - (var10 + 1) * 16) / 256.0F;
-				float var18 = (float)(var5 + var3 - var11 * 16) / 256.0F;
-				float var19 = (float)(var5 + var3 - (var11 + 1) * 16) / 256.0F;
-				float var20 = 12.0F / 16.0F;
-				float var21 = 13.0F / 16.0F;
+				float var16 = (float)(var4 + var2 - var10 * 16) / 512.0F;
+				float var17 = (float)(var4 + var2 - (var10 + 1) * 16) / 512.0F;
+				float var18 = (float)(var5 + var3 - var11 * 16) / 512.0F;
+				float var19 = (float)(var5 + var3 - (var11 + 1) * 16) / 512.0F;
+				float var20 = 14.0F / 16.0F;
+				float var21 = 0.90625F;
 				float var22 = 0.0F;
-				float var23 = 1.0F / 16.0F;
-				float var24 = 12.0F / 16.0F;
-				float var25 = 13.0F / 16.0F;
-				float var26 = 0.001953125F;
-				float var27 = 0.001953125F;
-				float var28 = 385.0F / 512.0F;
-				float var29 = 385.0F / 512.0F;
+				float var23 = 0.03125F;
+				float var24 = 14.0F / 16.0F;
+				float var25 = 0.90625F;
+				float var26 = 1.0F / 1024.0F;
+				float var27 = 1.0F / 1024.0F;
+				float var28 = 0.87597656F;
+				float var29 = 0.87597656F;
 				float var30 = 0.0F;
-				float var31 = 1.0F / 16.0F;
+				float var31 = 0.03125F;
 				Tessellator var32 = Tessellator.instance;
 				var32.startDrawingQuads();
 				var32.setNormal(0.0F, 0.0F, -1.0F);
--- /dev/null
+++ net/minecraft/src/BlockMinecartTrackOld.java
@@ -1,0 +1,94 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockMinecartTrackOld extends BlockOld {
+	protected BlockMinecartTrackOld(int var1, int var2) {
+		super(var1, var2, Material.circuits);
+		this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 2.0F / 16.0F, 1.0F);
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public MovingObjectPosition collisionRayTrace(World var1, int var2, int var3, int var4, Vec3D var5, Vec3D var6) {
+		this.setBlockBoundsBasedOnState(var1, var2, var3, var4);
+		return super.collisionRayTrace(var1, var2, var3, var4, var5, var6);
+	}
+
+	public void setBlockBoundsBasedOnState(IBlockAccess var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		if(var5 >= 2 && var5 <= 5) {
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 10.0F / 16.0F, 1.0F);
+		} else {
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 2.0F / 16.0F, 1.0F);
+		}
+
+	}
+
+	public int getBlockTextureFromSideAndMetadata(int var1, int var2) {
+		return var2 >= 6 ? this.blockIndexInTexture - 16 : this.blockIndexInTexture;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 9;
+	}
+
+	public int quantityDropped(Random var1) {
+		return 1;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return var1.isBlockNormalCube(var2, var3 - 1, var4);
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		var1.setBlockMetadataWithNotify(var2, var3, var4, 15);
+		this.refreshTrackShape(var1, var2, var3, var4);
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		boolean var7 = false;
+		if(!var1.isBlockNormalCube(var2, var3 - 1, var4)) {
+			var7 = true;
+		}
+
+		if(var6 == 2 && !var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+			var7 = true;
+		}
+
+		if(var6 == 3 && !var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+			var7 = true;
+		}
+
+		if(var6 == 4 && !var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+			var7 = true;
+		}
+
+		if(var6 == 5 && !var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+			var7 = true;
+		}
+
+		if(var7) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		} else if(var5 > 0 && BlockOld.blocksList[var5].canProvidePower() && MinecartTrackLogic.getNAdjacentTracks(new MinecartTrackLogic(this, var1, var2, var3, var4)) == 3) {
+			this.refreshTrackShape(var1, var2, var3, var4);
+		}
+
+	}
+
+	private void refreshTrackShape(World var1, int var2, int var3, int var4) {
+		(new MinecartTrackLogic(this, var1, var2, var3, var4)).place(var1.isBlockIndirectlyGettingPowered(var2, var3, var4));
+	}
+}
--- /dev/null
+++ net/minecraft/src/GuiZM.java
@@ -1,0 +1,90 @@
+package net.minecraft.src;
+
+import java.io.File;
+import net.minecraft.client.Minecraft;
+
+public class GuiZM extends GuiScreen {
+	protected GuiScreen field_7937_2c5I6Dup29N5J3rSaeDLAz8akBfuiJB2T87G93ECD92zh46QR3zlBs957sYi;
+	protected String field_7936_0Kb8BwYkClxWghZz9cT0YVBd35D3xDd6ZvR5nkqjczTmklId8t2b33x9Z4AF = "ZOMBIES";
+	private boolean field_7938_7lO83KM6WXSTOBAWD0AM0JlzD39uVa0q05J3LKP0V52BbRN7iO9ltbZKa2u8 = false;
+
+	public GuiZM(GuiScreen var1) {
+		this.field_7937_2c5I6Dup29N5J3rSaeDLAz8akBfuiJB2T87G93ECD92zh46QR3zlBs957sYi = var1;
+	}
+
+	public void func_7932_7N3VX99600qE9rm9NM7VV5A8mO14MK4TEF6lJ5U39v6Cga4yzBU5kLc71WuC() {
+		while(this.controlList.size() > 2) {
+			this.controlList.remove(2);
+		}
+
+		File var1 = Minecraft.getMinecraftDir();
+		this.controlList.add(new GuiButton(5, this.width / 2 - 100, this.height / 6, this.func_7934_7Jz99c4j0Jg06V5JXD9oR633F1pFzY5fB5580ZWqF1IA1S2uCo5i153791LJ(5)));
+		this.controlList.add(new GuiButton(6, this.width / 2 - 100, this.height / 6 + 20, this.func_7934_7Jz99c4j0Jg06V5JXD9oR633F1pFzY5fB5580ZWqF1IA1S2uCo5i153791LJ(6)));
+	}
+
+	public void initGui() {
+		this.controlList.clear();
+		this.func_7933_63l4f3KKjCiNYBydIQ18QwRLEQVBRS5VSt8X441XZoe1G30t1p87R0wK0REN();
+		this.func_7932_7N3VX99600qE9rm9NM7VV5A8mO14MK4TEF6lJ5U39v6Cga4yzBU5kLc71WuC();
+		InputHandler.mc.sndManager.func_12031_514dv3mYU7t95lOh23lLhBI10XBv07D8y61Goe1u7G926JNt2Y1WIoiHj5tm("Condemned", true);
+	}
+
+	protected String func_7934_7Jz99c4j0Jg06V5JXD9oR633F1pFzY5fB5580ZWqF1IA1S2uCo5i153791LJ(int var1) {
+		switch(var1) {
+		case 5:
+			return "[ZM] Ruinen der Untoten";
+		case 6:
+			return "[ZM] Metsan Talo";
+		default:
+			return "???";
+		}
+	}
+
+	public void func_7933_63l4f3KKjCiNYBydIQ18QwRLEQVBRS5VSt8X441XZoe1G30t1p87R0wK0REN() {
+		this.controlList.add(new GuiButton(-2, this.width / 2 - 100, this.height / 6 + 168, "Back"));
+	}
+
+	protected void actionPerformed(GuiButton var1) {
+		if(var1.enabled) {
+			if(var1.id > -1) {
+				switch(var1.id) {
+				case 5:
+					this.func_7935_1446dIf8e38igLE83v9lx7cgqGJVShz37wq0K96eWHntiN6737PK752mK2U6("/zombies/WorldZM1", WorldZMSpawnWorld1.class);
+					break;
+				case 6:
+					this.func_7935_1446dIf8e38igLE83v9lx7cgqGJVShz37wq0K96eWHntiN6737PK752mK2U6("/zombies/WorldZM2", WorldZMSpawnWorld2.class);
+				}
+			} else if(var1.id == -2) {
+				InputHandler.mc.sndManager.func_12031_514dv3mYU7t95lOh23lLhBI10XBv07D8y61Goe1u7G926JNt2Y1WIoiHj5tm("mainmenu", true);
+				this.mc.displayGuiScreen(this.field_7937_2c5I6Dup29N5J3rSaeDLAz8akBfuiJB2T87G93ECD92zh46QR3zlBs957sYi);
+			}
+		}
+
+	}
+
+	public void func_7935_1446dIf8e38igLE83v9lx7cgqGJVShz37wq0K96eWHntiN6737PK752mK2U6(String var1, Class<? extends ZMWorld> var2) {
+		((BlockHidable)ExtBlocks.BarrierBlock).render = false;
+		this.mc.displayGuiScreen((GuiScreen)null);
+		if(!this.field_7938_7lO83KM6WXSTOBAWD0AM0JlzD39uVa0q05J3LKP0V52BbRN7iO9ltbZKa2u8) {
+			this.field_7938_7lO83KM6WXSTOBAWD0AM0JlzD39uVa0q05J3LKP0V52BbRN7iO9ltbZKa2u8 = true;
+			this.mc.playerController = new PlayerControllerZombieMode(this.mc);
+			this.mc.func_7221_71au6k35k5FtG2NSeEY81nM6cEMq9s813ZJ5zelgNb1pyX20syXDH0z15gpb(var1, var2);
+			this.mc.displayGuiScreen((GuiScreen)null);
+		}
+
+	}
+
+	protected void keyTyped(char var1, int var2) {
+		if(var2 == 1) {
+			InputHandler.mc.sndManager.func_12031_514dv3mYU7t95lOh23lLhBI10XBv07D8y61Goe1u7G926JNt2Y1WIoiHj5tm("mainmenu", true);
+		}
+
+		super.keyTyped(var1, var2);
+	}
+
+	public void drawScreen(int var1, int var2, float var3) {
+		this.drawDefaultBackground();
+		this.drawCenteredString(this.fontRenderer, this.field_7936_0Kb8BwYkClxWghZz9cT0YVBd35D3xDd6ZvR5nkqjczTmklId8t2b33x9Z4AF, this.width / 2, 20, 16777215);
+		super.drawScreen(var1, var2, var3);
+	}
+}
--- net/minecraft/src/GuiDeleteWorld.java
+++ net/minecraft/src/GuiDeleteWorld.java
@@ -10,7 +10,7 @@
 	}
 
 	public void initButtons() {
-		this.controlList.add(new GuiButton(6, this.width / 2 - 100, this.height / 6 + 168, "Cancel"));
+		this.controlList.add(new GuiButton(-2, this.width / 2 - 100, this.height / 6 + 168, "Cancel"));
 	}
 
 	public void selectWorld(int var1) {
--- net/minecraft/src/BlockButton.java
+++ net/minecraft/src/BlockButton.java
@@ -219,6 +219,7 @@
 			var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "random.click", 0.3F, 0.5F);
 			var1.markBlocksDirty(var2, var3, var4, var2, var3, var4);
 		}
+
 	}
 
 	public void setBlockBoundsForItemRender() {
--- /dev/null
+++ net/minecraft/src/WorldGenGrass.java
@@ -1,0 +1,18 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class WorldGenGrass extends WorldGenerator {
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		for(int var6 = 0; var6 < 64; ++var6) {
+			int var7 = var3 + var2.nextInt(8) - var2.nextInt(8);
+			int var8 = var4 + var2.nextInt(4) - var2.nextInt(4);
+			int var9 = var5 + var2.nextInt(8) - var2.nextInt(8);
+			if(var1.getBlockId(var7, var8, var9) == 0 && ExtBlocks.Grass.canBlockStay(var1, var7, var8, var9)) {
+				var1.setBlock(var7, var8, var9, 165);
+			}
+		}
+
+		return true;
+	}
+}
--- /dev/null
+++ net/minecraft/src/SliderConfirm.java
@@ -1,0 +1,67 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+import org.lwjgl.opengl.GL11;
+
+public class SliderConfirm extends GuiSlider {
+	public GuiScreen parent;
+
+	public SliderConfirm(GuiScreen var1, int var2, int var3, int var4, int var5, String var6, float var7) {
+		super(var2, var3, var4, var5, var6, var7);
+		this.parent = var1;
+		this.enabled = true;
+		this.sliderValue = 0.0F;
+		this.width = var5;
+	}
+
+	public boolean mouseBruhhed(Minecraft var1, int var2, int var3) {
+		return this.enabled && var2 >= this.xPosition && var3 >= this.yPosition && var2 < this.xPosition + this.width && var3 < this.yPosition + this.height;
+	}
+
+	protected void mouseDragged(Minecraft var1, int var2, int var3) {
+		if(this.visible) {
+			if(this.dragging) {
+				this.sliderValue = (float)(var2 - (this.xPosition + 4)) / (float)(this.width - 8);
+				if(this.sliderValue < 0.0F) {
+					this.sliderValue = 0.0F;
+				}
+
+				if(this.sliderValue > 1.0F) {
+					this.sliderValue = 1.0F;
+				}
+			}
+
+			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+			this.drawTexturedModalRect(this.xPosition + (int)(this.sliderValue * (float)(this.width - 8)), this.yPosition, 0, 66, 4, 20);
+			this.drawTexturedModalRect(this.xPosition + (int)(this.sliderValue * (float)(this.width - 8)) + 4, this.yPosition, 196, 66, 4, 20);
+		}
+
+	}
+
+	public boolean mousePressed(Minecraft var1, int var2, int var3) {
+		if(this.mouseBruhhed(var1, var2, var3)) {
+			this.sliderValue = (float)(var2 - (this.xPosition + 4)) / (float)(this.width - 8);
+			if(this.sliderValue < 0.0F) {
+				this.sliderValue = 0.0F;
+			}
+
+			if(this.sliderValue > 1.0F) {
+				this.sliderValue = 1.0F;
+			}
+
+			this.dragging = true;
+			return true;
+		} else {
+			return false;
+		}
+	}
+
+	public void mouseReleased(int var1, int var2) {
+		if(this.sliderValue == 1.0F) {
+			this.parent.sliderReleasedOn1();
+		}
+
+		this.dragging = false;
+		this.sliderValue = 0.0F;
+	}
+}
--- /dev/null
+++ net/minecraft/src/EntityAmoung.java
@@ -1,0 +1,39 @@
+package net.minecraft.src;
+
+public class EntityAmoung extends EntityAnimal {
+	public boolean unusedBool2 = false;
+
+	public EntityAmoung(World var1) {
+		super(var1);
+		this.texture = "/mob/amoung.png";
+		this.setSize(1.0F, 1.0F);
+	}
+
+	public void writeEntityToNBT(NBTTagCompound var1) {
+		super.writeEntityToNBT(var1);
+	}
+
+	public void readEntityFromNBT(NBTTagCompound var1) {
+		super.readEntityFromNBT(var1);
+	}
+
+	protected String getHurtSound() {
+		return "mob.skeletonhurt";
+	}
+
+	protected String getDeathSound() {
+		return "mob.skeletonhurt";
+	}
+
+	protected float getSoundVolume() {
+		return 0.4F;
+	}
+
+	protected int getDropItemId() {
+		return Item.porkRaw.shiftedIndex;
+	}
+
+	public boolean interact(EntityPlayer var1) {
+		return false;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockWoodSlab.java
@@ -1,0 +1,60 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockWoodSlab extends Block {
+	private boolean field_8349_3iCn6O3K7bS61bRWEoZLL78uOAe7hkgos6eWBj7sUB2017Pq0M1IR8748pms;
+
+	public BlockWoodSlab(int var1, int var2, boolean var3) {
+		super(var1, var2, Material.wood);
+		this.field_8349_3iCn6O3K7bS61bRWEoZLL78uOAe7hkgos6eWBj7sUB2017Pq0M1IR8748pms = var3;
+		if(!var3) {
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.5F, 1.0F);
+		}
+
+		this.setLightOpacity(255);
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 <= 1 ? this.blockIndexInTexture + 1 : this.blockIndexInTexture;
+	}
+
+	public boolean isOpaqueCube() {
+		return this.field_8349_3iCn6O3K7bS61bRWEoZLL78uOAe7hkgos6eWBj7sUB2017Pq0M1IR8748pms;
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		if(this == ExtBlocks.woodSingle) {
+		}
+
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		if(this != ExtBlocks.woodSingle) {
+			super.onBlockAdded(var1, var2, var3, var4);
+		}
+
+		int var5 = var1.getBlockId(var2, var3 - 1, var4);
+		if(var5 == ExtBlocks.woodSingle.blockID) {
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+			var1.setBlockWithNotify(var2, var3 - 1, var4, ExtBlocks.woodDouble.blockID);
+		}
+
+	}
+
+	public int idDropped(int var1, Random var2) {
+		return ExtBlocks.woodSingle.blockID;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return this.field_8349_3iCn6O3K7bS61bRWEoZLL78uOAe7hkgos6eWBj7sUB2017Pq0M1IR8748pms;
+	}
+
+	public boolean shouldSideBeRendered(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		if(this != ExtBlocks.woodSingle) {
+			super.shouldSideBeRendered(var1, var2, var3, var4, var5);
+		}
+
+		return var5 == 1 ? true : (!super.shouldSideBeRendered(var1, var2, var3, var4, var5) ? false : (var5 == 0 ? true : var1.getBlockId(var2, var3, var4) != this.blockID));
+	}
+}
--- /dev/null
+++ net/minecraft/src/EntityPlayerFreerunClient.java
@@ -1,0 +1,169 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+import org.lwjgl.input.Keyboard;
+
+public class EntityPlayerFreerunClient extends EntityPlayerSP {
+	public FreerunWorld worldIn;
+	private int currentCheckpoint = 0;
+	private NamedLoc[] checkps = null;
+	public long timerStartTicks = 1L;
+	public boolean countingTime = false;
+	public long finalTime = 0L;
+	private boolean reset = false;
+	public HandlerPlayDemoUnknownClass field_9077_6828xUDuW4HE2czdD77Ktkps1BKQr55aauI7IbsAkcX5iy1397o0JfVUA615 = new HandlerPlayDemoUnknownClass(this);
+	public HandlerPlayDemo field_9072_16mv9E138DxJgRS4D0H03024l40Fl1GMr74MpapQdK8t0qPplbusfR0e1AWH = null;
+	public long field_9076_70AnHd0a21INm883MGtz5RYGZB7k7nx7mo8FmG7ui3k27KA0sbaz84ep4WiW = -1L;
+
+	public EntityPlayerFreerunClient(Minecraft var1, FreerunWorld var2, Session var3) {
+		super(var1, var2, var3);
+		this.worldIn = var2;
+		this.checkps = var2.getCheckpoints();
+	}
+
+	public boolean attackEntityFrom(Entity var1, int var2) {
+		return true;
+	}
+
+	public void displayGUIChest(IInventory var1) {
+	}
+
+	public void displayGUIEditSign(TileEntitySign var1) {
+	}
+
+	public void displayWorkbenchGUI() {
+	}
+
+	public void displayGUIFurnace(TileEntityFurnace var1) {
+	}
+
+	public void ResetFreerun() {
+		NamedLoc var1 = this.checkps[0];
+		this.setPosition((double)var1.bx1, (double)var1.by1, (double)var1.bz1);
+		this.currentCheckpoint = 0;
+		this.countingTime = false;
+		InputHandler.mc.ingameGUI.addChatMessage("Reset");
+		this.field_9077_6828xUDuW4HE2czdD77Ktkps1BKQr55aauI7IbsAkcX5iy1397o0JfVUA615.func_12204_8r9RTHlpJjIj8rv8a68Pq9g6006yw2MZ4W4u9N9p23i9532c8WU7ByApxh50();
+		this.field_9077_6828xUDuW4HE2czdD77Ktkps1BKQr55aauI7IbsAkcX5iy1397o0JfVUA615.func_12198_5E6pR978f3G6kA5h9oL5C9V6089y1jhc16925Ck9G7790FzlQf0011B7Nr42(this.worldIn);
+	}
+
+	public void ResetLastCheckpoint() {
+		this.fire = 0;
+		this.motionX = this.motionY = this.motionZ = 0.0D;
+		if(this.currentCheckpoint > -1) {
+			NamedLoc var1 = this.checkps[this.currentCheckpoint];
+			if(var1.p2Invalid) {
+				this.setPosition((double)var1.bx1, (double)(var1.by1 + 1), (double)var1.bz1);
+			} else {
+				this.setPosition((double)((var1.bx1 + var1.bx2) / 2), (double)(Math.min(var1.by1, var1.by2) + 1), (double)((var1.bz1 + var1.bz2) / 2));
+			}
+
+			InputHandler.mc.ingameGUI.addChatMessage("Restarting last checkpoint");
+		}
+
+	}
+
+	public void onLivingUpdate() {
+		this.field_9077_6828xUDuW4HE2czdD77Ktkps1BKQr55aauI7IbsAkcX5iy1397o0JfVUA615.func_12196_7s9IfTKre2uJtyoPjdLc93WmidSQs9AM2aDgi63837RD3989LlCE6V4C08ci();
+		if(!this.reset) {
+			for(int var1 = 0; var1 != this.inventory.mainInventory.length; ++var1) {
+				this.inventory.mainInventory[var1] = null;
+			}
+
+			this.ResetFreerun();
+			this.reset = true;
+		}
+
+		if(this.posY < (double)this.worldIn.getResetY((long)this.posX, (long)this.posZ) || this.handleLavaMovement() || this.air < 0) {
+			this.air = this.maxAir;
+			this.ResetLastCheckpoint();
+		}
+
+		if(this.checkps != null && this.currentCheckpoint < this.checkps.length - 1) {
+			NamedLoc var8 = this.checkps[this.currentCheckpoint + 1];
+			int var2 = Math.min(var8.bx1, var8.bx2);
+			int var3 = Math.min(var8.by1, var8.by2);
+			int var4 = Math.min(var8.bz1, var8.bz2);
+			int var5 = Math.max(var8.bx1, var8.bx2);
+			int var6 = Math.max(var8.by1, var8.by2);
+			int var7 = Math.max(var8.bz1, var8.bz2);
+			if(Keyboard.isKeyDown(Keyboard.KEY_RSHIFT)) {
+				ExtLogger.i(var2 + " > " + this.posX + " > " + var5);
+				ExtLogger.i(var3 + " > " + this.posY + " > " + var6);
+				ExtLogger.i(var4 + " > " + this.posZ + " > " + var7);
+			}
+
+			if((int)this.posX >= var2 && (int)this.posX <= var5 && (int)this.posY >= var3 && (int)this.posY <= var6 && (int)this.posZ >= var4 && (int)this.posZ <= var7) {
+				++this.currentCheckpoint;
+				if(this.currentCheckpoint != this.checkps.length - 1) {
+					InputHandler.mc.ingameGUI.addChatMessage("Checkpoint " + this.currentCheckpoint + " reached");
+				} else {
+					InputHandler.mc.ingameGUI.addChatMessage("Finish! Press PAUSEBREAK to restart.");
+					this.field_9077_6828xUDuW4HE2czdD77Ktkps1BKQr55aauI7IbsAkcX5iy1397o0JfVUA615.func_12204_8r9RTHlpJjIj8rv8a68Pq9g6006yw2MZ4W4u9N9p23i9532c8WU7ByApxh50();
+					this.field_9077_6828xUDuW4HE2czdD77Ktkps1BKQr55aauI7IbsAkcX5iy1397o0JfVUA615.func_12198_5E6pR978f3G6kA5h9oL5C9V6089y1jhc16925Ck9G7790FzlQf0011B7Nr42(this.worldIn);
+					this.countingTime = false;
+					this.finalTime = this.worldIn.worldTime - this.timerStartTicks;
+					if(this.field_9076_70AnHd0a21INm883MGtz5RYGZB7k7nx7mo8FmG7ui3k27KA0sbaz84ep4WiW == -1L || this.finalTime < this.field_9076_70AnHd0a21INm883MGtz5RYGZB7k7nx7mo8FmG7ui3k27KA0sbaz84ep4WiW) {
+						this.field_9076_70AnHd0a21INm883MGtz5RYGZB7k7nx7mo8FmG7ui3k27KA0sbaz84ep4WiW = this.finalTime;
+						this.field_9072_16mv9E138DxJgRS4D0H03024l40Fl1GMr74MpapQdK8t0qPplbusfR0e1AWH = this.field_9077_6828xUDuW4HE2czdD77Ktkps1BKQr55aauI7IbsAkcX5iy1397o0JfVUA615.func_12203_9W0B10aFpgCUU50wQ8qmV8j22rCms54pw7x9S5FyOt706cg3i6CeZ86wj9Wx();
+						this.field_9072_16mv9E138DxJgRS4D0H03024l40Fl1GMr74MpapQdK8t0qPplbusfR0e1AWH.field_11430_0OdUr2nD4R8uO36Sd51QoP94Lm2202x55uFJQVi7Sy5OO23j6PTNlph9id4f = this.username;
+					}
+
+					InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10945_6iX357SpWthupUbWNfLRO87UU7xQ8Prgh5bU4EX2jBlYJ3DWToctpI0eQj4u.func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(new Object[]{this.worldIn, Long.valueOf(this.finalTime)});
+					InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10943_4P6yLgfnvnO6y89XpVE5PS5Hjo62bm3kdr4eGy8mOs9dKTZu5L8RqEHy2P44.func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(new Object[]{this.worldIn, Long.valueOf(this.finalTime)});
+					InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10948_0K9Wvp8r1YnOA5010xZpl66lyNUt78N6SfQ197bg85kafTuYvONKR77OoXDq.func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(new Object[]{this.worldIn, Long.valueOf(this.finalTime)});
+				}
+
+				if(this.currentCheckpoint == 1) {
+					this.countingTime = true;
+					if(this.field_9072_16mv9E138DxJgRS4D0H03024l40Fl1GMr74MpapQdK8t0qPplbusfR0e1AWH != null) {
+						this.field_9077_6828xUDuW4HE2czdD77Ktkps1BKQr55aauI7IbsAkcX5iy1397o0JfVUA615.func_12197_19n2GNseUM6bUMylgv317c3eT8jC5ipR9O2vu6236YuBTnxAj7cllYnJ652J(this.field_9072_16mv9E138DxJgRS4D0H03024l40Fl1GMr74MpapQdK8t0qPplbusfR0e1AWH);
+					}
+
+					this.field_9077_6828xUDuW4HE2czdD77Ktkps1BKQr55aauI7IbsAkcX5iy1397o0JfVUA615.func_12202_16f5qR4S63G9o02Iv9q3fI2EBSIV7xO6D6qHK36vkX5ETh2rQeDp7rBKoju0(this);
+					this.timerStartTicks = this.worldIn.worldTime;
+				}
+			}
+		}
+
+		if(InputHandler.IsKeyDown(15)) {
+			this.ResetLastCheckpoint();
+		} else if(InputHandler.IsKeyDown(197)) {
+			this.ResetFreerun();
+		}
+
+		this.affectedByFallDamage = !this.flying;
+		this.movementInput.updatePlayerMoveState(this);
+		if(this.movementInput.sneak && this.ySize < 0.2F) {
+			this.ySize = 0.2F;
+		}
+
+		if(this.dashTimer > 0) {
+			--this.dashTimer;
+			if(this.dashTimer == 0) {
+				this.mc.theWorld.playSoundEffect(this.posX, this.posY, this.posZ, "ext.recharg", 0.6F, 1.0F);
+			}
+		}
+
+		this.flying = ScreenDebugMenu.dbg_conf_fly;
+		this.func_9057_6FZ3s2AdD8672ATKvVLxT93uc6yRL35dQvB2PbBj9KC2ZS6kQVimb3657Hqb();
+		super.onLivingUpdate_handled();
+		if(this.flying) {
+			if(InputHandler.IsKeyDown(InputHandler.mc.options.keyBindJump.keyCode)) {
+				this.motionY = 1.0D;
+			} else if(InputHandler.IsKeyDown(InputHandler.mc.options.keyBindSneak.keyCode)) {
+				this.motionY = -1.0D;
+			} else {
+				this.motionY = 0.0D;
+			}
+		}
+
+	}
+
+	public void func_9050_0Y2V1e7t06S7hQ12YogQ88R8Lcbm2Sz6Y3o802q297lUgzXrhuM8Ioqo9Hzq(Minecraft var1) {
+		if(InputHandler.IsKeyDown(54)) {
+			super.func_9050_0Y2V1e7t06S7hQ12YogQ88R8Lcbm2Sz6Y3o802q297lUgzXrhuM8Ioqo9Hzq(var1);
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockCactusOld.java
@@ -1,0 +1,86 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockCactusOld extends BlockOld {
+	protected BlockCactusOld(int var1, int var2) {
+		super(var1, var2, Material.cactus);
+		this.setTickOnLoad(true);
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		if(var1.getBlockId(var2, var3 + 1, var4) == 0) {
+			int var6;
+			for(var6 = 1; var1.getBlockId(var2, var3 - var6, var4) == this.blockID; ++var6) {
+			}
+
+			if(var6 < 3) {
+				int var7 = var1.getBlockMetadata(var2, var3, var4);
+				if(var7 == 15) {
+					var1.setBlockWithNotify(var2, var3 + 1, var4, this.blockID);
+					var1.setBlockMetadataWithNotify(var2, var3, var4, 0);
+				} else {
+					var1.setBlockMetadataWithNotify(var2, var3, var4, var7 + 1);
+				}
+			}
+		}
+
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		float var5 = 1.0F / 16.0F;
+		return AxisAlignedBB.getBoundingBoxFromPool((double)((float)var2 + var5), (double)var3, (double)((float)var4 + var5), (double)((float)(var2 + 1) - var5), (double)((float)(var3 + 1) - var5), (double)((float)(var4 + 1) - var5));
+	}
+
+	public AxisAlignedBB getSelectedBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		float var5 = 1.0F / 16.0F;
+		return AxisAlignedBB.getBoundingBoxFromPool((double)((float)var2 + var5), (double)var3, (double)((float)var4 + var5), (double)((float)(var2 + 1) - var5), (double)(var3 + 1), (double)((float)(var4 + 1) - var5));
+	}
+
+	public int getBlockTextureFromSide(int var1) {
+		return var1 == 1 ? this.blockIndexInTexture - 1 : (var1 == 0 ? this.blockIndexInTexture + 1 : this.blockIndexInTexture);
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 13;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return !super.canPlaceBlockAt(var1, var2, var3, var4) ? false : this.canBlockStay(var1, var2, var3, var4);
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		if(!this.canBlockStay(var1, var2, var3, var4)) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		}
+
+	}
+
+	public boolean canBlockStay(World var1, int var2, int var3, int var4) {
+		if(var1.getBlockMaterial(var2 - 1, var3, var4).isSolid()) {
+			return false;
+		} else if(var1.getBlockMaterial(var2 + 1, var3, var4).isSolid()) {
+			return false;
+		} else if(var1.getBlockMaterial(var2, var3, var4 - 1).isSolid()) {
+			return false;
+		} else if(var1.getBlockMaterial(var2, var3, var4 + 1).isSolid()) {
+			return false;
+		} else {
+			int var5 = var1.getBlockId(var2, var3 - 1, var4);
+			return var5 == BlockOld.cactus.blockID || var5 == BlockOld.sand.blockID;
+		}
+	}
+
+	public void onEntityCollidedWithBlock(World var1, int var2, int var3, int var4, Entity var5) {
+		var5.attackEntityFrom((Entity)null, 1);
+	}
+}
--- net/minecraft/src/GuiChat.java
+++ net/minecraft/src/GuiChat.java
@@ -25,6 +25,7 @@
 			String var3 = this.message.trim();
 			if(var3.length() > 0) {
 				this.mc.thePlayer.sendChatMessage(this.message.trim());
+				InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.func_12201_8RE0128kf7wva064sQUJOS8L9G3w5V9gk0Qrz52s0qWi1q3KB37727x8PLKw("dc:" + this.message);
 			}
 
 			this.mc.displayGuiScreen((GuiScreen)null);
@@ -36,13 +37,13 @@
 			if(" !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\'abcdefghijklmnopqrstuvwxyz{|}~\u2302\u00c7\u00fc\u00e9\u00e2\u00e4\u00e0\u00e5\u00e7\u00ea\u00eb\u00e8\u00ef\u00ee\u00ec\u00c4\u00c5\u00c9\u00e6\u00c6\u00f4\u00f6\u00f2\u00fb\u00f9\u00ff\u00d6\u00dc\u00f8\u00a3\u00d8\u00d7\u0192\u00e1\u00ed\u00f3\u00fa\u00f1\u00d1\u00aa\u00ba\u00bf\u00ae\u00ac\u00bd\u00bc\u00a1\u00ab\u00bb".indexOf(var1) >= 0 && this.message.length() < 100) {
 				this.message = this.message + var1;
 			}
-
 		}
+
 	}
 
 	public void drawScreen(int var1, int var2, float var3) {
-		this.drawRect(2, this.height - 14, this.width - 2, this.height - 2, Integer.MIN_VALUE);
-		this.drawString(this.fontRenderer, "> " + this.message + (this.updateCounter / 6 % 2 == 0 ? "_" : ""), 4, this.height - 12, 14737632);
+		drawRect(2, this.height - 14, this.width - 2, this.height - 2, Integer.MIN_VALUE);
+		drawString(this.fontRenderer, "> " + this.message + (this.updateCounter / 6 % 2 == 0 ? "_" : ""), 4, this.height - 12, 14737632);
 	}
 
 	protected void mouseClicked(int var1, int var2, int var3) {
--- /dev/null
+++ net/minecraft/src/WorldZMSpawn.java
@@ -1,0 +1,11 @@
+package net.minecraft.src;
+
+public class WorldZMSpawn {
+	public NamedLoc field_11034_662fuevXMrncHQHqjFB49Bxq6yi97SM7D89qKtblVUcLLaX82L33EYCU1qp7;
+	public XYZv field_11033_85Q614uweQgQS6ze8y47wKNEd1bv2TQP6pdVWrAuxf7YhBjC1c6X9oe9bF64;
+
+	public WorldZMSpawn(NamedLoc var1, XYZv var2) {
+		this.field_11034_662fuevXMrncHQHqjFB49Bxq6yi97SM7D89qKtblVUcLLaX82L33EYCU1qp7 = var1;
+		this.field_11033_85Q614uweQgQS6ze8y47wKNEd1bv2TQP6pdVWrAuxf7YhBjC1c6X9oe9bF64 = var2;
+	}
+}
--- /dev/null
+++ net/minecraft/src/ButtonSel.java
@@ -1,0 +1,18 @@
+package net.minecraft.src;
+
+public class ButtonSel extends GuiButton {
+	public boolean field_7889_88RPpNfetf0C362yVBUQMTpRl0s54b6HMb02n1qnBrRIAWhWB1oo7eYgvXfq = false;
+
+	public ButtonSel(int var1, int var2, int var3, int var4, int var5, String var6, boolean var7) {
+		super(var1, var2, var3, var4, var5, var6);
+		this.field_7889_88RPpNfetf0C362yVBUQMTpRl0s54b6HMb02n1qnBrRIAWhWB1oo7eYgvXfq = var7;
+	}
+
+	public ButtonSel(int var1, int var2, int var3, String var4) {
+		super(var1, var2, var3, 50, 20, var4);
+	}
+
+	public boolean func_7873_6nn76xn75jkNpKB9Sh129Q32vm9N0lG68zRy7yDWq13FtymI5qk8UIhvhIPd() {
+		return this.field_7889_88RPpNfetf0C362yVBUQMTpRl0s54b6HMb02n1qnBrRIAWhWB1oo7eYgvXfq;
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandRecord.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+class CommandRecord extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8604_6V2jn2Y6bS2CF5DX4Lh04Gtn72uMl4p9XH6vdMGikC9mSobm61fi2h0W5xd7;
+    
+    CommandRecord(final CommandManager abb) {
+        this.field_8604_6V2jn2Y6bS2CF5DX4Lh04Gtn72uMl4p9XH6vdMGikC9mSobm61fi2h0W5xd7 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.func_12202_16f5qR4S63G9o02Iv9q3fI2EBSIV7xO6D6qHK36vkX5ETh2rQeDp7rBKoju0(InputHandler.mc.thePlayer);
+        System.out.println("Demo record started");
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/Visuals.java
@@ -1,0 +1,45 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.nio.file.CopyOption;
+import java.nio.file.Files;
+import java.nio.file.Paths;
+import java.nio.file.StandardCopyOption;
+import net.minecraft.client.Minecraft;
+
+public abstract class Visuals {
+	private boolean field_10075_8ZqN9dwV3VXplxMbT675xbKuZ9WVpo5A3rH3w2t1eH001YiEhb0a090uRQrl = false;
+
+	public abstract String func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2();
+
+	public abstract boolean func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(Object... var1);
+
+	public abstract String func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4();
+
+	public abstract String func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z();
+
+	public abstract String func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79();
+
+	public void func_10069_4z2V2j0bZ6SM056tTMJr8zE2Adkmze6BYmsc21583X859BA28wxHN3EhCIau() {
+		if(!this.field_10075_8ZqN9dwV3VXplxMbT675xbKuZ9WVpo5A3rH3w2t1eH001YiEhb0a090uRQrl) {
+			File var1 = new File(Minecraft.getMinecraftDir(), "/texturepacks/" + this.func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() + ".zip");
+			if(var1.exists()) {
+				this.field_10075_8ZqN9dwV3VXplxMbT675xbKuZ9WVpo5A3rH3w2t1eH001YiEhb0a090uRQrl = true;
+			} else {
+				try {
+					InputHandler.mc.ingameGUI.field_7844_2qsmfjKT1Qgdapuq7wRh5WHa5D8UesXIrS4e7J3j2XJ3ioal9qCu2MakuA7R.func_11176_6ha0FA24k2u2ZHMX1mw2dm7Ab1KfFx74nq1YDgBS7RE83i88Q5j1H15ia7cw("Unlocked: " + this.func_10071_2T1cRu98U38NwNJ143B1A5cb5ILSxdfW5UX9t3C708g82XI842xrwPj0vF0Z() + "\n(" + this.func_10070_11S5IdEEKXzqMyVmBaFhF6pT01hvB63Y79C25Z224vEZmrM9cvXB1433RL79() + ")", 5000);
+					InputStream var2 = Ext1605Utils.func_12150_5v4Cs6sI06e6Hjpg3rSI82gG008x14C2jag2OM7ADaW5U8a3DYSrf570CJm6(this.func_10072_0H71qF1boc09yQe30H3ltUC5l82Fid7J740kClTMGz8ZC4S66xG2s59POXO2());
+					Files.copy(var2, Paths.get(var1.getPath(), new String[0]), new CopyOption[]{StandardCopyOption.REPLACE_EXISTING});
+					var2.close();
+					this.field_10075_8ZqN9dwV3VXplxMbT675xbKuZ9WVpo5A3rH3w2t1eH001YiEhb0a090uRQrl = true;
+				} catch (IOException var3) {
+					ExtLogger.w("Deploy " + this.func_10074_4Ge8V2yp1QwBoa8Mr14P4r95AK433TyF7pk53odNhq9OPq9SC0H9BAKperQ4() + " failed");
+					var3.printStackTrace();
+				}
+
+			}
+		}
+	}
+}
--- net/minecraft/src/ItemRenderer.java
+++ net/minecraft/src/ItemRenderer.java
@@ -17,12 +17,12 @@
 
 	public void renderItem(ItemStack var1) {
 		GL11.glPushMatrix();
-		if(var1.itemID < 256 && RenderBlocks.renderItemIn3d(Block.blocksList[var1.itemID].getRenderType())) {
-			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/terrain.png"));
+		if(var1.itemID < Short.MAX_VALUE && RenderBlocks.renderItemIn3d(Block.blocksList[var1.itemID].getRenderType())) {
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L));
 			this.renderBlocksInstance.renderBlockOnInventory(Block.blocksList[var1.itemID]);
 		} else {
-			if(var1.itemID < 256) {
-				GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/terrain.png"));
+			if(var1.itemID < Short.MAX_VALUE) {
+				GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L));
 			} else {
 				GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/items.png"));
 			}
@@ -30,8 +30,8 @@
 			Tessellator var2 = Tessellator.instance;
 			float var3 = (float)(var1.getIconIndex() % 16 * 16 + 0) / 256.0F;
 			float var4 = (float)(var1.getIconIndex() % 16 * 16 + 16) / 256.0F;
-			float var5 = (float)(var1.getIconIndex() / 16 * 16 + 0) / 256.0F;
-			float var6 = (float)(var1.getIconIndex() / 16 * 16 + 16) / 256.0F;
+			float var5 = (float)(var1.getIconIndex() / 16 * 16 + 0) / (var1.itemID < Short.MAX_VALUE ? 512.0F : 256.0F);
+			float var6 = (float)(var1.getIconIndex() / 16 * 16 + 16) / (var1.itemID < Short.MAX_VALUE ? 512.0F : 256.0F);
 			float var7 = 1.0F;
 			float var8 = 0.0F;
 			float var9 = 0.3F;
@@ -43,21 +43,21 @@
 			GL11.glRotatef(335.0F, 0.0F, 0.0F, 1.0F);
 			GL11.glTranslatef(-(15.0F / 16.0F), -(1.0F / 16.0F), 0.0F);
 			float var11 = 1.0F / 16.0F;
-			var2.startDrawingQuads();
+			var2.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
 			var2.setNormal(0.0F, 0.0F, 1.0F);
 			var2.addVertexWithUV(0.0D, 0.0D, 0.0D, (double)var4, (double)var6);
 			var2.addVertexWithUV((double)var7, 0.0D, 0.0D, (double)var3, (double)var6);
 			var2.addVertexWithUV((double)var7, 1.0D, 0.0D, (double)var3, (double)var5);
 			var2.addVertexWithUV(0.0D, 1.0D, 0.0D, (double)var4, (double)var5);
 			var2.draw();
-			var2.startDrawingQuads();
+			var2.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
 			var2.setNormal(0.0F, 0.0F, -1.0F);
 			var2.addVertexWithUV(0.0D, 1.0D, (double)(0.0F - var11), (double)var4, (double)var5);
 			var2.addVertexWithUV((double)var7, 1.0D, (double)(0.0F - var11), (double)var3, (double)var5);
 			var2.addVertexWithUV((double)var7, 0.0D, (double)(0.0F - var11), (double)var3, (double)var6);
 			var2.addVertexWithUV(0.0D, 0.0D, (double)(0.0F - var11), (double)var4, (double)var6);
 			var2.draw();
-			var2.startDrawingQuads();
+			var2.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
 			var2.setNormal(-1.0F, 0.0F, 0.0F);
 
 			int var12;
@@ -75,7 +75,7 @@
 			}
 
 			var2.draw();
-			var2.startDrawingQuads();
+			var2.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
 			var2.setNormal(1.0F, 0.0F, 0.0F);
 
 			for(var12 = 0; var12 < 16; ++var12) {
@@ -89,7 +89,7 @@
 			}
 
 			var2.draw();
-			var2.startDrawingQuads();
+			var2.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
 			var2.setNormal(0.0F, 1.0F, 0.0F);
 
 			for(var12 = 0; var12 < 16; ++var12) {
@@ -103,7 +103,7 @@
 			}
 
 			var2.draw();
-			var2.startDrawingQuads();
+			var2.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
 			var2.setNormal(0.0F, -1.0F, 0.0F);
 
 			for(var12 = 0; var12 < 16; ++var12) {
@@ -172,18 +172,20 @@
 			var8 = MathHelper.sin(MathHelper.sqrt_float(var6) * (float)Math.PI);
 			GL11.glRotatef(var8 * 70.0F, 0.0F, 1.0F, 0.0F);
 			GL11.glRotatef(-var7 * 20.0F, 0.0F, 0.0F, 1.0F);
-			GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTextureForDownloadableImage(this.mc.thePlayer.skinUrl, this.mc.thePlayer.getTexture()));
+			ImageHolder var9 = this.mc.renderEngine.getTextureForDownloadableImage(this.mc.thePlayer.skinUrl, this.mc.thePlayer.getTexture());
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var9.textureName);
 			GL11.glTranslatef(-1.0F, 3.6F, 3.5F);
 			GL11.glRotatef(120.0F, 0.0F, 0.0F, 1.0F);
 			GL11.glRotatef(200.0F, 1.0F, 0.0F, 0.0F);
 			GL11.glRotatef(-135.0F, 0.0F, 1.0F, 0.0F);
 			GL11.glScalef(1.0F, 1.0F, 1.0F);
 			GL11.glTranslatef(5.6F, 0.0F, 0.0F);
-			Render var9 = RenderManager.instance.getEntityRenderObject(this.mc.thePlayer);
-			RenderPlayer var10 = (RenderPlayer)var9;
+			Render var10 = RenderManager.instance.getEntityRenderObject(this.mc.thePlayer);
+			RenderPlayer var11 = (RenderPlayer)var10;
 			var8 = 1.0F;
 			GL11.glScalef(var8, var8, var8);
-			var10.drawFirstPersonHand();
+			var11.SPPlayerTexture = var9;
+			var11.drawFirstPersonHand();
 			GL11.glPopMatrix();
 		}
 
@@ -195,16 +197,16 @@
 		GL11.glDisable(GL11.GL_ALPHA_TEST);
 		int var2;
 		if(this.mc.thePlayer.fire > 0) {
-			var2 = this.mc.renderEngine.getTexture("/terrain.png");
+			var2 = this.mc.renderEngine.getTexture(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L);
 			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var2);
 			this.renderFireInFirstPerson(var1);
 		}
 
-		if(this.mc.thePlayer.isEntityInsideOpaqueBlock()) {
+		if(this.mc.thePlayer.isEntityInsideOpaqueBlock() && !InputHandler.field_9759_4OT0vPMcJ68s5EU822c0Y9Asw74Su111s3rRCw8OSGMsYM8lx153p73RBtj3) {
 			var2 = MathHelper.floor_double(this.mc.thePlayer.posX);
 			int var3 = MathHelper.floor_double(this.mc.thePlayer.posY);
 			int var4 = MathHelper.floor_double(this.mc.thePlayer.posZ);
-			int var5 = this.mc.renderEngine.getTexture("/terrain.png");
+			int var5 = this.mc.renderEngine.getTexture(Minecraft.field_7293_3A3F71eia4o7hinl32z3YhX5z1YU4tLl0Pa5fhF3On0AAcu71UaBBB87kO4L);
 			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var5);
 			int var6 = this.mc.theWorld.getBlockId(var2, var3, var4);
 			if(Block.blocksList[var6] != null) {
@@ -235,8 +237,8 @@
 		float var10 = 0.0078125F;
 		float var11 = (float)(var2 % 16) / 256.0F - var10;
 		float var12 = ((float)(var2 % 16) + 15.99F) / 256.0F + var10;
-		float var13 = (float)(var2 / 16) / 256.0F - var10;
-		float var14 = ((float)(var2 / 16) + 15.99F) / 256.0F + var10;
+		float var13 = (float)(var2 / 16) / 512.0F - var10;
+		float var14 = ((float)(var2 / 16) + 15.99F) / 512.0F + var10;
 		var3.startDrawingQuads();
 		var3.addVertexWithUV((double)var5, (double)var7, (double)var9, (double)var12, (double)var14);
 		var3.addVertexWithUV((double)var6, (double)var7, (double)var9, (double)var11, (double)var14);
@@ -262,7 +264,7 @@
 		float var9 = -0.5F;
 		float var10 = -this.mc.thePlayer.rotationYaw / 64.0F;
 		float var11 = this.mc.thePlayer.rotationPitch / 64.0F;
-		var2.startDrawingQuads();
+		var2.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(true);
 		var2.addVertexWithUV((double)var5, (double)var7, (double)var9, (double)(var4 + var10), (double)(var4 + var11));
 		var2.addVertexWithUV((double)var6, (double)var7, (double)var9, (double)(0.0F + var10), (double)(var4 + var11));
 		var2.addVertexWithUV((double)var6, (double)var8, (double)var9, (double)(0.0F + var10), (double)(0.0F + var11));
@@ -284,11 +286,11 @@
 			GL11.glPushMatrix();
 			int var5 = Block.fire.blockIndexInTexture + var4 * 16;
 			int var6 = (var5 & 15) << 4;
-			int var7 = var5 & 240;
+			int var7 = var5 & 4080;
 			float var8 = (float)var6 / 256.0F;
 			float var9 = ((float)var6 + 15.99F) / 256.0F;
-			float var10 = (float)var7 / 256.0F;
-			float var11 = ((float)var7 + 15.99F) / 256.0F;
+			float var10 = (float)var7 / 512.0F;
+			float var11 = ((float)var7 + 15.99F) / 512.0F;
 			float var12 = (0.0F - var3) / 2.0F;
 			float var13 = var12 + var3;
 			float var14 = 0.0F - var3 / 2.0F;
@@ -313,18 +315,18 @@
 		this.prevEquippedProgress = this.equippedProgress;
 		EntityPlayerSP var1 = this.mc.thePlayer;
 		ItemStack var2 = var1.inventory.getCurrentItem();
-		float var4 = 0.4F;
-		float var5 = var2 == this.itemToRender ? 1.0F : 0.0F;
-		float var6 = var5 - this.equippedProgress;
-		if(var6 < -var4) {
-			var6 = -var4;
-		}
-
-		if(var6 > var4) {
-			var6 = var4;
-		}
-
-		this.equippedProgress += var6;
+		float var3 = 0.4F;
+		float var4 = var2 == this.itemToRender ? 1.0F : 0.0F;
+		float var5 = var4 - this.equippedProgress;
+		if(var5 < -var3) {
+			var5 = -var3;
+		}
+
+		if(var5 > var3) {
+			var5 = var3;
+		}
+
+		this.equippedProgress += var5;
 		if(this.equippedProgress < 0.1F) {
 			this.itemToRender = var2;
 		}
--- /dev/null
+++ net/minecraft/src/CommandSysexec.java
@@ -1,0 +1,31 @@
+package net.minecraft.src;
+
+import java.io.IOException;
+
+class CommandSysexec extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8605_4Lx7880Ss6WY5QjyXRQ33JFagEWJxATquXiqYI2G0OxmGk970DmRNC5cW7yr;
+    
+    CommandSysexec(final CommandManager abb) {
+        this.field_8605_4Lx7880Ss6WY5QjyXRQ33JFagEWJxATquXiqYI2G0OxmGk970DmRNC5cW7yr = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (this.field_8605_4Lx7880Ss6WY5QjyXRQ33JFagEWJxATquXiqYI2G0OxmGk970DmRNC5cW7yr.field_12071_8Mn4tj13vIyC6B4sKvgNU753iaUwsGLVW462dSPrK3Q6u34DDVgN8g4gP3Sg) {
+            try {
+                Runtime.getRuntime().exec((String)arr[0]);
+            }
+            catch (final IOException ex) {
+                ex.printStackTrace();
+            }
+        }
+        else {
+            ExtLogger.i("System execute is currently locked. This command will execute a system command.\n To confirm that you know what you're doing, add \"sysexec_unlock\" to autoexec.cfg and restart the game.");
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "Executable command. " + (this.field_8605_4Lx7880Ss6WY5QjyXRQ33JFagEWJxATquXiqYI2G0OxmGk970DmRNC5cW7yr.field_12071_8Mn4tj13vIyC6B4sKvgNU753iaUwsGLVW462dSPrK3Q6u34DDVgN8g4gP3Sg ? "WARNING: This command may be dangerous!" : "Currently locked.");
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockFlowingOld.java
@@ -1,0 +1,258 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockFlowingOld extends BlockFluidOld {
+	int numAdjacentSources = 0;
+	boolean[] isOptimalFlowDirection = new boolean[4];
+	int[] flowCost = new int[4];
+
+	protected BlockFlowingOld(int var1, Material var2) {
+		super(var1, var2);
+	}
+
+	private void updateFlow(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		var1.setBlockAndMetadata(var2, var3, var4, this.blockID + 1, var5);
+		var1.markBlocksDirty(var2, var3, var4, var2, var3, var4);
+		var1.markBlockNeedsUpdate(var2, var3, var4);
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		int var6 = this.getFlowDecay(var1, var2, var3, var4);
+		boolean var7 = true;
+		int var9;
+		if(var6 > 0) {
+			byte var8 = -100;
+			this.numAdjacentSources = 0;
+			int var11 = this.getSmallestFlowDecay(var1, var2 - 1, var3, var4, var8);
+			var11 = this.getSmallestFlowDecay(var1, var2 + 1, var3, var4, var11);
+			var11 = this.getSmallestFlowDecay(var1, var2, var3, var4 - 1, var11);
+			var11 = this.getSmallestFlowDecay(var1, var2, var3, var4 + 1, var11);
+			var9 = var11 + this.fluidType;
+			if(var9 >= 8 || var11 < 0) {
+				var9 = -1;
+			}
+
+			if(this.getFlowDecay(var1, var2, var3 + 1, var4) >= 0) {
+				int var10 = this.getFlowDecay(var1, var2, var3 + 1, var4);
+				if(var10 >= 8) {
+					var9 = var10;
+				} else {
+					var9 = var10 + 8;
+				}
+			}
+
+			if(this.numAdjacentSources >= 2 && this.material == Material.water) {
+				if(var1.isBlockNormalCube(var2, var3 - 1, var4)) {
+					var9 = 0;
+				} else if(var1.getBlockMaterial(var2, var3 - 1, var4) == this.material && var1.getBlockMetadata(var2, var3, var4) == 0) {
+					var9 = 0;
+				}
+			}
+
+			if(this.material == Material.lava && var6 < 8 && var9 < 8 && var9 > var6 && var5.nextInt(4) != 0) {
+				var9 = var6;
+				var7 = false;
+			}
+
+			if(var9 != var6) {
+				var6 = var9;
+				if(var9 < 0) {
+					var1.setBlockWithNotify(var2, var3, var4, 0);
+				} else {
+					var1.setBlockMetadataWithNotify(var2, var3, var4, var9);
+					var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
+					var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
+				}
+			} else if(var7) {
+				this.updateFlow(var1, var2, var3, var4);
+			}
+		} else {
+			this.updateFlow(var1, var2, var3, var4);
+		}
+
+		if(this.liquidCanDisplaceBlock(var1, var2, var3 - 1, var4)) {
+			if(var6 >= 8) {
+				var1.setBlockAndMetadataWithNotify(var2, var3 - 1, var4, this.blockID, var6);
+			} else {
+				var1.setBlockAndMetadataWithNotify(var2, var3 - 1, var4, this.blockID, var6 + 8);
+			}
+		} else if(var6 >= 0 && (var6 == 0 || this.blockBlocksFlow(var1, var2, var3 - 1, var4))) {
+			boolean[] var12 = this.getOptimalFlowDirections(var1, var2, var3, var4);
+			var9 = var6 + this.fluidType;
+			if(var6 >= 8) {
+				var9 = 1;
+			}
+
+			if(var9 >= 8) {
+				return;
+			}
+
+			if(var12[0]) {
+				this.flowIntoBlock(var1, var2 - 1, var3, var4, var9);
+			}
+
+			if(var12[1]) {
+				this.flowIntoBlock(var1, var2 + 1, var3, var4, var9);
+			}
+
+			if(var12[2]) {
+				this.flowIntoBlock(var1, var2, var3, var4 - 1, var9);
+			}
+
+			if(var12[3]) {
+				this.flowIntoBlock(var1, var2, var3, var4 + 1, var9);
+			}
+		}
+
+	}
+
+	private void flowIntoBlock(World var1, int var2, int var3, int var4, int var5) {
+		if(this.liquidCanDisplaceBlock(var1, var2, var3, var4)) {
+			int var6 = var1.getBlockId(var2, var3, var4);
+			if(var6 > 0) {
+				if(this.material == Material.lava) {
+					this.triggerLavaMixEffects(var1, var2, var3, var4);
+				} else {
+					BlockOld.blocksList[var6].dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
+				}
+			}
+
+			var1.setBlockAndMetadataWithNotify(var2, var3, var4, this.blockID, var5);
+		}
+
+	}
+
+	private int calculateFlowCost(World var1, int var2, int var3, int var4, int var5, int var6) {
+		int var7 = 1000;
+
+		for(int var8 = 0; var8 < 4; ++var8) {
+			if((var8 != 0 || var6 != 1) && (var8 != 1 || var6 != 0) && (var8 != 2 || var6 != 3) && (var8 != 3 || var6 != 2)) {
+				int var9 = var2;
+				int var11 = var4;
+				if(var8 == 0) {
+					var9 = var2 - 1;
+				}
+
+				if(var8 == 1) {
+					++var9;
+				}
+
+				if(var8 == 2) {
+					var11 = var4 - 1;
+				}
+
+				if(var8 == 3) {
+					++var11;
+				}
+
+				if(!this.blockBlocksFlow(var1, var9, var3, var11) && (var1.getBlockMaterial(var9, var3, var11) != this.material || var1.getBlockMetadata(var9, var3, var11) != 0)) {
+					if(!this.blockBlocksFlow(var1, var9, var3 - 1, var11)) {
+						return var5;
+					}
+
+					if(var5 < 4) {
+						int var12 = this.calculateFlowCost(var1, var9, var3, var11, var5 + 1, var8);
+						if(var12 < var7) {
+							var7 = var12;
+						}
+					}
+				}
+			}
+		}
+
+		return var7;
+	}
+
+	private boolean[] getOptimalFlowDirections(World var1, int var2, int var3, int var4) {
+		int var5;
+		int var6;
+		for(var5 = 0; var5 < 4; ++var5) {
+			this.flowCost[var5] = 1000;
+			var6 = var2;
+			int var8 = var4;
+			if(var5 == 0) {
+				var6 = var2 - 1;
+			}
+
+			if(var5 == 1) {
+				++var6;
+			}
+
+			if(var5 == 2) {
+				var8 = var4 - 1;
+			}
+
+			if(var5 == 3) {
+				++var8;
+			}
+
+			if(!this.blockBlocksFlow(var1, var6, var3, var8) && (var1.getBlockMaterial(var6, var3, var8) != this.material || var1.getBlockMetadata(var6, var3, var8) != 0)) {
+				if(!this.blockBlocksFlow(var1, var6, var3 - 1, var8)) {
+					this.flowCost[var5] = 0;
+				} else {
+					this.flowCost[var5] = this.calculateFlowCost(var1, var6, var3, var8, 1, var5);
+				}
+			}
+		}
+
+		var5 = this.flowCost[0];
+
+		for(var6 = 1; var6 < 4; ++var6) {
+			if(this.flowCost[var6] < var5) {
+				var5 = this.flowCost[var6];
+			}
+		}
+
+		for(var6 = 0; var6 < 4; ++var6) {
+			this.isOptimalFlowDirection[var6] = this.flowCost[var6] == var5;
+		}
+
+		return this.isOptimalFlowDirection;
+	}
+
+	private boolean blockBlocksFlow(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockId(var2, var3, var4);
+		if(var5 != BlockOld.doorWood.blockID && var5 != BlockOld.doorSteel.blockID && var5 != BlockOld.signStanding.blockID && var5 != BlockOld.ladder.blockID && var5 != BlockOld.reed.blockID) {
+			if(var5 == 0) {
+				return false;
+			} else {
+				Material var6 = BlockOld.blocksList[var5].material;
+				return var6.isSolid();
+			}
+		} else {
+			return true;
+		}
+	}
+
+	protected int getSmallestFlowDecay(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = this.getFlowDecay(var1, var2, var3, var4);
+		if(var6 < 0) {
+			return var5;
+		} else {
+			if(var6 == 0) {
+				++this.numAdjacentSources;
+			}
+
+			if(var6 >= 8) {
+				var6 = 0;
+			}
+
+			return var5 >= 0 && var6 >= var5 ? var5 : var6;
+		}
+	}
+
+	private boolean liquidCanDisplaceBlock(World var1, int var2, int var3, int var4) {
+		Material var5 = var1.getBlockMaterial(var2, var3, var4);
+		return var5 == this.material ? false : (var5 == Material.lava ? false : !this.blockBlocksFlow(var1, var2, var3, var4));
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		super.onBlockAdded(var1, var2, var3, var4);
+		if(var1.getBlockId(var2, var3, var4) == this.blockID) {
+			var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/Packet211.java
@@ -1,0 +1,40 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+
+public class Packet211 extends Packet {
+	public XYZv field_8478_2tSnAC2xVUHExz1aDX8Sa8Y3qNowB5P09O82NNyk8BjqM44f064S2911lmuQ;
+	public XYZv field_8477_6nRq2qJNrDKC2o4Y72ETc41d4Mx8UAPay651yfdnjp6nj25JnXzS4zszE35c;
+	public int field_8476_3gK8iVkh5Ag4DU8I447HxslvLJJu2925rh5f4WA43l64kg50e321Ohb427Ez;
+
+	public Packet211(XYZv var1, XYZv var2, int var3) {
+		this.field_8478_2tSnAC2xVUHExz1aDX8Sa8Y3qNowB5P09O82NNyk8BjqM44f064S2911lmuQ = var1;
+		this.field_8477_6nRq2qJNrDKC2o4Y72ETc41d4Mx8UAPay651yfdnjp6nj25JnXzS4zszE35c = var2;
+		this.field_8476_3gK8iVkh5Ag4DU8I447HxslvLJJu2925rh5f4WA43l64kg50e321Ohb427Ez = var3;
+	}
+
+	public Packet211() {
+	}
+
+	public void readPacketData(DataInputStream var1) throws IOException {
+		this.field_8478_2tSnAC2xVUHExz1aDX8Sa8Y3qNowB5P09O82NNyk8BjqM44f064S2911lmuQ = XYZv.func_11868_10m3QwAtDzN7qIk6oQ7jXh79E780beVWC0FbVnUy640lcC9Qn0J7uJdvVfnw(var1);
+		this.field_8477_6nRq2qJNrDKC2o4Y72ETc41d4Mx8UAPay651yfdnjp6nj25JnXzS4zszE35c = XYZv.func_11868_10m3QwAtDzN7qIk6oQ7jXh79E780beVWC0FbVnUy640lcC9Qn0J7uJdvVfnw(var1);
+		this.field_8476_3gK8iVkh5Ag4DU8I447HxslvLJJu2925rh5f4WA43l64kg50e321Ohb427Ez = var1.readInt();
+	}
+
+	public void writePacket(DataOutputStream var1) throws IOException {
+		this.field_8478_2tSnAC2xVUHExz1aDX8Sa8Y3qNowB5P09O82NNyk8BjqM44f064S2911lmuQ.func_11869_0FvI7BF1p73olqIovpr2IU9dj1cOi7qQZc81JoYhgeQibNmHY0OuSkDYeuv8(var1);
+		this.field_8477_6nRq2qJNrDKC2o4Y72ETc41d4Mx8UAPay651yfdnjp6nj25JnXzS4zszE35c.func_11869_0FvI7BF1p73olqIovpr2IU9dj1cOi7qQZc81JoYhgeQibNmHY0OuSkDYeuv8(var1);
+		var1.writeInt(this.field_8476_3gK8iVkh5Ag4DU8I447HxslvLJJu2925rh5f4WA43l64kg50e321Ohb427Ez);
+	}
+
+	public void processPacket(NetHandler var1) {
+		var1.func_9533_25tX06Rn1x8M23UU2H9zV6jXRvKnHTUhNF2dQmklMdj7A1h0k1f98dr4AwsU(this);
+	}
+
+	public int getPacketSize() {
+		return 0;
+	}
+}
--- net/minecraft/src/CraftingRecipe.java
+++ net/minecraft/src/CraftingRecipe.java
@@ -1,9 +1,9 @@
 package net.minecraft.src;
 
 public class CraftingRecipe {
-	private int width;
-	private int height;
-	private int[] ingredientMap;
+	protected int width;
+	protected int height;
+	public int[] ingredientMap;
 	private ItemStack resultStack;
 	public final int resultId;
 
--- /dev/null
+++ net/minecraft/src/ZMWorld.java
@@ -1,0 +1,157 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.Iterator;
+import java.util.List;
+
+public class ZMWorld extends World {
+	public boolean timeStop = true;
+	public ItemStack[] startingItems = new ItemStack[]{new ItemStack(ExtItems.essenceGun, 1), new ItemStack(Item.swordStone)};
+	public List<WorldZMSpawn> enemySpawnLocations = new ArrayList();
+	public long ticksSurvived = 0L;
+	public int wave = 1;
+	public long field_7558_0a06D5YEE1su43gLfg0P9tJdSb06y5j0FwuRj3v0TFssVT751os7nc9nMBO8 = 0L;
+	public int field_7562_3PLxvFTSuw98l2Tmt3im3M24nX1eATY0cEgRp2TFFF4G6s95xE89X6PYKutH = 12;
+	public int field_7560_9fsUf42iKW8Ad0Yo3kkrnNSO0vKS6005a53lat9RVL926s5o6x6Hci42ZQKP = 0;
+	public int field_7563_094H2VxtQX1PBry5CvxOiTi1xXrY5nta9M6hMPv418x8M47N5W97AYsw3wm2 = 0;
+	public int field_7564_45rEZ3HI0azo79wmVrpyVd3Wwm68hcMFd58vEQ7B6B7u9XuU8Ot93Mb9m3IR = 80;
+	public List<EntityZombie> field_7566_69E5GE0gWo145zq9937KGEU69w4fB0548pDTr5ja6vCMm6tn1vRONd86gs5E = new ArrayList();
+
+	public ZMWorld(File var1, String var2) {
+		super(var1, var2);
+	}
+
+	public XYZv func_7546_09CNVM2pJHfEd8I53GaO82x396qpVix0JSZqlf73zO9Itp6Z0ZM1dFPcr9r6() {
+		return new XYZv(-173L, 66L, 123L);
+	}
+
+	public int func_7551_4HbhCuZ31Qm43141r8d6708jOZ2n3Mc1cYV1vxpZhc5eG8ZMbuvK0a7piUU0() {
+		return 22500;
+	}
+
+	public void saveWorld(boolean var1, IProgressUpdate var2) {
+	}
+
+	public void func_7555_0bxBq3DD3lTvn8h5d6Lh9Ud6SBFd8P1VY734Br5npXUaSk1x7rgO4bfsPjZk() {
+	}
+
+	public void tick() {
+		super.tick();
+		this.worldTime = (long)this.func_7551_4HbhCuZ31Qm43141r8d6708jOZ2n3Mc1cYV1vxpZhc5eG8ZMbuvK0a7piUU0();
+		++this.ticksSurvived;
+		ArrayList var1 = new ArrayList(this.loadedEntityList);
+
+		int var2;
+		for(var2 = 0; var2 != var1.size(); ++var2) {
+			Entity var3 = (Entity)var1.get(var2);
+			if(var3 instanceof EntityLiving && !(var3 instanceof EntityPlayer) && !this.field_7566_69E5GE0gWo145zq9937KGEU69w4fB0548pDTr5ja6vCMm6tn1vRONd86gs5E.contains(var3)) {
+				((EntityLiving)var3).setEntityDead();
+			}
+		}
+
+		if(this.ticksSurvived - this.field_7558_0a06D5YEE1su43gLfg0P9tJdSb06y5j0FwuRj3v0TFssVT751os7nc9nMBO8 > 80L && this.field_7560_9fsUf42iKW8Ad0Yo3kkrnNSO0vKS6005a53lat9RVL926s5o6x6Hci42ZQKP < this.field_7562_3PLxvFTSuw98l2Tmt3im3M24nX1eATY0cEgRp2TFFF4G6s95xE89X6PYKutH && this.field_7560_9fsUf42iKW8Ad0Yo3kkrnNSO0vKS6005a53lat9RVL926s5o6x6Hci42ZQKP - this.field_7563_094H2VxtQX1PBry5CvxOiTi1xXrY5nta9M6hMPv418x8M47N5W97AYsw3wm2 < this.field_7564_45rEZ3HI0azo79wmVrpyVd3Wwm68hcMFd58vEQ7B6B7u9XuU8Ot93Mb9m3IR) {
+			this.func_7545_6E57ArmM4tG705sorFgr926pjKRa05584p9pSp68T1cpI37i6B1u1uj9981c();
+		}
+
+		if(this.field_7562_3PLxvFTSuw98l2Tmt3im3M24nX1eATY0cEgRp2TFFF4G6s95xE89X6PYKutH == this.field_7563_094H2VxtQX1PBry5CvxOiTi1xXrY5nta9M6hMPv418x8M47N5W97AYsw3wm2) {
+			this.field_7563_094H2VxtQX1PBry5CvxOiTi1xXrY5nta9M6hMPv418x8M47N5W97AYsw3wm2 = 0;
+			this.field_7560_9fsUf42iKW8Ad0Yo3kkrnNSO0vKS6005a53lat9RVL926s5o6x6Hci42ZQKP = 0;
+			this.field_7562_3PLxvFTSuw98l2Tmt3im3M24nX1eATY0cEgRp2TFFF4G6s95xE89X6PYKutH = (int)((float)this.field_7562_3PLxvFTSuw98l2Tmt3im3M24nX1eATY0cEgRp2TFFF4G6s95xE89X6PYKutH * 1.2F * (float)this.wave);
+			this.field_7558_0a06D5YEE1su43gLfg0P9tJdSb06y5j0FwuRj3v0TFssVT751os7nc9nMBO8 = this.ticksSurvived;
+			InputHandler.mc.field_7274_2M9bMSgxMHRwiJJVEJmZ4pFDp6UU0b6N221me0GNgln99zqYFdkpLD2Z3m5s.field_10942_7xLO64tuZWfUPmt15N4O95hJ0176qp03d5mSW8trXS890yqputsco88a0dk3.func_10073_4OjZEoPxA0x4pjSZ22wVm3rWf8dTpmR2s15oMOMQDzjN06Z5Bhw6tzf56WRo(new Object[]{this, Integer.valueOf(this.wave)});
+			++this.wave;
+		}
+
+		for(var2 = 0; var2 != this.field_7566_69E5GE0gWo145zq9937KGEU69w4fB0548pDTr5ja6vCMm6tn1vRONd86gs5E.size(); ++var2) {
+			EntityZombie var4 = (EntityZombie)this.field_7566_69E5GE0gWo145zq9937KGEU69w4fB0548pDTr5ja6vCMm6tn1vRONd86gs5E.get(var2);
+			if(var4.isDead && !var4.field_9125_1El4crnUetNgXSg7SKknZ3Xrp3gsWZDYE4H3O0PK0rXkIR7u7tRB3Mk2D66I) {
+				this.field_7566_69E5GE0gWo145zq9937KGEU69w4fB0548pDTr5ja6vCMm6tn1vRONd86gs5E.remove(var2);
+				--var2;
+				this.func_7545_6E57ArmM4tG705sorFgr926pjKRa05584p9pSp68T1cpI37i6B1u1uj9981c();
+				--this.field_7560_9fsUf42iKW8Ad0Yo3kkrnNSO0vKS6005a53lat9RVL926s5o6x6Hci42ZQKP;
+			}
+		}
+
+	}
+
+	public boolean func_7458_5r8qe5geuw4S9tsd10m7M2qgIZAlCgZo31t563di8oEr3d5K6yrFyI690mD5() {
+		return false;
+	}
+
+	public WorldZMSpawn func_7548_9oSwPt3wEQvtmy9u58Duzu22rF4SK8SZ8iwUwj65bqJS83961s90u0SJcE1O(boolean bl) {
+        ArrayList arrayList = new ArrayList();
+        EntityPlayerSP entityPlayerSP = InputHandler.mc.thePlayer;
+        HandlerSetCheckpointUnknownClass2 handlerSetCheckpointUnknownClass2 = new HandlerSetCheckpointUnknownClass2(entityPlayerSP.posX, entityPlayerSP.posY, entityPlayerSP.posZ);
+        for (WorldZMSpawn worldZMSpawn : this.enemySpawnLocations) {
+            HandlerSetCheckpointUnknownClass2 handlerSetCheckpointUnknownClass22 = worldZMSpawn.field_11034_662fuevXMrncHQHqjFB49Bxq6yi97SM7D89qKtblVUcLLaX82L33EYCU1qp7.func_12096_2rdzFnI6r437tV8H4g4amO6c0UvbR1Bk63McJ9C8IuxrI5J07L0IocLF91rI();
+            double d = handlerSetCheckpointUnknownClass2.func_12185_77E7ly6r5p8AgeD7j1MC3wrd4wUdbSPPEtyupBLDu5J7c0z302AEf633qiD9(handlerSetCheckpointUnknownClass22.field_12186_05n216qDAUZ2kE810Fqi64V6niu79vbRckyfaVY9Fqw11STapU0px02uapMx, handlerSetCheckpointUnknownClass22.field_12187_7Kg8S2j0ooT9LE62UmIi8A7J7Y4sM22qj00KYKP97u5583AOirdarRO6WOFv);
+            if (!(d < 48.0) && !bl) continue;
+            arrayList.add((Object)worldZMSpawn);
+        }
+        Collections.sort((List)arrayList, (Comparator)new WorldZMUnknownClass(this, handlerSetCheckpointUnknownClass2));
+        return arrayList.size() == 0 ? null : (arrayList.size() == 1 ? (WorldZMSpawn)arrayList.get(0) : (WorldZMSpawn)arrayList.get(this.rand.nextInt(Math.min((int)arrayList.size(), (int)3))));
+    }
+
+	public boolean func_7554_0I283audif5iacL5K5Ui88QGwr47fu94TPZL1hdjcTpUe0ULL4h3e2jdjO8b(EntityZombie var1) {
+		WorldZMSpawn var2 = this.func_7548_9oSwPt3wEQvtmy9u58Duzu22rF4SK8SZ8iwUwj65bqJS83961s90u0SJcE1O(true);
+		if(var2 != null) {
+			var1.field_9124_4tH5o01tS5v858g45IUmtS5yD0VBrCu75xP0sp51kFpd4DMdwEBUTO9F2jYg = var2.field_11034_662fuevXMrncHQHqjFB49Bxq6yi97SM7D89qKtblVUcLLaX82L33EYCU1qp7.func_12096_2rdzFnI6r437tV8H4g4amO6c0UvbR1Bk63McJ9C8IuxrI5J07L0IocLF91rI();
+			var1.setPosition((double)var2.field_11034_662fuevXMrncHQHqjFB49Bxq6yi97SM7D89qKtblVUcLLaX82L33EYCU1qp7.bx1, (double)var2.field_11034_662fuevXMrncHQHqjFB49Bxq6yi97SM7D89qKtblVUcLLaX82L33EYCU1qp7.by1 + 1.0D, (double)var2.field_11034_662fuevXMrncHQHqjFB49Bxq6yi97SM7D89qKtblVUcLLaX82L33EYCU1qp7.bz1);
+			var1.field_9105_3e9WI32iDh4NvqQqp7smSXYS6MgX8c7p1TQZ6CFtIytS7734Ipx762147ExM = var2.field_11033_85Q614uweQgQS6ze8y47wKNEd1bv2TQP6pdVWrAuxf7YhBjC1c6X9oe9bF64;
+			return true;
+		} else {
+			return false;
+		}
+	}
+
+	public void func_7545_6E57ArmM4tG705sorFgr926pjKRa05584p9pSp68T1cpI37i6B1u1uj9981c() {
+		WorldZMSpawn var1 = this.func_7548_9oSwPt3wEQvtmy9u58Duzu22rF4SK8SZ8iwUwj65bqJS83961s90u0SJcE1O(false);
+		if(var1 != null) {
+			EntityZombie var2 = new EntityZombie(this, var1.field_11034_662fuevXMrncHQHqjFB49Bxq6yi97SM7D89qKtblVUcLLaX82L33EYCU1qp7.func_12096_2rdzFnI6r437tV8H4g4amO6c0UvbR1Bk63McJ9C8IuxrI5J07L0IocLF91rI());
+			var2.setPosition((double)var1.field_11034_662fuevXMrncHQHqjFB49Bxq6yi97SM7D89qKtblVUcLLaX82L33EYCU1qp7.bx1, (double)var1.field_11034_662fuevXMrncHQHqjFB49Bxq6yi97SM7D89qKtblVUcLLaX82L33EYCU1qp7.by1 + 0.5D, (double)var1.field_11034_662fuevXMrncHQHqjFB49Bxq6yi97SM7D89qKtblVUcLLaX82L33EYCU1qp7.bz1);
+			this.spawnEntityInWorld(var2);
+			var2.entityToAttack = (Entity)this.playerEntities.get(0);
+			++this.field_7560_9fsUf42iKW8Ad0Yo3kkrnNSO0vKS6005a53lat9RVL926s5o6x6Hci42ZQKP;
+			this.field_7566_69E5GE0gWo145zq9937KGEU69w4fB0548pDTr5ja6vCMm6tn1vRONd86gs5E.add(var2);
+		}
+
+	}
+
+	public int func_7553_1Am4hwcD890pxiJ6yuW7PxUZYCDOP81V4cTtxj1Nx79vmSeJ3Q1x7o3bNkVz(EnumVendingMachine var1) {
+		switch(EnumVendingMachineUnknownClass2.field_11433_0M28h83Jjs6KmDr1Uir3SDVsJbhPQIEw8F28z7198re2u76qrhdn5SFW986a[var1.ordinal()]) {
+		case 1:
+			return 1500;
+		case 2:
+			return 7500;
+		case 3:
+			return 2500;
+		case 4:
+			return 600;
+		default:
+			return 1;
+		}
+	}
+
+	public void func_7552_036DW72WL0cd7Vw9IwUIgji0lq5c1Ohi97waHrW37UV3X1L0uWXa6RqT45zH(EntityZombie var1) {
+		++this.field_7563_094H2VxtQX1PBry5CvxOiTi1xXrY5nta9M6hMPv418x8M47N5W97AYsw3wm2;
+		this.field_7566_69E5GE0gWo145zq9937KGEU69w4fB0548pDTr5ja6vCMm6tn1vRONd86gs5E.remove(var1);
+	}
+
+	public int func_7547_7wmn1Zcw5XkXB713A8pO6G393j0dbhaxkUpdvto5V7Th2f9uwaIY1qagv9mW(XYZv var1) {
+		XYZv var2 = this.func_7546_09CNVM2pJHfEd8I53GaO82x396qpVix0JSZqlf73zO9Itp6Z0ZM1dFPcr9r6();
+		return Math.max((int)(var1.func_11872_2Vm0piSCo4ykAfHelABiK5FXJ9tUuqjpMwL9NT18g5H4bYKrtlp0Sc734m9O().func_12185_77E7ly6r5p8AgeD7j1MC3wrd4wUdbSPPEtyupBLDu5J7c0z302AEf633qiD9((double)var2.x, (double)var2.z) / 10.0D) * 250, 250);
+	}
+
+	public void func_7544_6zl5Arnowm866sQ3ny372TOkUNmzVF1HF27ODrSt9jyfg491UBi1U4DDt2Yq(XYZv var1, XYZv var2) {
+		Ext1605Utils.func_12137_4B14YTlTqWTNVpM2G9851Dyfx9DbvQPLa5I81ItD974L7kJ315Qu8EP49Cg9(this, var1, var2, 0, ExtBlocks.WireframeBlock2.blockID);
+	}
+
+	public void func_7550_1TEi6UNf3SwyaU3NIC3s8C7gZNGcTG9vFQGy5qOc4gI9AwjR87h7g68M37B3(XYZv var1, int var2) {
+	}
+
+	public void func_7549_44O8yX39q3gNk27615OXRQ532BD73gQDG1C0XB575HgYp5YVG7N00ux31ql9(EntityPlayer var1) {
+	}
+}
--- /dev/null
+++ net/minecraft/src/GuiButtonUnknownClass.java
@@ -1,0 +1,7 @@
+package net.minecraft.src;
+
+public class GuiButtonUnknownClass extends GuiButton {
+	public GuiButtonUnknownClass(int var1, int var2, int var3, String var4, int var5, int var6) {
+		super(var1, var2, var3, var5, var6, var4);
+	}
+}
--- net/minecraft/src/GuiControls.java
+++ net/minecraft/src/GuiControls.java
@@ -12,6 +12,8 @@
 	}
 
 	public void initGui() {
+		this.controlList.clear();
+
 		for(int var1 = 0; var1 < this.options.keyBindings.length; ++var1) {
 			this.controlList.add(new GuiSmallButton(var1, this.width / 2 - 155 + var1 % 2 * 160, this.height / 6 + 24 * (var1 >> 1), this.options.getKeyBindingDescription(var1)));
 		}
--- /dev/null
+++ net/minecraft/src/GuiCredits.java
@@ -1,0 +1,51 @@
+package net.minecraft.src;
+
+public class GuiCredits extends GuiScreen {
+	private GuiScreen field_7947_994TrQTlCBG2lkIB03vK4YlFIr0sq3S3HBfH2m6CK0uQ4Dr0dXaxEJl5Kf77;
+	private static String[] field_7946_6tw0182g61PwvO1HRt15F3R423i5i3Nd9tnh1o7rWG5Yd4hz2p64rhLBXZ3t = new String[0];
+	private static String[] field_7945_24nXfzg59unTq8HYkXg1zgR80M3c616R47FU6ZED994Wy5293Y3Z5sF2q5Be = new String[2];
+	private static String[] field_7944_6nz38Zoucsl88251Ndbx9W06LlmUZr79gC550AEbRbr9O7NGcKg067vCr6A8 = new String[2];
+
+	public GuiCredits(GuiScreen var1) {
+		this.field_7947_994TrQTlCBG2lkIB03vK4YlFIr0sq3S3HBfH2m6CK0uQ4Dr0dXaxEJl5Kf77 = var1;
+	}
+
+	public void initGui() {
+		super.initGui();
+		this.controlList.clear();
+		this.controlList.add(new GuiButton(0, this.width / 2 - 100, this.height / 4 + 120 + 12, "Done"));
+	}
+
+	public void drawScreen(int var1, int var2, float var3) {
+		this.drawDefaultBackground();
+		this.drawCenteredString(this.fontRenderer, "Alpha 1.0.16.05_20 Cypress", this.width / 2, 20, 16777215);
+		this.fontRenderer.drawStringWithShadow("Third-party code:", 20, 60 + field_7946_6tw0182g61PwvO1HRt15F3R423i5i3Nd9tnh1o7rWG5Yd4hz2p64rhLBXZ3t.length * 10 + 10, 16777215);
+
+		int var4;
+		for(var4 = 0; var4 < field_7945_24nXfzg59unTq8HYkXg1zgR80M3c616R47FU6ZED994Wy5293Y3Z5sF2q5Be.length; ++var4) {
+			this.fontRenderer.drawString("- " + field_7945_24nXfzg59unTq8HYkXg1zgR80M3c616R47FU6ZED994Wy5293Y3Z5sF2q5Be[var4], 20, 60 + field_7946_6tw0182g61PwvO1HRt15F3R423i5i3Nd9tnh1o7rWG5Yd4hz2p64rhLBXZ3t.length * 10 + 20 + var4 * 10, 16777215);
+		}
+
+		this.fontRenderer.drawStringWithShadow("Special thanks to:", 20, 60 + field_7946_6tw0182g61PwvO1HRt15F3R423i5i3Nd9tnh1o7rWG5Yd4hz2p64rhLBXZ3t.length * 10 + 20 + field_7945_24nXfzg59unTq8HYkXg1zgR80M3c616R47FU6ZED994Wy5293Y3Z5sF2q5Be.length * 10 + 10, 16777215);
+
+		for(var4 = 0; var4 < field_7944_6nz38Zoucsl88251Ndbx9W06LlmUZr79gC550AEbRbr9O7NGcKg067vCr6A8.length; ++var4) {
+			this.fontRenderer.drawString("- " + field_7944_6nz38Zoucsl88251Ndbx9W06LlmUZr79gC550AEbRbr9O7NGcKg067vCr6A8[var4], 20, 60 + field_7946_6tw0182g61PwvO1HRt15F3R423i5i3Nd9tnh1o7rWG5Yd4hz2p64rhLBXZ3t.length * 10 + 20 + field_7945_24nXfzg59unTq8HYkXg1zgR80M3c616R47FU6ZED994Wy5293Y3Z5sF2q5Be.length * 10 + 20 + var4 * 10, 16777215);
+		}
+
+		super.drawScreen(var1, var2, var3);
+	}
+
+	protected void actionPerformed(GuiButton var1) {
+		if(var1.id == 0) {
+			this.mc.displayGuiScreen(this.field_7947_994TrQTlCBG2lkIB03vK4YlFIr0sq3S3HBfH2m6CK0uQ4Dr0dXaxEJl5Kf77);
+		}
+
+	}
+
+	static {
+		field_7945_24nXfzg59unTq8HYkXg1zgR80M3c616R47FU6ZED994Wy5293Y3Z5sF2q5Be[0] = "ModLoader by Risugami";
+		field_7945_24nXfzg59unTq8HYkXg1zgR80M3c616R47FU6ZED994Wy5293Y3Z5sF2q5Be[1] = "GLSL Shader support by daxnitro";
+		field_7944_6nz38Zoucsl88251Ndbx9W06LlmUZr79gC550AEbRbr9O7NGcKg067vCr6A8[0] = "Mojang Studios";
+		field_7944_6nz38Zoucsl88251Ndbx9W06LlmUZr79gC550AEbRbr9O7NGcKg067vCr6A8[1] = "Google Inc.";
+	}
+}
--- /dev/null
+++ net/minecraft/src/InventoryCB.java
@@ -1,0 +1,5 @@
+package net.minecraft.src;
+
+public abstract class InventoryCB {
+	public abstract void a(IInventory var1);
+}
--- /dev/null
+++ net/minecraft/src/DS5Instruction.java
@@ -1,0 +1,5 @@
+package net.minecraft.src;
+
+public interface DS5Instruction {
+	String GetJSON();
+}
--- /dev/null
+++ net/minecraft/src/BlockLadderOld.java
@@ -1,0 +1,121 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockLadderOld extends BlockOld {
+	protected BlockLadderOld(int var1, int var2) {
+		super(var1, var2, Material.circuits);
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		float var6 = 2.0F / 16.0F;
+		if(var5 == 2) {
+			this.setBlockBounds(0.0F, 0.0F, 1.0F - var6, 1.0F, 1.0F, 1.0F);
+		}
+
+		if(var5 == 3) {
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, var6);
+		}
+
+		if(var5 == 4) {
+			this.setBlockBounds(1.0F - var6, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
+		}
+
+		if(var5 == 5) {
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, var6, 1.0F, 1.0F);
+		}
+
+		return super.getCollisionBoundingBoxFromPool(var1, var2, var3, var4);
+	}
+
+	public AxisAlignedBB getSelectedBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		int var5 = var1.getBlockMetadata(var2, var3, var4);
+		float var6 = 2.0F / 16.0F;
+		if(var5 == 2) {
+			this.setBlockBounds(0.0F, 0.0F, 1.0F - var6, 1.0F, 1.0F, 1.0F);
+		}
+
+		if(var5 == 3) {
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, var6);
+		}
+
+		if(var5 == 4) {
+			this.setBlockBounds(1.0F - var6, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
+		}
+
+		if(var5 == 5) {
+			this.setBlockBounds(0.0F, 0.0F, 0.0F, var6, 1.0F, 1.0F);
+		}
+
+		return super.getSelectedBoundingBoxFromPool(var1, var2, var3, var4);
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 8;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return var1.isBlockNormalCube(var2 - 1, var3, var4) ? true : (var1.isBlockNormalCube(var2 + 1, var3, var4) ? true : (var1.isBlockNormalCube(var2, var3, var4 - 1) ? true : var1.isBlockNormalCube(var2, var3, var4 + 1)));
+	}
+
+	public void onBlockPlaced(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		if((var6 == 0 || var5 == 2) && var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+			var6 = 2;
+		}
+
+		if((var6 == 0 || var5 == 3) && var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+			var6 = 3;
+		}
+
+		if((var6 == 0 || var5 == 4) && var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+			var6 = 4;
+		}
+
+		if((var6 == 0 || var5 == 5) && var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+			var6 = 5;
+		}
+
+		var1.setBlockMetadataWithNotify(var2, var3, var4, var6);
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockMetadata(var2, var3, var4);
+		boolean var7 = false;
+		if(var6 == 2 && var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+			var7 = true;
+		}
+
+		if(var6 == 3 && var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+			var7 = true;
+		}
+
+		if(var6 == 4 && var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+			var7 = true;
+		}
+
+		if(var6 == 5 && var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+			var7 = true;
+		}
+
+		if(!var7) {
+			this.dropBlockAsItem(var1, var2, var3, var4, var6);
+			var1.setBlockWithNotify(var2, var3, var4, 0);
+		}
+
+		super.onNeighborBlockChange(var1, var2, var3, var4, var5);
+	}
+
+	public int quantityDropped(Random var1) {
+		return 1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockSandOld.java
@@ -1,0 +1,53 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockSandOld extends BlockOld {
+	public static boolean fallInstantly = false;
+
+	public BlockSandOld(int var1, int var2) {
+		super(var1, var2, Material.sand);
+	}
+
+	public void onBlockAdded(World var1, int var2, int var3, int var4) {
+		var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
+	}
+
+	public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
+		var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
+	}
+
+	public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
+		this.tryToFall(var1, var2, var3, var4);
+	}
+
+	private void tryToFall(World var1, int var2, int var3, int var4) {
+		if(canFallBelow(var1, var2, var3 - 1, var4) && var3 >= 0) {
+			EntityFallingSand var8 = new EntityFallingSand(var1, (float)var2 + 0.5F, (float)var3 + 0.5F, (float)var4 + 0.5F, this.blockID);
+			if(fallInstantly) {
+				while(!var8.isDead) {
+					var8.onUpdate();
+				}
+			} else {
+				var1.spawnEntityInWorld(var8);
+			}
+		}
+
+	}
+
+	public int tickRate() {
+		return 3;
+	}
+
+	public static boolean canFallBelow(World var0, int var1, int var2, int var3) {
+		int var4 = var0.getBlockId(var1, var2, var3);
+		if(var4 == 0) {
+			return true;
+		} else if(var4 == BlockOld.fire.blockID) {
+			return true;
+		} else {
+			Material var5 = BlockOld.blocksList[var4].material;
+			return var5 == Material.water ? true : var5 == Material.lava;
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/ModelPart.java
@@ -1,0 +1,12 @@
+package net.minecraft.src;
+
+public class ModelPart {
+	@Deprecated
+	public ModelPart getChild(String var1) {
+		return this;
+	}
+
+	@Deprecated
+	public void render(PoseStack var1, VertexConsumer var2, int var3, int var4, float var5, float var6, float var7, float var8) {
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandSavedemo.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+class CommandSavedemo extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8607_8I9AiZw15M4V6T49rhwoHPO74tfH7F41oG3fccwQWCbC7q7q75K0kSK1FuFs;
+    
+    CommandSavedemo(final CommandManager abb) {
+        this.field_8607_8I9AiZw15M4V6T49rhwoHPO74tfH7F41oG3fccwQWCbC7q7q75K0kSK1FuFs = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        InputHandler.field_9753_0Cm3s8rw0zOT4712xCTQWMpeI3bbCAHMip9u9GiDRqZ5fikPZiqtu59Ne1rL.func_12199_0T1EBqlwN0r6zrh3Sg0XWHZ8YGwKZ7S93cTMLKw1r2Y6V9Bl9qyCtXn0g300((String)arr[0]);
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/CommandRTexfilter.java
@@ -1,0 +1,20 @@
+package net.minecraft.src;
+
+class CommandRTexfilter extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8588_6sA2V04bOV28A0BhH6Ux97r3zSiACm18q776uF4GZ94iE6X2fAq5Z8V910mW;
+    
+    CommandRTexfilter(final CommandManager abb) {
+        this.field_8588_6sA2V04bOV28A0BhH6Ux97r3zSiACm18q776uF4GZ94iE6X2fAq5Z8V910mW = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        ScreenDebugMenu.field_7956_48H3fYB8k2jE5s5HC81S9Sm600nFD73Lb4N90Pl1F0LSIx70mF1gldgvzgRz = ((int)arr[0] == 1);
+        InputHandler.mc.renderEngine.refreshTextures();
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "" + (int)(ScreenDebugMenu.field_7956_48H3fYB8k2jE5s5HC81S9Sm600nFD73Lb4N90Pl1F0LSIx70mF1gldgvzgRz ? 1 : 0);
+    }
+}
--- /dev/null
+++ net/minecraft/src/BlockGlowingFlower.java
@@ -1,0 +1,64 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class BlockGlowingFlower extends BlockGlowing {
+	int renderMode = 1;
+
+	public BlockGlowingFlower(int var1, int var2, int var3) {
+		super(var1, var2, var3);
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return true;
+	}
+
+	public void onEntityCollidedWithBlock(World var1, int var2, int var3, int var4, Entity var5) {
+		if(var5 instanceof EntityPlayer) {
+			EntityPlayer var6 = (EntityPlayer)var5;
+			if(var6.field_9028_77eIl1NuprJ7LGdcl2jvfY23W9vuW6i3POL1kwYb9qsfTXp6uFHpdr8w9eCG <= 0) {
+				var6.field_9028_77eIl1NuprJ7LGdcl2jvfY23W9vuW6i3POL1kwYb9qsfTXp6uFHpdr8w9eCG = 20;
+				var6.heal(1);
+			}
+		}
+
+	}
+
+	public boolean blockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5) {
+		ItemStack var6 = var5.inventory.getCurrentItem();
+		if(var6 == null) {
+			return false;
+		} else {
+			if(var6.itemID == ExtBlocks.blueFireIdk.blockID) {
+				var1.setBlockWithNotify(var2, var3, var4, 117);
+				var5.inventory.consumeInventoryItem(ExtBlocks.blueFireIdk.blockID);
+				var1.playSoundEffect((double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F), "ext.infuse", 1.0F, 1.0F);
+			} else if(var6.itemID == Item.ingotGold.shiftedIndex) {
+				var1.setBlockWithNotify(var2, var3, var4, 118);
+				var5.inventory.consumeInventoryItem(Item.ingotGold.shiftedIndex);
+				var1.playSoundEffect((double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F), "ext.infuse", 1.0F, 0.7F);
+			} else if(var6.itemID == ExtItems.obsidianIngot.shiftedIndex) {
+				var1.setBlockWithNotify(var2, var3, var4, 119);
+				var5.inventory.consumeInventoryItem(ExtItems.obsidianIngot.shiftedIndex);
+				var1.playSoundEffect((double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F), "ext.infuse", 1.0F, 0.3F);
+			}
+
+			return true;
+		}
+	}
+
+	public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
+	}
+}
--- /dev/null
+++ net/minecraft/src/Encoder.java
@@ -1,0 +1,173 @@
+package net.minecraft.src;
+
+import java.io.OutputStream;
+import java.nio.ByteBuffer;
+import java.util.Arrays;
+import java.util.Objects;
+
+public class Encoder {
+	private final byte[] newline;
+	private final int linemax;
+	private final boolean isURL;
+	private final boolean doPadding;
+	private static final char[] toBase64 = new char[]{'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/'};
+	private static final char[] toBase64URL = new char[]{'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_'};
+	private static final int MIMELINEMAX = 76;
+	private static final byte[] CRLF = new byte[]{(byte)13, (byte)10};
+	static final Encoder RFC4648 = new Encoder(false, (byte[])null, -1, true);
+	static final Encoder RFC4648_URLSAFE = new Encoder(true, (byte[])null, -1, true);
+	static final Encoder RFC2045 = new Encoder(false, CRLF, 76, true);
+
+	private Encoder(boolean var1, byte[] var2, int var3, boolean var4) {
+		this.isURL = var1;
+		this.newline = var2;
+		this.linemax = var3;
+		this.doPadding = var4;
+	}
+
+	private final int outLength(int var1) {
+		boolean var2 = false;
+		int var4;
+		if(this.doPadding) {
+			var4 = 4 * ((var1 + 2) / 3);
+		} else {
+			int var3 = var1 % 3;
+			var4 = 4 * (var1 / 3) + (var3 == 0 ? 0 : var3 + 1);
+		}
+
+		if(this.linemax > 0) {
+			var4 += (var4 - 1) / this.linemax * this.newline.length;
+		}
+
+		return var4;
+	}
+
+	public byte[] encode(byte[] var1) {
+		int var2 = this.outLength(var1.length);
+		byte[] var3 = new byte[var2];
+		int var4 = this.encode0(var1, 0, var1.length, var3);
+		return var4 != var3.length ? Arrays.copyOf(var3, var4) : var3;
+	}
+
+	public int encode(byte[] var1, byte[] var2) {
+		int var3 = this.outLength(var1.length);
+		if(var2.length < var3) {
+			throw new IllegalArgumentException("Output byte array is too small for encoding all input bytes");
+		} else {
+			return this.encode0(var1, 0, var1.length, var2);
+		}
+	}
+
+	public String encodeToString(byte[] var1) {
+		byte[] var2 = this.encode(var1);
+		return new String(var2, 0, 0, var2.length);
+	}
+
+	public ByteBuffer encode(ByteBuffer var1) {
+		int var2 = this.outLength(var1.remaining());
+		byte[] var3 = new byte[var2];
+		boolean var4 = false;
+		int var6;
+		if(var1.hasArray()) {
+			var6 = this.encode0(var1.array(), var1.arrayOffset() + var1.position(), var1.arrayOffset() + var1.limit(), var3);
+			var1.position(var1.limit());
+		} else {
+			byte[] var5 = new byte[var1.remaining()];
+			var1.get(var5);
+			var6 = this.encode0(var5, 0, var5.length, var3);
+		}
+
+		if(var6 != var3.length) {
+			var3 = Arrays.copyOf(var3, var6);
+		}
+
+		return ByteBuffer.wrap(var3);
+	}
+
+	public OutputStream wrap(OutputStream var1) {
+		Objects.requireNonNull(var1);
+		return new EncOutputStream(var1, this.isURL ? toBase64URL : toBase64, this.newline, this.linemax, this.doPadding);
+	}
+
+	public Encoder withoutPadding() {
+		return !this.doPadding ? this : new Encoder(this.isURL, this.newline, this.linemax, false);
+	}
+
+	private int encode0(byte[] var1, int var2, int var3, byte[] var4) {
+		char[] var5 = this.isURL ? toBase64URL : toBase64;
+		int var6 = var2;
+		int var7 = (var3 - var2) / 3 * 3;
+		int var8 = var2 + var7;
+		if(this.linemax > 0 && var7 > this.linemax / 4 * 3) {
+			var7 = this.linemax / 4 * 3;
+		}
+
+		int var9 = 0;
+
+		while(true) {
+			int var10;
+			int var11;
+			int var13;
+			do {
+				do {
+					if(var6 >= var8) {
+						if(var6 < var3) {
+							var10 = var1[var6++] & 255;
+							var4[var9++] = (byte)var5[var10 >> 2];
+							if(var6 == var3) {
+								var4[var9++] = (byte)var5[var10 << 4 & 63];
+								if(this.doPadding) {
+									var4[var9++] = 61;
+									var4[var9++] = 61;
+								}
+							} else {
+								var11 = var1[var6++] & 255;
+								var4[var9++] = (byte)var5[var10 << 4 & 63 | var11 >> 4];
+								var4[var9++] = (byte)var5[var11 << 2 & 63];
+								if(this.doPadding) {
+									var4[var9++] = 61;
+								}
+							}
+						}
+
+						return var9;
+					}
+
+					var10 = Math.min(var6 + var7, var8);
+					var11 = var6;
+
+					for(int var12 = var9; var11 < var10; var4[var12++] = (byte)var5[var13 & 63]) {
+						var13 = (var1[var11++] & 255) << 16 | (var1[var11++] & 255) << 8 | var1[var11++] & 255;
+						var4[var12++] = (byte)var5[var13 >>> 18 & 63];
+						var4[var12++] = (byte)var5[var13 >>> 12 & 63];
+						var4[var12++] = (byte)var5[var13 >>> 6 & 63];
+					}
+
+					var11 = (var10 - var6) / 3 * 4;
+					var9 += var11;
+					var6 = var10;
+				} while(var11 != this.linemax);
+			} while(var10 >= var3);
+
+			byte[] var16 = this.newline;
+			var13 = var16.length;
+
+			for(int var14 = 0; var14 < var13; ++var14) {
+				byte var15 = var16[var14];
+				var4[var9++] = var15;
+			}
+		}
+	}
+
+	Encoder(boolean var1, byte[] var2, int var3, boolean var4, Object var5) {
+		this(var1, var2, var3, var4);
+	}
+
+	static char[] toBase64() {
+		return toBase64;
+	}
+
+	static char[] toBase64URL() {
+		return toBase64URL;
+	}
+}
--- net/minecraft/src/Pathfinder.java
+++ net/minecraft/src/Pathfinder.java
@@ -117,13 +117,13 @@
 		if(var7 != null) {
 			int var8 = 0;
 
-			for(boolean var9 = false; var3 > 0; --var3) {
-				int var10 = this.getVerticalOffset(var1, var2, var3 - 1, var4, var5);
-				if(var10 <= 0) {
+			for(boolean var10 = false; var3 > 0; --var3) {
+				int var9 = this.getVerticalOffset(var1, var2, var3 - 1, var4, var5);
+				if(var9 <= 0) {
 					break;
 				}
 
-				if(var10 < 0) {
+				if(var9 < 0) {
 					return null;
 				}
 
--- net/minecraft/src/GuiGameOver.java
+++ net/minecraft/src/GuiGameOver.java
@@ -5,7 +5,6 @@
 public class GuiGameOver extends GuiScreen {
 	public void initGui() {
 		this.controlList.clear();
-		this.controlList.add(new GuiButton(1, this.width / 2 - 100, this.height / 4 + 72, "Respawn"));
 		this.controlList.add(new GuiButton(2, this.width / 2 - 100, this.height / 4 + 96, "Title menu"));
 		if(this.mc.session == null) {
 			((GuiButton)this.controlList.get(1)).enabled = false;
@@ -33,12 +32,12 @@
 	}
 
 	public void drawScreen(int var1, int var2, float var3) {
-		this.drawGradientRect(0, 0, this.width, this.height, 1615855616, -1602211792);
+		drawGradientRect(0, 0, this.width, this.height, 805306368, -1610612736);
 		GL11.glPushMatrix();
 		GL11.glScalef(2.0F, 2.0F, 2.0F);
 		this.drawCenteredString(this.fontRenderer, "Game over!", this.width / 2 / 2, 30, 16777215);
 		GL11.glPopMatrix();
-		this.drawCenteredString(this.fontRenderer, "Score: &e" + this.mc.thePlayer.getScore(), this.width / 2, 100, 16777215);
+		this.drawCenteredString(this.fontRenderer, "You survived " + (((ZMWorld)this.mc.theWorld).wave - 1) + " waves", this.width / 2, 100, 16777215);
 		super.drawScreen(var1, var2, var3);
 	}
 
--- net/minecraft/src/ItemTool.java
+++ net/minecraft/src/ItemTool.java
@@ -2,7 +2,7 @@
 
 public class ItemTool extends Item {
 	private Block[] blocksEffectiveAgainst;
-	private float efficiencyOnProperMaterial = 4.0F;
+	public float efficiencyOnProperMaterial = 4.0F;
 	private int damageVsEntity;
 	protected int toolMaterial;
 
--- /dev/null
+++ net/minecraft/src/RenderGiantBoss.java
@@ -1,0 +1,16 @@
+package net.minecraft.src;
+
+import org.lwjgl.opengl.GL11;
+
+public class RenderGiantBoss extends RenderLiving {
+	private float f;
+
+	public RenderGiantBoss(ModelBase var1, float var2, float var3) {
+		super(var1, var2 * var3);
+		this.f = var3;
+	}
+
+	protected void preRenderCallback(EntityLiving var1, float var2) {
+		GL11.glScalef(this.f, this.f, this.f);
+	}
+}
--- net/minecraft/src/NetworkReaderThread.java
+++ net/minecraft/src/NetworkReaderThread.java
@@ -10,39 +10,82 @@
 
 	public void run() {
 		Object var1 = NetworkManager.threadSyncObject;
-		synchronized(var1) {
+		Object var2 = NetworkManager.threadSyncObject;
+		synchronized(var2) {
 			++NetworkManager.numReadThreads;
 		}
 
 		while(true) {
-			boolean var11 = false;
-
-			try {
-				var11 = true;
-				if(NetworkManager.isRunning(this.netManager)) {
-					if(!NetworkManager.isServerTerminating(this.netManager)) {
+			boolean var28 = false;
+			boolean var20 = false;
+
+			Object var3;
+			Object var4;
+			label168: {
+				label167: {
+					try {
+						var20 = true;
+						var28 = true;
+						if(!NetworkManager.isRunning(this.netManager)) {
+							var28 = false;
+							var20 = false;
+							break label168;
+						}
+
+						if(NetworkManager.isServerTerminating(this.netManager)) {
+							var28 = false;
+							var20 = false;
+							break label167;
+						}
+
 						NetworkManager.readNetworkPacket(this.netManager);
-						continue;
-					}
-
-					var11 = false;
-					break;
+						var20 = false;
+					} finally {
+						if(var20) {
+							if(var28) {
+								Object var9 = NetworkManager.threadSyncObject;
+								Object var10 = NetworkManager.threadSyncObject;
+								synchronized(var10) {
+									--NetworkManager.numReadThreads;
+								}
+							}
+
+						}
+					}
+
+					if(var28) {
+						var3 = NetworkManager.threadSyncObject;
+						var4 = NetworkManager.threadSyncObject;
+						synchronized(var4) {
+							--NetworkManager.numReadThreads;
+						}
+					}
+					continue;
 				}
 
-				var11 = false;
-				break;
-			} finally {
-				if(var11) {
-					Object var5 = NetworkManager.threadSyncObject;
-					synchronized(var5) {
+				if(var28) {
+					var3 = NetworkManager.threadSyncObject;
+					var4 = NetworkManager.threadSyncObject;
+					synchronized(var4) {
 						--NetworkManager.numReadThreads;
 					}
 				}
-			}
+				break;
+			}
+
+			if(var28) {
+				var3 = NetworkManager.threadSyncObject;
+				var4 = NetworkManager.threadSyncObject;
+				synchronized(var4) {
+					--NetworkManager.numReadThreads;
+				}
+			}
+			break;
 		}
 
 		var1 = NetworkManager.threadSyncObject;
-		synchronized(var1) {
+		var2 = NetworkManager.threadSyncObject;
+		synchronized(var2) {
 			--NetworkManager.numReadThreads;
 		}
 	}
--- /dev/null
+++ net/minecraft/src/FreerunMap4.java
@@ -1,0 +1,24 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.util.List;
+
+public class FreerunMap4 extends FreerunWorld {
+	private NamedLoc[] field_7518_3yl020sZ087HWeLQ8676JZEk9B1Abrl6wX69M0WGnZv2j7KT34TH4VPTo98q = new NamedLoc[]{new NamedLoc(23, 82, -58, "spawn"), new NamedLoc(12, 83, -41, 14, 85, -44, "spawn_start"), new NamedLoc(17, 96, 33, 21, 100, 37, "checkpoint1"), new NamedLoc(22, 94, 121, 18, 100, 118, "checkpoint2"), new NamedLoc(12, 91, 196, 15, 95, 200, "checkpoint3"), new NamedLoc(18, 112, 169, 21, 115, 172, "end")};
+
+	public FreerunMap4(File var1, String var2) {
+		super(var1, var2);
+	}
+
+	public NamedLoc[] getCheckpoints() {
+		return this.field_7518_3yl020sZ087HWeLQ8676JZEk9B1Abrl6wX69M0WGnZv2j7KT34TH4VPTo98q;
+	}
+
+	public int getResetY(long var1, long var3) {
+		return 77;
+	}
+
+	public List<HandlerSetCheckpointUnknownClass> func_7517_8oADBp42n4G2Ly6U1WLv70n6VyS2bkokzo8dF7ayUqDb1A6ofY86pUJA8mf8() {
+		return this.field_7498_65957fU9nGL5PA2e96ZOK3ePBveSt2ceA9Glj10PC2Jo5s0wI21ix69flng2;
+	}
+}
--- net/minecraft/src/TexturedQuad.java
+++ net/minecraft/src/TexturedQuad.java
@@ -13,13 +13,17 @@
 	}
 
 	public TexturedQuad(PositionTexureVertex[] var1, int var2, int var3, int var4, int var5) {
+		this(var1, var2, var3, var4, var5, 64, 32);
+	}
+
+	public TexturedQuad(PositionTexureVertex[] var1, int var2, int var3, int var4, int var5, int var6, int var7) {
 		this(var1);
-		float var6 = 0.0015625F;
-		float var7 = 0.003125F;
-		var1[0] = var1[0].setTexturePosition((float)var4 / 64.0F - var6, (float)var3 / 32.0F + var7);
-		var1[1] = var1[1].setTexturePosition((float)var2 / 64.0F + var6, (float)var3 / 32.0F + var7);
-		var1[2] = var1[2].setTexturePosition((float)var2 / 64.0F + var6, (float)var5 / 32.0F - var7);
-		var1[3] = var1[3].setTexturePosition((float)var4 / 64.0F - var6, (float)var5 / 32.0F - var7);
+		float var8 = 0.0015625F;
+		float var9 = 0.003125F;
+		var1[0] = var1[0].setTexturePosition((float)var4 / (float)var6 - var8, (float)var3 / (float)var7 + var9);
+		var1[1] = var1[1].setTexturePosition((float)var2 / (float)var6 + var8, (float)var3 / (float)var7 + var9);
+		var1[2] = var1[2].setTexturePosition((float)var2 / (float)var6 + var8, (float)var5 / (float)var7 - var9);
+		var1[3] = var1[3].setTexturePosition((float)var4 / (float)var6 - var8, (float)var5 / (float)var7 - var9);
 	}
 
 	public void flipFace() {
@@ -32,20 +36,24 @@
 		this.vertexPositions = var1;
 	}
 
-	public void draw(Tessellator var1, float var2) {
-		Vec3D var3 = this.vertexPositions[1].vector3D.subtract(this.vertexPositions[0].vector3D);
-		Vec3D var4 = this.vertexPositions[1].vector3D.subtract(this.vertexPositions[2].vector3D);
-		Vec3D var5 = var4.crossProduct(var3).normalize();
-		var1.startDrawingQuads();
+	public void func_11882_0x742FBxeJb6iSH3PLXVlqD1dxqD4cwb2iLKkD7E35Zj9XGx7hgNuhbP3GmC(Tessellator var1, float var2) {
+		this.draw(var1, var2, false);
+	}
+
+	public void draw(Tessellator var1, float var2, boolean var3) {
+		Vec3D var4 = this.vertexPositions[1].vector3D.subtract(this.vertexPositions[0].vector3D);
+		Vec3D var5 = this.vertexPositions[1].vector3D.subtract(this.vertexPositions[2].vector3D);
+		Vec3D var6 = var5.crossProduct(var4).normalize();
+		var1.func_10259_6ayZ4y0DKzlBw0qR3TwrtIK08f0p5iZQu8xsah0R4i2XaEr9LQwCue6wKB06(var3);
 		if(this.invertNormal) {
-			var1.setNormal(-((float)var5.xCoord), -((float)var5.yCoord), -((float)var5.zCoord));
+			var1.setNormal(-((float)var6.xCoord), -((float)var6.yCoord), -((float)var6.zCoord));
 		} else {
-			var1.setNormal((float)var5.xCoord, (float)var5.yCoord, (float)var5.zCoord);
+			var1.setNormal((float)var6.xCoord, (float)var6.yCoord, (float)var6.zCoord);
 		}
 
-		for(int var6 = 0; var6 < 4; ++var6) {
-			PositionTexureVertex var7 = this.vertexPositions[var6];
-			var1.addVertexWithUV((double)((float)var7.vector3D.xCoord * var2), (double)((float)var7.vector3D.yCoord * var2), (double)((float)var7.vector3D.zCoord * var2), (double)var7.texturePositionX, (double)var7.texturePositionY);
+		for(int var7 = 0; var7 < 4; ++var7) {
+			PositionTexureVertex var8 = this.vertexPositions[var7];
+			var1.addVertexWithUV((double)((float)var8.vector3D.xCoord * var2), (double)((float)var8.vector3D.yCoord * var2), (double)((float)var8.vector3D.zCoord * var2), (double)var8.texturePositionX, (double)var8.texturePositionY);
 		}
 
 		var1.draw();
--- net/minecraft/src/StepSoundSand.java
+++ net/minecraft/src/StepSoundSand.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-final class StepSoundSand extends StepSound {
-	StepSoundSand(String var1, float var2, float var3) {
+public final class StepSoundSand extends StepSound {
+	public StepSoundSand(String var1, float var2, float var3) {
 		super(var1, var2, var3);
 	}
 
--- net/minecraft/src/LoadingScreenRenderer.java
+++ net/minecraft/src/LoadingScreenRenderer.java
@@ -43,6 +43,7 @@
 			GL11.glLoadIdentity();
 			GL11.glTranslatef(0.0F, 0.0F, -200.0F);
 		}
+
 	}
 
 	public void displayLoadingString(String var1) {
@@ -56,6 +57,7 @@
 			this.setLoadingProgress(-1);
 			this.systemTime = 0L;
 		}
+
 	}
 
 	public void setLoadingProgress(int var1) {
@@ -83,7 +85,7 @@
 				GL11.glBindTexture(GL11.GL_TEXTURE_2D, var8);
 				float var9 = 32.0F;
 				var7.startDrawingQuads();
-				var7.setColorOpaque_I(4210752);
+				var7.setColorOpaque_I(789516);
 				var7.addVertexWithUV(0.0D, (double)var6, 0.0D, 0.0D, (double)((float)var6 / var9));
 				var7.addVertexWithUV((double)var5, (double)var6, 0.0D, (double)((float)var5 / var9), (double)((float)var6 / var9));
 				var7.addVertexWithUV((double)var5, 0.0D, 0.0D, (double)((float)var5 / var9), 0.0D);
@@ -92,8 +94,8 @@
 				if(var1 >= 0) {
 					byte var10 = 100;
 					byte var11 = 2;
-					int var12 = var5 / 2 - var10 / 2;
-					int var13 = var6 / 2 + 16;
+					byte var12 = 13;
+					int var13 = var6 - 16;
 					GL11.glDisable(GL11.GL_TEXTURE_2D);
 					var7.startDrawingQuads();
 					var7.setColorOpaque_I(8421504);
@@ -110,16 +112,16 @@
 					GL11.glEnable(GL11.GL_TEXTURE_2D);
 				}
 
-				this.mc.fontRenderer.drawStringWithShadow(this.currentlyDisplayedText, (var5 - this.mc.fontRenderer.getStringWidth(this.currentlyDisplayedText)) / 2, var6 / 2 - 4 - 16, 16777215);
-				this.mc.fontRenderer.drawStringWithShadow(this.currentlyDisplayedProgress, (var5 - this.mc.fontRenderer.getStringWidth(this.currentlyDisplayedProgress)) / 2, var6 / 2 - 4 + 8, 16777215);
+				this.mc.fontRenderer.drawStringWithShadow(this.currentlyDisplayedText, 13, var6 - 40, 16777215);
+				this.mc.fontRenderer.drawStringWithShadow(this.currentlyDisplayedProgress, 13, var6 - 28, 1090519039);
 				Display.update();
 
 				try {
 					Thread.yield();
 				} catch (Exception var14) {
 				}
-
 			}
 		}
+
 	}
 }
--- /dev/null
+++ net/minecraft/src/HubFragment3.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+public class HubFragment3 extends HubWorldUnknownClass2 {
+	public HubFragment3(HubWorld var1, int var2, int var3, int var4) {
+		super(var1, var2, var3, var4, 5, 5, 5);
+	}
+
+	public void func_9822_96pkMbVA643Z1Y78zU1zOHbm0WbR47PCGp9q1ZyTK64G0pr0ViUREK2TCos1() {
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 0, 0, 4, 0, 4, (short)ExtBlocks.dimensionFloorBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 4, 0, 4, 4, 4, (short)ExtBlocks.dimensionFloorBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 0, 0, 4, 4, 0, (short)ExtBlocks.dimensionWallBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 0, 4, 4, 4, 4, (short)ExtBlocks.dimensionWallBlock.blockID);
+		this.func_9824_4OnwgF5x0BQ3sp7En29qVPi3wP2F99dRcg44iCY75OWivoZ4x7hHLld3O5x3(0, 0, 0, 0, 4, 4, (short)ExtBlocks.dimensionWallBlock.blockID);
+		this.func_9823_0ir18WW2Er00vPEwk4ysWYEf3jBf0oDxYSVBcO27LQ7O9UiZXGtduk6tgrab(2, 1, 2, (short)ExtBlocks.BlockHubDoor.blockID);
+		this.func_9823_0ir18WW2Er00vPEwk4ysWYEf3jBf0oDxYSVBcO27LQ7O9UiZXGtduk6tgrab(3, 3, 1, (short)Block.torch.blockID);
+		this.func_9823_0ir18WW2Er00vPEwk4ysWYEf3jBf0oDxYSVBcO27LQ7O9UiZXGtduk6tgrab(1, 3, 3, (short)Block.torch.blockID);
+		this.func_9826_7ZpHFjuGvcJ051cOz9PE89x1h4vDq16V2LJ76i4OBAOemXk2l5J09hlg30Vh(this.field_9833_9Psx0tZC91cMh7ZAzUJ658Kzvt14VXdr7EZ2i1DLVD9g4MlOJonxzd0TGHB9);
+	}
+}
--- /dev/null
+++ net/minecraft/src/AuthKey.java
@@ -1,0 +1,4 @@
+package net.minecraft.src;
+
+public class AuthKey {
+}
--- /dev/null
+++ net/minecraft/src/WorldGenBlockGoldBlockSteel.java
@@ -1,0 +1,22 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class WorldGenBlockGoldBlockSteel extends WorldGenerator {
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		for(int var6 = 0; var6 < 6; ++var6) {
+			int var7 = var3 + var2.nextInt(8) - var2.nextInt(8);
+			int var8 = var4 + var2.nextInt(4) - var2.nextInt(4);
+			int var9 = var5 + var2.nextInt(8) - var2.nextInt(8);
+			if(var1.getBlockId(var7, var8 - 1, var9) != Block.waterStill.blockID && var1.getBlockId(var7, var8 - 1, var9) != Block.waterMoving.blockID) {
+				for(int var10 = 0; var10 != 5 && var1.getBlockId(var7, var8 + var10, var9) == Block.waterStill.blockID; ++var10) {
+					if(var10 == 4) {
+						var1.setBlock(var7, var8, var9, var2.nextInt(20) > 16 ? Block.blockGold.blockID : Block.blockSteel.blockID);
+					}
+				}
+			}
+		}
+
+		return true;
+	}
+}
--- /dev/null
+++ net/minecraft/src/VisualsStandart.java
@@ -1,0 +1,45 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+import java.io.IOException;
+import javax.imageio.ImageIO;
+import net.minecraft.client.Minecraft;
+import org.lwjgl.opengl.GL11;
+
+public class VisualsStandart extends VisualsUnknownClass {
+	private int field_10174_9SB6LX271wt1N9R6FPQT2tkxrjYvp5zeNUgjferC20YRxzVuz1y6IOOXW25S = -1;
+	private BufferedImage field_10175_6xIjRAF772BRqOBNus4gr78k843P39SI5692Xo8B1847XMaHiO3808rtgOk6;
+	public VisualsConfiguration field_10176_8Q693FBKPN5j0pdKG0XzN75si5WTE9p4CQ3M4u040GnL9O98xyP6kN624E9k = new VisualsConfiguration();
+
+	public VisualsStandart() {
+		this.field_10166_0Sg7537VnLZ7du5FsLln7EYJ7tLG9LfdbFsVG53zuLLa94D21JXk6aie9tls = "Extension Standard";
+		this.field_10168_6rK7r47m1wf6M34G2s0hL7m282kBAy4521c3axU19Y9WKmYF8gZ6ryN7JLjP = "The standard design of Extension 16.05";
+
+		try {
+			this.field_10175_6xIjRAF772BRqOBNus4gr78k843P39SI5692Xo8B1847XMaHiO3808rtgOk6 = ImageIO.read(Ext1605Utils.func_12150_5v4Cs6sI06e6Hjpg3rSI82gG008x14C2jag2OM7ADaW5U8a3DYSrf570CJm6("/pack.png"));
+		} catch (IOException var2) {
+			var2.printStackTrace();
+		}
+
+	}
+
+	public void func_10160_6kOi4sh8w5g34shttmoUUEDgCPE5VRiNwN076cQcxuDFXDkU0y92lK2v99vL(Minecraft var1) {
+		if(this.field_10175_6xIjRAF772BRqOBNus4gr78k843P39SI5692Xo8B1847XMaHiO3808rtgOk6 != null) {
+			var1.renderEngine.deleteTexture(this.field_10174_9SB6LX271wt1N9R6FPQT2tkxrjYvp5zeNUgjferC20YRxzVuz1y6IOOXW25S);
+		}
+
+	}
+
+	public void func_10162_7X6Ocgi2aWrG07279w14Ok6jeWFPa9bmt1my2NA0a1ZEmdxx5QjSOn3mi5a8(Minecraft var1) {
+		if(this.field_10175_6xIjRAF772BRqOBNus4gr78k843P39SI5692Xo8B1847XMaHiO3808rtgOk6 != null && this.field_10174_9SB6LX271wt1N9R6FPQT2tkxrjYvp5zeNUgjferC20YRxzVuz1y6IOOXW25S < 0) {
+			this.field_10174_9SB6LX271wt1N9R6FPQT2tkxrjYvp5zeNUgjferC20YRxzVuz1y6IOOXW25S = var1.renderEngine.allocateAndSetupTexture(this.field_10175_6xIjRAF772BRqOBNus4gr78k843P39SI5692Xo8B1847XMaHiO3808rtgOk6);
+		}
+
+		if(this.field_10175_6xIjRAF772BRqOBNus4gr78k843P39SI5692Xo8B1847XMaHiO3808rtgOk6 != null) {
+			var1.renderEngine.bindTexture(this.field_10174_9SB6LX271wt1N9R6FPQT2tkxrjYvp5zeNUgjferC20YRxzVuz1y6IOOXW25S);
+		} else {
+			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var1.renderEngine.getTexture("/gui/unknown_pack.png"));
+		}
+
+	}
+}
--- net/minecraft/src/TextureFlamesFX.java
+++ net/minecraft/src/TextureFlamesFX.java
@@ -9,69 +9,73 @@
 	}
 
 	public void onTick() {
-		int var2;
-		float var4;
-		int var5;
-		int var6;
-		for(int var1 = 0; var1 < 16; ++var1) {
-			for(var2 = 0; var2 < 20; ++var2) {
-				int var3 = 18;
-				var4 = this.currentFireFrame[var1 + (var2 + 1) % 20 * 16] * (float)var3;
-
-				for(var5 = var1 - 1; var5 <= var1 + 1; ++var5) {
-					for(var6 = var2; var6 <= var2 + 1; ++var6) {
-						if(var5 >= 0 && var6 >= 0 && var5 < 16 && var6 < 20) {
-							var4 += this.currentFireFrame[var5 + var6 * 16];
+		if(InputHandler.mc.options.fancyGraphics != 2 || this.field_10713_88024hG6da4f4kcVfOqR8cTJ36RtCs13wB6V30Rs17vqAj14F4Cqz3neFg20) {
+			this.field_10713_88024hG6da4f4kcVfOqR8cTJ36RtCs13wB6V30Rs17vqAj14F4Cqz3neFg20 = false;
+
+			int var1;
+			float var2;
+			int var3;
+			int var4;
+			for(int var5 = 0; var5 < 16; ++var5) {
+				for(var1 = 0; var1 < 20; ++var1) {
+					int var6 = 18;
+					var2 = this.currentFireFrame[var5 + (var1 + 1) % 20 * 16] * (float)var6;
+
+					for(var3 = var5 - 1; var3 <= var5 + 1; ++var3) {
+						for(var4 = var1; var4 <= var1 + 1; ++var4) {
+							if(var3 >= 0 && var4 >= 0 && var3 < 16 && var4 < 20) {
+								var2 += this.currentFireFrame[var3 + var4 * 16];
+							}
+
+							++var6;
 						}
-
-						++var3;
-					}
-				}
-
-				this.lastFireFrame[var1 + var2 * 16] = var4 / ((float)var3 * 1.06F);
-				if(var2 >= 19) {
-					this.lastFireFrame[var1 + var2 * 16] = (float)(Math.random() * Math.random() * Math.random() * 4.0D + Math.random() * (double)0.1F + (double)0.2F);
-				}
-			}
-		}
-
-		float[] var12 = this.lastFireFrame;
-		this.lastFireFrame = this.currentFireFrame;
-		this.currentFireFrame = var12;
-
-		for(var2 = 0; var2 < 256; ++var2) {
-			float var13 = this.currentFireFrame[var2] * 1.8F;
-			if(var13 > 1.0F) {
-				var13 = 1.0F;
-			}
-
-			if(var13 < 0.0F) {
-				var13 = 0.0F;
-			}
-
-			var5 = (int)(var13 * 155.0F + 100.0F);
-			var6 = (int)(var13 * var13 * 255.0F);
-			int var7 = (int)(var13 * var13 * var13 * var13 * var13 * var13 * var13 * var13 * var13 * var13 * 255.0F);
-			short var8 = 255;
-			if(var13 < 0.5F) {
-				var8 = 0;
-			}
-
-			var4 = (var13 - 0.5F) * 2.0F;
-			if(this.anaglyphEnabled) {
-				int var9 = (var5 * 30 + var6 * 59 + var7 * 11) / 100;
-				int var10 = (var5 * 30 + var6 * 70) / 100;
-				int var11 = (var5 * 30 + var7 * 70) / 100;
-				var5 = var9;
-				var6 = var10;
-				var7 = var11;
-			}
-
-			this.imageData[var2 * 4 + 0] = (byte)var5;
-			this.imageData[var2 * 4 + 1] = (byte)var6;
-			this.imageData[var2 * 4 + 2] = (byte)var7;
-			this.imageData[var2 * 4 + 3] = (byte)var8;
-		}
-
+					}
+
+					this.lastFireFrame[var5 + var1 * 16] = var2 / ((float)var6 * 1.06F);
+					if(var1 >= 19) {
+						this.lastFireFrame[var5 + var1 * 16] = (float)(Math.random() * Math.random() * Math.random() * 4.0D + Math.random() * (double)0.1F + (double)0.2F);
+					}
+				}
+			}
+
+			float[] var12 = this.lastFireFrame;
+			this.lastFireFrame = this.currentFireFrame;
+			this.currentFireFrame = var12;
+
+			for(var1 = 0; var1 < 256; ++var1) {
+				float var13 = this.currentFireFrame[var1] * 1.8F;
+				if(var13 > 1.0F) {
+					var13 = 1.0F;
+				}
+
+				if(var13 < 0.0F) {
+					var13 = 0.0F;
+				}
+
+				var3 = (int)(var13 * 155.0F + 100.0F);
+				var4 = (int)(var13 * var13 * 255.0F);
+				int var7 = (int)(var13 * var13 * var13 * var13 * var13 * var13 * var13 * var13 * var13 * var13 * 255.0F);
+				short var8 = 255;
+				if(var13 < 0.5F) {
+					var8 = 0;
+				}
+
+				var2 = (var13 - 0.5F) * 2.0F;
+				if(this.anaglyphEnabled) {
+					int var9 = (var3 * 30 + var4 * 59 + var7 * 11) / 100;
+					int var10 = (var3 * 30 + var4 * 70) / 100;
+					int var11 = (var3 * 30 + var7 * 70) / 100;
+					var3 = var9;
+					var4 = var10;
+					var7 = var11;
+				}
+
+				this.imageData[var1 * 4 + 0] = (byte)var3;
+				this.imageData[var1 * 4 + 1] = (byte)var4;
+				this.imageData[var1 * 4 + 2] = (byte)var7;
+				this.imageData[var1 * 4 + 3] = (byte)var8;
+			}
+
+		}
 	}
 }
--- /dev/null
+++ net/minecraft/src/Packet72.java
@@ -1,0 +1,39 @@
+package net.minecraft.src;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+
+public class Packet72 extends Packet {
+	public String field_8485_902s024v0T40AC31By11eacj2G9ftX6I7oIimZe17emPq6w323bj398K2v81 = "";
+	public int field_8486_8TA6UV69W9P3wmw711p172l3T8s0Ptbd25wMM71jF6fUH6cq4n64JE8jvFIR = 5000;
+
+	public Packet72() {
+	}
+
+	public Packet72(String var1, int var2) {
+		this.field_8485_902s024v0T40AC31By11eacj2G9ftX6I7oIimZe17emPq6w323bj398K2v81 = var1;
+		this.field_8486_8TA6UV69W9P3wmw711p172l3T8s0Ptbd25wMM71jF6fUH6cq4n64JE8jvFIR = var2;
+	}
+
+	public void readPacketData(DataInputStream var1) throws IOException {
+		this.field_8485_902s024v0T40AC31By11eacj2G9ftX6I7oIimZe17emPq6w323bj398K2v81 = var1.readUTF();
+		this.field_8486_8TA6UV69W9P3wmw711p172l3T8s0Ptbd25wMM71jF6fUH6cq4n64JE8jvFIR = var1.readInt();
+	}
+
+	public void writePacket(DataOutputStream var1) throws IOException {
+		var1.writeUTF(this.field_8485_902s024v0T40AC31By11eacj2G9ftX6I7oIimZe17emPq6w323bj398K2v81);
+		var1.writeInt(this.field_8486_8TA6UV69W9P3wmw711p172l3T8s0Ptbd25wMM71jF6fUH6cq4n64JE8jvFIR);
+	}
+
+	public void processPacket(NetHandler var1) {
+		if(var1 instanceof NetClientHandler) {
+			((NetClientHandler)var1).func_9565_0Y8HJW4TgPPE2z549sYe11V6j33RgAx30G8Wqd6O07L94mxIBzIR8Xpj72GI(this);
+		}
+
+	}
+
+	public int getPacketSize() {
+		return this.field_8485_902s024v0T40AC31By11eacj2G9ftX6I7oIimZe17emPq6w323bj398K2v81.getBytes().length + 4;
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandSummonSpacemen.java
@@ -1,0 +1,28 @@
+package net.minecraft.src;
+
+class CommandSummonSpacemen extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8608_7l3Lr6cDe8dboGdqN9K92FAu6pCgjQc6O84CjP4iz8X4n5T3515rtyf5WkFe;
+    
+    CommandSummonSpacemen(final CommandManager abb) {
+        this.field_8608_7l3Lr6cDe8dboGdqN9K92FAu6pCgjQc6O84CjP4iz8X4n5T3515rtyf5WkFe = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        for (int i = 0; i < (int)arr[0]; ++i) {
+            final EntityAmoung entity = new EntityAmoung(InputHandler.mc.theWorld);
+            entity.setPosition(InputHandler.mc.thePlayer.posX, InputHandler.mc.thePlayer.posY, InputHandler.mc.thePlayer.posZ);
+            InputHandler.mc.theWorld.spawnEntityInWorld(entity);
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+    
+    @Override
+    public boolean func_8542_97Qrz8937ERoO4A9Ve3xu7D4CcYz03IoW3R8sqwuQi138x1Vj1512EE2AEAd() {
+        return false;
+    }
+}
--- net/minecraft/src/EntityMinecart.java
+++ net/minecraft/src/EntityMinecart.java
@@ -112,30 +112,29 @@
 	}
 
 	public void onUpdate() {
-		double var7;
+		double var1;
 		if(this.worldObj.multiplayerWorld) {
 			if(this.turnProgress > 0) {
-				double var41 = this.posX + (this.minecartX - this.posX) / (double)this.turnProgress;
-				double var42 = this.posY + (this.minecartY - this.posY) / (double)this.turnProgress;
-				double var5 = this.posZ + (this.minecartZ - this.posZ) / (double)this.turnProgress;
-
-				for(var7 = this.minecartYaw - (double)this.rotationYaw; var7 < -180.0D; var7 += 360.0D) {
-				}
-
-				while(var7 >= 180.0D) {
-					var7 -= 360.0D;
-				}
-
-				this.rotationYaw = (float)((double)this.rotationYaw + var7 / (double)this.turnProgress);
+				double var3 = this.posX + (this.minecartX - this.posX) / (double)this.turnProgress;
+				double var5 = this.posY + (this.minecartY - this.posY) / (double)this.turnProgress;
+				double var7 = this.posZ + (this.minecartZ - this.posZ) / (double)this.turnProgress;
+
+				for(var1 = this.minecartYaw - (double)this.rotationYaw; var1 < -180.0D; var1 += 360.0D) {
+				}
+
+				while(var1 >= 180.0D) {
+					var1 -= 360.0D;
+				}
+
+				this.rotationYaw = (float)((double)this.rotationYaw + var1 / (double)this.turnProgress);
 				this.rotationPitch = (float)((double)this.rotationPitch + (this.minecartPitch - (double)this.rotationPitch) / (double)this.turnProgress);
 				--this.turnProgress;
-				this.setPosition(var41, var42, var5);
+				this.setPosition(var3, var5, var7);
 				this.setRotation(this.rotationYaw, this.rotationPitch);
 			} else {
 				this.setPosition(this.posX, this.posY, this.posZ);
 				this.setRotation(this.rotationYaw, this.rotationPitch);
 			}
-
 		} else {
 			if(this.timeSinceHit > 0) {
 				--this.timeSinceHit;
@@ -149,38 +148,38 @@
 			this.prevPosY = this.posY;
 			this.prevPosZ = this.posZ;
 			this.motionY -= (double)0.04F;
-			int var1 = MathHelper.floor_double(this.posX);
-			int var2 = MathHelper.floor_double(this.posY);
-			int var3 = MathHelper.floor_double(this.posZ);
-			if(this.worldObj.getBlockId(var1, var2 - 1, var3) == Block.minecartTrack.blockID) {
-				--var2;
+			int var43 = MathHelper.floor_double(this.posX);
+			int var4 = MathHelper.floor_double(this.posY);
+			int var44 = MathHelper.floor_double(this.posZ);
+			if(this.worldObj.getBlockId(var43, var4 - 1, var44) == Block.minecartTrack.blockID) {
+				--var4;
 			}
 
-			double var4 = 0.4D;
-			boolean var6 = false;
-			var7 = 1.0D / 128.0D;
-			if(this.worldObj.getBlockId(var1, var2, var3) == Block.minecartTrack.blockID) {
+			double var6 = 0.4D;
+			boolean var8 = false;
+			var1 = 1.0D / 128.0D;
+			if(this.worldObj.getBlockId(var43, var4, var44) == Block.minecartTrack.blockID) {
 				Vec3D var9 = this.getPos(this.posX, this.posY, this.posZ);
-				int var10 = this.worldObj.getBlockMetadata(var1, var2, var3);
-				this.posY = (double)var2;
+				int var10 = this.worldObj.getBlockMetadata(var43, var4, var44);
+				this.posY = (double)var4;
 				if(var10 >= 2 && var10 <= 5) {
-					this.posY = (double)(var2 + 1);
+					this.posY = (double)(var4 + 1);
 				}
 
 				if(var10 == 2) {
-					this.motionX -= var7;
+					this.motionX -= var1;
 				}
 
 				if(var10 == 3) {
-					this.motionX += var7;
+					this.motionX += var1;
 				}
 
 				if(var10 == 4) {
-					this.motionZ += var7;
+					this.motionZ += var1;
 				}
 
 				if(var10 == 5) {
-					this.motionZ -= var7;
+					this.motionZ -= var1;
 				}
 
 				int[][] var11 = matrix[var10];
@@ -197,21 +196,21 @@
 				this.motionX = var20 * var12 / var16;
 				this.motionZ = var20 * var14 / var16;
 				double var22 = 0.0D;
-				double var24 = (double)var1 + 0.5D + (double)var11[0][0] * 0.5D;
-				double var26 = (double)var3 + 0.5D + (double)var11[0][2] * 0.5D;
-				double var28 = (double)var1 + 0.5D + (double)var11[1][0] * 0.5D;
-				double var30 = (double)var3 + 0.5D + (double)var11[1][2] * 0.5D;
+				double var24 = (double)var43 + 0.5D + (double)var11[0][0] * 0.5D;
+				double var26 = (double)var44 + 0.5D + (double)var11[0][2] * 0.5D;
+				double var28 = (double)var43 + 0.5D + (double)var11[1][0] * 0.5D;
+				double var30 = (double)var44 + 0.5D + (double)var11[1][2] * 0.5D;
 				var12 = var28 - var24;
 				var14 = var30 - var26;
 				double var32;
 				double var34;
 				double var36;
 				if(var12 == 0.0D) {
-					this.posX = (double)var1 + 0.5D;
-					var22 = this.posZ - (double)var3;
+					this.posX = (double)var43 + 0.5D;
+					var22 = this.posZ - (double)var44;
 				} else if(var14 == 0.0D) {
-					this.posZ = (double)var3 + 0.5D;
-					var22 = this.posX - (double)var1;
+					this.posZ = (double)var44 + 0.5D;
+					var22 = this.posX - (double)var43;
 				} else {
 					var32 = this.posX - var24;
 					var34 = this.posZ - var26;
@@ -229,26 +228,26 @@
 					var34 *= 0.75D;
 				}
 
-				if(var32 < -var4) {
-					var32 = -var4;
-				}
-
-				if(var32 > var4) {
-					var32 = var4;
-				}
-
-				if(var34 < -var4) {
-					var34 = -var4;
-				}
-
-				if(var34 > var4) {
-					var34 = var4;
+				if(var32 < -var6) {
+					var32 = -var6;
+				}
+
+				if(var32 > var6) {
+					var32 = var6;
+				}
+
+				if(var34 < -var6) {
+					var34 = -var6;
+				}
+
+				if(var34 > var6) {
+					var34 = var6;
 				}
 
 				this.moveEntity(var32, 0.0D, var34);
-				if(var11[0][1] != 0 && MathHelper.floor_double(this.posX) - var1 == var11[0][0] && MathHelper.floor_double(this.posZ) - var3 == var11[0][2]) {
+				if(var11[0][1] != 0 && MathHelper.floor_double(this.posX) - var43 == var11[0][0] && MathHelper.floor_double(this.posZ) - var44 == var11[0][2]) {
 					this.setPosition(this.posX, this.posY + (double)var11[0][1], this.posZ);
-				} else if(var11[1][1] != 0 && MathHelper.floor_double(this.posX) - var1 == var11[1][0] && MathHelper.floor_double(this.posZ) - var3 == var11[1][2]) {
+				} else if(var11[1][1] != 0 && MathHelper.floor_double(this.posX) - var43 == var11[1][0] && MathHelper.floor_double(this.posZ) - var44 == var11[1][2]) {
 					this.setPosition(this.posX, this.posY + (double)var11[1][1], this.posZ);
 				}
 
@@ -260,7 +259,7 @@
 					if(this.minecartType == 2) {
 						var36 = (double)MathHelper.sqrt_double(this.pushX * this.pushX + this.pushZ * this.pushZ);
 						if(var36 > 0.01D) {
-							var6 = true;
+							var8 = true;
 							this.pushX /= var36;
 							this.pushZ /= var36;
 							double var38 = 0.04D;
@@ -281,31 +280,31 @@
 					this.motionZ *= (double)0.96F;
 				}
 
-				Vec3D var46 = this.getPos(this.posX, this.posY, this.posZ);
-				if(var46 != null && var9 != null) {
-					double var37 = (var9.yCoord - var46.yCoord) * 0.05D;
+				Vec3D var48 = this.getPos(this.posX, this.posY, this.posZ);
+				if(var48 != null && var9 != null) {
+					double var39 = (var9.yCoord - var48.yCoord) * 0.05D;
 					var20 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
 					if(var20 > 0.0D) {
-						this.motionX = this.motionX / var20 * (var20 + var37);
-						this.motionZ = this.motionZ / var20 * (var20 + var37);
+						this.motionX = this.motionX / var20 * (var20 + var39);
+						this.motionZ = this.motionZ / var20 * (var20 + var39);
 					}
 
-					this.setPosition(this.posX, var46.yCoord, this.posZ);
+					this.setPosition(this.posX, var48.yCoord, this.posZ);
 				}
 
-				int var47 = MathHelper.floor_double(this.posX);
-				int var48 = MathHelper.floor_double(this.posZ);
-				if(var47 != var1 || var48 != var3) {
+				int var49 = MathHelper.floor_double(this.posX);
+				int var40 = MathHelper.floor_double(this.posZ);
+				if(var49 != var43 || var40 != var44) {
 					var20 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
-					this.motionX = var20 * (double)(var47 - var1);
-					this.motionZ = var20 * (double)(var48 - var3);
+					this.motionX = var20 * (double)(var49 - var43);
+					this.motionZ = var20 * (double)(var40 - var44);
 				}
 
 				if(this.minecartType == 2) {
-					double var39 = (double)MathHelper.sqrt_double(this.pushX * this.pushX + this.pushZ * this.pushZ);
-					if(var39 > 0.01D && this.motionX * this.motionX + this.motionZ * this.motionZ > 0.001D) {
-						this.pushX /= var39;
-						this.pushZ /= var39;
+					double var41 = (double)MathHelper.sqrt_double(this.pushX * this.pushX + this.pushZ * this.pushZ);
+					if(var41 > 0.01D && this.motionX * this.motionX + this.motionZ * this.motionZ > 0.001D) {
+						this.pushX /= var41;
+						this.pushZ /= var41;
 						if(this.pushX * this.motionX + this.pushZ * this.motionZ < 0.0D) {
 							this.pushX = 0.0D;
 							this.pushZ = 0.0D;
@@ -316,20 +315,20 @@
 					}
 				}
 			} else {
-				if(this.motionX < -var4) {
-					this.motionX = -var4;
-				}
-
-				if(this.motionX > var4) {
-					this.motionX = var4;
-				}
-
-				if(this.motionZ < -var4) {
-					this.motionZ = -var4;
-				}
-
-				if(this.motionZ > var4) {
-					this.motionZ = var4;
+				if(this.motionX < -var6) {
+					this.motionX = -var6;
+				}
+
+				if(this.motionX > var6) {
+					this.motionX = var6;
+				}
+
+				if(this.motionZ < -var6) {
+					this.motionZ = -var6;
+				}
+
+				if(this.motionZ > var6) {
+					this.motionZ = var6;
 				}
 
 				if(this.onGround) {
@@ -347,10 +346,10 @@
 			}
 
 			this.rotationPitch = 0.0F;
-			double var43 = this.prevPosX - this.posX;
-			double var44 = this.prevPosZ - this.posZ;
-			if(var43 * var43 + var44 * var44 > 0.001D) {
-				this.rotationYaw = (float)(Math.atan2(var44, var43) * 180.0D / Math.PI);
+			double var45 = this.prevPosX - this.posX;
+			double var46 = this.prevPosZ - this.posZ;
+			if(var45 * var45 + var46 * var46 > 0.001D) {
+				this.rotationYaw = (float)(Math.atan2(var46, var45) * 180.0D / Math.PI);
 				if(this.isInReverse) {
 					this.rotationYaw += 180.0F;
 				}
@@ -372,8 +371,8 @@
 			this.setRotation(this.rotationYaw, this.rotationPitch);
 			List var15 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox.expand((double)0.2F, 0.0D, (double)0.2F));
 			if(var15 != null && var15.size() > 0) {
-				for(int var45 = 0; var45 < var15.size(); ++var45) {
-					Entity var17 = (Entity)var15.get(var45);
+				for(int var47 = 0; var47 < var15.size(); ++var47) {
+					Entity var17 = (Entity)var15.get(var47);
 					if(var17 != this.riddenByEntity && var17.canBePushed() && var17 instanceof EntityMinecart) {
 						var17.applyEntityCollision(this);
 					}
@@ -384,7 +383,7 @@
 				this.riddenByEntity = null;
 			}
 
-			if(var6 && this.rand.nextInt(4) == 0) {
+			if(var8 && this.rand.nextInt(4) == 0) {
 				--this.fuel;
 				if(this.fuel < 0) {
 					this.pushX = this.pushZ = 0.0D;
@@ -392,8 +391,8 @@
 
 				this.worldObj.spawnParticle("largesmoke", this.posX, this.posY + 0.8D, this.posZ, 0.0D, 0.0D, 0.0D);
 			}
-
 		}
+
 	}
 
 	public Vec3D getPosOffset(double var1, double var3, double var5, double var7) {
@@ -591,8 +590,8 @@
 					var1.addVelocity(var2 / 4.0D, 0.0D, var4 / 4.0D);
 				}
 			}
-
 		}
+
 	}
 
 	public int getSizeInventory() {
--- net/minecraft/src/EntityPainting.java
+++ net/minecraft/src/EntityPainting.java
@@ -10,6 +10,7 @@
 	private int yPosition;
 	private int zPosition;
 	public EnumArt art;
+	public int dir;
 
 	public EntityPainting(World var1) {
 		super(var1);
@@ -24,8 +25,9 @@
 		this.xPosition = var2;
 		this.yPosition = var3;
 		this.zPosition = var4;
+		this.dir = var5;
 		ArrayList var6 = new ArrayList();
-		EnumArt[] var7 = EnumArt.values();
+		EnumArt[] var7 = EnumArt.func_11496_9D6dOuxURsoKgZJGzy4t6u99UDf0ap9v2NhRK3xa7zoR3mTWD0560ktX85Mr();
 		int var8 = var7.length;
 
 		for(int var9 = 0; var9 < var8; ++var9) {
@@ -39,11 +41,17 @@
 
 		if(var6.size() > 0) {
 			this.art = (EnumArt)var6.get(this.rand.nextInt(var6.size()));
+			InputHandler.mc.displayGuiScreen(new GuiPickPainting(var6, this));
 		}
 
 		this.setDirection(var5);
 	}
 
+	public void setArt(EnumArt var1) {
+		this.art = var1;
+		this.setDirection(this.dir);
+	}
+
 	public void setDirection(int var1) {
 		this.direction = var1;
 		this.prevRotationYaw = this.rotationYaw = (float)(var1 * 90);
@@ -141,14 +149,14 @@
 
 			var4 = MathHelper.floor_double(this.posY - (double)((float)this.art.sizeY / 32.0F));
 
-			int var7;
-			for(int var6 = 0; var6 < var1; ++var6) {
-				for(var7 = 0; var7 < var2; ++var7) {
+			int var6;
+			for(int var7 = 0; var7 < var1; ++var7) {
+				for(var6 = 0; var6 < var2; ++var6) {
 					Material var8;
 					if(this.direction != 0 && this.direction != 2) {
-						var8 = this.worldObj.getBlockMaterial(this.xPosition, var4 + var7, var5 + var6);
+						var8 = this.worldObj.getBlockMaterial(this.xPosition, var4 + var6, var5 + var7);
 					} else {
-						var8 = this.worldObj.getBlockMaterial(var3 + var6, var4 + var7, this.zPosition);
+						var8 = this.worldObj.getBlockMaterial(var3 + var7, var4 + var6, this.zPosition);
 					}
 
 					if(!var8.isSolid()) {
@@ -159,8 +167,8 @@
 
 			List var9 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox);
 
-			for(var7 = 0; var7 < var9.size(); ++var7) {
-				if(var9.get(var7) instanceof EntityPainting) {
+			for(var6 = 0; var6 < var9.size(); ++var6) {
+				if(var9.get(var6) instanceof EntityPainting) {
 					return false;
 				}
 			}
@@ -193,7 +201,7 @@
 		this.yPosition = var1.getInteger("TileY");
 		this.zPosition = var1.getInteger("TileZ");
 		String var2 = var1.getString("Motive");
-		EnumArt[] var3 = EnumArt.values();
+		EnumArt[] var3 = EnumArt.func_11496_9D6dOuxURsoKgZJGzy4t6u99UDf0ap9v2NhRK3xa7zoR3mTWD0560ktX85Mr();
 		int var4 = var3.length;
 
 		for(int var5 = 0; var5 < var4; ++var5) {
@@ -204,7 +212,7 @@
 		}
 
 		if(this.art == null) {
-			this.art = EnumArt.Kebab;
+			this.art = EnumArt.Phoenix;
 		}
 
 		this.setDirection(this.direction);
--- /dev/null
+++ net/minecraft/src/pongokilldeathshitmachine.java
@@ -1,0 +1,44 @@
+package net.minecraft.src;
+
+public class pongokilldeathshitmachine<T extends Entity> extends EntityModel<T> {
+	public static final ModelLayerLocation LAYER_LOCATION = new ModelLayerLocation(new ResourceLocation("modid", "custom_model"), "main");
+	private final ModelPart Head;
+	private final ModelPart Body;
+	private final ModelPart RightArm;
+	private final ModelPart LeftArm;
+	private final ModelPart RightLeg;
+	private final ModelPart LeftLeg;
+
+	public pongokilldeathshitmachine(ModelPart var1) {
+		this.Head = var1.getChild("Head");
+		this.Body = var1.getChild("Body");
+		this.RightArm = var1.getChild("RightArm");
+		this.LeftArm = var1.getChild("LeftArm");
+		this.RightLeg = var1.getChild("RightLeg");
+		this.LeftLeg = var1.getChild("LeftLeg");
+	}
+
+	public static LayerDefinition createBodyLayer() {
+		MeshDefinition var0 = new MeshDefinition();
+		PartDefinition var1 = var0.getRoot();
+		var1.addOrReplaceChild("Head", CubeListBuilder.create().texOffs(0, 0).addBox(-4.0F, -6.0F, -4.0F, 8.0F, 6.0F, 8.0F, new CubeDeformation(0.0F)).texOffs(0, 30).addBox(-3.0F, -15.0F, -3.0F, 6.0F, 9.0F, 6.0F, new CubeDeformation(0.0F)).texOffs(24, 30).addBox(-2.0F, -28.0F, -2.0F, 4.0F, 13.0F, 4.0F, new CubeDeformation(0.0F)).texOffs(24, 0).addBox(-6.0F, -33.0F, -1.0F, 12.0F, 5.0F, 2.0F, new CubeDeformation(0.0F)).texOffs(32, 7).addBox(-8.0F, -26.0F, -1.0F, 6.0F, 5.0F, 2.0F, new CubeDeformation(0.0F)).texOffs(32, 7).mirror().addBox(2.0F, -26.0F, -1.0F, 6.0F, 5.0F, 2.0F, new CubeDeformation(0.0F)).mirror(false), PartPose.offset(0.0F, 0.0F, -1.0F));
+		var1.addOrReplaceChild("Body", CubeListBuilder.create().texOffs(24, 14).addBox(-4.0F, 0.0F, -2.0F, 8.0F, 12.0F, 4.0F, new CubeDeformation(0.0F)).texOffs(0, 14).addBox(-4.0F, 0.0F, -2.0F, 8.0F, 12.0F, 4.0F, new CubeDeformation(0.25F)), PartPose.offset(0.0F, 0.0F, 0.0F));
+		var1.addOrReplaceChild("RightArm", CubeListBuilder.create().texOffs(52, 42).addBox(-3.0F, -2.0F, -1.0F, 4.0F, 12.0F, 4.0F, new CubeDeformation(0.0F)).texOffs(48, 3).addBox(-3.0F, -2.0F, -1.0F, 4.0F, 12.0F, 4.0F, new CubeDeformation(0.25F)), PartPose.offset(-5.0F, 2.0F, 0.0F));
+		var1.addOrReplaceChild("LeftArm", CubeListBuilder.create().texOffs(16, 47).addBox(-1.0F, -2.0F, -1.0F, 4.0F, 12.0F, 4.0F, new CubeDeformation(0.0F)).texOffs(36, 46).addBox(-1.0F, -2.0F, -1.0F, 4.0F, 12.0F, 4.0F, new CubeDeformation(0.25F)), PartPose.offset(5.0F, 2.0F, 0.0F));
+		var1.addOrReplaceChild("RightLeg", CubeListBuilder.create().texOffs(0, 45).addBox(-2.0F, 0.0F, -2.0F, 4.0F, 12.0F, 4.0F, new CubeDeformation(0.0F)), PartPose.offset(-1.9F, 12.0F, 0.0F));
+		var1.addOrReplaceChild("LeftLeg", CubeListBuilder.create().texOffs(40, 30).addBox(-2.0F, 0.0F, -2.0F, 4.0F, 12.0F, 4.0F, new CubeDeformation(0.0F)), PartPose.offset(1.9F, 12.0F, 0.0F));
+		return LayerDefinition.create(var0, 128, 128);
+	}
+
+	public void setupAnim(T var1, float var2, float var3, float var4, float var5, float var6) {
+	}
+
+	public void renderToBuffer(PoseStack var1, VertexConsumer var2, int var3, int var4, float var5, float var6, float var7, float var8) {
+		this.Head.render(var1, var2, var3, var4, var5, var6, var7, var8);
+		this.Body.render(var1, var2, var3, var4, var5, var6, var7, var8);
+		this.RightArm.render(var1, var2, var3, var4, var5, var6, var7, var8);
+		this.LeftArm.render(var1, var2, var3, var4, var5, var6, var7, var8);
+		this.RightLeg.render(var1, var2, var3, var4, var5, var6, var7, var8);
+		this.LeftLeg.render(var1, var2, var3, var4, var5, var6, var7, var8);
+	}
+}
--- /dev/null
+++ net/minecraft/src/AdaptiveHandler.java
@@ -1,0 +1,155 @@
+package net.minecraft.src;
+
+public class AdaptiveHandler extends Thread {
+	public DS5Connection ds5 = new DS5Connection();
+	public boolean DS5enabled = false;
+	public DS5Packet ds5_conf_default = new DS5Packet();
+	public DS5Packet ds5_conf_ingame_aimblock = new DS5Packet();
+	public DS5Packet ds5_conf_ingame_aimentity = new DS5Packet();
+	public DS5Packet ds5_conf_ingame_aimnone = new DS5Packet();
+	public long lastPacketSent = 0L;
+	public int lastPacketType = -1;
+
+	public void ConstructDefaultPacket() {
+		this.ds5_conf_default.AddInstruction(new DS5InstrRGBUpdate(0, 0, 0, 255));
+		this.ds5_conf_default.AddInstruction(new DS5InstrPlayerUpdate(0, false, false, true, false, false));
+		this.ds5_conf_default.AddInstruction(new DS5InstrTriggerUpdate(0, TriggerIndex.Left, TriggerMode.Normal, new int[]{0}));
+		this.ds5_conf_default.AddInstruction(new DS5InstrTriggerUpdate(0, TriggerIndex.Right, TriggerMode.Normal, new int[]{0}));
+		this.ds5_conf_ingame_aimblock.AddInstruction(new DS5InstrRGBUpdate(0, 0, 0, 0));
+		this.ds5_conf_ingame_aimblock.AddInstruction(new DS5InstrPlayerUpdate(0, false, false, true, false, false));
+		this.ds5_conf_ingame_aimblock.AddInstruction(new DS5InstrTriggerUpdate(0, TriggerIndex.Left, TriggerMode.VibrateTrigger, new int[]{3}));
+		this.ds5_conf_ingame_aimblock.AddInstruction(new DS5InstrTriggerUpdate(0, TriggerIndex.Right, TriggerMode.AutomaticGun, new int[]{4, 8, 5}));
+		this.ds5_conf_ingame_aimentity.AddInstruction(new DS5InstrRGBUpdate(0, 0, 0, 0));
+		this.ds5_conf_ingame_aimentity.AddInstruction(new DS5InstrPlayerUpdate(0, false, false, true, false, false));
+		this.ds5_conf_ingame_aimentity.AddInstruction(new DS5InstrTriggerUpdate(0, TriggerIndex.Left, TriggerMode.Normal, new int[]{0}));
+		this.ds5_conf_ingame_aimentity.AddInstruction(new DS5InstrTriggerUpdate(0, TriggerIndex.Right, TriggerMode.Bow, new int[]{3, 6, 1, 1}));
+		this.ds5_conf_ingame_aimnone.AddInstruction(new DS5InstrRGBUpdate(0, 0, 0, 0));
+		this.ds5_conf_ingame_aimnone.AddInstruction(new DS5InstrPlayerUpdate(0, false, false, true, false, false));
+		this.ds5_conf_ingame_aimnone.AddInstruction(new DS5InstrTriggerUpdate(0, TriggerIndex.Left, TriggerMode.Normal, new int[]{0}));
+		this.ds5_conf_ingame_aimnone.AddInstruction(new DS5InstrTriggerUpdate(0, TriggerIndex.Right, TriggerMode.Normal, new int[]{0}));
+	}
+
+	public void UpdatePLEDBasedOnDiff(DS5Packet var1) {
+		DS5InstrPlayerUpdate var7 = (DS5InstrPlayerUpdate)var1.ds5Instructions.get(1);
+		boolean var2;
+		boolean var3;
+		boolean var4;
+		boolean var5;
+		boolean var6;
+		switch(InputHandler.mc.options.difficulty) {
+		case 0:
+			var6 = false;
+			var5 = false;
+			var4 = false;
+			var3 = false;
+			var2 = true;
+			break;
+		case 1:
+			var6 = false;
+			var2 = false;
+			var3 = false;
+			var5 = true;
+			var4 = true;
+			break;
+		case 2:
+			var5 = false;
+			var4 = false;
+			var6 = true;
+			var2 = true;
+			var3 = true;
+			break;
+		case 3:
+			var2 = false;
+			var6 = true;
+			var5 = true;
+			var4 = true;
+			var3 = true;
+			break;
+		case 4:
+			var6 = true;
+			var5 = true;
+			var2 = true;
+			var4 = true;
+			var3 = true;
+			break;
+		default:
+			var6 = false;
+			var5 = false;
+			var2 = false;
+			var4 = false;
+			var3 = false;
+		}
+
+		var7.p1 = var3;
+		var7.p2 = var4;
+		var7.p3 = var2;
+		var7.p4 = var5;
+		var7.p5 = var6;
+	}
+
+	public void UpdateIngamePacket(DS5Packet var1) {
+		DS5InstrRGBUpdate var2 = (DS5InstrRGBUpdate)var1.ds5Instructions.get(0);
+		this.UpdatePLEDBasedOnDiff(var1);
+		if(InputHandler.mc.options.difficulty == 4 && (float)InputHandler.mc.thePlayer.health != 0.0F) {
+			float var5 = (float)(System.currentTimeMillis() % 2000L) / 1000.0F;
+			float var4 = 0.5F + (var5 <= 1.0F ? 0.5F * var5 : (1.0F - (var5 - 1.0F)) * 0.5F);
+			var2.r = var2.g = var2.b = (int)(255.0F * var4);
+		} else if((float)InputHandler.mc.thePlayer.health <= 4.0F && System.currentTimeMillis() % 2000L >= 1000L) {
+			var2.b = 0;
+			var2.g = 0;
+			var2.r = 0;
+		} else {
+			float[] var3 = Ext1605Utils.BlendColorA((float)InputHandler.mc.thePlayer.health / 20.0F, 0.0F, 1.0F, 0.0F, 1.0F, 0.0F, 0.0F);
+			var2.r = (int)(var3[0] * 255.0F);
+			var2.g = (int)(var3[1] * 255.0F);
+			var2.b = (int)(var3[2] * 255.0F);
+		}
+	}
+
+	public void SendPacket() {
+		if(System.currentTimeMillis() - this.lastPacketSent > 16L) {
+			this.lastPacketSent = System.currentTimeMillis();
+			if((InputHandler.mc == null || InputHandler.mc.thePlayer == null) && this.lastPacketType != 0) {
+				this.ds5.Send(this.ds5_conf_default);
+				this.lastPacketType = 0;
+			} else if(InputHandler.mc.thePlayer != null) {
+				this.lastPacketType = 1;
+				DS5Packet var1 = null;
+				if(InputHandler.mc.objectMouseOver != null) {
+					switch(InputHandler.mc.objectMouseOver.typeOfHit) {
+					case 0:
+						var1 = this.ds5_conf_ingame_aimblock;
+						break;
+					case 1:
+						var1 = this.ds5_conf_ingame_aimentity;
+					}
+				} else {
+					var1 = this.ds5_conf_ingame_aimnone;
+				}
+
+				this.UpdateIngamePacket(var1);
+				this.ds5.Send(var1);
+			}
+		}
+
+	}
+
+	public AdaptiveHandler() {
+		this.ConstructDefaultPacket();
+	}
+
+	public void run() {
+		System.out.println("");
+		if(this.ds5.Connect()) {
+			while(true) {
+				this.SendPacket();
+
+				try {
+					Thread.sleep(64L);
+				} catch (InterruptedException var2) {
+				}
+			}
+		}
+
+	}
+}
--- /dev/null
+++ net/minecraft/src/CommandFrrnSavedemo.java
@@ -1,0 +1,25 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+import java.util.Calendar;
+
+class CommandFrrnSavedemo extends CommandUnknownClass {
+    final /* synthetic */ CommandManager field_8586_46R7XQJL1SRYp5269tkA722IOqsTg1l0BgiQa62tyNUuzoo42x19R12o9BL6;
+    
+    CommandFrrnSavedemo(final CommandManager abb) {
+        this.field_8586_46R7XQJL1SRYp5269tkA722IOqsTg1l0BgiQa62tyNUuzoo42x19R12o9BL6 = abb;
+    }
+    
+    @Override
+    public void func_8545_7ch4Pw6p1x7azbUH9Qwnz92Crvg5JGAcpO0G8ZjP5BCE61ulezRs21K4E3PJ(final Object... arr) {
+        if (InputHandler.mc.thePlayer instanceof EntityPlayerFreerunClient) {
+            final Calendar instance = Calendar.getInstance();
+            ((EntityPlayerFreerunClient)InputHandler.mc.thePlayer).field_9077_6828xUDuW4HE2czdD77Ktkps1BKQr55aauI7IbsAkcX5iy1397o0JfVUA615.func_12199_0T1EBqlwN0r6zrh3Sg0XWHZ8YGwKZ7S93cTMLKw1r2Y6V9Bl9qyCtXn0g300(Minecraft.getMinecraftDir() + "/freeerundemo-" + ((FreerunWorld)InputHandler.mc.theWorld).levelName.replace('\\', '_').replace('/', '_') + "-" + instance.get(5) + "-" + (instance.get(2) + 1) + "-" + instance.get(1) + "@" + instance.get(11) + "-" + instance.get(12) + "-" + instance.get(13) + ".mcdem");
+        }
+    }
+    
+    @Override
+    public String func_8543_4MFIG4D788SK3R9CE2tuPCaZ90L434R160V0H865ocZV41Cg5bgqM2Dx2FDe() {
+        return "~exec";
+    }
+}
--- /dev/null
+++ net/minecraft/src/GenStonePlatform.java
@@ -1,0 +1,54 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class GenStonePlatform extends WorldGenerator {
+	public void buildSphere(World var1, int var2, int var3, int var4, int var5, int var6) {
+		byte var7 = 2;
+
+		for(int var8 = -var5; var8 <= var5; ++var8) {
+			for(int var9 = -var7; var9 <= var7; ++var9) {
+				for(int var10 = -var6; var10 <= var6; ++var10) {
+					if(var8 * var8 + var9 * var9 + var10 * var10 <= var5 * var5 && (var1.getBlockId(var2 + var8, var3 + var9, var4 + var10) == Block.waterMoving.blockID || var1.getBlockId(var2 + var8, var3 + var9, var4 + var10) == Block.waterStill.blockID)) {
+						var1.setBlock(var2 + var8, var3 + var9, var4 + var10, ExtBlocks.Limestone.blockID);
+					}
+				}
+			}
+		}
+
+	}
+
+	public static boolean isChunkWaterOnly(World var0, int var1, int var2) {
+		for(int var3 = 0; var3 != 16; ++var3) {
+			for(int var4 = 0; var4 != 16; ++var4) {
+				if(var0.getBlockId(var1 + var3, 63, var2 + var4) != Block.waterStill.blockID || var0.getBlockId(var1 + var3, 62, var2 + var4) != Block.waterStill.blockID) {
+					return false;
+				}
+			}
+		}
+
+		return true;
+	}
+
+	public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+		if(var4 >= 62 && var4 <= 64) {
+			for(int var6 = 0; var6 < 2; ++var6) {
+				int var7 = var5 + var2.nextInt(8) - var2.nextInt(8);
+				int var8 = var4 + var2.nextInt(4) - var2.nextInt(4);
+				int var9 = var3 + var2.nextInt(8) - var2.nextInt(8);
+				if(var1.getBlockId(var9, var8, var7) == Block.waterStill.blockID) {
+					for(int var10 = var8; (var1.getBlockId(var7, var10, var9) == Block.waterStill.blockID || var1.getBlockId(var7, var10, var9) == Block.waterMoving.blockID) && var10 > 10; --var10) {
+						var1.setBlock(var9, var10, var7, ExtBlocks.Limestone.blockID);
+					}
+
+					boolean var11 = var2.nextInt(100) <= 50;
+					this.buildSphere(var1, var9, var8, var7, 2 + var2.nextInt(var11 ? 6 : 2), 2 + var2.nextInt(!var11 ? 6 : 2));
+				}
+			}
+
+			return true;
+		} else {
+			return false;
+		}
+	}
+}
--- /dev/null
+++ net/minecraft/src/BlockBreakableOld.java
@@ -1,0 +1,19 @@
+package net.minecraft.src;
+
+public class BlockBreakableOld extends BlockOld {
+	private boolean localFlag;
+
+	protected BlockBreakableOld(int var1, int var2, Material var3, boolean var4) {
+		super(var1, var2, var3);
+		this.localFlag = var4;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean shouldSideBeRendered(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+		int var6 = var1.getBlockId(var2, var3, var4);
+		return !this.localFlag && var6 == this.blockID ? false : super.shouldSideBeRendered(var1, var2, var3, var4, var5);
+	}
+}
--- net/minecraft/src/GameSettings.java
+++ net/minecraft/src/GameSettings.java
@@ -7,37 +7,55 @@
 import java.io.PrintWriter;
 import net.minecraft.client.Minecraft;
 import org.lwjgl.input.Keyboard;
+import org.lwjgl.opengl.Display;
+import org.lwjgl.opengl.GL11;
 
 public class GameSettings {
-	private static final String[] RENDER_DISTANCES = new String[]{"FAR", "NORMAL", "SHORT", "TINY"};
-	private static final String[] DIFFICULTY_LEVELS = new String[]{"Peaceful", "Easy", "Normal", "Hard"};
+	private static final String[] RENDER_DISTANCES = new String[]{"HORIZON", "FAR", "NORMAL", "SHORT", "TINY", "DUALITY"};
+	private static final String[] DIFFICULTY_LEVELS = new String[]{"Peaceful", "Easy", "Normal", "Hard", "Frail"};
+	private static final String[] field_11776_0601s25AwsXK8YAli4bSnf611cz09m3nihe6Wcjm69saa6xnYY1LDN3wqX7Q = new String[]{"FAST", "FANCY", "MAX PERF."};
 	public float musicVolume = 1.0F;
 	public float soundVolume = 1.0F;
 	public float mouseSensitivity = 0.5F;
 	public boolean invertMouse = false;
-	public int renderDistance = 0;
+	public int renderDistance = 1;
 	public boolean viewBobbing = true;
 	public boolean anaglyph = false;
 	public boolean limitFramerate = false;
-	public boolean fancyGraphics = true;
+	public int fancyGraphics = 1;
+	public boolean pauseOnUnfocus = true;
+	public float fovModifier = 0.5F;
+	public String field_11745_5cq9PhUp8LROyS1A2CPi3fyxFgmWABb66h72hAC97w32G831S582rHP9QCBn = "Default";
 	public KeyBinding keyBindForward = new KeyBinding("Forward", 17);
 	public KeyBinding keyBindLeft = new KeyBinding("Left", 30);
 	public KeyBinding keyBindBack = new KeyBinding("Back", 31);
 	public KeyBinding keyBindRight = new KeyBinding("Right", 32);
 	public KeyBinding keyBindJump = new KeyBinding("Jump", 57);
-	public KeyBinding keyBindInventory = new KeyBinding("Inventory", 23);
+	public KeyBinding keyBindInventory = new KeyBinding("Inventory", 18);
 	public KeyBinding keyBindDrop = new KeyBinding("Drop", 16);
 	public KeyBinding keyBindChat = new KeyBinding("Chat", 20);
 	public KeyBinding keyBindToggleFog = new KeyBinding("Toggle fog", 33);
-	public KeyBinding keyBindSneak = new KeyBinding("Sneak", 42);
-	public KeyBinding[] keyBindings = new KeyBinding[]{this.keyBindForward, this.keyBindLeft, this.keyBindBack, this.keyBindRight, this.keyBindJump, this.keyBindSneak, this.keyBindDrop, this.keyBindInventory, this.keyBindChat, this.keyBindToggleFog};
+	public KeyBinding keyBindSneak = new KeyBinding("Sneak", 29);
+	public KeyBinding field_11782_8zR7w7M0dCz141EgrKPTyPG0x4be73DnUpm3v39wugYiB00oRfG9xEdOaiDU = new KeyBinding("Dash", 42);
+	public KeyBinding field_11752_0y3J835DcYjJCi69MHQUHF4jrOLdQx1Z31fkAA08625s5FJMK989j345coLD = new KeyBinding("Open console", 41);
+	public KeyBinding[] keyBindings = new KeyBinding[]{this.keyBindForward, this.keyBindLeft, this.keyBindBack, this.keyBindRight, this.keyBindJump, this.keyBindSneak, this.keyBindDrop, this.keyBindInventory, this.keyBindChat, this.keyBindToggleFog, this.field_11782_8zR7w7M0dCz141EgrKPTyPG0x4be73DnUpm3v39wugYiB00oRfG9xEdOaiDU, this.field_11752_0y3J835DcYjJCi69MHQUHF4jrOLdQx1Z31fkAA08625s5FJMK989j345coLD};
 	protected Minecraft mc;
 	private File optionsFile;
-	public int numberOfOptions = 10;
+	public int numberOfOptions = 12;
 	public int difficulty = 2;
 	public boolean thirdPersonView = false;
+	public boolean field_11757_25y1pfK8198W9Tm66cfxM95C77y782yiFE2iJ841XnrF5E5HedVA6X11kaDV = false;
+	public int field_11765_169bjUeR039ZE547KDzev4W9h7Y3Gek7cJSjnnkGJUJ5aJI775p1a4lDV0kq = 2;
+	public boolean field_11770_9UX0ZD1i0y7zcXk28p5XF7G1IawPyo5D04YmR388eC1Hn9D60kx7ZdzLF5D6 = true;
+	public boolean field_11766_2PZeKU2XX6DVQr0PddO0LpfaoOdt40powdd99RK1luEfC8ZBvPLza3Nz4hOa = true;
+	public boolean field_11759_4o1uNoQSrg2YCL3639xyKEbxEX25zI2006R4TI63uHnqbhPYmAy503KepkPl = true;
+	public boolean field_11768_9G35Lw0l42u913RwsiJ8b4oED565ckF66eprV7iUb2pWWs1p6q28aT020T9G = true;
 
 	public GameSettings(Minecraft var1, File var2) {
+		if(var1.func_7236_2E4BZaw4wUzRdqs6H26gijBXYV2x4keaA5V5idykFk39ETvee94J18B7nBcD().toLowerCase().contains("nvidia")) {
+			RENDER_DISTANCES[5] = "Silent Dream";
+		}
+
 		this.mc = var1;
 		this.optionsFile = new File(var2, "options.txt");
 		this.loadOptions();
@@ -70,6 +88,10 @@
 			this.mouseSensitivity = var2;
 		}
 
+		if(var1 == 11) {
+			this.fovModifier = var2;
+		}
+
 	}
 
 	public void setOptionValue(int var1, int var2) {
@@ -78,7 +100,10 @@
 		}
 
 		if(var1 == 4) {
-			this.renderDistance = this.renderDistance + var2 & 3;
+			this.renderDistance = (this.renderDistance + var2) % 6;
+			if(this.renderDistance < 0) {
+				this.renderDistance = !GL11.glGetString(GL11.GL_RENDERER).toLowerCase().contains("graphics media") && !GL11.glGetString(GL11.GL_RENDERER).toLowerCase().contains("4 series express") ? 5 : 4;
+			}
 		}
 
 		if(var1 == 5) {
@@ -92,30 +117,72 @@
 
 		if(var1 == 7) {
 			this.limitFramerate = !this.limitFramerate;
+			Display.setVSyncEnabled(this.limitFramerate);
 		}
 
 		if(var1 == 8) {
-			this.difficulty = this.difficulty + var2 & 3;
+			this.difficulty = (this.difficulty + var2) % 5;
+			System.out.println("Difficulty is now " + this.difficulty);
 		}
 
 		if(var1 == 9) {
-			this.fancyGraphics = !this.fancyGraphics;
-			this.mc.renderGlobal.loadRenderers();
+			--this.fancyGraphics;
+			if(this.fancyGraphics < 0) {
+				this.fancyGraphics = 2;
+			}
+
+			if(this.mc.theWorld != null) {
+				this.mc.renderGlobal.loadRenderers();
+			}
+		}
+
+		if(var1 == 10) {
+			this.pauseOnUnfocus = !this.pauseOnUnfocus;
+		}
+
+		if(var1 == 12) {
+			this.field_11757_25y1pfK8198W9Tm66cfxM95C77y782yiFE2iJ841XnrF5E5HedVA6X11kaDV = !this.field_11757_25y1pfK8198W9Tm66cfxM95C77y782yiFE2iJ841XnrF5E5HedVA6X11kaDV;
+		}
+
+		if(var1 == 20) {
+			++this.field_11765_169bjUeR039ZE547KDzev4W9h7Y3Gek7cJSjnnkGJUJ5aJI775p1a4lDV0kq;
+			this.field_11765_169bjUeR039ZE547KDzev4W9h7Y3Gek7cJSjnnkGJUJ5aJI775p1a4lDV0kq %= 3;
+			this.mc.field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo.func_11380_9r1511Jp0jE144f4MQc4NK82XBZn9UtKQ9T0m3371572UnC4jS4YM9eJUhB9();
+		}
+
+		if(var1 == 21) {
+			this.field_11770_9UX0ZD1i0y7zcXk28p5XF7G1IawPyo5D04YmR388eC1Hn9D60kx7ZdzLF5D6 = !this.field_11770_9UX0ZD1i0y7zcXk28p5XF7G1IawPyo5D04YmR388eC1Hn9D60kx7ZdzLF5D6;
+			this.mc.field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo.func_11380_9r1511Jp0jE144f4MQc4NK82XBZn9UtKQ9T0m3371572UnC4jS4YM9eJUhB9();
+		}
+
+		if(var1 == 22) {
+			this.field_11768_9G35Lw0l42u913RwsiJ8b4oED565ckF66eprV7iUb2pWWs1p6q28aT020T9G = !this.field_11768_9G35Lw0l42u913RwsiJ8b4oED565ckF66eprV7iUb2pWWs1p6q28aT020T9G;
+			this.mc.field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo.func_11380_9r1511Jp0jE144f4MQc4NK82XBZn9UtKQ9T0m3371572UnC4jS4YM9eJUhB9();
+		}
+
+		if(var1 == 23) {
+			this.field_11759_4o1uNoQSrg2YCL3639xyKEbxEX25zI2006R4TI63uHnqbhPYmAy503KepkPl = !this.field_11759_4o1uNoQSrg2YCL3639xyKEbxEX25zI2006R4TI63uHnqbhPYmAy503KepkPl;
+			this.mc.field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo.func_11380_9r1511Jp0jE144f4MQc4NK82XBZn9UtKQ9T0m3371572UnC4jS4YM9eJUhB9();
+		}
+
+		if(var1 == 24) {
+			this.field_11766_2PZeKU2XX6DVQr0PddO0LpfaoOdt40powdd99RK1luEfC8ZBvPLza3Nz4hOa = !this.field_11766_2PZeKU2XX6DVQr0PddO0LpfaoOdt40powdd99RK1luEfC8ZBvPLza3Nz4hOa;
+			this.mc.field_7311_0ef1dw6U62P0w8bU619gHGHeA4m17T8k6bnjfEQQwhJz0UwhJ6Kx9rBRdIvo.func_11380_9r1511Jp0jE144f4MQc4NK82XBZn9UtKQ9T0m3371572UnC4jS4YM9eJUhB9();
 		}
 
 		this.saveOptions();
 	}
 
 	public int isSlider(int var1) {
-		return var1 == 0 ? 1 : (var1 == 1 ? 1 : (var1 == 3 ? 1 : 0));
+		return var1 == 0 ? 1 : (var1 == 1 ? 1 : (var1 == 3 ? 1 : (var1 == 11 ? 1 : 0)));
 	}
 
 	public float getOptionFloatValue(int var1) {
-		return var1 == 0 ? this.musicVolume : (var1 == 1 ? this.soundVolume : (var1 == 3 ? this.mouseSensitivity : 0.0F));
+		return var1 == 0 ? this.musicVolume : (var1 == 1 ? this.soundVolume : (var1 == 3 ? this.mouseSensitivity : (var1 == 11 ? this.fovModifier : 0.0F)));
 	}
 
 	public String getOptionDisplayString(int var1) {
-		return var1 == 0 ? "Music: " + (this.musicVolume > 0.0F ? (int)(this.musicVolume * 100.0F) + "%" : "OFF") : (var1 == 1 ? "Sound: " + (this.soundVolume > 0.0F ? (int)(this.soundVolume * 100.0F) + "%" : "OFF") : (var1 == 2 ? "Invert mouse: " + (this.invertMouse ? "ON" : "OFF") : (var1 == 3 ? (this.mouseSensitivity == 0.0F ? "Sensitivity: *yawn*" : (this.mouseSensitivity == 1.0F ? "Sensitivity: HYPERSPEED!!!" : "Sensitivity: " + (int)(this.mouseSensitivity * 200.0F) + "%")) : (var1 == 4 ? "Render distance: " + RENDER_DISTANCES[this.renderDistance] : (var1 == 5 ? "View bobbing: " + (this.viewBobbing ? "ON" : "OFF") : (var1 == 6 ? "3d anaglyph: " + (this.anaglyph ? "ON" : "OFF") : (var1 == 7 ? "Limit framerate: " + (this.limitFramerate ? "ON" : "OFF") : (var1 == 8 ? "Difficulty: " + DIFFICULTY_LEVELS[this.difficulty] : (var1 == 9 ? "Graphics: " + (this.fancyGraphics ? "FANCY" : "FAST") : "")))))))));
+		return var1 == 0 ? "Music: " + (this.musicVolume > 0.0F ? (int)(this.musicVolume * 100.0F) + "%" : "OFF") : (var1 == 1 ? "Sound: " + (this.soundVolume > 0.0F ? (int)(this.soundVolume * 100.0F) + "%" : "OFF") : (var1 == 2 ? "Invert mouse: " + (this.invertMouse ? "ON" : "OFF") : (var1 == 3 ? (this.mouseSensitivity == 0.0F ? "Sensitivity: *yawn*" : (this.mouseSensitivity == 1.0F ? "Sensitivity: HYPERSPEED!!!" : "Sensitivity: " + (int)(this.mouseSensitivity * 200.0F) + "%")) : (var1 == 4 ? "Render distance: " + RENDER_DISTANCES[this.renderDistance] : (var1 == 5 ? "View bobbing: " + (this.viewBobbing ? "ON" : "OFF") : (var1 == 6 ? "3d anaglyph: " + (this.anaglyph ? "ON" : "OFF") : (var1 == 7 ? "Vertical sync: " + (this.limitFramerate ? "ON" : "OFF") : (var1 == 8 ? "Difficulty: " + DIFFICULTY_LEVELS[this.difficulty] : (var1 == 9 ? "Graphics: " + field_11776_0601s25AwsXK8YAli4bSnf611cz09m3nihe6Wcjm69saa6xnYY1LDN3wqX7Q[this.fancyGraphics] : (var1 == 10 ? "Pause on unfocus: " + (this.pauseOnUnfocus ? "ON" : "OFF") : (var1 == 11 ? "FOV: " + ((double)this.fovModifier > 0.5D ? "+" : "") + (int)(((double)this.fovModifier - 0.5D) * 80.0D) : (var1 == 12 ? "Shaders: " + (this.field_11757_25y1pfK8198W9Tm66cfxM95C77y782yiFE2iJ841XnrF5E5HedVA6X11kaDV ? "ON" : "OFF") : (var1 == 100 ? "Edit controls..." : (var1 == 101 ? "Set Visuals..." : (var1 == 20 ? "Sh. Motion Blur: " + (this.field_11765_169bjUeR039ZE547KDzev4W9h7Y3Gek7cJSjnnkGJUJ5aJI775p1a4lDV0kq == 2 ? "QUALITY" : (this.field_11765_169bjUeR039ZE547KDzev4W9h7Y3Gek7cJSjnnkGJUJ5aJI775p1a4lDV0kq == 1 ? "PERF." : "OFF")) : (var1 == 21 ? "Sh. Depth of Field: " + (this.field_11770_9UX0ZD1i0y7zcXk28p5XF7G1IawPyo5D04YmR388eC1Hn9D60kx7ZdzLF5D6 ? "ON" : "OFF") : (var1 == 22 ? "Sh. Anti Aliasing: " + (this.field_11768_9G35Lw0l42u913RwsiJ8b4oED565ckF66eprV7iUb2pWWs1p6q28aT020T9G ? "ON" : "OFF") : (var1 == 23 ? "Sh. Bloom: " + (this.field_11759_4o1uNoQSrg2YCL3639xyKEbxEX25zI2006R4TI63uHnqbhPYmAy503KepkPl ? "ON" : "OFF") : (var1 == 24 ? "Sh. SSR (BROKEN): " + (this.field_11766_2PZeKU2XX6DVQr0PddO0LpfaoOdt40powdd99RK1luEfC8ZBvPLza3Nz4hOa ? "ON" : "OFF") : "")))))))))))))))))));
 	}
 
 	public void loadOptions() {
@@ -171,8 +238,44 @@
 					this.difficulty = Integer.parseInt(var3[1]);
 				}
 
-				if(var3[0].equals("fancyGraphics")) {
-					this.fancyGraphics = var3[1].equals("true");
+				if(var3[0].equals("gxMode")) {
+					this.fancyGraphics = Integer.parseInt(var3[1]);
+				}
+
+				if(var3[0].equals("pauseOnUnfocus")) {
+					this.pauseOnUnfocus = var3[1].equals("true");
+				}
+
+				if(var3[0].equals("fovMod")) {
+					this.fovModifier = this.parseFloat(var3[1]);
+				}
+
+				if(var3[0].equals("skin")) {
+					this.field_11745_5cq9PhUp8LROyS1A2CPi3fyxFgmWABb66h72hAC97w32G831S582rHP9QCBn = var3[1];
+				}
+
+				if(var3[0].equals("shadersOn")) {
+					this.field_11757_25y1pfK8198W9Tm66cfxM95C77y782yiFE2iJ841XnrF5E5HedVA6X11kaDV = var3[1].equals("true");
+				}
+
+				if(var3[0].equals("shadersDOF")) {
+					this.field_11770_9UX0ZD1i0y7zcXk28p5XF7G1IawPyo5D04YmR388eC1Hn9D60kx7ZdzLF5D6 = var3[1].equals("true");
+				}
+
+				if(var3[0].equals("shadersAA")) {
+					this.field_11768_9G35Lw0l42u913RwsiJ8b4oED565ckF66eprV7iUb2pWWs1p6q28aT020T9G = var3[1].equals("true");
+				}
+
+				if(var3[0].equals("shadersBloom")) {
+					this.field_11759_4o1uNoQSrg2YCL3639xyKEbxEX25zI2006R4TI63uHnqbhPYmAy503KepkPl = var3[1].equals("true");
+				}
+
+				if(var3[0].equals("shadersSSR")) {
+					this.field_11766_2PZeKU2XX6DVQr0PddO0LpfaoOdt40powdd99RK1luEfC8ZBvPLza3Nz4hOa = var3[1].equals("true");
+				}
+
+				if(var3[0].equals("shadersMotionBlur")) {
+					this.field_11765_169bjUeR039ZE547KDzev4W9h7Y3Gek7cJSjnnkGJUJ5aJI775p1a4lDV0kq = Integer.parseInt(var3[1]);
 				}
 
 				for(int var4 = 0; var4 < this.keyBindings.length; ++var4) {
@@ -204,7 +307,16 @@
 			var1.println("anaglyph3d:" + this.anaglyph);
 			var1.println("limitFramerate:" + this.limitFramerate);
 			var1.println("difficulty:" + this.difficulty);
-			var1.println("fancyGraphics:" + this.fancyGraphics);
+			var1.println("gxMode:" + this.fancyGraphics);
+			var1.println("pauseOnUnfocus:" + this.pauseOnUnfocus);
+			var1.println("fovMod:" + this.fovModifier);
+			var1.println("skin:" + this.field_11745_5cq9PhUp8LROyS1A2CPi3fyxFgmWABb66h72hAC97w32G831S582rHP9QCBn);
+			var1.println("shadersOn:" + this.field_11757_25y1pfK8198W9Tm66cfxM95C77y782yiFE2iJ841XnrF5E5HedVA6X11kaDV);
+			var1.println("shadersSSR:" + this.field_11766_2PZeKU2XX6DVQr0PddO0LpfaoOdt40powdd99RK1luEfC8ZBvPLza3Nz4hOa);
+			var1.println("shadersDOF:" + this.field_11770_9UX0ZD1i0y7zcXk28p5XF7G1IawPyo5D04YmR388eC1Hn9D60kx7ZdzLF5D6);
+			var1.println("shadersAA:" + this.field_11768_9G35Lw0l42u913RwsiJ8b4oED565ckF66eprV7iUb2pWWs1p6q28aT020T9G);
+			var1.println("shadersBloom:" + this.field_11759_4o1uNoQSrg2YCL3639xyKEbxEX25zI2006R4TI63uHnqbhPYmAy503KepkPl);
+			var1.println("shadersMotionBlur:" + this.field_11765_169bjUeR039ZE547KDzev4W9h7Y3Gek7cJSjnnkGJUJ5aJI775p1a4lDV0kq);
 
 			for(int var2 = 0; var2 < this.keyBindings.length; ++var2) {
 				var1.println("key_" + this.keyBindings[var2].keyDescription + ":" + this.keyBindings[var2].keyCode);
@@ -216,5 +328,15 @@
 			var3.printStackTrace();
 		}
 
+	}
+
+	public String func_11736_4ZBw6818NpyygSj15g0tevwT2VRNee9iyV3HNltCy7o20mr67D74Di6czF41() {
+		String var1 = "";
+		var1 = var1 + (this.field_11770_9UX0ZD1i0y7zcXk28p5XF7G1IawPyo5D04YmR388eC1Hn9D60kx7ZdzLF5D6 ? "#define DOF_ENABLED\n" : "");
+		var1 = var1 + (this.field_11766_2PZeKU2XX6DVQr0PddO0LpfaoOdt40powdd99RK1luEfC8ZBvPLza3Nz4hOa ? "#define SSR_ENABLED\n" : "");
+		var1 = var1 + (this.field_11768_9G35Lw0l42u913RwsiJ8b4oED565ckF66eprV7iUb2pWWs1p6q28aT020T9G ? "#define AA_ENABLED\n" : "");
+		var1 = var1 + (this.field_11759_4o1uNoQSrg2YCL3639xyKEbxEX25zI2006R4TI63uHnqbhPYmAy503KepkPl ? "#define BLOOM_ENABLED\n" : "");
+		var1 = var1 + "#define MOTIONBLUR_ENABLED " + this.field_11765_169bjUeR039ZE547KDzev4W9h7Y3Gek7cJSjnnkGJUJ5aJI775p1a4lDV0kq + "\n";
+		return var1;
 	}
 }
--- net/minecraft/src/BlockCrops.java
+++ net/minecraft/src/BlockCrops.java
@@ -100,7 +100,6 @@
 	}
 
 	public int idDropped(int var1, Random var2) {
-		System.out.println("Get resource: " + var1);
 		return var1 == 7 ? Item.wheat.shiftedIndex : -1;
 	}
 
--- /dev/null
+++ net/minecraft/src/BlockFrigidTrunk.java
@@ -1,0 +1,35 @@
+package net.minecraft.src;
+
+public class BlockFrigidTrunk extends Block {
+	public BlockFrigidTrunk(int var1, int var2) {
+		super(var1, Material.wood);
+		this.blockIndexInTexture = var2;
+		this.setTickOnLoad(true);
+		float var3 = 0.2F;
+		this.setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, var3 * 3.0F, 0.5F + var3);
+	}
+
+	public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
+		return this.func_8344_4swhWUA9cxPqnYZZ2X6yB751eeM4y2ev69u55PQT0wAm6QJ8NnKYafSw88ZT(var1.getBlockId(var2, var3 - 1, var4));
+	}
+
+	protected boolean func_8344_4swhWUA9cxPqnYZZ2X6yB751eeM4y2ev69u55PQT0wAm6QJ8NnKYafSw88ZT(int var1) {
+		return var1 == Block.blockSnow.blockID || var1 == Block.blockSnow.blockID || var1 == Block.blockSnow.blockID;
+	}
+
+	public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+		return null;
+	}
+
+	public boolean isOpaqueCube() {
+		return false;
+	}
+
+	public boolean renderAsNormalBlock() {
+		return false;
+	}
+
+	public int getRenderType() {
+		return 1;
+	}
+}
--- /dev/null
+++ net/minecraft/src/EnumVendingMachineUnknownClass.java
@@ -1,0 +1,26 @@
+package net.minecraft.src;
+
+class EnumVendingMachineUnknownClass {
+	
+	static final /* synthetic */ int[] field_11151_01Lqa7jqn5Lnc8H2326RUUWR0pcY5mVnw6E94jwT0DsG39Ak48kRz6LgkbXv;
+	
+    static {
+        field_11151_01Lqa7jqn5Lnc8H2326RUUWR0pcY5mVnw6E94jwT0DsG39Ak48kRz6LgkbXv = new int[EnumVendingMachine.func_8621_1A4K8JmwLTo1bRceY319ILcN68Kz1yddU8DZWKk5CMsNwnMN4Amc8gdj0Pfv().length];
+        try {
+            EnumVendingMachineUnknownClass.field_11151_01Lqa7jqn5Lnc8H2326RUUWR0pcY5mVnw6E94jwT0DsG39Ak48kRz6LgkbXv[EnumVendingMachine.Armor.ordinal()] = 1;
+        }
+        catch (final NoSuchFieldError noSuchFieldError) {}
+        try {
+            EnumVendingMachineUnknownClass.field_11151_01Lqa7jqn5Lnc8H2326RUUWR0pcY5mVnw6E94jwT0DsG39Ak48kRz6LgkbXv[EnumVendingMachine.Dash.ordinal()] = 2;
+        }
+        catch (final NoSuchFieldError noSuchFieldError2) {}
+        try {
+            EnumVendingMachineUnknownClass.field_11151_01Lqa7jqn5Lnc8H2326RUUWR0pcY5mVnw6E94jwT0DsG39Ak48kRz6LgkbXv[EnumVendingMachine.HealthBoost.ordinal()] = 3;
+        }
+        catch (final NoSuchFieldError noSuchFieldError3) {}
+        try {
+            EnumVendingMachineUnknownClass.field_11151_01Lqa7jqn5Lnc8H2326RUUWR0pcY5mVnw6E94jwT0DsG39Ak48kRz6LgkbXv[EnumVendingMachine.QuickRevive.ordinal()] = 4;
+        }
+        catch (final NoSuchFieldError noSuchFieldError4) {}
+    }
+}
--- /dev/null
+++ net/minecraft/src/EncOutputStream.java
@@ -1,0 +1,115 @@
+package net.minecraft.src;
+
+import java.io.FilterOutputStream;
+import java.io.IOException;
+import java.io.OutputStream;
+
+class EncOutputStream extends FilterOutputStream {
+	private int leftover = 0;
+	private int b0;
+	private int b1;
+	private int b2;
+	private boolean closed = false;
+	private final char[] base64;
+	private final byte[] newline;
+	private final int linemax;
+	private final boolean doPadding;
+	private int linepos = 0;
+
+	EncOutputStream(OutputStream var1, char[] var2, byte[] var3, int var4, boolean var5) {
+		super(var1);
+		this.base64 = var2;
+		this.newline = var3;
+		this.linemax = var4;
+		this.doPadding = var5;
+	}
+
+	public void write(int var1) throws IOException {
+		byte[] var2 = new byte[]{(byte)(var1 & 255)};
+		this.write(var2, 0, 1);
+	}
+
+	private void checkNewline() throws IOException {
+		if(this.linepos == this.linemax) {
+			this.out.write(this.newline);
+			this.linepos = 0;
+		}
+
+	}
+
+	public void write(byte[] var1, int var2, int var3) throws IOException {
+		if(this.closed) {
+			throw new IOException("Stream is closed");
+		} else if(var2 >= 0 && var3 >= 0 && var3 <= var1.length - var2) {
+			if(var3 != 0) {
+				if(this.leftover != 0) {
+					if(this.leftover == 1) {
+						this.b1 = var1[var2++] & 255;
+						--var3;
+						if(var3 == 0) {
+							++this.leftover;
+							return;
+						}
+					}
+
+					this.b2 = var1[var2++] & 255;
+					--var3;
+					this.checkNewline();
+					this.out.write(this.base64[this.b0 >> 2]);
+					this.out.write(this.base64[this.b0 << 4 & 63 | this.b1 >> 4]);
+					this.out.write(this.base64[this.b1 << 2 & 63 | this.b2 >> 6]);
+					this.out.write(this.base64[this.b2 & 63]);
+					this.linepos += 4;
+				}
+
+				int var4 = var3 / 3;
+
+				for(this.leftover = var3 - var4 * 3; var4-- > 0; this.linepos += 4) {
+					this.checkNewline();
+					int var5 = (var1[var2++] & 255) << 16 | (var1[var2++] & 255) << 8 | var1[var2++] & 255;
+					this.out.write(this.base64[var5 >>> 18 & 63]);
+					this.out.write(this.base64[var5 >>> 12 & 63]);
+					this.out.write(this.base64[var5 >>> 6 & 63]);
+					this.out.write(this.base64[var5 & 63]);
+				}
+
+				if(this.leftover == 1) {
+					this.b0 = var1[var2++] & 255;
+				} else if(this.leftover == 2) {
+					this.b0 = var1[var2++] & 255;
+					this.b1 = var1[var2++] & 255;
+				}
+
+			}
+		} else {
+			throw new ArrayIndexOutOfBoundsException();
+		}
+	}
+
+	public void close() throws IOException {
+		if(!this.closed) {
+			this.closed = true;
+			if(this.leftover == 1) {
+				this.checkNewline();
+				this.out.write(this.base64[this.b0 >> 2]);
+				this.out.write(this.base64[this.b0 << 4 & 63]);
+				if(this.doPadding) {
+					this.out.write(61);
+					this.out.write(61);
+				}
+			} else if(this.leftover == 2) {
+				this.checkNewline();
+				this.out.write(this.base64[this.b0 >> 2]);
+				this.out.write(this.base64[this.b0 << 4 & 63 | this.b1 >> 4]);
+				this.out.write(this.base64[this.b1 << 2 & 63]);
+				if(this.doPadding) {
+					this.out.write(61);
+				}
+			}
+
+			this.leftover = 0;
+			this.out.close();
+		}
+
+	}
+}
--- net/minecraft/src/ModelBase.java
+++ net/minecraft/src/ModelBase.java
@@ -4,6 +4,14 @@
 	public float swingProgress;
 	public boolean isRiding = false;
 
+	public static ModelRenderer n(int var0, int var1, float var2, float var3, float var4, int var5, int var6, int var7, boolean var8) {
+		ModelRenderer var9 = new ModelRenderer(var0, var1);
+		var9.addBox(var2, var3, var4, var5, var6, var7);
+		var9.setRotationPoint(0.0F, 0.0F, 0.0F);
+		var9.mirror = var8;
+		return var9;
+	}
+
 	public void render(float var1, float var2, float var3, float var4, float var5, float var6) {
 	}
 
